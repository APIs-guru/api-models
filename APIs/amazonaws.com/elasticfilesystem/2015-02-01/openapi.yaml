openapi: 3.0.0
servers:
  - url: 'http://elasticfilesystem.amazonaws.com/'
info:
  version: '2015-02-01'
  x-release: v4
  title: Amazon Elastic File System
  description: '<fullname>Amazon Elastic File System</fullname> <p>Amazon Elastic File System (Amazon EFS) provides simple, scalable file storage for use with Amazon EC2 instances in the AWS Cloud. With Amazon EFS, storage capacity is elastic, growing and shrinking automatically as you add and remove files, so your applications have the storage they need, when they need it. For more information, see the <a href="http://docs.aws.amazon.com/efs/latest/ug/api-reference.html">User Guide</a>.</p>'
  x-logo:
    url: 'https://media.amazonwebservices.com/blog/2007/big_pbaws_logo_300px.jpg'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: elasticfilesystem
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/elasticfilesystem-2015-02-01.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-direct: true
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://aws.amazon.com/elasticfilesystem/'
security:
  - hmac: []
paths:
  /2015-02-01/file-systems:
    get:
      operationId: DescribeFileSystems
      description: '<p>Returns the description of a specific Amazon EFS file system if either the file system <code>CreationToken</code> or the <code>FileSystemId</code> is provided. Otherwise, it returns descriptions of all file systems owned by the caller''s AWS account in the AWS Region of the endpoint that you''re calling.</p> <p> When retrieving all file system descriptions, you can optionally specify the <code>MaxItems</code> parameter to limit the number of descriptions in a response. If more file system descriptions remain, Amazon EFS returns a <code>NextMarker</code>, an opaque token, in the response. In this case, you should send a subsequent request with the <code>Marker</code> request parameter set to the value of <code>NextMarker</code>. </p> <p>To retrieve a list of your file system descriptions, this operation is used in an iterative process, where <code>DescribeFileSystems</code> is called first without the <code>Marker</code> and then the operation continues to call it with the <code>Marker</code> parameter set to the value of the <code>NextMarker</code> from the previous response until the response has no <code>NextMarker</code>. </p> <p>The implementation may return fewer than <code>MaxItems</code> file system descriptions while still including a <code>NextMarker</code> value. </p> <p> The order of file systems returned in the response of one <code>DescribeFileSystems</code> call and the order of file systems returned across the responses of a multi-call iteration is unspecified. </p> <p> This operation requires permissions for the <code>elasticfilesystem:DescribeFileSystems</code> action. </p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeFileSystemsResponse'
        '480':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '481':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
        '482':
          description: FileSystemNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileSystemNotFound'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeFileSystemsRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /2015-02-01/mount-targets:
    get:
      operationId: DescribeMountTargets
      description: '<p>Returns the descriptions of all the current mount targets, or a specific mount target, for a file system. When requesting all of the current mount targets, the order of mount targets returned in the response is unspecified.</p> <p>This operation requires permissions for the <code>elasticfilesystem:DescribeMountTargets</code> action, on either the file system ID that you specify in <code>FileSystemId</code>, or on the file system of the mount target that you specify in <code>MountTargetId</code>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeMountTargetsResponse'
        '480':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '481':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
        '482':
          description: FileSystemNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileSystemNotFound'
        '483':
          description: MountTargetNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MountTargetNotFound'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeMountTargetsRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/2015-02-01/create-tags/{FileSystemId}':
    post:
      operationId: CreateTags
      description: '<p>Creates or overwrites tags associated with a file system. Each tag is a key-value pair. If a tag key specified in the request already exists on the file system, this operation overwrites its value with the value provided in the request. If you add the <code>Name</code> tag to your file system, Amazon EFS returns it in the response to the <a>DescribeFileSystems</a> operation. </p> <p>This operation requires permission for the <code>elasticfilesystem:CreateTags</code> action.</p>'
      responses:
        '204':
          description: Success
        '480':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '481':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
        '482':
          description: FileSystemNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileSystemNotFound'
      parameters:
        - name: FileSystemId
          in: path
          required: true
          schema:
            type: string
        - name: FileSystemId
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTagsRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/2015-02-01/file-systems/{FileSystemId}':
    delete:
      operationId: DeleteFileSystem
      description: '<p>Deletes a file system, permanently severing access to its contents. Upon return, the file system no longer exists and you can''t access any contents of the deleted file system.</p> <p> You can''t delete a file system that is in use. That is, if the file system has any mount targets, you must first delete them. For more information, see <a>DescribeMountTargets</a> and <a>DeleteMountTarget</a>. </p> <note> <p>The <code>DeleteFileSystem</code> call returns while the file system state is still <code>deleting</code>. You can check the file system deletion status by calling the <a>DescribeFileSystems</a> operation, which returns a list of file systems in your account. If you pass file system ID or creation token for the deleted file system, the <a>DescribeFileSystems</a> returns a <code>404 FileSystemNotFound</code> error.</p> </note> <p>This operation requires permissions for the <code>elasticfilesystem:DeleteFileSystem</code> action.</p>'
      responses:
        '204':
          description: Success
        '480':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '481':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
        '482':
          description: FileSystemNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileSystemNotFound'
        '483':
          description: FileSystemInUse
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileSystemInUse'
      parameters:
        - name: FileSystemId
          in: path
          required: true
          schema:
            type: string
        - name: FileSystemId
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteFileSystemRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/2015-02-01/mount-targets/{MountTargetId}':
    delete:
      operationId: DeleteMountTarget
      description: '<p>Deletes the specified mount target.</p> <p>This operation forcibly breaks any mounts of the file system via the mount target that is being deleted, which might disrupt instances or applications using those mounts. To avoid applications getting cut off abruptly, you might consider unmounting any mounts of the mount target, if feasible. The operation also deletes the associated network interface. Uncommitted writes may be lost, but breaking a mount target using this operation does not corrupt the file system itself. The file system you created remains. You can mount an EC2 instance in your VPC via another mount target.</p> <p>This operation requires permissions for the following action on the file system:</p> <ul> <li> <p> <code>elasticfilesystem:DeleteMountTarget</code> </p> </li> </ul> <note> <p>The <code>DeleteMountTarget</code> call returns while the mount target state is still <code>deleting</code>. You can check the mount target deletion by calling the <a>DescribeMountTargets</a> operation, which returns a list of mount target descriptions for the given file system. </p> </note> <p>The operation also requires permissions for the following Amazon EC2 action on the mount target''s network interface:</p> <ul> <li> <p> <code>ec2:DeleteNetworkInterface</code> </p> </li> </ul>'
      responses:
        '204':
          description: Success
        '480':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '481':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
        '482':
          description: DependencyTimeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DependencyTimeout'
        '483':
          description: MountTargetNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MountTargetNotFound'
      parameters:
        - name: MountTargetId
          in: path
          required: true
          schema:
            type: string
        - name: MountTargetId
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteMountTargetRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/2015-02-01/delete-tags/{FileSystemId}':
    post:
      operationId: DeleteTags
      description: '<p>Deletes the specified tags from a file system. If the <code>DeleteTags</code> request includes a tag key that does not exist, Amazon EFS ignores it and doesn''t cause an error. For more information about tags and related restrictions, see <a href="http://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html">Tag Restrictions</a> in the <i>AWS Billing and Cost Management User Guide</i>.</p> <p>This operation requires permissions for the <code>elasticfilesystem:DeleteTags</code> action.</p>'
      responses:
        '204':
          description: Success
        '480':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '481':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
        '482':
          description: FileSystemNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileSystemNotFound'
      parameters:
        - name: FileSystemId
          in: path
          required: true
          schema:
            type: string
        - name: FileSystemId
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteTagsRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/2015-02-01/mount-targets/{MountTargetId}/security-groups':
    put:
      operationId: ModifyMountTargetSecurityGroups
      description: '<p>Modifies the set of security groups in effect for a mount target.</p> <p>When you create a mount target, Amazon EFS also creates a new network interface. For more information, see <a>CreateMountTarget</a>. This operation replaces the security groups in effect for the network interface associated with a mount target, with the <code>SecurityGroups</code> provided in the request. This operation requires that the network interface of the mount target has been created and the lifecycle state of the mount target is not <code>deleted</code>. </p> <p>The operation requires permissions for the following actions:</p> <ul> <li> <p> <code>elasticfilesystem:ModifyMountTargetSecurityGroups</code> action on the mount target''s file system. </p> </li> <li> <p> <code>ec2:ModifyNetworkInterfaceAttribute</code> action on the mount target''s network interface. </p> </li> </ul>'
      responses:
        '204':
          description: Success
        '480':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '481':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
        '482':
          description: MountTargetNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MountTargetNotFound'
        '483':
          description: IncorrectMountTargetState
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncorrectMountTargetState'
        '484':
          description: SecurityGroupLimitExceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityGroupLimitExceeded'
        '485':
          description: SecurityGroupNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityGroupNotFound'
      parameters:
        - name: MountTargetId
          in: path
          required: true
          schema:
            type: string
        - name: MountTargetId
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifyMountTargetSecurityGroupsRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/2015-02-01/tags/{FileSystemId}/':
    get:
      operationId: DescribeTags
      description: '<p>Returns the tags associated with a file system. The order of tags returned in the response of one <code>DescribeTags</code> call and the order of tags returned across the responses of a multi-call iteration (when using pagination) is unspecified. </p> <p> This operation requires permissions for the <code>elasticfilesystem:DescribeTags</code> action. </p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeTagsResponse'
        '480':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '481':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
        '482':
          description: FileSystemNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileSystemNotFound'
      parameters:
        - name: FileSystemId
          in: path
          required: true
          schema:
            type: string
        - name: FileSystemId
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeTagsRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
components:
  schemas:
    AwsAccountId:
      type: string
    BadRequest:
      type: object
      required:
        - ErrorCode
      properties:
        ErrorCode:
          $ref: '#/components/schemas/ErrorCode'
        Message:
          $ref: '#/components/schemas/ErrorMessage'
      description: Returned if the request is malformed or contains an error such as an invalid parameter value or a missing required parameter.
    CreateFileSystemRequest:
      type: object
      required:
        - CreationToken
      example:
        CreationToken: tokenstring
        PerformanceMode: generalPurpose
      properties:
        CreationToken:
          $ref: '#/components/schemas/CreationToken'
        PerformanceMode:
          $ref: '#/components/schemas/PerformanceMode'
    CreateMountTargetRequest:
      type: object
      required:
        - FileSystemId
        - SubnetId
      example:
        FileSystemId: fs-01234567
        SubnetId: subnet-1234abcd
      properties:
        FileSystemId:
          $ref: '#/components/schemas/FileSystemId'
        SubnetId:
          $ref: '#/components/schemas/SubnetId'
        IpAddress:
          $ref: '#/components/schemas/IpAddress'
        SecurityGroups:
          $ref: '#/components/schemas/SecurityGroups'
      description: <p/>
    CreateTagsRequest:
      type: object
      required:
        - Tags
      example:
        FileSystemId: fs-01234567
        Tags:
          - Key: Name
            Value: MyFileSystem
      properties:
        Tags:
          $ref: '#/components/schemas/Tags'
      description: <p/>
    CreationToken:
      type: string
      minLength: 1
      maxLength: 64
    DeleteFileSystemRequest:
      type: object
      example:
        FileSystemId: fs-01234567
      properties: {}
      description: <p/>
    DeleteMountTargetRequest:
      type: object
      example:
        MountTargetId: fsmt-12340abc
      properties: {}
      description: <p/>
    DeleteTagsRequest:
      type: object
      required:
        - TagKeys
      example:
        FileSystemId: fs-01234567
        TagKeys:
          - Name
      properties:
        TagKeys:
          $ref: '#/components/schemas/TagKeys'
      description: <p/>
    DependencyTimeout:
      type: object
      required:
        - ErrorCode
      properties:
        ErrorCode:
          $ref: '#/components/schemas/ErrorCode'
        Message:
          $ref: '#/components/schemas/ErrorMessage'
      description: 'The service timed out trying to fulfill the request, and the client should try the call again.'
    DescribeFileSystemsRequest:
      type: object
      example: {}
      properties: {}
      description: <p/>
    DescribeFileSystemsResponse:
      type: object
      example:
        FileSystems:
          - CreationTime: '1481841524.0'
            CreationToken: tokenstring
            FileSystemId: fs-01234567
            LifeCycleState: available
            Name: MyFileSystem
            NumberOfMountTargets: 1
            OwnerId: 012345678912
            PerformanceMode: generalPurpose
            SizeInBytes:
              Value: 6144
      properties:
        Marker:
          $ref: '#/components/schemas/Marker'
        FileSystems:
          $ref: '#/components/schemas/FileSystemDescriptions'
        NextMarker:
          $ref: '#/components/schemas/Marker'
    DescribeMountTargetSecurityGroupsRequest:
      type: object
      example:
        MountTargetId: fsmt-12340abc
      properties: {}
      description: <p/>
    DescribeMountTargetSecurityGroupsResponse:
      type: object
      required:
        - SecurityGroups
      example:
        SecurityGroups:
          - sg-fghi4567
      properties:
        SecurityGroups:
          $ref: '#/components/schemas/SecurityGroups'
    DescribeMountTargetsRequest:
      type: object
      example:
        FileSystemId: fs-01234567
      properties: {}
      description: <p/>
    DescribeMountTargetsResponse:
      type: object
      example:
        MountTargets:
          - FileSystemId: fs-01234567
            IpAddress: 192.0.0.2
            LifeCycleState: available
            MountTargetId: fsmt-12340abc
            NetworkInterfaceId: eni-cedf6789
            OwnerId: 012345678912
            SubnetId: subnet-1234abcd
      properties:
        Marker:
          $ref: '#/components/schemas/Marker'
        MountTargets:
          $ref: '#/components/schemas/MountTargetDescriptions'
        NextMarker:
          $ref: '#/components/schemas/Marker'
      description: <p/>
    DescribeTagsRequest:
      type: object
      example:
        FileSystemId: fs-01234567
      properties: {}
      description: <p/>
    DescribeTagsResponse:
      type: object
      required:
        - Tags
      example:
        Tags:
          - Key: Name
            Value: MyFileSystem
      properties:
        Marker:
          $ref: '#/components/schemas/Marker'
        Tags:
          $ref: '#/components/schemas/Tags'
        NextMarker:
          $ref: '#/components/schemas/Marker'
      description: <p/>
    ErrorCode:
      type: string
      minLength: 1
    ErrorMessage:
      type: string
    FileSystemAlreadyExists:
      type: object
      required:
        - ErrorCode
        - FileSystemId
      properties:
        ErrorCode:
          $ref: '#/components/schemas/ErrorCode'
        Message:
          $ref: '#/components/schemas/ErrorMessage'
        FileSystemId:
          $ref: '#/components/schemas/FileSystemId'
      description: 'Returned if the file system you are trying to create already exists, with the creation token you provided.'
    FileSystemDescription:
      type: object
      required:
        - OwnerId
        - CreationToken
        - FileSystemId
        - CreationTime
        - LifeCycleState
        - NumberOfMountTargets
        - SizeInBytes
        - PerformanceMode
      example:
        CreationTime: '1481841524.0'
        CreationToken: tokenstring
        FileSystemId: fs-01234567
        LifeCycleState: creating
        NumberOfMountTargets: 0
        OwnerId: 012345678912
        PerformanceMode: generalPurpose
        SizeInBytes:
          Value: 0
      properties:
        OwnerId:
          $ref: '#/components/schemas/AwsAccountId'
        CreationToken:
          $ref: '#/components/schemas/CreationToken'
        FileSystemId:
          $ref: '#/components/schemas/FileSystemId'
        CreationTime:
          $ref: '#/components/schemas/Timestamp'
        LifeCycleState:
          $ref: '#/components/schemas/LifeCycleState'
        Name:
          $ref: '#/components/schemas/TagValue'
        NumberOfMountTargets:
          $ref: '#/components/schemas/MountTargetCount'
        SizeInBytes:
          $ref: '#/components/schemas/FileSystemSize'
        PerformanceMode:
          $ref: '#/components/schemas/PerformanceMode'
      description: Description of the file system.
    FileSystemDescriptions:
      type: array
      items:
        $ref: '#/components/schemas/FileSystemDescription'
    FileSystemId:
      type: string
    FileSystemInUse:
      type: object
      required:
        - ErrorCode
      properties:
        ErrorCode:
          $ref: '#/components/schemas/ErrorCode'
        Message:
          $ref: '#/components/schemas/ErrorMessage'
      description: Returned if a file system has mount targets.
    FileSystemLimitExceeded:
      type: object
      required:
        - ErrorCode
      properties:
        ErrorCode:
          $ref: '#/components/schemas/ErrorCode'
        Message:
          $ref: '#/components/schemas/ErrorMessage'
      description: Returned if the AWS account has already created maximum number of file systems allowed per account.
    FileSystemNotFound:
      type: object
      required:
        - ErrorCode
      properties:
        ErrorCode:
          $ref: '#/components/schemas/ErrorCode'
        Message:
          $ref: '#/components/schemas/ErrorMessage'
      description: Returned if the specified <code>FileSystemId</code> does not exist in the requester's AWS account.
    FileSystemSize:
      type: object
      required:
        - Value
      properties:
        Value:
          $ref: '#/components/schemas/FileSystemSizeValue'
        Timestamp:
          $ref: '#/components/schemas/Timestamp'
      description: 'Latest known metered size (in bytes) of data stored in the file system, in its <code>Value</code> field, and the time at which that size was determined in its <code>Timestamp</code> field. Note that the value does not represent the size of a consistent snapshot of the file system, but it is eventually consistent when there are no writes to the file system. That is, the value will represent the actual size only if the file system is not modified for a period longer than a couple of hours. Otherwise, the value is not necessarily the exact size the file system was at any instant in time.'
    FileSystemSizeValue:
      type: integer
      minimum: 0
    IncorrectFileSystemLifeCycleState:
      type: object
      required:
        - ErrorCode
      properties:
        ErrorCode:
          $ref: '#/components/schemas/ErrorCode'
        Message:
          $ref: '#/components/schemas/ErrorMessage'
      description: Returned if the file system's life cycle state is not "created".
    IncorrectMountTargetState:
      type: object
      required:
        - ErrorCode
      properties:
        ErrorCode:
          $ref: '#/components/schemas/ErrorCode'
        Message:
          $ref: '#/components/schemas/ErrorMessage'
      description: Returned if the mount target is not in the correct state for the operation.
    InternalServerError:
      type: object
      required:
        - ErrorCode
      properties:
        ErrorCode:
          $ref: '#/components/schemas/ErrorCode'
        Message:
          $ref: '#/components/schemas/ErrorMessage'
      description: Returned if an error occurred on the server side.
    IpAddress:
      type: string
    IpAddressInUse:
      type: object
      required:
        - ErrorCode
      properties:
        ErrorCode:
          $ref: '#/components/schemas/ErrorCode'
        Message:
          $ref: '#/components/schemas/ErrorMessage'
      description: Returned if the request specified an <code>IpAddress</code> that is already in use in the subnet.
    LifeCycleState:
      type: string
      enum:
        - creating
        - available
        - deleting
        - deleted
    Marker:
      type: string
    MaxItems:
      type: integer
      minimum: 1
    ModifyMountTargetSecurityGroupsRequest:
      type: object
      example:
        MountTargetId: fsmt-12340abc
        SecurityGroups:
          - sg-abcd1234
      properties:
        SecurityGroups:
          $ref: '#/components/schemas/SecurityGroups'
      description: <p/>
    MountTargetConflict:
      type: object
      required:
        - ErrorCode
      properties:
        ErrorCode:
          $ref: '#/components/schemas/ErrorCode'
        Message:
          $ref: '#/components/schemas/ErrorMessage'
      description: Returned if the mount target would violate one of the specified restrictions based on the file system's existing mount targets.
    MountTargetCount:
      type: integer
      minimum: 0
    MountTargetDescription:
      type: object
      required:
        - MountTargetId
        - FileSystemId
        - SubnetId
        - LifeCycleState
      example:
        FileSystemId: fs-01234567
        IpAddress: 192.0.0.2
        LifeCycleState: creating
        MountTargetId: fsmt-12340abc
        NetworkInterfaceId: eni-cedf6789
        OwnerId: 012345678912
        SubnetId: subnet-1234abcd
      properties:
        OwnerId:
          $ref: '#/components/schemas/AwsAccountId'
        MountTargetId:
          $ref: '#/components/schemas/MountTargetId'
        FileSystemId:
          $ref: '#/components/schemas/FileSystemId'
        SubnetId:
          $ref: '#/components/schemas/SubnetId'
        LifeCycleState:
          $ref: '#/components/schemas/LifeCycleState'
        IpAddress:
          $ref: '#/components/schemas/IpAddress'
        NetworkInterfaceId:
          $ref: '#/components/schemas/NetworkInterfaceId'
      description: Provides a description of a mount target.
    MountTargetDescriptions:
      type: array
      items:
        $ref: '#/components/schemas/MountTargetDescription'
    MountTargetId:
      type: string
    MountTargetNotFound:
      type: object
      required:
        - ErrorCode
      properties:
        ErrorCode:
          $ref: '#/components/schemas/ErrorCode'
        Message:
          $ref: '#/components/schemas/ErrorMessage'
      description: Returned if there is no mount target with the specified ID found in the caller's account.
    NetworkInterfaceId:
      type: string
    NetworkInterfaceLimitExceeded:
      type: object
      required:
        - ErrorCode
      properties:
        ErrorCode:
          $ref: '#/components/schemas/ErrorCode'
        Message:
          $ref: '#/components/schemas/ErrorMessage'
      description: ' The calling account has reached the ENI limit for the specific AWS region. Client should try to delete some ENIs or get its account limit raised. For more information, see <a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Appendix_Limits.html">Amazon VPC Limits</a> in the Amazon Virtual Private Cloud User Guide (see the Network interfaces per VPC entry in the table). '
    NoFreeAddressesInSubnet:
      type: object
      required:
        - ErrorCode
      properties:
        ErrorCode:
          $ref: '#/components/schemas/ErrorCode'
        Message:
          $ref: '#/components/schemas/ErrorMessage'
      description: Returned if <code>IpAddress</code> was not specified in the request and there are no free IP addresses in the subnet.
    PerformanceMode:
      type: string
      enum:
        - generalPurpose
        - maxIO
    SecurityGroup:
      type: string
    SecurityGroupLimitExceeded:
      type: object
      required:
        - ErrorCode
      properties:
        ErrorCode:
          $ref: '#/components/schemas/ErrorCode'
        Message:
          $ref: '#/components/schemas/ErrorMessage'
      description: Returned if the size of <code>SecurityGroups</code> specified in the request is greater than five.
    SecurityGroupNotFound:
      type: object
      required:
        - ErrorCode
      properties:
        ErrorCode:
          $ref: '#/components/schemas/ErrorCode'
        Message:
          $ref: '#/components/schemas/ErrorMessage'
      description: Returned if one of the specified security groups does not exist in the subnet's VPC.
    SecurityGroups:
      type: array
      items:
        $ref: '#/components/schemas/SecurityGroup'
      maxItems: 5
    SubnetId:
      type: string
    SubnetNotFound:
      type: object
      required:
        - ErrorCode
      properties:
        ErrorCode:
          $ref: '#/components/schemas/ErrorCode'
        Message:
          $ref: '#/components/schemas/ErrorMessage'
      description: Returned if there is no subnet with ID <code>SubnetId</code> provided in the request.
    Tag:
      type: object
      required:
        - Key
        - Value
      properties:
        Key:
          $ref: '#/components/schemas/TagKey'
        Value:
          $ref: '#/components/schemas/TagValue'
      description: 'A tag is a key-value pair. Allowed characters: letters, whitespace, and numbers, representable in UTF-8, and the following characters:<code> + - = . _ : /</code> '
    TagKey:
      type: string
      minLength: 1
      maxLength: 128
    TagKeys:
      type: array
      items:
        $ref: '#/components/schemas/TagKey'
    TagValue:
      type: string
      maxLength: 256
    Tags:
      type: array
      items:
        $ref: '#/components/schemas/Tag'
    Timestamp:
      type: string
      format: date-time
    UnsupportedAvailabilityZone:
      type: object
      required:
        - ErrorCode
      properties:
        ErrorCode:
          $ref: '#/components/schemas/ErrorCode'
        Message:
          $ref: '#/components/schemas/ErrorMessage'
      description: ''
  parameters:
    Action:
      name: Action
      in: header
      required: true
      schema:
        type: string
    Version:
      name: Version
      in: header
      required: true
      schema:
        type: string
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      required: false
      schema:
        type: string
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      required: false
      schema:
        type: string
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      required: false
      schema:
        type: string
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      required: false
      schema:
        type: string
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      required: false
      schema:
        type: string
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      required: false
      schema:
        type: string
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      required: false
      schema:
        type: string
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
