openapi: 3.0.0
servers:
  - url: 'http://apigateway.amazonaws.com/'
info:
  version: '2015-07-09'
  x-release: v4
  title: Amazon API Gateway
  description: '<fullname>Amazon API Gateway</fullname> <p>Amazon API Gateway helps developers deliver robust, secure, and scalable mobile and web application back ends. Amazon API Gateway allows developers to securely connect mobile and web applications to APIs that run on AWS Lambda, Amazon EC2, or other publicly addressable web services that are hosted outside of AWS.</p>'
  x-logo:
    url: 'https://media.amazonwebservices.com/blog/2007/big_pbaws_logo_300px.jpg'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: apigateway
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/apigateway-2015-07-09.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-direct: true
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://aws.amazon.com/apigateway/'
x-hasEquivalentPaths: true
security:
  - hmac: []
paths:
  /apikeys:
    get:
      operationId: GetApiKeys
      description: Gets information about the current <a>ApiKeys</a> resource.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKeys'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '482':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: limit
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: position
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetApiKeysRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/restapis/{restapi_id}/authorizers':
    get:
      operationId: GetAuthorizers
      description: '<p>Describe an existing <a>Authorizers</a> resource.</p> <div class="seeAlso"><a href="http://docs.aws.amazon.com/cli/latest/reference/apigateway/get-authorizers.html">AWS CLI</a></div>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Authorizers'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: restapi_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetAuthorizersRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/domainnames/{domain_name}/basepathmappings':
    get:
      operationId: GetBasePathMappings
      description: Represents a collection of <a>BasePathMapping</a> resources.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasePathMappings'
        '480':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: limit
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: position
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: domain_name
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetBasePathMappingsRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/restapis/{restapi_id}/deployments':
    get:
      operationId: GetDeployments
      description: Gets information about a <a>Deployments</a> collection.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Deployments'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '482':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '483':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
      parameters:
        - name: limit
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: position
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: restapi_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetDeploymentsRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/restapis/{restapi_id}/documentation/parts':
    put:
      operationId: ImportDocumentationParts
      description: ''
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentationPartIds'
        '480':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '483':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '484':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: restapi_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportDocumentationPartsRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/restapis/{restapi_id}/documentation/versions':
    get:
      operationId: GetDocumentationVersions
      description: ''
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentationVersions'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: restapi_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetDocumentationVersionsRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /domainnames:
    get:
      operationId: GetDomainNames
      description: Represents a collection of <a>DomainName</a> resources.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainNames'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '482':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: limit
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: position
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetDomainNamesRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/restapis/{restapi_id}/models':
    get:
      operationId: GetModels
      description: Describes existing <a>Models</a> defined for a <a>RestApi</a> resource.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Models'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: limit
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: position
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: restapi_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetModelsRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/restapis/{restapi_id}/requestvalidators':
    get:
      operationId: GetRequestValidators
      description: Gets the <a>RequestValidators</a> collection of a given <a>RestApi</a>.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestValidators'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: restapi_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetRequestValidatorsRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/restapis/{restapi_id}/resources/{parent_id}':
    post:
      operationId: CreateResource
      description: Creates a <a>Resource</a> resource.
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resource'
        '480':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '483':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '484':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '485':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: restapi_id
          in: path
          required: true
          schema:
            type: string
        - name: parent_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateResourceRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /restapis:
    get:
      operationId: GetRestApis
      description: Lists the <a>RestApis</a> resources for your collection.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestApis'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '482':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: limit
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: position
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetRestApisRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/restapis/{restapi_id}/stages':
    get:
      operationId: GetStages
      description: Gets information about one or more <a>Stage</a> resources.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stages'
        '480':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: restapi_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetStagesRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /usageplans:
    get:
      operationId: GetUsagePlans
      description: Gets all the usage plans of the caller's account.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsagePlans'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '482':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '483':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '484':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
      parameters:
        - name: limit
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: position
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetUsagePlansRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/usageplans/{usageplanId}/keys':
    get:
      operationId: GetUsagePlanKeys
      description: Gets all the usage plan keys representing the API keys added to a specified usage plan.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsagePlanKeys'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: limit
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: position
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: usageplanId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetUsagePlanKeysRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/apikeys/{api_Key}':
    patch:
      operationId: UpdateApiKey
      description: Changes information about an <a>ApiKey</a> resource.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKey'
        '480':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '483':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '484':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters:
        - name: api_Key
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateApiKeyRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/restapis/{restapi_id}/authorizers/{authorizer_id}':
    patch:
      operationId: UpdateAuthorizer
      description: '<p>Updates an existing <a>Authorizer</a> resource.</p> <div class="seeAlso"><a href="http://docs.aws.amazon.com/cli/latest/reference/apigateway/update-authorizer.html">AWS CLI</a></div>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Authorizer'
        '480':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '483':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: restapi_id
          in: path
          required: true
          schema:
            type: string
        - name: authorizer_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAuthorizerRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/domainnames/{domain_name}/basepathmappings/{base_path}':
    patch:
      operationId: UpdateBasePathMapping
      description: Changes information about the <a>BasePathMapping</a> resource.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasePathMapping'
        '480':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '483':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '484':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: domain_name
          in: path
          required: true
          schema:
            type: string
        - name: base_path
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateBasePathMappingRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/clientcertificates/{clientcertificate_id}':
    patch:
      operationId: UpdateClientCertificate
      description: Changes information about an <a>ClientCertificate</a> resource.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientCertificate'
        '480':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '481':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '482':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '483':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
      parameters:
        - name: clientcertificate_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateClientCertificateRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/restapis/{restapi_id}/deployments/{deployment_id}':
    patch:
      operationId: UpdateDeployment
      description: Changes information about a <a>Deployment</a> resource.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Deployment'
        '480':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '483':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '484':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
      parameters:
        - name: restapi_id
          in: path
          required: true
          schema:
            type: string
        - name: deployment_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDeploymentRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/restapis/{restapi_id}/documentation/parts/{part_id}':
    patch:
      operationId: UpdateDocumentationPart
      description: ''
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentationPart'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: restapi_id
          in: path
          required: true
          schema:
            type: string
        - name: part_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDocumentationPartRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/restapis/{restapi_id}/documentation/versions/{doc_version}':
    patch:
      operationId: UpdateDocumentationVersion
      description: ''
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentationVersion'
        '480':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '483':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '484':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: restapi_id
          in: path
          required: true
          schema:
            type: string
        - name: doc_version
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDocumentationVersionRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/domainnames/{domain_name}':
    patch:
      operationId: UpdateDomainName
      description: Changes information about the <a>DomainName</a> resource.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainName'
        '480':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '483':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '484':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: domain_name
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDomainNameRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/restapis/{restapi_id}/resources/{resource_id}/methods/{http_method}/integration':
    patch:
      operationId: UpdateIntegration
      description: Represents an update integration.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Integration'
        '480':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '483':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '484':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters:
        - name: restapi_id
          in: path
          required: true
          schema:
            type: string
        - name: resource_id
          in: path
          required: true
          schema:
            type: string
        - name: http_method
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateIntegrationRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/restapis/{restapi_id}/resources/{resource_id}/methods/{http_method}/integration/responses/{status_code}':
    patch:
      operationId: UpdateIntegrationResponse
      description: Represents an update integration response.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationResponse'
        '480':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '483':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '484':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: restapi_id
          in: path
          required: true
          schema:
            type: string
        - name: resource_id
          in: path
          required: true
          schema:
            type: string
        - name: http_method
          in: path
          required: true
          schema:
            type: string
        - name: status_code
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateIntegrationResponseRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/restapis/{restapi_id}/resources/{resource_id}/methods/{http_method}':
    patch:
      operationId: UpdateMethod
      description: Updates an existing <a>Method</a> resource.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Method'
        '480':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '483':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '484':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: restapi_id
          in: path
          required: true
          schema:
            type: string
        - name: resource_id
          in: path
          required: true
          schema:
            type: string
        - name: http_method
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMethodRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/restapis/{restapi_id}/resources/{resource_id}/methods/{http_method}/responses/{status_code}':
    patch:
      operationId: UpdateMethodResponse
      description: Updates an existing <a>MethodResponse</a> resource.
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodResponse'
        '480':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '483':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '484':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '485':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: restapi_id
          in: path
          required: true
          schema:
            type: string
        - name: resource_id
          in: path
          required: true
          schema:
            type: string
        - name: http_method
          in: path
          required: true
          schema:
            type: string
        - name: status_code
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMethodResponseRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/restapis/{restapi_id}/models/{model_name}':
    patch:
      operationId: UpdateModel
      description: Changes information about a model.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Model'
        '480':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '483':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '484':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: restapi_id
          in: path
          required: true
          schema:
            type: string
        - name: model_name
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateModelRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/restapis/{restapi_id}/requestvalidators/{requestvalidator_id}':
    patch:
      operationId: UpdateRequestValidator
      description: Updates a <a>RequestValidator</a> of a given <a>RestApi</a>.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestValidator'
        '480':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '483':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: restapi_id
          in: path
          required: true
          schema:
            type: string
        - name: requestvalidator_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateRequestValidatorRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/restapis/{restapi_id}/resources/{resource_id}':
    patch:
      operationId: UpdateResource
      description: Changes information about a <a>Resource</a> resource.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resource'
        '480':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '483':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '484':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: restapi_id
          in: path
          required: true
          schema:
            type: string
        - name: resource_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateResourceRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/restapis/{restapi_id}':
    patch:
      operationId: UpdateRestApi
      description: Changes information about the specified API.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestApi'
        '480':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '483':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '484':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: restapi_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateRestApiRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/restapis/{restapi_id}/stages/{stage_name}':
    patch:
      operationId: UpdateStage
      description: Changes information about a <a>Stage</a> resource.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stage'
        '480':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '483':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '484':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: restapi_id
          in: path
          required: true
          schema:
            type: string
        - name: stage_name
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateStageRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/usageplans/{usageplanId}':
    patch:
      operationId: UpdateUsagePlan
      description: Updates a usage plan of a given plan Id.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsagePlan'
        '480':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '481':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '482':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '483':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '484':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      parameters:
        - name: usageplanId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUsagePlanRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/usageplans/{usageplanId}/keys/{keyId}':
    get:
      operationId: GetUsagePlanKey
      description: Gets a usage plan key of a given key identifier.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsagePlanKey'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: usageplanId
          in: path
          required: true
          schema:
            type: string
        - name: keyId
          in: path
          required: true
          schema:
            type: string
        - name: keyId
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetUsagePlanKeyRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/restapis/{restapi_id}/stages/{stage_name}/cache/authorizers':
    delete:
      operationId: FlushStageAuthorizersCache
      description: Flushes all authorizer cache entries on a stage.
      responses:
        '202':
          description: Success
        '480':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '483':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: restapi_id
          in: path
          required: true
          schema:
            type: string
        - name: stage_name
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlushStageAuthorizersCacheRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/restapis/{restapi_id}/stages/{stage_name}/cache/data':
    delete:
      operationId: FlushStageCache
      description: Flushes a stage's cache.
      responses:
        '202':
          description: Success
        '480':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '483':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: restapi_id
          in: path
          required: true
          schema:
            type: string
        - name: stage_name
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlushStageCacheRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /clientcertificates:
    get:
      operationId: GetClientCertificates
      description: Gets a collection of <a>ClientCertificate</a> resources.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientCertificates'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '482':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: limit
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: position
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetClientCertificatesRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /account:
    patch:
      operationId: UpdateAccount
      description: Changes information about the current <a>Account</a> resource.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        '480':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '481':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAccountRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/restapis/{restapi_id}/stages/{stage_name}/exports/{export_type}':
    get:
      operationId: GetExport
      description: Exports a deployed version of a <a>RestApi</a> in a specified format.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExportResponse'
        '480':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '483':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: restapi_id
          in: path
          required: true
          schema:
            type: string
        - name: stage_name
          in: path
          required: true
          schema:
            type: string
        - name: export_type
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetExportRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/restapis/{restapi_id}/models/{model_name}/default_template':
    get:
      operationId: GetModelTemplate
      description: Generates a sample mapping template that can be used to transform a payload into the structure of a model.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Template'
        '480':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '483':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: restapi_id
          in: path
          required: true
          schema:
            type: string
        - name: model_name
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetModelTemplateRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/restapis/{restapi_id}/resources':
    get:
      operationId: GetResources
      description: Lists information about a collection of <a>Resource</a> resources.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resources'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: limit
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: position
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: restapi_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetResourcesRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/restapis/{restapi_id}/stages/{stage_name}/sdks/{sdk_type}':
    get:
      operationId: GetSdk
      description: Generates a client SDK for a <a>RestApi</a> and <a>Stage</a>.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SdkResponse'
        '480':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '483':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: restapi_id
          in: path
          required: true
          schema:
            type: string
        - name: stage_name
          in: path
          required: true
          schema:
            type: string
        - name: sdk_type
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetSdkRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/sdktypes/{sdktype_id}':
    get:
      operationId: GetSdkType
      description: ''
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SdkType'
        '480':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: sdktype_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetSdkTypeRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /sdktypes:
    get:
      operationId: GetSdkTypes
      description: ''
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SdkTypes'
        '480':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '481':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetSdkTypesRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/usageplans/{usageplanId}/usage':
    get:
      operationId: GetUsage
      description: Gets the usage data of a usage plan in a specified time interval.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Usage'
        '480':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '481':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '482':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: limit
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: position
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: usageplanId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetUsageRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /apikeys?mode=import:
    post:
      operationId: ImportApiKeys
      description: 'Import API keys from an external source, such as a CSV-formatted file.'
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKeyIds'
        '480':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '481':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '482':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '483':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '484':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '485':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportApiKeysRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /restapis?mode=import:
    post:
      operationId: ImportRestApi
      description: A feature of the Amazon API Gateway control service for creating a new API from an external API definition file.
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestApi'
        '480':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '481':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '482':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '483':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '484':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportRestApiRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/usageplans/{usageplanId}/keys/{keyId}/usage':
    patch:
      operationId: UpdateUsage
      description: Grants a temporary extension to the reamining quota of a usage plan associated with a specified API key.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Usage'
        '480':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '481':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '482':
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '483':
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
      parameters:
        - name: usageplanId
          in: path
          required: true
          schema:
            type: string
        - name: keyId
          in: path
          required: true
          schema:
            type: string
        - name: keyId
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUsageRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
components:
  schemas:
    Account:
      type: object
      properties:
        cloudwatchRoleArn:
          $ref: '#/components/schemas/String'
        throttleSettings:
          $ref: '#/components/schemas/ThrottleSettings'
        features:
          $ref: '#/components/schemas/ListOfString'
        apiKeyVersion:
          $ref: '#/components/schemas/String'
      description: '<p>Represents an AWS account that is associated with Amazon API Gateway.</p> <div class="remarks"> <p>To view the account info, call <code>GET</code> on this resource.</p> <h4>Error Codes</h4> <p>The following exception may be thrown when the request fails.</p> <ul> <li>UnauthorizedException</li> <li>NotFoundException</li> <li>TooManyRequestsException</li> </ul> <p>For detailed error code information, including the corresponding HTTP Status Codes, see <a href="http://docs.aws.amazon.com/apigateway/api-reference/handling-errors/#api-error-codes">API Gateway Error Codes</a></p> <h4>Example: Get the information about an account.</h4> <h5>Request</h5> <pre><code>GET /account HTTP/1.1 Content-Type: application/json Host: apigateway.us-east-1.amazonaws.com X-Amz-Date: 20160531T184618Z Authorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash} </code></pre> <h5>Response</h5> <p>The successful response returns a <code>200 OK</code> status code and a payload similar to the following:</p> <pre><code>{ "_links": { "curies": { "href": "http://docs.aws.amazon.com/apigateway/latest/developerguide/account-apigateway-{rel}.html", "name": "account", "templated": true }, "self": { "href": "/account" }, "account:update": { "href": "/account" } }, "cloudwatchRoleArn": "arn:aws:iam::123456789012:role/apigAwsProxyRole", "throttleSettings": { "rateLimit": 500, "burstLimit": 1000 } } </code></pre> <p>In addition to making the REST API call directly, you can use the AWS CLI and an AWS SDK to access this resource.</p> </div> <div class="seeAlso"> <a href="http://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-limits.html">API Gateway Limits</a> <a href="http://docs.aws.amazon.com/apigateway/latest/developerguide/welcome.html">Developer Guide</a>, <a href="http://docs.aws.amazon.com/cli/latest/reference/apigateway/get-account.html">AWS CLI</a> </div>'
    ApiKey:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/String'
        value:
          $ref: '#/components/schemas/String'
        name:
          $ref: '#/components/schemas/String'
        customerId:
          $ref: '#/components/schemas/String'
        description:
          $ref: '#/components/schemas/String'
        enabled:
          $ref: '#/components/schemas/Boolean'
        createdDate:
          $ref: '#/components/schemas/Timestamp'
        lastUpdatedDate:
          $ref: '#/components/schemas/Timestamp'
        stageKeys:
          $ref: '#/components/schemas/ListOfString'
      description: '<p>A resource that can be distributed to callers for executing <a>Method</a> resources that require an API key. API keys can be mapped to any <a>Stage</a> on any <a>RestApi</a>, which indicates that the callers with the API key can make requests to that stage.</p> <div class="seeAlso"> <a href="http://docs.aws.amazon.com/apigateway/latest/developerguide/how-to-api-keys.html">Use API Keys</a> </div>'
    ApiKeyIds:
      type: object
      properties:
        ids:
          $ref: '#/components/schemas/ListOfString'
        warnings:
          $ref: '#/components/schemas/ListOfString'
      description: The identifier of an <a>ApiKey</a> used in a <a>UsagePlan</a>.
    ApiKeys:
      type: object
      properties:
        warnings:
          $ref: '#/components/schemas/ListOfString'
        position:
          $ref: '#/components/schemas/String'
        items:
          $ref: '#/components/schemas/ListOfApiKey'
      description: '<p>Represents a collection of API keys as represented by an <a>ApiKeys</a> resource.</p> <div class="seeAlso"> <a href="http://docs.aws.amazon.com/apigateway/latest/developerguide/how-to-api-keys.html">Use API Keys</a> </div>'
    ApiKeysFormat:
      type: string
      enum:
        - csv
    ApiStage:
      type: object
      properties:
        apiId:
          $ref: '#/components/schemas/String'
        stage:
          $ref: '#/components/schemas/String'
      description: API stage name of the associated API stage in a usage plan.
    Authorizer:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/String'
        name:
          $ref: '#/components/schemas/String'
        type:
          $ref: '#/components/schemas/AuthorizerType'
        providerARNs:
          $ref: '#/components/schemas/ListOfARNs'
        authType:
          $ref: '#/components/schemas/String'
        authorizerUri:
          $ref: '#/components/schemas/String'
        authorizerCredentials:
          $ref: '#/components/schemas/String'
        identitySource:
          $ref: '#/components/schemas/String'
        identityValidationExpression:
          $ref: '#/components/schemas/String'
        authorizerResultTtlInSeconds:
          $ref: '#/components/schemas/NullableInteger'
      description: '<p>Represents an authorization layer for methods. If enabled on a method, API Gateway will activate the authorizer when a client calls the method.</p> <div class="seeAlso"> <a href="http://docs.aws.amazon.com/apigateway/latest/developerguide/use-custom-authorizer.html">Enable custom authorization</a> </div>'
    AuthorizerType:
      type: string
      enum:
        - TOKEN
        - COGNITO_USER_POOLS
      description: The authorizer type. the current value is <code>TOKEN</code> for a Lambda function or <code>COGNITO_USER_POOLS</code> for an Amazon Cognito Your User Pool.
    Authorizers:
      type: object
      properties:
        position:
          $ref: '#/components/schemas/String'
        items:
          $ref: '#/components/schemas/ListOfAuthorizer'
      description: '<p>Represents a collection of <a>Authorizer</a> resources.</p> <div class="seeAlso"> <a href="http://docs.aws.amazon.com/apigateway/latest/developerguide/use-custom-authorizer.html">Enable custom authorization</a> </div>'
    BadRequestException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
    BasePathMapping:
      type: object
      properties:
        basePath:
          $ref: '#/components/schemas/String'
        restApiId:
          $ref: '#/components/schemas/String'
        stage:
          $ref: '#/components/schemas/String'
      description: '<p>Represents the base path that callers of the API must provide as part of the URL after the domain name.</p> <div class="remarks">A custom domain name plus a <code>BasePathMapping</code> specification identifies a deployed <a>RestApi</a> in a given stage of the owner <a>Account</a>.</div> <div class="seeAlso"> <a href="http://docs.aws.amazon.com/apigateway/latest/developerguide/how-to-custom-domains.html">Use Custom Domain Names</a> </div>'
    BasePathMappings:
      type: object
      properties:
        position:
          $ref: '#/components/schemas/String'
        items:
          $ref: '#/components/schemas/ListOfBasePathMapping'
      description: '<p>Represents a collection of <a>BasePathMapping</a> resources.</p> <div class="seeAlso"> <a href="http://docs.aws.amazon.com/apigateway/latest/developerguide/how-to-custom-domains.html">Use Custom Domain Names</a> </div>'
    Blob:
      type: string
    Boolean:
      type: boolean
    CacheClusterSize:
      type: string
      enum:
        - '0.5'
        - '1.6'
        - '6.1'
        - '13.5'
        - '28.4'
        - '58.2'
        - '118'
        - '237'
      description: Returns the size of the <b>CacheCluster</b>.
    CacheClusterStatus:
      type: string
      enum:
        - CREATE_IN_PROGRESS
        - AVAILABLE
        - DELETE_IN_PROGRESS
        - NOT_AVAILABLE
        - FLUSH_IN_PROGRESS
      description: Returns the status of the <b>CacheCluster</b>.
    ClientCertificate:
      type: object
      properties:
        clientCertificateId:
          $ref: '#/components/schemas/String'
        description:
          $ref: '#/components/schemas/String'
        pemEncodedCertificate:
          $ref: '#/components/schemas/String'
        createdDate:
          $ref: '#/components/schemas/Timestamp'
        expirationDate:
          $ref: '#/components/schemas/Timestamp'
      description: '<p>Represents a client certificate used to configure client-side SSL authentication while sending requests to the integration endpoint.</p> <div class="remarks">Client certificates are used authenticate an API by the back-end server. To authenticate an API client (or user), use a custom <a>Authorizer</a>.</div> <div class="seeAlso"> <a href="http://docs.aws.amazon.com/apigateway/latest/developerguide/getting-started-client-side-ssl-authentication.html">Use Client-Side Certificate</a> </div>'
    ClientCertificates:
      type: object
      properties:
        position:
          $ref: '#/components/schemas/String'
        items:
          $ref: '#/components/schemas/ListOfClientCertificate'
      description: '<p>Represents a collection of <a>ClientCertificate</a> resources.</p> <div class="seeAlso"> <a href="http://docs.aws.amazon.com/apigateway/latest/developerguide/getting-started-client-side-ssl-authentication.html">Use Client-Side Certificate</a> </div>'
    ConflictException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
    ContentHandlingStrategy:
      type: string
      enum:
        - CONVERT_TO_BINARY
        - CONVERT_TO_TEXT
    CreateApiKeyRequest:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/String'
        description:
          $ref: '#/components/schemas/String'
        enabled:
          $ref: '#/components/schemas/Boolean'
        generateDistinctId:
          $ref: '#/components/schemas/Boolean'
        value:
          $ref: '#/components/schemas/String'
        stageKeys:
          $ref: '#/components/schemas/ListOfStageKeys'
        customerId:
          $ref: '#/components/schemas/String'
      description: Request to create an <a>ApiKey</a> resource.
    CreateAuthorizerRequest:
      type: object
      required:
        - name
        - type
        - identitySource
      properties:
        name:
          $ref: '#/components/schemas/String'
        type:
          $ref: '#/components/schemas/AuthorizerType'
        providerARNs:
          $ref: '#/components/schemas/ListOfARNs'
        authType:
          $ref: '#/components/schemas/String'
        authorizerUri:
          $ref: '#/components/schemas/String'
        authorizerCredentials:
          $ref: '#/components/schemas/String'
        identitySource:
          $ref: '#/components/schemas/String'
        identityValidationExpression:
          $ref: '#/components/schemas/String'
        authorizerResultTtlInSeconds:
          $ref: '#/components/schemas/NullableInteger'
      description: Request to add a new <a>Authorizer</a> to an existing <a>RestApi</a> resource.
    CreateBasePathMappingRequest:
      type: object
      required:
        - restApiId
      properties:
        basePath:
          $ref: '#/components/schemas/String'
        restApiId:
          $ref: '#/components/schemas/String'
        stage:
          $ref: '#/components/schemas/String'
      description: Requests Amazon API Gateway to create a new <a>BasePathMapping</a> resource.
    CreateDeploymentRequest:
      type: object
      properties:
        stageName:
          $ref: '#/components/schemas/String'
        stageDescription:
          $ref: '#/components/schemas/String'
        description:
          $ref: '#/components/schemas/String'
        cacheClusterEnabled:
          $ref: '#/components/schemas/NullableBoolean'
        cacheClusterSize:
          $ref: '#/components/schemas/CacheClusterSize'
        variables:
          $ref: '#/components/schemas/MapOfStringToString'
      description: Requests Amazon API Gateway to create a <a>Deployment</a> resource.
    CreateDocumentationPartRequest:
      type: object
      required:
        - location
        - properties
      properties:
        location:
          $ref: '#/components/schemas/DocumentationPartLocation'
        properties:
          $ref: '#/components/schemas/String'
      description: Creates a new documentation part of a given API.
    CreateDocumentationVersionRequest:
      type: object
      required:
        - documentationVersion
      properties:
        documentationVersion:
          $ref: '#/components/schemas/String'
        stageName:
          $ref: '#/components/schemas/String'
        description:
          $ref: '#/components/schemas/String'
      description: Creates a new documentation version of a given API.
    CreateDomainNameRequest:
      type: object
      required:
        - domainName
      properties:
        domainName:
          $ref: '#/components/schemas/String'
        certificateName:
          $ref: '#/components/schemas/String'
        certificateBody:
          $ref: '#/components/schemas/String'
        certificatePrivateKey:
          $ref: '#/components/schemas/String'
        certificateChain:
          $ref: '#/components/schemas/String'
        certificateArn:
          $ref: '#/components/schemas/String'
      description: A request to create a new domain name.
    CreateModelRequest:
      type: object
      required:
        - name
        - contentType
      properties:
        name:
          $ref: '#/components/schemas/String'
        description:
          $ref: '#/components/schemas/String'
        schema:
          $ref: '#/components/schemas/String'
        contentType:
          $ref: '#/components/schemas/String'
      description: Request to add a new <a>Model</a> to an existing <a>RestApi</a> resource.
    CreateRequestValidatorRequest:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/String'
        validateRequestBody:
          $ref: '#/components/schemas/Boolean'
        validateRequestParameters:
          $ref: '#/components/schemas/Boolean'
      description: Creates a <a>RequestValidator</a> of a given <a>RestApi</a>.
    CreateResourceRequest:
      type: object
      required:
        - pathPart
      properties:
        pathPart:
          $ref: '#/components/schemas/String'
      description: Requests Amazon API Gateway to create a <a>Resource</a> resource.
    CreateRestApiRequest:
      type: object
      required:
        - name
      properties:
        name:
          $ref: '#/components/schemas/String'
        description:
          $ref: '#/components/schemas/String'
        version:
          $ref: '#/components/schemas/String'
        cloneFrom:
          $ref: '#/components/schemas/String'
        binaryMediaTypes:
          $ref: '#/components/schemas/ListOfString'
      description: The POST Request to add a new <a>RestApi</a> resource to your collection.
    CreateStageRequest:
      type: object
      required:
        - stageName
        - deploymentId
      properties:
        stageName:
          $ref: '#/components/schemas/String'
        deploymentId:
          $ref: '#/components/schemas/String'
        description:
          $ref: '#/components/schemas/String'
        cacheClusterEnabled:
          $ref: '#/components/schemas/Boolean'
        cacheClusterSize:
          $ref: '#/components/schemas/CacheClusterSize'
        variables:
          $ref: '#/components/schemas/MapOfStringToString'
        documentationVersion:
          $ref: '#/components/schemas/String'
      description: Requests Amazon API Gateway to create a <a>Stage</a> resource.
    CreateUsagePlanKeyRequest:
      type: object
      required:
        - keyId
        - keyType
      properties:
        keyId:
          $ref: '#/components/schemas/String'
        keyType:
          $ref: '#/components/schemas/String'
      description: The POST request to create a usage plan key for adding an existing API key to a usage plan.
    CreateUsagePlanRequest:
      type: object
      required:
        - name
      properties:
        name:
          $ref: '#/components/schemas/String'
        description:
          $ref: '#/components/schemas/String'
        apiStages:
          $ref: '#/components/schemas/ListOfApiStage'
        throttle:
          $ref: '#/components/schemas/ThrottleSettings'
        quota:
          $ref: '#/components/schemas/QuotaSettings'
      description: 'The POST request to create a usage plan with the name, description, throttle limits and quota limits, as well as the associated API stages, specified in the payload.'
    DeleteApiKeyRequest:
      type: object
      properties: {}
      description: A request to delete the <a>ApiKey</a> resource.
    DeleteAuthorizerRequest:
      type: object
      properties: {}
      description: Request to delete an existing <a>Authorizer</a> resource.
    DeleteBasePathMappingRequest:
      type: object
      properties: {}
      description: A request to delete the <a>BasePathMapping</a> resource.
    DeleteClientCertificateRequest:
      type: object
      properties: {}
      description: A request to delete the <a>ClientCertificate</a> resource.
    DeleteDeploymentRequest:
      type: object
      properties: {}
      description: Requests Amazon API Gateway to delete a <a>Deployment</a> resource.
    DeleteDocumentationPartRequest:
      type: object
      properties: {}
      description: Deletes an existing documentation part of an API.
    DeleteDocumentationVersionRequest:
      type: object
      properties: {}
      description: Deletes an existing documentation version of an API.
    DeleteDomainNameRequest:
      type: object
      properties: {}
      description: A request to delete the <a>DomainName</a> resource.
    DeleteIntegrationRequest:
      type: object
      properties: {}
      description: Represents a delete integration request.
    DeleteIntegrationResponseRequest:
      type: object
      properties: {}
      description: Represents a delete integration response request.
    DeleteMethodRequest:
      type: object
      properties: {}
      description: Request to delete an existing <a>Method</a> resource.
    DeleteMethodResponseRequest:
      type: object
      properties: {}
      description: A request to delete an existing <a>MethodResponse</a> resource.
    DeleteModelRequest:
      type: object
      properties: {}
      description: Request to delete an existing model in an existing <a>RestApi</a> resource.
    DeleteRequestValidatorRequest:
      type: object
      properties: {}
      description: Deletes a specified <a>RequestValidator</a> of a given <a>RestApi</a>.
    DeleteResourceRequest:
      type: object
      properties: {}
      description: Request to delete a <a>Resource</a>.
    DeleteRestApiRequest:
      type: object
      properties: {}
      description: Request to delete the specified API from your collection.
    DeleteStageRequest:
      type: object
      properties: {}
      description: Requests Amazon API Gateway to delete a <a>Stage</a> resource.
    DeleteUsagePlanKeyRequest:
      type: object
      properties: {}
      description: The DELETE request to delete a usage plan key and remove the underlying API key from the associated usage plan.
    DeleteUsagePlanRequest:
      type: object
      properties: {}
      description: The DELETE request to delete a uasge plan of a given plan Id.
    Deployment:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/String'
        description:
          $ref: '#/components/schemas/String'
        createdDate:
          $ref: '#/components/schemas/Timestamp'
        apiSummary:
          $ref: '#/components/schemas/PathToMapOfMethodSnapshot'
      description: '<p>An immutable representation of a <a>RestApi</a> resource that can be called by users using <a>Stages</a>. A deployment must be associated with a <a>Stage</a> for it to be callable over the Internet.</p> <div class="remarks">To create a deployment, call <code>POST</code> on the <a>Deployments</a> resource of a <a>RestApi</a>. To view, update, or delete a deployment, call <code>GET</code>, <code>PATCH</code>, or <code>DELETE</code> on the specified deployment resource (<code>/restapis/{restapi_id}/deployments/{deployment_id}</code>).</div> <div class="seeAlso"><a>RestApi</a>, <a>Deployments</a>, <a>Stage</a>, <a href="http://docs.aws.amazon.com/cli/latest/reference/apigateway/get-deployment.html">AWS CLI</a>, <a href="https://aws.amazon.com/tools/">AWS SDKs</a> </div>'
    Deployments:
      type: object
      properties:
        position:
          $ref: '#/components/schemas/String'
        items:
          $ref: '#/components/schemas/ListOfDeployment'
      description: '<p>Represents a collection resource that contains zero or more references to your existing deployments, and links that guide you on how to interact with your collection. The collection offers a paginated view of the contained deployments.</p> <div class="remarks">To create a new deployment of a <a>RestApi</a>, make a <code>POST</code> request against this resource. To view, update, or delete an existing deployment, make a <code>GET</code>, <code>PATCH</code>, or <code>DELETE</code> request, respectively, on a specified <a>Deployment</a> resource.</div> <div class="seeAlso"> <a href="http://docs.aws.amazon.com/apigateway/latest/developerguide/how-to-deploy-api.html">Deploying an API</a>, <a href="http://docs.aws.amazon.com/cli/latest/reference/apigateway/get-deployment.html">AWS CLI</a>, <a href="https://aws.amazon.com/tools/">AWS SDKs</a> </div>'
    DocumentationPart:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/String'
        location:
          $ref: '#/components/schemas/DocumentationPartLocation'
        properties:
          $ref: '#/components/schemas/String'
      description: '<p>A documentation part for a targeted API entity.</p> <div class="remarks"> <p>A documentation part consists of a content map (<code>properties</code>) and a target (<code>location</code>). The target specifies an API entity to which the documentation content applies. The supported API entity types are <code>API</code>, <code>AUTHORIZER</code>, <code>MODEL</code>, <code>RESOURCE</code>, <code>METHOD</code>, <code>PATH_PARAMETER</code>, <code>QUERY_PARAMETER</code>, <code>REQUEST_HEADER</code>, <code>REQUEST_BODY</code>, <code>RESPONSE</code>, <code>RESPONSE_HEADER</code>, and <code>RESPONSE_BODY</code>. Valid <code>location</code> fields depend on the API entity type. All valid fields are not required.</p> <p>The content map is a JSON string of API-specific key-value pairs. Although an API can use any shape for the content map, only the Swagger-compliant documentation fields will be injected into the associated API entity definition in the exported Swagger definition file.</p></div> <div class="seeAlso"> <a href="http://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-documenting-api.html">Documenting an API</a>, <a>DocumentationParts</a> </div>'
    DocumentationPartIds:
      type: object
      properties:
        ids:
          $ref: '#/components/schemas/ListOfString'
        warnings:
          $ref: '#/components/schemas/ListOfString'
      description: '<p>A collection of the imported <a>DocumentationPart</a> identifiers.</p> <div class="remarks">This is used to return the result when documentation parts in an external (e.g., Swagger) file are imported into Amazon API Gateway</div> <div class="seeAlso"> <a href="http://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-documenting-api.html">Documenting an API</a>, <a href="http://docs.aws.amazon.com/apigateway/api-reference/link-relation/documentationpart-import/">documentationpart:import</a>, <a>DocumentationPart</a> </div>'
    DocumentationPartLocation:
      type: object
      required:
        - type
      properties:
        type:
          $ref: '#/components/schemas/DocumentationPartType'
        path:
          $ref: '#/components/schemas/String'
        method:
          $ref: '#/components/schemas/String'
        statusCode:
          $ref: '#/components/schemas/DocumentationPartLocationStatusCode'
        name:
          $ref: '#/components/schemas/String'
      description: Specifies the target API entity to which the documentation applies.
    DocumentationPartLocationStatusCode:
      type: string
      pattern: '^([1-5]\d\d|\*|\s*)$'
    DocumentationPartType:
      type: string
      enum:
        - API
        - AUTHORIZER
        - MODEL
        - RESOURCE
        - METHOD
        - PATH_PARAMETER
        - QUERY_PARAMETER
        - REQUEST_HEADER
        - REQUEST_BODY
        - RESPONSE
        - RESPONSE_HEADER
        - RESPONSE_BODY
    DocumentationParts:
      type: object
      properties:
        position:
          $ref: '#/components/schemas/String'
        items:
          $ref: '#/components/schemas/ListOfDocumentationPart'
      description: '<p>The collection of documentation parts of an API.</p> <div class="remarks"/> <div class="seeAlso"> <a href="http://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-documenting-api.html">Documenting an API</a>, <a>DocumentationPart</a> </div>'
    DocumentationVersion:
      type: object
      properties:
        version:
          $ref: '#/components/schemas/String'
        createdDate:
          $ref: '#/components/schemas/Timestamp'
        description:
          $ref: '#/components/schemas/String'
      description: '<p>A snapshot of the documentation of an API.</p> <div class="remarks"><p>Publishing API documentation involves creating a documentation version associated with an API stage and exporting the versioned documentation to an external (e.g., Swagger) file.</p></div> <div class="seeAlso"> <a href="http://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-documenting-api.html">Documenting an API</a>, <a>DocumentationPart</a>, <a>DocumentationVersions</a> </div>'
    DocumentationVersions:
      type: object
      properties:
        position:
          $ref: '#/components/schemas/String'
        items:
          $ref: '#/components/schemas/ListOfDocumentationVersion'
      description: '<p>The collection of documentation snapshots of an API. </p> <div class="remarks"><p>Use the <a>DocumentationVersions</a> to manage documentation snapshots associated with various API stages.</p></div> <div class="seeAlso"> <a href="http://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-documenting-api.html">Documenting an API</a>, <a>DocumentationPart</a>, <a>DocumentationVersion</a> </div>'
    DomainName:
      type: object
      properties:
        domainName:
          $ref: '#/components/schemas/String'
        certificateName:
          $ref: '#/components/schemas/String'
        certificateArn:
          $ref: '#/components/schemas/String'
        certificateUploadDate:
          $ref: '#/components/schemas/Timestamp'
        distributionDomainName:
          $ref: '#/components/schemas/String'
      description: '<p>Represents a domain name that is contained in a simpler, more intuitive URL that can be called.</p> <div class="seeAlso"> <a href="http://docs.aws.amazon.com/apigateway/latest/developerguide/how-to-custom-domains.html">Use Client-Side Certificate</a> </div>'
    DomainNames:
      type: object
      properties:
        position:
          $ref: '#/components/schemas/String'
        items:
          $ref: '#/components/schemas/ListOfDomainName'
      description: '<p>Represents a collection of <a>DomainName</a> resources.</p> <div class="seeAlso"> <a href="http://docs.aws.amazon.com/apigateway/latest/developerguide/how-to-custom-domains.html">Use Client-Side Certificate</a> </div>'
    Double:
      type: number
      format: double
    ExportResponse:
      type: object
      properties:
        body:
          $ref: '#/components/schemas/Blob'
      description: 'The binary blob response to <a>GetExport</a>, which contains the generated SDK.'
    FlushStageAuthorizersCacheRequest:
      type: object
      properties: {}
      description: Request to flush authorizer cache entries on a specified stage.
    FlushStageCacheRequest:
      type: object
      properties: {}
      description: Requests Amazon API Gateway to flush a stage's cache.
    GenerateClientCertificateRequest:
      type: object
      properties:
        description:
          $ref: '#/components/schemas/String'
      description: A request to generate a <a>ClientCertificate</a> resource.
    GetAccountRequest:
      type: object
      properties: {}
      description: Requests Amazon API Gateway to get information about the current <a>Account</a> resource.
    GetApiKeyRequest:
      type: object
      properties: {}
      description: A request to get information about the current <a>ApiKey</a> resource.
    GetApiKeysRequest:
      type: object
      properties: {}
      description: A request to get information about the current <a>ApiKeys</a> resource.
    GetAuthorizerRequest:
      type: object
      properties: {}
      description: Request to describe an existing <a>Authorizer</a> resource.
    GetAuthorizersRequest:
      type: object
      properties: {}
      description: Request to describe an existing <a>Authorizers</a> resource.
    GetBasePathMappingRequest:
      type: object
      properties: {}
      description: Request to describe a <a>BasePathMapping</a> resource.
    GetBasePathMappingsRequest:
      type: object
      properties: {}
      description: A request to get information about a collection of <a>BasePathMapping</a> resources.
    GetClientCertificateRequest:
      type: object
      properties: {}
      description: A request to get information about the current <a>ClientCertificate</a> resource.
    GetClientCertificatesRequest:
      type: object
      properties: {}
      description: A request to get information about a collection of <a>ClientCertificate</a> resources.
    GetDeploymentRequest:
      type: object
      properties: {}
      description: Requests Amazon API Gateway to get information about a <a>Deployment</a> resource.
    GetDeploymentsRequest:
      type: object
      properties: {}
      description: Requests Amazon API Gateway to get information about a <a>Deployments</a> collection.
    GetDocumentationPartRequest:
      type: object
      properties: {}
      description: Gets a specified documentation part of a given API.
    GetDocumentationPartsRequest:
      type: object
      properties: {}
      description: 'Gets the documentation parts of an API. The result may be filtered by the type, name, or path of API entities (targets).'
    GetDocumentationVersionRequest:
      type: object
      properties: {}
      description: Gets a documentation snapshot of an API.
    GetDocumentationVersionsRequest:
      type: object
      properties: {}
      description: Gets the documentation versions of an API.
    GetDomainNameRequest:
      type: object
      properties: {}
      description: Request to get the name of a <a>DomainName</a> resource.
    GetDomainNamesRequest:
      type: object
      properties: {}
      description: Request to describe a collection of <a>DomainName</a> resources.
    GetExportRequest:
      type: object
      properties: {}
      description: Request a new export of a <a>RestApi</a> for a particular <a>Stage</a>.
    GetIntegrationRequest:
      type: object
      properties: {}
      description: Represents a get integration request.
    GetIntegrationResponseRequest:
      type: object
      properties: {}
      description: Represents a get integration response request.
    GetMethodRequest:
      type: object
      properties: {}
      description: Request to describe an existing <a>Method</a> resource.
    GetMethodResponseRequest:
      type: object
      properties: {}
      description: Request to describe a <a>MethodResponse</a> resource.
    GetModelRequest:
      type: object
      properties: {}
      description: Request to list information about a model in an existing <a>RestApi</a> resource.
    GetModelTemplateRequest:
      type: object
      properties: {}
      description: Request to generate a sample mapping template used to transform the payload.
    GetModelsRequest:
      type: object
      properties: {}
      description: Request to list existing <a>Models</a> defined for a <a>RestApi</a> resource.
    GetRequestValidatorRequest:
      type: object
      properties: {}
      description: Gets a <a>RequestValidator</a> of a given <a>RestApi</a>.
    GetRequestValidatorsRequest:
      type: object
      properties: {}
      description: Gets the <a>RequestValidators</a> collection of a given <a>RestApi</a>.
    GetResourceRequest:
      type: object
      properties: {}
      description: Request to list information about a resource.
    GetResourcesRequest:
      type: object
      properties: {}
      description: Request to list information about a collection of resources.
    GetRestApiRequest:
      type: object
      properties: {}
      description: 'The GET request to list an existing <a>RestApi</a> defined for your collection. '
    GetRestApisRequest:
      type: object
      properties: {}
      description: The GET request to list existing <a>RestApis</a> defined for your collection.
    GetSdkRequest:
      type: object
      properties: {}
      description: Request a new generated client SDK for a <a>RestApi</a> and <a>Stage</a>.
    GetSdkTypeRequest:
      type: object
      properties: {}
      description: Get an <a>SdkType</a> instance.
    GetSdkTypesRequest:
      type: object
      properties: {}
      description: Get the <a>SdkTypes</a> collection.
    GetStageRequest:
      type: object
      properties: {}
      description: Requests Amazon API Gateway to get information about a <a>Stage</a> resource.
    GetStagesRequest:
      type: object
      properties: {}
      description: Requests Amazon API Gateway to get information about one or more <a>Stage</a> resources.
    GetUsagePlanKeyRequest:
      type: object
      properties: {}
      description: The GET request to get a usage plan key of a given key identifier.
    GetUsagePlanKeysRequest:
      type: object
      properties: {}
      description: The GET request to get all the usage plan keys representing the API keys added to a specified usage plan.
    GetUsagePlanRequest:
      type: object
      properties: {}
      description: The GET request to get a usage plan of a given plan identifier.
    GetUsagePlansRequest:
      type: object
      properties: {}
      description: The GET request to get all the usage plans of the caller's account.
    GetUsageRequest:
      type: object
      properties: {}
      description: The GET request to get the usage data of a usage plan in a specified time interval.
    ImportApiKeysRequest:
      type: object
      required:
        - body
      properties:
        body:
          $ref: '#/components/schemas/Blob'
      description: 'The POST request to import API keys from an external source, such as a CSV-formatted file.'
    ImportDocumentationPartsRequest:
      type: object
      required:
        - body
      properties:
        body:
          $ref: '#/components/schemas/Blob'
      description: 'Import documentation parts from an external (e.g., Swagger) definition file. '
    ImportRestApiRequest:
      type: object
      required:
        - body
      properties:
        body:
          $ref: '#/components/schemas/Blob'
      description: A POST request to import an API to Amazon API Gateway using an input of an API definition file.
    Integer:
      type: integer
    Integration:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/IntegrationType'
        httpMethod:
          $ref: '#/components/schemas/String'
        uri:
          $ref: '#/components/schemas/String'
        credentials:
          $ref: '#/components/schemas/String'
        requestParameters:
          $ref: '#/components/schemas/MapOfStringToString'
        requestTemplates:
          $ref: '#/components/schemas/MapOfStringToString'
        passthroughBehavior:
          $ref: '#/components/schemas/String'
        contentHandling:
          $ref: '#/components/schemas/ContentHandlingStrategy'
        cacheNamespace:
          $ref: '#/components/schemas/String'
        cacheKeyParameters:
          $ref: '#/components/schemas/ListOfString'
        integrationResponses:
          $ref: '#/components/schemas/MapOfIntegrationResponse'
      description: '<p>Represents an HTTP, HTTP_PROXY, AWS, AWS_PROXY, or Mock integration.</p> <div class="remarks">In the API Gateway console, the built-in Lambda integration is an AWS integration.</div> <div class="seeAlso"> <a href="http://docs.aws.amazon.com/apigateway/latest/developerguide/how-to-create-api.html">Creating an API</a> </div>'
    IntegrationResponse:
      type: object
      properties:
        statusCode:
          $ref: '#/components/schemas/StatusCode'
        selectionPattern:
          $ref: '#/components/schemas/String'
        responseParameters:
          $ref: '#/components/schemas/MapOfStringToString'
        responseTemplates:
          $ref: '#/components/schemas/MapOfStringToString'
        contentHandling:
          $ref: '#/components/schemas/ContentHandlingStrategy'
      description: '<p>Represents an integration response. The status code must map to an existing <a>MethodResponse</a>, and parameters and templates can be used to transform the back-end response.</p> <div class="seeAlso"> <a href="http://docs.aws.amazon.com/apigateway/latest/developerguide/how-to-create-api.html">Creating an API</a> </div>'
    IntegrationType:
      type: string
      enum:
        - HTTP
        - AWS
        - MOCK
        - HTTP_PROXY
        - AWS_PROXY
      description: 'The integration type. The valid value is <code>HTTP</code> for integrating with an HTTP back end, <code>AWS</code> for any AWS service endpoints, <code>MOCK</code> for testing without actually invoking the back end, <code>HTTP_PROXY</code> for integrating with the HTTP proxy integration, or <code>AWS_PROXY</code> for integrating with the Lambda proxy integration type.'
    LimitExceededException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
    ListOfARNs:
      type: array
      items:
        $ref: '#/components/schemas/ProviderARN'
    ListOfApiKey:
      type: array
      items:
        $ref: '#/components/schemas/ApiKey'
    ListOfApiStage:
      type: array
      items:
        $ref: '#/components/schemas/ApiStage'
    ListOfAuthorizer:
      type: array
      items:
        $ref: '#/components/schemas/Authorizer'
    ListOfBasePathMapping:
      type: array
      items:
        $ref: '#/components/schemas/BasePathMapping'
    ListOfClientCertificate:
      type: array
      items:
        $ref: '#/components/schemas/ClientCertificate'
    ListOfDeployment:
      type: array
      items:
        $ref: '#/components/schemas/Deployment'
    ListOfDocumentationPart:
      type: array
      items:
        $ref: '#/components/schemas/DocumentationPart'
    ListOfDocumentationVersion:
      type: array
      items:
        $ref: '#/components/schemas/DocumentationVersion'
    ListOfDomainName:
      type: array
      items:
        $ref: '#/components/schemas/DomainName'
    ListOfLong:
      type: array
      items:
        $ref: '#/components/schemas/Long'
    ListOfModel:
      type: array
      items:
        $ref: '#/components/schemas/Model'
    ListOfPatchOperation:
      type: array
      description: A list of operations describing the updates to apply to the specified resource. The patches are applied in the order specified in the list.
      items:
        $ref: '#/components/schemas/PatchOperation'
    ListOfRequestValidator:
      type: array
      items:
        $ref: '#/components/schemas/RequestValidator'
    ListOfResource:
      type: array
      items:
        $ref: '#/components/schemas/Resource'
    ListOfRestApi:
      type: array
      items:
        $ref: '#/components/schemas/RestApi'
    ListOfSdkConfigurationProperty:
      type: array
      items:
        $ref: '#/components/schemas/SdkConfigurationProperty'
    ListOfSdkType:
      type: array
      items:
        $ref: '#/components/schemas/SdkType'
    ListOfStage:
      type: array
      items:
        $ref: '#/components/schemas/Stage'
    ListOfStageKeys:
      type: array
      items:
        $ref: '#/components/schemas/StageKey'
    ListOfString:
      type: array
      items:
        $ref: '#/components/schemas/String'
    ListOfUsage:
      type: array
      items:
        $ref: '#/components/schemas/ListOfLong'
    ListOfUsagePlan:
      type: array
      items:
        $ref: '#/components/schemas/UsagePlan'
    ListOfUsagePlanKey:
      type: array
      items:
        $ref: '#/components/schemas/UsagePlanKey'
    Long:
      type: integer
    MapOfHeaderValues:
      type: array
      items:
        type: object
        properties:
          key:
            $ref: '#/components/schemas/String'
          value:
            $ref: '#/components/schemas/String'
    MapOfIntegrationResponse:
      type: array
      items:
        type: object
        properties:
          key:
            $ref: '#/components/schemas/String'
          value:
            $ref: '#/components/schemas/IntegrationResponse'
    MapOfKeyUsages:
      type: array
      items:
        type: object
        properties:
          key:
            $ref: '#/components/schemas/String'
          value:
            $ref: '#/components/schemas/ListOfUsage'
    MapOfMethod:
      type: array
      items:
        type: object
        properties:
          key:
            $ref: '#/components/schemas/String'
          value:
            $ref: '#/components/schemas/Method'
    MapOfMethodResponse:
      type: array
      items:
        type: object
        properties:
          key:
            $ref: '#/components/schemas/String'
          value:
            $ref: '#/components/schemas/MethodResponse'
    MapOfMethodSettings:
      type: array
      items:
        type: object
        properties:
          key:
            $ref: '#/components/schemas/String'
          value:
            $ref: '#/components/schemas/MethodSetting'
    MapOfMethodSnapshot:
      type: array
      items:
        type: object
        properties:
          key:
            $ref: '#/components/schemas/String'
          value:
            $ref: '#/components/schemas/MethodSnapshot'
    MapOfStringToBoolean:
      type: array
      items:
        type: object
        properties:
          key:
            $ref: '#/components/schemas/String'
          value:
            $ref: '#/components/schemas/NullableBoolean'
    MapOfStringToList:
      type: array
      items:
        type: object
        properties:
          key:
            $ref: '#/components/schemas/String'
          value:
            $ref: '#/components/schemas/ListOfString'
    MapOfStringToString:
      type: array
      items:
        type: object
        properties:
          key:
            $ref: '#/components/schemas/String'
          value:
            $ref: '#/components/schemas/String'
    Method:
      type: object
      properties:
        httpMethod:
          $ref: '#/components/schemas/String'
        authorizationType:
          $ref: '#/components/schemas/String'
        authorizerId:
          $ref: '#/components/schemas/String'
        apiKeyRequired:
          $ref: '#/components/schemas/NullableBoolean'
        requestValidatorId:
          $ref: '#/components/schemas/String'
        operationName:
          $ref: '#/components/schemas/String'
        requestParameters:
          $ref: '#/components/schemas/MapOfStringToBoolean'
        requestModels:
          $ref: '#/components/schemas/MapOfStringToString'
        methodResponses:
          $ref: '#/components/schemas/MapOfMethodResponse'
        methodIntegration:
          $ref: '#/components/schemas/Integration'
      description: '<p> Represents a client-facing interface by which the client calls the API to access back-end resources. A <b>Method</b> resource is integrated with an <a>Integration</a> resource. Both consist of a request and one or more responses. The method request takes the client input that is passed to the back end through the integration request. A method response returns the output from the back end to the client through an integration response. A method request is embodied in a <b>Method</b> resource, whereas an integration request is embodied in an <a>Integration</a> resource. On the other hand, a method response is represented by a <a>MethodResponse</a> resource, whereas an integration response is represented by an <a>IntegrationResponse</a> resource. </p> <div class="remarks"> <p/> <h4>Example: Retrive the GET method on a specified resource</h4> <h5>Request</h5> <p>The following example request retrieves the information about the GET method on an API resource (<code>3kzxbg5sa2</code>) of an API (<code>fugvjdxtri</code>). </p> <pre><code>GET /restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET HTTP/1.1 Content-Type: application/json Host: apigateway.us-east-1.amazonaws.com X-Amz-Date: 20160603T210259Z Authorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/20160603/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash}</code></pre> <h5>Response</h5> <p>The successful response returns a <code>200 OK</code> status code and a payload similar to the following:</p> <pre><code>{ "_links": { "curies": [ { "href": "http://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-{rel}.html", "name": "integration", "templated": true }, { "href": "http://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-integration-response-{rel}.html", "name": "integrationresponse", "templated": true }, { "href": "http://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-method-{rel}.html", "name": "method", "templated": true }, { "href": "http://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-method-response-{rel}.html", "name": "methodresponse", "templated": true } ], "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET", "name": "GET", "title": "GET" }, "integration:put": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "method:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET" }, "method:integration": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "method:responses": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200", "name": "200", "title": "200" }, "method:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET" }, "methodresponse:put": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/{status_code}", "templated": true } }, "apiKeyRequired": true, "authorizationType": "NONE", "httpMethod": "GET", "_embedded": { "method:integration": { "_links": { "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "integration:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "integration:responses": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200", "name": "200", "title": "200" }, "integration:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration" }, "integrationresponse:put": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/{status_code}", "templated": true } }, "cacheKeyParameters": [], "cacheNamespace": "3kzxbg5sa2", "credentials": "arn:aws:iam::123456789012:role/apigAwsProxyRole", "httpMethod": "POST", "passthroughBehavior": "WHEN_NO_MATCH", "requestParameters": { "integration.request.header.Content-Type": "''application/x-amz-json-1.1''" }, "requestTemplates": { "application/json": "{\n}" }, "type": "AWS", "uri": "arn:aws:apigateway:us-east-1:kinesis:action/ListStreams", "_embedded": { "integration:responses": { "_links": { "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200", "name": "200", "title": "200" }, "integrationresponse:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200" }, "integrationresponse:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/integration/responses/200" } }, "responseParameters": { "method.response.header.Content-Type": "''application/xml''" }, "responseTemplates": { "application/json": "$util.urlDecode(\"%3CkinesisStreams%3E%23foreach(%24stream%20in%20%24input.path(%27%24.StreamNames%27))%3Cstream%3E%3Cname%3E%24stream%3C%2Fname%3E%3C%2Fstream%3E%23end%3C%2FkinesisStreams%3E\")" }, "statusCode": "200" } } }, "method:responses": { "_links": { "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200", "name": "200", "title": "200" }, "methodresponse:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200" }, "methodresponse:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200" } }, "responseModels": { "application/json": "Empty" }, "responseParameters": { "method.response.header.Content-Type": false }, "statusCode": "200" } } }</code></pre> <p>In the example above, the response template for the <code>200 OK</code> response maps the JSON output from the <code>ListStreams</code> action in the back end to an XML output. The mapping template is URL-encoded as <code>%3CkinesisStreams%3E%23foreach(%24stream%20in%20%24input.path(%27%24.StreamNames%27))%3Cstream%3E%3Cname%3E%24stream%3C%2Fname%3E%3C%2Fstream%3E%23end%3C%2FkinesisStreams%3E</code> and the output is decoded using the <a href="http://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-mapping-template-reference.html#util-templat-reference">$util.urlDecode()</a> helper function.</p> </div> <div class="seeAlso"> <a>MethodResponse</a>, <a>Integration</a>, <a>IntegrationResponse</a>, <a>Resource</a>, <a href="http://docs.aws.amazon.com/apigateway/latest/developerguide/how-to-method-settings.html">Set up an API''s method</a> </div>'
    MethodResponse:
      type: object
      properties:
        statusCode:
          $ref: '#/components/schemas/StatusCode'
        responseParameters:
          $ref: '#/components/schemas/MapOfStringToBoolean'
        responseModels:
          $ref: '#/components/schemas/MapOfStringToString'
      description: '<p>Represents a method response of a given HTTP status code returned to the client. The method response is passed from the back end through the associated integration response that can be transformed using a mapping template. </p> <div class="remarks"> <p/> <h4>Example: A <b>MethodResponse</b> instance of an API</h4> <h5>Request</h5> <p>The example request retrieves a <b>MethodResponse</b> of the 200 status code.</p> <pre><code>GET /restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200 HTTP/1.1 Content-Type: application/json Host: apigateway.us-east-1.amazonaws.com X-Amz-Date: 20160603T222952Z Authorization: AWS4-HMAC-SHA256 Credential={access_key_ID}/20160603/us-east-1/apigateway/aws4_request, SignedHeaders=content-type;host;x-amz-date, Signature={sig4_hash}</code></pre> <h5>Response</h5> <p>The successful response returns <code>200 OK</code> status and a payload as follows:</p> <pre><code>{ "_links": { "curies": { "href": "http://docs.aws.amazon.com/apigateway/latest/developerguide/restapi-method-response-{rel}.html", "name": "methodresponse", "templated": true }, "self": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200", "title": "200" }, "methodresponse:delete": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200" }, "methodresponse:update": { "href": "/restapis/fugvjdxtri/resources/3kzxbg5sa2/methods/GET/responses/200" } }, "responseModels": { "application/json": "Empty" }, "responseParameters": { "method.response.header.Content-Type": false }, "statusCode": "200" }</code></pre> <p/> </div> <div class="seeAlso"> <a>Method</a>, <a>IntegrationResponse</a>, <a>Integration</a> <a href="http://docs.aws.amazon.com/apigateway/latest/developerguide/how-to-create-api.html">Creating an API</a> </div>'
    MethodSetting:
      type: object
      properties:
        metricsEnabled:
          $ref: '#/components/schemas/Boolean'
        loggingLevel:
          $ref: '#/components/schemas/String'
        dataTraceEnabled:
          $ref: '#/components/schemas/Boolean'
        throttlingBurstLimit:
          $ref: '#/components/schemas/Integer'
        throttlingRateLimit:
          $ref: '#/components/schemas/Double'
        cachingEnabled:
          $ref: '#/components/schemas/Boolean'
        cacheTtlInSeconds:
          $ref: '#/components/schemas/Integer'
        cacheDataEncrypted:
          $ref: '#/components/schemas/Boolean'
        requireAuthorizationForCacheControl:
          $ref: '#/components/schemas/Boolean'
        unauthorizedCacheControlHeaderStrategy:
          $ref: '#/components/schemas/UnauthorizedCacheControlHeaderStrategy'
      description: Specifies the method setting properties.
    MethodSnapshot:
      type: object
      properties:
        authorizationType:
          $ref: '#/components/schemas/String'
        apiKeyRequired:
          $ref: '#/components/schemas/Boolean'
      description: 'Represents a summary of a <a>Method</a> resource, given a particular date and time.'
    Model:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/String'
        name:
          $ref: '#/components/schemas/String'
        description:
          $ref: '#/components/schemas/String'
        schema:
          $ref: '#/components/schemas/String'
        contentType:
          $ref: '#/components/schemas/String'
      description: '<p>Represents the data structure of a method''s request or response payload.</p> <div class="remarks"> <p>A request model defines the data structure of the client-supplied request payload. A response model defines the data structure of the response payload returned by the back end. Although not required, models are useful for mapping payloads between the front end and back end.</p> <p>A model is used for generating an API''s SDK, validating the input request body, and creating a skeletal mapping template.</p> </div> <div class="seeAlso"> <a>Method</a>, <a>MethodResponse</a>, <a href="http://docs.aws.amazon.com/apigateway/latest/developerguide/models-mappings.html">Models and Mappings</a> </div>'
    Models:
      type: object
      properties:
        position:
          $ref: '#/components/schemas/String'
        items:
          $ref: '#/components/schemas/ListOfModel'
      description: '<p>Represents a collection of <a>Model</a> resources.</p> <div class="seeAlso"> <a>Method</a>, <a>MethodResponse</a>, <a href="http://docs.aws.amazon.com/apigateway/latest/developerguide/models-mappings.html">Models and Mappings</a> </div>'
    NotFoundException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
    NullableBoolean:
      type: boolean
    NullableInteger:
      type: integer
    Op:
      type: string
      enum:
        - add
        - remove
        - replace
        - move
        - copy
        - test
    PatchOperation:
      type: object
      properties:
        op:
          $ref: '#/components/schemas/Op'
        path:
          $ref: '#/components/schemas/String'
        value:
          $ref: '#/components/schemas/String'
        from:
          $ref: '#/components/schemas/String'
      description: 'A single patch operation to apply to the specified resource. Please refer to http://tools.ietf.org/html/rfc6902#section-4 for an explanation of how each operation is used.'
    PathToMapOfMethodSnapshot:
      type: array
      items:
        type: object
        properties:
          key:
            $ref: '#/components/schemas/String'
          value:
            $ref: '#/components/schemas/MapOfMethodSnapshot'
    ProviderARN:
      type: string
    PutIntegrationRequest:
      type: object
      required:
        - type
      properties:
        type:
          $ref: '#/components/schemas/IntegrationType'
        integrationHttpMethod:
          $ref: '#/components/schemas/String'
        uri:
          $ref: '#/components/schemas/String'
        credentials:
          $ref: '#/components/schemas/String'
        requestParameters:
          $ref: '#/components/schemas/MapOfStringToString'
        requestTemplates:
          $ref: '#/components/schemas/MapOfStringToString'
        passthroughBehavior:
          $ref: '#/components/schemas/String'
        cacheNamespace:
          $ref: '#/components/schemas/String'
        cacheKeyParameters:
          $ref: '#/components/schemas/ListOfString'
        contentHandling:
          $ref: '#/components/schemas/ContentHandlingStrategy'
      description: Represents a put integration request.
    PutIntegrationResponseRequest:
      type: object
      properties:
        selectionPattern:
          $ref: '#/components/schemas/String'
        responseParameters:
          $ref: '#/components/schemas/MapOfStringToString'
        responseTemplates:
          $ref: '#/components/schemas/MapOfStringToString'
        contentHandling:
          $ref: '#/components/schemas/ContentHandlingStrategy'
      description: Represents a put integration response request.
    PutMethodRequest:
      type: object
      required:
        - authorizationType
      properties:
        authorizationType:
          $ref: '#/components/schemas/String'
        authorizerId:
          $ref: '#/components/schemas/String'
        apiKeyRequired:
          $ref: '#/components/schemas/Boolean'
        operationName:
          $ref: '#/components/schemas/String'
        requestParameters:
          $ref: '#/components/schemas/MapOfStringToBoolean'
        requestModels:
          $ref: '#/components/schemas/MapOfStringToString'
        requestValidatorId:
          $ref: '#/components/schemas/String'
      description: Request to add a method to an existing <a>Resource</a> resource.
    PutMethodResponseRequest:
      type: object
      properties:
        responseParameters:
          $ref: '#/components/schemas/MapOfStringToBoolean'
        responseModels:
          $ref: '#/components/schemas/MapOfStringToString'
      description: Request to add a <a>MethodResponse</a> to an existing <a>Method</a> resource.
    PutMode:
      type: string
      enum:
        - merge
        - overwrite
    PutRestApiRequest:
      type: object
      required:
        - body
      properties:
        body:
          $ref: '#/components/schemas/Blob'
      description: 'A PUT request to update an existing API, with external API definitions specified as the request body.'
    QuotaPeriodType:
      type: string
      enum:
        - DAY
        - WEEK
        - MONTH
    QuotaSettings:
      type: object
      properties:
        limit:
          $ref: '#/components/schemas/Integer'
        offset:
          $ref: '#/components/schemas/Integer'
        period:
          $ref: '#/components/schemas/QuotaPeriodType'
      description: Quotas configured for a usage plan.
    RequestValidator:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/String'
        name:
          $ref: '#/components/schemas/String'
        validateRequestBody:
          $ref: '#/components/schemas/Boolean'
        validateRequestParameters:
          $ref: '#/components/schemas/Boolean'
      description: '<p>A set of validation rules for incoming <a>Method</a> requests.</p> <div class="remarks"> <p>In Swagger, a <a>RequestValidator</a> of an API is defined by the <a href="http://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-swagger-extensions.html#api-gateway-swagger-extensions-request-validators.requestValidator.html">x-amazon-apigateway-request-validators.requestValidator</a> object. It the referenced using the <a href="http://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-swagger-extensions.html#api-gateway-swagger-extensions-request-validator">x-amazon-apigateway-request-validator</a> property.</p> </div> <div class="seeAlso"><a href="http://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-method-request-validation.html">Enable Basic Request Validation in API Gateway</a></div>'
    RequestValidators:
      type: object
      properties:
        position:
          $ref: '#/components/schemas/String'
        items:
          $ref: '#/components/schemas/ListOfRequestValidator'
      description: '<p>A collection of <a>RequestValidator</a> resources of a given <a>RestApi</a>.</p> <div class="remarks"> <p>In Swagger, the <a>RequestValidators</a> of an API is defined by the <a href="http://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-swagger-extensions.html#api-gateway-swagger-extensions-request-validators.html">x-amazon-apigateway-request-validators</a> extension.</p> </div> <div class="seeAlso"><a href="http://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-method-request-validation.html">Enable Basic Request Validation in API Gateway</a></div>'
    Resource:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/String'
        parentId:
          $ref: '#/components/schemas/String'
        pathPart:
          $ref: '#/components/schemas/String'
        path:
          $ref: '#/components/schemas/String'
        resourceMethods:
          $ref: '#/components/schemas/MapOfMethod'
      description: '<p>Represents an API resource.</p> <div class="seeAlso"> <a href="http://docs.aws.amazon.com/apigateway/latest/developerguide/how-to-create-api.html">Create an API</a> </div>'
    Resources:
      type: object
      properties:
        position:
          $ref: '#/components/schemas/String'
        items:
          $ref: '#/components/schemas/ListOfResource'
      description: '<p>Represents a collection of <a>Resource</a> resources.</p> <div class="seeAlso"> <a href="http://docs.aws.amazon.com/apigateway/latest/developerguide/how-to-create-api.html">Create an API</a> </div>'
    RestApi:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/String'
        name:
          $ref: '#/components/schemas/String'
        description:
          $ref: '#/components/schemas/String'
        createdDate:
          $ref: '#/components/schemas/Timestamp'
        version:
          $ref: '#/components/schemas/String'
        warnings:
          $ref: '#/components/schemas/ListOfString'
        binaryMediaTypes:
          $ref: '#/components/schemas/ListOfString'
      description: '<p>Represents a REST API.</p> <div class="seeAlso"> <a href="http://docs.aws.amazon.com/apigateway/latest/developerguide/how-to-create-api.html">Create an API</a> </div>'
    RestApis:
      type: object
      properties:
        position:
          $ref: '#/components/schemas/String'
        items:
          $ref: '#/components/schemas/ListOfRestApi'
      description: '<p>Contains references to your APIs and links that guide you in how to interact with your collection. A collection offers a paginated view of your APIs.</p> <div class="seeAlso"> <a href="http://docs.aws.amazon.com/apigateway/latest/developerguide/how-to-create-api.html">Create an API</a> </div>'
    SdkConfigurationProperty:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/String'
        friendlyName:
          $ref: '#/components/schemas/String'
        description:
          $ref: '#/components/schemas/String'
        required:
          $ref: '#/components/schemas/Boolean'
        defaultValue:
          $ref: '#/components/schemas/String'
      description: A configuration property of an SDK type.
    SdkResponse:
      type: object
      properties:
        body:
          $ref: '#/components/schemas/Blob'
      description: 'The binary blob response to <a>GetSdk</a>, which contains the generated SDK.'
    SdkType:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/String'
        friendlyName:
          $ref: '#/components/schemas/String'
        description:
          $ref: '#/components/schemas/String'
        configurationProperties:
          $ref: '#/components/schemas/ListOfSdkConfigurationProperty'
      description: A type of SDK that API Gateway can generate.
    SdkTypes:
      type: object
      properties:
        position:
          $ref: '#/components/schemas/String'
        items:
          $ref: '#/components/schemas/ListOfSdkType'
      description: The collection of <a>SdkType</a> instances.
    ServiceUnavailableException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
    Stage:
      type: object
      properties:
        deploymentId:
          $ref: '#/components/schemas/String'
        clientCertificateId:
          $ref: '#/components/schemas/String'
        stageName:
          $ref: '#/components/schemas/String'
        description:
          $ref: '#/components/schemas/String'
        cacheClusterEnabled:
          $ref: '#/components/schemas/Boolean'
        cacheClusterSize:
          $ref: '#/components/schemas/CacheClusterSize'
        cacheClusterStatus:
          $ref: '#/components/schemas/CacheClusterStatus'
        methodSettings:
          $ref: '#/components/schemas/MapOfMethodSettings'
        variables:
          $ref: '#/components/schemas/MapOfStringToString'
        documentationVersion:
          $ref: '#/components/schemas/String'
        createdDate:
          $ref: '#/components/schemas/Timestamp'
        lastUpdatedDate:
          $ref: '#/components/schemas/Timestamp'
      description: '<p>Represents a unique identifier for a version of a deployed <a>RestApi</a> that is callable by users.</p> <div class="seeAlso"> <a href="http://docs.aws.amazon.com/apigateway/latest/developerguide/how-to-deploy-api.html">Deploy an API</a> </div>'
    StageKey:
      type: object
      properties:
        restApiId:
          $ref: '#/components/schemas/String'
        stageName:
          $ref: '#/components/schemas/String'
      description: 'A reference to a unique stage identified in the format <code>{restApiId}/{stage}</code>.'
    Stages:
      type: object
      properties:
        item:
          $ref: '#/components/schemas/ListOfStage'
      description: '<p>A list of <a>Stage</a> resources that are associated with the <a>ApiKey</a> resource.</p> <div class="seeAlso"><a href="http://docs.aws.amazon.com/apigateway/latest/developerguide/stages.html">Deploying API in Stages</a></div>'
    StatusCode:
      type: string
      pattern: '[1-5]\d\d'
      description: The status code.
    String:
      type: string
    Template:
      type: object
      properties:
        value:
          $ref: '#/components/schemas/String'
      description: '<p>Represents a mapping template used to transform a payload.</p> <div class="seeAlso"> <a href="http://docs.aws.amazon.com/apigateway/latest/developerguide/models-mappings.html#models-mappings-mappings">Mapping Templates</a> </div>'
    TestInvokeAuthorizerRequest:
      type: object
      properties:
        headers:
          $ref: '#/components/schemas/MapOfHeaderValues'
        pathWithQueryString:
          $ref: '#/components/schemas/String'
        body:
          $ref: '#/components/schemas/String'
        stageVariables:
          $ref: '#/components/schemas/MapOfStringToString'
        additionalContext:
          $ref: '#/components/schemas/MapOfStringToString'
      description: Make a request to simulate the execution of an <a>Authorizer</a>.
    TestInvokeAuthorizerResponse:
      type: object
      properties:
        clientStatus:
          $ref: '#/components/schemas/Integer'
        log:
          $ref: '#/components/schemas/String'
        latency:
          $ref: '#/components/schemas/Long'
        principalId:
          $ref: '#/components/schemas/String'
        policy:
          $ref: '#/components/schemas/String'
        authorization:
          $ref: '#/components/schemas/MapOfStringToList'
        claims:
          $ref: '#/components/schemas/MapOfStringToString'
      description: Represents the response of the test invoke request for a custom <a>Authorizer</a>
    TestInvokeMethodRequest:
      type: object
      properties:
        pathWithQueryString:
          $ref: '#/components/schemas/String'
        body:
          $ref: '#/components/schemas/String'
        headers:
          $ref: '#/components/schemas/MapOfHeaderValues'
        clientCertificateId:
          $ref: '#/components/schemas/String'
        stageVariables:
          $ref: '#/components/schemas/MapOfStringToString'
      description: Make a request to simulate the execution of a <a>Method</a>.
    TestInvokeMethodResponse:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Integer'
        body:
          $ref: '#/components/schemas/String'
        headers:
          $ref: '#/components/schemas/MapOfHeaderValues'
        log:
          $ref: '#/components/schemas/String'
        latency:
          $ref: '#/components/schemas/Long'
      description: '<p>Represents the response of the test invoke request in the HTTP method.</p> <div class="seeAlso"> <a href="http://docs.aws.amazon.com/apigateway/latest/developerguide/how-to-test-method.html#how-to-test-method-console">Test API using the API Gateway console</a> </div>'
    ThrottleSettings:
      type: object
      properties:
        burstLimit:
          $ref: '#/components/schemas/Integer'
        rateLimit:
          $ref: '#/components/schemas/Double'
      description: ' The API request rate limits.'
    Timestamp:
      type: string
      format: date-time
    TooManyRequestsException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
    UnauthorizedCacheControlHeaderStrategy:
      type: string
      enum:
        - FAIL_WITH_403
        - SUCCEED_WITH_RESPONSE_HEADER
        - SUCCEED_WITHOUT_RESPONSE_HEADER
    UnauthorizedException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
    UpdateAccountRequest:
      type: object
      properties:
        patchOperations:
          $ref: '#/components/schemas/ListOfPatchOperation'
      description: Requests Amazon API Gateway to change information about the current <a>Account</a> resource.
    UpdateApiKeyRequest:
      type: object
      properties:
        patchOperations:
          $ref: '#/components/schemas/ListOfPatchOperation'
      description: A request to change information about an <a>ApiKey</a> resource.
    UpdateAuthorizerRequest:
      type: object
      properties:
        patchOperations:
          $ref: '#/components/schemas/ListOfPatchOperation'
      description: Request to update an existing <a>Authorizer</a> resource.
    UpdateBasePathMappingRequest:
      type: object
      properties:
        patchOperations:
          $ref: '#/components/schemas/ListOfPatchOperation'
      description: A request to change information about the <a>BasePathMapping</a> resource.
    UpdateClientCertificateRequest:
      type: object
      properties:
        patchOperations:
          $ref: '#/components/schemas/ListOfPatchOperation'
      description: A request to change information about an <a>ClientCertificate</a> resource.
    UpdateDeploymentRequest:
      type: object
      properties:
        patchOperations:
          $ref: '#/components/schemas/ListOfPatchOperation'
      description: Requests Amazon API Gateway to change information about a <a>Deployment</a> resource.
    UpdateDocumentationPartRequest:
      type: object
      properties:
        patchOperations:
          $ref: '#/components/schemas/ListOfPatchOperation'
      description: Updates an existing documentation part of a given API.
    UpdateDocumentationVersionRequest:
      type: object
      properties:
        patchOperations:
          $ref: '#/components/schemas/ListOfPatchOperation'
      description: Updates an existing documentation version of an API.
    UpdateDomainNameRequest:
      type: object
      properties:
        patchOperations:
          $ref: '#/components/schemas/ListOfPatchOperation'
      description: A request to change information about the <a>DomainName</a> resource.
    UpdateIntegrationRequest:
      type: object
      properties:
        patchOperations:
          $ref: '#/components/schemas/ListOfPatchOperation'
      description: Represents an update integration request.
    UpdateIntegrationResponseRequest:
      type: object
      properties:
        patchOperations:
          $ref: '#/components/schemas/ListOfPatchOperation'
      description: Represents an update integration response request.
    UpdateMethodRequest:
      type: object
      properties:
        patchOperations:
          $ref: '#/components/schemas/ListOfPatchOperation'
      description: Request to update an existing <a>Method</a> resource.
    UpdateMethodResponseRequest:
      type: object
      properties:
        patchOperations:
          $ref: '#/components/schemas/ListOfPatchOperation'
      description: A request to update an existing <a>MethodResponse</a> resource.
    UpdateModelRequest:
      type: object
      properties:
        patchOperations:
          $ref: '#/components/schemas/ListOfPatchOperation'
      description: Request to update an existing model in an existing <a>RestApi</a> resource.
    UpdateRequestValidatorRequest:
      type: object
      properties:
        patchOperations:
          $ref: '#/components/schemas/ListOfPatchOperation'
      description: Updates a <a>RequestValidator</a> of a given <a>RestApi</a>.
    UpdateResourceRequest:
      type: object
      properties:
        patchOperations:
          $ref: '#/components/schemas/ListOfPatchOperation'
      description: Request to change information about a <a>Resource</a> resource.
    UpdateRestApiRequest:
      type: object
      properties:
        patchOperations:
          $ref: '#/components/schemas/ListOfPatchOperation'
      description: Request to update an existing <a>RestApi</a> resource in your collection.
    UpdateStageRequest:
      type: object
      properties:
        patchOperations:
          $ref: '#/components/schemas/ListOfPatchOperation'
      description: Requests Amazon API Gateway to change information about a <a>Stage</a> resource.
    UpdateUsagePlanRequest:
      type: object
      properties:
        patchOperations:
          $ref: '#/components/schemas/ListOfPatchOperation'
      description: The PATCH request to update a usage plan of a given plan Id.
    UpdateUsageRequest:
      type: object
      properties:
        patchOperations:
          $ref: '#/components/schemas/ListOfPatchOperation'
      description: The PATCH request to grant a temporary extension to the reamining quota of a usage plan associated with a specified API key.
    Usage:
      type: object
      properties:
        usagePlanId:
          $ref: '#/components/schemas/String'
        startDate:
          $ref: '#/components/schemas/String'
        endDate:
          $ref: '#/components/schemas/String'
        position:
          $ref: '#/components/schemas/String'
        items:
          $ref: '#/components/schemas/MapOfKeyUsages'
      description: '<p>Represents the usage data of a usage plan.</p> <div class="remarks"/> <div class="seeAlso"> <a href="http://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-api-usage-plans.html">Create and Use Usage Plans</a>, <a href="http://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-create-usage-plans-with-console.html#api-gateway-usage-plan-manage-usage">Manage Usage in a Usage Plan</a> </div>'
    UsagePlan:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/String'
        name:
          $ref: '#/components/schemas/String'
        description:
          $ref: '#/components/schemas/String'
        apiStages:
          $ref: '#/components/schemas/ListOfApiStage'
        throttle:
          $ref: '#/components/schemas/ThrottleSettings'
        quota:
          $ref: '#/components/schemas/QuotaSettings'
        productCode:
          $ref: '#/components/schemas/String'
      description: '<p>Represents a usage plan than can specify who can assess associated API stages with specified request limits and quotas.</p> <div class="remarks"> <p>In a usage plan, you associate an API by specifying the API''s Id and a stage name of the specified API. You add plan customers by adding API keys to the plan. </p> </div> <div class="seeAlso"> <a href="http://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-api-usage-plans.html">Create and Use Usage Plans</a> </div>'
    UsagePlanKey:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/String'
        type:
          $ref: '#/components/schemas/String'
        value:
          $ref: '#/components/schemas/String'
        name:
          $ref: '#/components/schemas/String'
      description: '<p>Represents a usage plan key to identify a plan customer.</p> <div class="remarks"> <p>To associate an API stage with a selected API key in a usage plan, you must create a UsagePlanKey resource to represent the selected <a>ApiKey</a>.</p> </div>" <div class="seeAlso"> <a href="http://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-api-usage-plans.html">Create and Use Usage Plans</a> </div>'
    UsagePlanKeys:
      type: object
      properties:
        position:
          $ref: '#/components/schemas/String'
        items:
          $ref: '#/components/schemas/ListOfUsagePlanKey'
      description: '<p>Represents the collection of usage plan keys added to usage plans for the associated API keys and, possibly, other types of keys.</p> <div class="seeAlso"> <a href="http://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-api-usage-plans.html">Create and Use Usage Plans</a> </div>'
    UsagePlans:
      type: object
      properties:
        position:
          $ref: '#/components/schemas/String'
        items:
          $ref: '#/components/schemas/ListOfUsagePlan'
      description: '<p>Represents a collection of usage plans for an AWS account.</p> <div class="seeAlso"> <a href="http://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-api-usage-plans.html">Create and Use Usage Plans</a> </div>'
  parameters:
    Action:
      name: Action
      in: header
      required: true
      schema:
        type: string
    Version:
      name: Version
      in: header
      required: true
      schema:
        type: string
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      required: false
      schema:
        type: string
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      required: false
      schema:
        type: string
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      required: false
      schema:
        type: string
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      required: false
      schema:
        type: string
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      required: false
      schema:
        type: string
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      required: false
      schema:
        type: string
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      required: false
      schema:
        type: string
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
