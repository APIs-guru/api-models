openapi: 3.0.0
servers:
  - url: 'http://clouddirectory.amazonaws.com/'
info:
  version: '2016-05-10'
  x-release: v4
  title: Amazon CloudDirectory
  description: '<fullname>Amazon Cloud Directory</fullname> <p>Amazon Cloud Directory is a component of the AWS Directory Service that simplifies the development and management of cloud-scale web, mobile, and IoT applications. This guide describes the Cloud Directory operations that you can call programmatically and includes detailed information on data types and errors. For information about AWS Directory Services features, see <a href="https://aws.amazon.com/directoryservice/">AWS Directory Service</a> and the <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/what_is.html">AWS Directory Service Administration Guide</a>.</p>'
  x-logo:
    url: 'https://media.amazonwebservices.com/blog/2007/big_pbaws_logo_300px.jpg'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: clouddirectory
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/clouddirectory-2016-05-10.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-direct: true
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://aws.amazon.com/clouddirectory/'
security:
  - hmac: []
paths:
  /amazonclouddirectory/2017-01-11/object/facets:
    put:
      operationId: AddFacetToObject
      description: Adds a new <a>Facet</a> to an object.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddFacetToObjectResponse'
        '480':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '481':
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
        '482':
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: DirectoryNotEnabledException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryNotEnabledException'
        '487':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '488':
          description: FacetValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacetValidationException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddFacetToObjectRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/schema/apply:
    put:
      operationId: ApplySchema
      description: Copies the input published schema into the <a>Directory</a> with the same name and version as that of the published schema .
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplySchemaResponse'
        '480':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '481':
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
        '482':
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '487':
          description: InvalidAttachmentException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAttachmentException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplySchemaRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/object/attach:
    put:
      operationId: AttachObject
      description: '<p>Attaches an existing object to another object. An object can be accessed in two ways:</p> <ol> <li> <p>Using the path</p> </li> <li> <p>Using <code>ObjectIdentifier</code> </p> </li> </ol>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachObjectResponse'
        '480':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '481':
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
        '482':
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: DirectoryNotEnabledException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryNotEnabledException'
        '487':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '488':
          description: LinkNameAlreadyInUseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkNameAlreadyInUseException'
        '489':
          description: InvalidAttachmentException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAttachmentException'
        '490':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '491':
          description: FacetValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacetValidationException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttachObjectRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/policy/attach:
    put:
      operationId: AttachPolicy
      description: Attaches a policy object to a regular object. An object can have a limited number of attached policies.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachPolicyResponse'
        '480':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '481':
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
        '482':
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: DirectoryNotEnabledException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryNotEnabledException'
        '487':
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
        '488':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '489':
          description: NotPolicyException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotPolicyException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttachPolicyRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/index/attach:
    put:
      operationId: AttachToIndex
      description: Attaches the specified object to the specified index.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachToIndexResponse'
        '480':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '481':
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
        '482':
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: DirectoryNotEnabledException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryNotEnabledException'
        '487':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '488':
          description: LinkNameAlreadyInUseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkNameAlreadyInUseException'
        '489':
          description: IndexedAttributeMissingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IndexedAttributeMissingException'
        '490':
          description: NotIndexException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotIndexException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttachToIndexRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/typedlink/attach:
    put:
      operationId: AttachTypedLink
      description: 'Attaches a typed link to a specified source and target object. For more information, see <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/objectsandlinks.html#typedlink">Typed link</a>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachTypedLinkResponse'
        '480':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '481':
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
        '482':
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '487':
          description: InvalidAttachmentException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAttachmentException'
        '488':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '489':
          description: FacetValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacetValidationException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttachTypedLinkRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/batchread:
    post:
      operationId: BatchRead
      description: 'Performs all the read operations in a batch. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchReadResponse'
        '480':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '481':
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
        '482':
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: DirectoryNotEnabledException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryNotEnabledException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchReadRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/batchwrite:
    put:
      operationId: BatchWrite
      description: Performs all the write operations in a batch. Either all the operations succeed or none. Batch writes supports only object-related operations.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchWriteResponse'
        '480':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '481':
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
        '482':
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: DirectoryNotEnabledException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryNotEnabledException'
        '487':
          description: BatchWriteException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchWriteException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchWriteRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/directory/create:
    put:
      operationId: CreateDirectory
      description: Creates a <a>Directory</a> by copying the published schema into the directory. A directory cannot be created without a schema.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDirectoryResponse'
        '480':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '481':
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
        '482':
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: DirectoryAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryAlreadyExistsException'
        '487':
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
        '488':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDirectoryRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/facet/create:
    put:
      operationId: CreateFacet
      description: Creates a new <a>Facet</a> in a schema. Facet creation is allowed only in development or applied schemas.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateFacetResponse'
        '480':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '481':
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
        '482':
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '487':
          description: FacetAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacetAlreadyExistsException'
        '488':
          description: InvalidRuleException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRuleException'
        '489':
          description: FacetValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacetValidationException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFacetRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/index:
    put:
      operationId: CreateIndex
      description: 'Creates an index object. See <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/cd_indexing.html">Indexing</a> for more information.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateIndexResponse'
        '480':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '481':
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
        '482':
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: DirectoryNotEnabledException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryNotEnabledException'
        '487':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '488':
          description: FacetValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacetValidationException'
        '489':
          description: LinkNameAlreadyInUseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkNameAlreadyInUseException'
        '490':
          description: UnsupportedIndexTypeException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedIndexTypeException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateIndexRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/object:
    put:
      operationId: CreateObject
      description: 'Creates an object in a <a>Directory</a>. Additionally attaches the object to a parent, if a parent reference and <code>LinkName</code> is specified. An object is simply a collection of <a>Facet</a> attributes. You can also use this API call to create a policy object, if the facet from which you create the object is a policy facet. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateObjectResponse'
        '480':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '481':
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
        '482':
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: DirectoryNotEnabledException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryNotEnabledException'
        '487':
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
        '488':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '489':
          description: FacetValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacetValidationException'
        '490':
          description: LinkNameAlreadyInUseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkNameAlreadyInUseException'
        '491':
          description: UnsupportedIndexTypeException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedIndexTypeException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateObjectRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/schema/create:
    put:
      operationId: CreateSchema
      description: '<p>Creates a new schema in a development state. A schema can exist in three phases:</p> <ul> <li> <p> <i>Development:</i> This is a mutable phase of the schema. All new schemas are in the development phase. Once the schema is finalized, it can be published.</p> </li> <li> <p> <i>Published:</i> Published schemas are immutable and have a version associated with them.</p> </li> <li> <p> <i>Applied:</i> Applied schemas are mutable in a way that allows you to add new schema facets. You can also add new, nonrequired attributes to existing schema facets. You can apply only published schemas to directories. </p> </li> </ul>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateSchemaResponse'
        '480':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '481':
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
        '482':
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: SchemaAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchemaAlreadyExistsException'
        '487':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSchemaRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/typedlink/facet/create:
    put:
      operationId: CreateTypedLinkFacet
      description: 'Creates a <a>TypedLinkFacet</a>. For more information, see <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/objectsandlinks.html#typedlink">Typed link</a>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateTypedLinkFacetResponse'
        '480':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '481':
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
        '482':
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '487':
          description: FacetAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacetAlreadyExistsException'
        '488':
          description: InvalidRuleException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRuleException'
        '489':
          description: FacetValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacetValidationException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTypedLinkFacetRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/directory:
    put:
      operationId: DeleteDirectory
      description: Deletes a directory. Only disabled directories can be deleted. A deleted directory cannot be undone. Exercise extreme caution when deleting directories.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteDirectoryResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: DirectoryNotDisabledException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryNotDisabledException'
        '482':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: DirectoryDeletedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryDeletedException'
        '487':
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
        '488':
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteDirectoryRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/facet/delete:
    put:
      operationId: DeleteFacet
      description: Deletes a given <a>Facet</a>. All attributes and <a>Rule</a>s that are associated with the facet will be deleted. Only development schema facets are allowed deletion.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteFacetResponse'
        '480':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '481':
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
        '482':
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '487':
          description: FacetNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacetNotFoundException'
        '488':
          description: FacetInUseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacetInUseException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteFacetRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/object/delete:
    put:
      operationId: DeleteObject
      description: Deletes an object and its associated attributes. Only objects with no children and no parents can be deleted.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteObjectResponse'
        '480':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '481':
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
        '482':
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: DirectoryNotEnabledException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryNotEnabledException'
        '487':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '488':
          description: ObjectNotDetachedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectNotDetachedException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteObjectRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/schema:
    put:
      operationId: DeleteSchema
      description: 'Deletes a given schema. Schemas in a development and published state can only be deleted. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteSchemaResponse'
        '480':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '481':
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
        '482':
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '487':
          description: StillContainsLinksException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StillContainsLinksException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteSchemaRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/typedlink/facet/delete:
    put:
      operationId: DeleteTypedLinkFacet
      description: 'Deletes a <a>TypedLinkFacet</a>. For more information, see <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/objectsandlinks.html#typedlink">Typed link</a>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteTypedLinkFacetResponse'
        '480':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '481':
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
        '482':
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '487':
          description: FacetNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacetNotFoundException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteTypedLinkFacetRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/index/detach:
    put:
      operationId: DetachFromIndex
      description: Detaches the specified object from the specified index.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetachFromIndexResponse'
        '480':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '481':
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
        '482':
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: DirectoryNotEnabledException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryNotEnabledException'
        '487':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '488':
          description: ObjectAlreadyDetachedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectAlreadyDetachedException'
        '489':
          description: NotIndexException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotIndexException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DetachFromIndexRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/object/detach:
    put:
      operationId: DetachObject
      description: Detaches a given object from the parent object. The object that is to be detached from the parent is specified by the link name.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetachObjectResponse'
        '480':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '481':
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
        '482':
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: DirectoryNotEnabledException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryNotEnabledException'
        '487':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DetachObjectRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/policy/detach:
    put:
      operationId: DetachPolicy
      description: Detaches a policy from an object.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetachPolicyResponse'
        '480':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '481':
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
        '482':
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: DirectoryNotEnabledException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryNotEnabledException'
        '487':
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
        '488':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '489':
          description: NotPolicyException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotPolicyException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DetachPolicyRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/typedlink/detach:
    put:
      operationId: DetachTypedLink
      description: 'Detaches a typed link from a specified source and target object. For more information, see <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/objectsandlinks.html#typedlink">Typed link</a>.'
      responses:
        '200':
          description: Success
        '480':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '481':
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
        '482':
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '487':
          description: FacetValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacetValidationException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DetachTypedLinkRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/directory/disable:
    put:
      operationId: DisableDirectory
      description: Disables the specified directory. Disabled directories cannot be read or written to. Only enabled directories can be disabled. Disabled directories may be reenabled.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisableDirectoryResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: DirectoryDeletedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryDeletedException'
        '482':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
        '487':
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisableDirectoryRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/directory/enable:
    put:
      operationId: EnableDirectory
      description: 'Enables the specified directory. Only disabled directories can be enabled. Once enabled, the directory can then be read and written to.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnableDirectoryResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: DirectoryDeletedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryDeletedException'
        '482':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
        '487':
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnableDirectoryRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/directory/get:
    post:
      operationId: GetDirectory
      description: Retrieves metadata about a directory.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDirectoryResponse'
        '480':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '481':
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
        '482':
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetDirectoryRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/facet:
    put:
      operationId: UpdateFacet
      description: '<p>Does the following:</p> <ol> <li> <p>Adds new <code>Attributes</code>, <code>Rules</code>, or <code>ObjectTypes</code>.</p> </li> <li> <p>Updates existing <code>Attributes</code>, <code>Rules</code>, or <code>ObjectTypes</code>.</p> </li> <li> <p>Deletes existing <code>Attributes</code>, <code>Rules</code>, or <code>ObjectTypes</code>.</p> </li> </ol>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateFacetResponse'
        '480':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '481':
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
        '482':
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: InvalidFacetUpdateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidFacetUpdateException'
        '487':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '488':
          description: FacetNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacetNotFoundException'
        '489':
          description: InvalidRuleException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRuleException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateFacetRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/object/information:
    post:
      operationId: GetObjectInformation
      description: Retrieves metadata about an object.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetObjectInformationResponse'
        '480':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '481':
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
        '482':
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: DirectoryNotEnabledException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryNotEnabledException'
        '487':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetObjectInformationRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/schema/json:
    put:
      operationId: PutSchemaFromJson
      description: 'Allows a schema to be updated using JSON upload. Only available for development schemas. See <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/cd_schemas.html#jsonformat">JSON Schema Format</a> for more information.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutSchemaFromJsonResponse'
        '480':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '481':
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
        '482':
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: InvalidSchemaDocException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidSchemaDocException'
        '487':
          description: InvalidRuleException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRuleException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutSchemaFromJsonRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/typedlink/facet/get:
    post:
      operationId: GetTypedLinkFacetInformation
      description: 'Returns the identity attribute order for a specific <a>TypedLinkFacet</a>. For more information, see <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/objectsandlinks.html#typedlink">Typed link</a>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTypedLinkFacetInformationResponse'
        '480':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '481':
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
        '482':
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '487':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
        '488':
          description: FacetNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacetNotFoundException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetTypedLinkFacetInformationRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/schema/applied:
    post:
      operationId: ListAppliedSchemaArns
      description: Lists schemas applied to a directory.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAppliedSchemaArnsResponse'
        '480':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '481':
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
        '482':
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '487':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListAppliedSchemaArnsRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/object/indices:
    post:
      operationId: ListAttachedIndices
      description: Lists indices attached to an object.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAttachedIndicesResponse'
        '480':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '481':
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
        '482':
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: DirectoryNotEnabledException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryNotEnabledException'
        '487':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListAttachedIndicesRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/schema/development:
    post:
      operationId: ListDevelopmentSchemaArns
      description: Retrieves each Amazon Resource Name (ARN) of schemas in the development state.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDevelopmentSchemaArnsResponse'
        '480':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '481':
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
        '482':
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '487':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListDevelopmentSchemaArnsRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/directory/list:
    post:
      operationId: ListDirectories
      description: Lists directories created within an account.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDirectoriesResponse'
        '480':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '481':
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
        '482':
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListDirectoriesRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/facet/attributes:
    post:
      operationId: ListFacetAttributes
      description: Retrieves attributes attached to the facet.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFacetAttributesResponse'
        '480':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '481':
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
        '482':
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '487':
          description: FacetNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacetNotFoundException'
        '488':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListFacetAttributesRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/facet/list:
    post:
      operationId: ListFacetNames
      description: Retrieves the names of facets that exist in a schema.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFacetNamesResponse'
        '480':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '481':
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
        '482':
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '487':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListFacetNamesRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/typedlink/incoming:
    post:
      operationId: ListIncomingTypedLinks
      description: 'Returns a paginated list of all the incoming <a>TypedLinkSpecifier</a> information for an object. It also supports filtering by typed link facet and identity attributes. For more information, see <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/objectsandlinks.html#typedlink">Typed link</a>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListIncomingTypedLinksResponse'
        '480':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '481':
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
        '482':
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '487':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
        '488':
          description: FacetValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacetValidationException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListIncomingTypedLinksRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/index/targets:
    post:
      operationId: ListIndex
      description: Lists objects attached to the specified index.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListIndexResponse'
        '480':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '481':
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
        '482':
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: DirectoryNotEnabledException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryNotEnabledException'
        '487':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '488':
          description: NotIndexException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotIndexException'
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListIndexRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/object/attributes:
    post:
      operationId: ListObjectAttributes
      description: 'Lists all attributes that are associated with an object. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListObjectAttributesResponse'
        '480':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '481':
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
        '482':
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: DirectoryNotEnabledException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryNotEnabledException'
        '487':
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
        '488':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '489':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
        '490':
          description: FacetValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacetValidationException'
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListObjectAttributesRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/object/children:
    post:
      operationId: ListObjectChildren
      description: Returns a paginated list of child objects that are associated with a given object.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListObjectChildrenResponse'
        '480':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '481':
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
        '482':
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: DirectoryNotEnabledException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryNotEnabledException'
        '487':
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
        '488':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '489':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
        '490':
          description: NotNodeException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotNodeException'
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListObjectChildrenRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/object/parentpaths:
    post:
      operationId: ListObjectParentPaths
      description: '<p>Retrieves all available parent paths for any object type such as node, leaf node, policy node, and index node objects. For more information about objects, see <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/cd_key_concepts.html#dirstructure">Directory Structure</a>.</p> <p>Use this API to evaluate all parents for an object. The call returns all objects from the root of the directory up to the requested object. The API returns the number of paths based on user-defined <code>MaxResults</code>, in case there are multiple paths to the parent. The order of the paths and nodes returned is consistent among multiple API calls unless the objects are deleted or moved. Paths not leading to the directory root are ignored from the target object.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListObjectParentPathsResponse'
        '480':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '481':
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
        '482':
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: DirectoryNotEnabledException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryNotEnabledException'
        '487':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
        '488':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListObjectParentPathsRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/object/parent:
    post:
      operationId: ListObjectParents
      description: Lists parent objects that are associated with a given object in pagination fashion.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListObjectParentsResponse'
        '480':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '481':
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
        '482':
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: DirectoryNotEnabledException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryNotEnabledException'
        '487':
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
        '488':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '489':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
        '490':
          description: CannotListParentOfRootException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CannotListParentOfRootException'
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListObjectParentsRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/object/policy:
    post:
      operationId: ListObjectPolicies
      description: Returns policies attached to an object in pagination fashion.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListObjectPoliciesResponse'
        '480':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '481':
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
        '482':
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: DirectoryNotEnabledException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryNotEnabledException'
        '487':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '488':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListObjectPoliciesRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/typedlink/outgoing:
    post:
      operationId: ListOutgoingTypedLinks
      description: 'Returns a paginated list of all the outgoing <a>TypedLinkSpecifier</a> information for an object. It also supports filtering by typed link facet and identity attributes. For more information, see <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/objectsandlinks.html#typedlink">Typed link</a>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOutgoingTypedLinksResponse'
        '480':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '481':
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
        '482':
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '487':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
        '488':
          description: FacetValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacetValidationException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListOutgoingTypedLinksRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/policy/attachment:
    post:
      operationId: ListPolicyAttachments
      description: Returns all of the <code>ObjectIdentifiers</code> to which a given policy is attached.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPolicyAttachmentsResponse'
        '480':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '481':
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
        '482':
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: DirectoryNotEnabledException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryNotEnabledException'
        '487':
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
        '488':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
        '489':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '490':
          description: NotPolicyException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotPolicyException'
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListPolicyAttachmentsRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/schema/published:
    post:
      operationId: ListPublishedSchemaArns
      description: Retrieves each published schema Amazon Resource Name (ARN).
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPublishedSchemaArnsResponse'
        '480':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '481':
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
        '482':
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '487':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListPublishedSchemaArnsRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/tags:
    post:
      operationId: ListTagsForResource
      description: Returns tags for a resource. Tagging is currently supported only for directories with a limit of 50 tags per directory. All 50 tags are returned for a given directory with this API call.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResponse'
        '480':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '481':
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
        '482':
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '487':
          description: InvalidTaggingRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidTaggingRequestException'
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListTagsForResourceRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/typedlink/facet/attributes:
    post:
      operationId: ListTypedLinkFacetAttributes
      description: 'Returns a paginated list of all attribute definitions for a particular <a>TypedLinkFacet</a>. For more information, see <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/objectsandlinks.html#typedlink">Typed link</a>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTypedLinkFacetAttributesResponse'
        '480':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '481':
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
        '482':
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '487':
          description: FacetNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacetNotFoundException'
        '488':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListTypedLinkFacetAttributesRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/typedlink/facet/list:
    post:
      operationId: ListTypedLinkFacetNames
      description: 'Returns a paginated list of <code>TypedLink</code> facet names for a particular schema. For more information, see <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/objectsandlinks.html#typedlink">Typed link</a>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTypedLinkFacetNamesResponse'
        '480':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '481':
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
        '482':
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '487':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListTypedLinkFacetNamesRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/policy/lookup:
    post:
      operationId: LookupPolicy
      description: 'Lists all policies from the root of the <a>Directory</a> to the object specified. If there are no policies present, an empty list is returned. If policies are present, and if some objects don''t have the policies attached, it returns the <code>ObjectIdentifier</code> for such objects. If policies are present, it returns <code>ObjectIdentifier</code>, <code>policyId</code>, and <code>policyType</code>. Paths that don''t lead to the root from the target object are ignored. For more information, see <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/cd_key_concepts.html#policies">Policies</a>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LookupPolicyResponse'
        '480':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '481':
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
        '482':
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: DirectoryNotEnabledException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryNotEnabledException'
        '487':
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
        '488':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
        '489':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LookupPolicyRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/schema/publish:
    put:
      operationId: PublishSchema
      description: 'Publishes a development schema with a version. If description and attributes are specified, <code>PublishSchema</code> overrides the development schema description and attributes. If not, the development schema description and attributes are used.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublishSchemaResponse'
        '480':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '481':
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
        '482':
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '487':
          description: SchemaAlreadyPublishedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchemaAlreadyPublishedException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PublishSchemaRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/object/facets/delete:
    put:
      operationId: RemoveFacetFromObject
      description: Removes the specified facet from the specified object.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoveFacetFromObjectResponse'
        '480':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '481':
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
        '482':
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: DirectoryNotEnabledException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryNotEnabledException'
        '487':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '488':
          description: FacetValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacetValidationException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoveFacetFromObjectRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/tags/add:
    put:
      operationId: TagResource
      description: An API operation for adding tags to a resource.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResourceResponse'
        '480':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '481':
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
        '482':
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '487':
          description: InvalidTaggingRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidTaggingRequestException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagResourceRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/tags/remove:
    put:
      operationId: UntagResource
      description: An API operation for removing tags from a resource.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UntagResourceResponse'
        '480':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '481':
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
        '482':
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '487':
          description: InvalidTaggingRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidTaggingRequestException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UntagResourceRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/object/update:
    put:
      operationId: UpdateObjectAttributes
      description: Updates a given object's attributes.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateObjectAttributesResponse'
        '480':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '481':
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
        '482':
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: DirectoryNotEnabledException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryNotEnabledException'
        '487':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '488':
          description: FacetValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacetValidationException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateObjectAttributesRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/schema/update:
    put:
      operationId: UpdateSchema
      description: Updates the schema name with a new name. Only development schema names can be updated.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateSchemaResponse'
        '480':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '481':
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
        '482':
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSchemaRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/typedlink/facet:
    put:
      operationId: UpdateTypedLinkFacet
      description: 'Updates a <a>TypedLinkFacet</a>. For more information, see <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/objectsandlinks.html#typedlink">Typed link</a>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateTypedLinkFacetResponse'
        '480':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '481':
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArnException'
        '482':
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
        '483':
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '484':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '485':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '486':
          description: FacetValidationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacetValidationException'
        '487':
          description: InvalidFacetUpdateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidFacetUpdateException'
        '488':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '489':
          description: FacetNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacetNotFoundException'
        '490':
          description: InvalidRuleException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRuleException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTypedLinkFacetRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
components:
  schemas:
    AccessDeniedException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: Access denied. Check your permissions.
    AddFacetToObjectRequest:
      type: object
      required:
        - SchemaFacet
        - ObjectReference
      properties:
        SchemaFacet:
          $ref: '#/components/schemas/SchemaFacet'
        ObjectAttributeList:
          $ref: '#/components/schemas/AttributeKeyAndValueList'
        ObjectReference:
          $ref: '#/components/schemas/ObjectReference'
    AddFacetToObjectResponse:
      type: object
      properties: {}
    ApplySchemaRequest:
      type: object
      required:
        - PublishedSchemaArn
      properties:
        PublishedSchemaArn:
          $ref: '#/components/schemas/Arn'
    ApplySchemaResponse:
      type: object
      properties:
        AppliedSchemaArn:
          $ref: '#/components/schemas/Arn'
        DirectoryArn:
          $ref: '#/components/schemas/Arn'
    Arn:
      type: string
    Arns:
      type: array
      items:
        $ref: '#/components/schemas/Arn'
    AttachObjectRequest:
      type: object
      required:
        - ParentReference
        - ChildReference
        - LinkName
      properties:
        ParentReference:
          $ref: '#/components/schemas/ObjectReference'
        ChildReference:
          $ref: '#/components/schemas/ObjectReference'
        LinkName:
          $ref: '#/components/schemas/LinkName'
    AttachObjectResponse:
      type: object
      properties:
        AttachedObjectIdentifier:
          $ref: '#/components/schemas/ObjectIdentifier'
    AttachPolicyRequest:
      type: object
      required:
        - PolicyReference
        - ObjectReference
      properties:
        PolicyReference:
          $ref: '#/components/schemas/ObjectReference'
        ObjectReference:
          $ref: '#/components/schemas/ObjectReference'
    AttachPolicyResponse:
      type: object
      properties: {}
    AttachToIndexRequest:
      type: object
      required:
        - IndexReference
        - TargetReference
      properties:
        IndexReference:
          $ref: '#/components/schemas/ObjectReference'
        TargetReference:
          $ref: '#/components/schemas/ObjectReference'
    AttachToIndexResponse:
      type: object
      properties:
        AttachedObjectIdentifier:
          $ref: '#/components/schemas/ObjectIdentifier'
    AttachTypedLinkRequest:
      type: object
      required:
        - SourceObjectReference
        - TargetObjectReference
        - TypedLinkFacet
        - Attributes
      properties:
        SourceObjectReference:
          $ref: '#/components/schemas/ObjectReference'
        TargetObjectReference:
          $ref: '#/components/schemas/ObjectReference'
        TypedLinkFacet:
          $ref: '#/components/schemas/TypedLinkSchemaAndFacetName'
        Attributes:
          $ref: '#/components/schemas/AttributeNameAndValueList'
    AttachTypedLinkResponse:
      type: object
      properties:
        TypedLinkSpecifier:
          $ref: '#/components/schemas/TypedLinkSpecifier'
    AttributeKey:
      type: object
      required:
        - SchemaArn
        - FacetName
        - Name
      properties:
        SchemaArn:
          $ref: '#/components/schemas/Arn'
        FacetName:
          $ref: '#/components/schemas/FacetName'
        Name:
          $ref: '#/components/schemas/AttributeName'
      description: A unique identifier for an attribute.
    AttributeKeyAndValue:
      type: object
      required:
        - Key
        - Value
      properties:
        Key:
          $ref: '#/components/schemas/AttributeKey'
        Value:
          $ref: '#/components/schemas/TypedAttributeValue'
      description: The combination of an attribute key and an attribute value.
    AttributeKeyAndValueList:
      type: array
      items:
        $ref: '#/components/schemas/AttributeKeyAndValue'
    AttributeKeyList:
      type: array
      items:
        $ref: '#/components/schemas/AttributeKey'
    AttributeName:
      type: string
      pattern: '^[a-zA-Z0-9._-]*$'
      minLength: 1
      maxLength: 64
    AttributeNameAndValue:
      type: object
      required:
        - AttributeName
        - Value
      properties:
        AttributeName:
          $ref: '#/components/schemas/AttributeName'
        Value:
          $ref: '#/components/schemas/TypedAttributeValue'
      description: Identifies the attribute name and value for a typed link.
    AttributeNameAndValueList:
      type: array
      items:
        $ref: '#/components/schemas/AttributeNameAndValue'
    AttributeNameList:
      type: array
      items:
        $ref: '#/components/schemas/AttributeName'
    BatchAddFacetToObject:
      type: object
      required:
        - SchemaFacet
        - ObjectAttributeList
        - ObjectReference
      properties:
        SchemaFacet:
          $ref: '#/components/schemas/SchemaFacet'
        ObjectAttributeList:
          $ref: '#/components/schemas/AttributeKeyAndValueList'
        ObjectReference:
          $ref: '#/components/schemas/ObjectReference'
      description: Represents the output of a batch add facet to object operation.
    BatchAddFacetToObjectResponse:
      type: object
      properties: {}
      description: The result of a batch add facet to object operation.
    BatchAttachObject:
      type: object
      required:
        - ParentReference
        - ChildReference
        - LinkName
      properties:
        ParentReference:
          $ref: '#/components/schemas/ObjectReference'
        ChildReference:
          $ref: '#/components/schemas/ObjectReference'
        LinkName:
          $ref: '#/components/schemas/LinkName'
      description: Represents the output of an <code>AttachObject</code> operation.
    BatchAttachObjectResponse:
      type: object
      properties:
        attachedObjectIdentifier:
          $ref: '#/components/schemas/ObjectIdentifier'
      description: Represents the output batch <code>AttachObject</code> response operation.
    BatchCreateObject:
      type: object
      required:
        - SchemaFacet
        - ObjectAttributeList
        - ParentReference
        - LinkName
        - BatchReferenceName
      properties:
        SchemaFacet:
          $ref: '#/components/schemas/SchemaFacetList'
        ObjectAttributeList:
          $ref: '#/components/schemas/AttributeKeyAndValueList'
        ParentReference:
          $ref: '#/components/schemas/ObjectReference'
        LinkName:
          $ref: '#/components/schemas/LinkName'
        BatchReferenceName:
          $ref: '#/components/schemas/BatchReferenceName'
      description: Represents the output of a <code>CreateObject</code> operation.
    BatchCreateObjectResponse:
      type: object
      properties:
        ObjectIdentifier:
          $ref: '#/components/schemas/ObjectIdentifier'
      description: Represents the output of a <code>CreateObject</code> response operation.
    BatchDeleteObject:
      type: object
      required:
        - ObjectReference
      properties:
        ObjectReference:
          $ref: '#/components/schemas/ObjectReference'
      description: Represents the output of a <code>DeleteObject</code> operation.
    BatchDeleteObjectResponse:
      type: object
      properties: {}
      description: Represents the output of a <code>DeleteObject</code> response operation.
    BatchDetachObject:
      type: object
      required:
        - ParentReference
        - LinkName
        - BatchReferenceName
      properties:
        ParentReference:
          $ref: '#/components/schemas/ObjectReference'
        LinkName:
          $ref: '#/components/schemas/LinkName'
        BatchReferenceName:
          $ref: '#/components/schemas/BatchReferenceName'
      description: Represents the output of a <code>DetachObject</code> operation.
    BatchDetachObjectResponse:
      type: object
      properties:
        detachedObjectIdentifier:
          $ref: '#/components/schemas/ObjectIdentifier'
      description: Represents the output of a <code>DetachObject</code> response operation.
    BatchListObjectAttributes:
      type: object
      required:
        - ObjectReference
      properties:
        ObjectReference:
          $ref: '#/components/schemas/ObjectReference'
        NextToken:
          $ref: '#/components/schemas/NextToken'
        MaxResults:
          $ref: '#/components/schemas/NumberResults'
        FacetFilter:
          $ref: '#/components/schemas/SchemaFacet'
      description: Represents the output of a <code>ListObjectAttributes</code> operation.
    BatchListObjectAttributesResponse:
      type: object
      properties:
        Attributes:
          $ref: '#/components/schemas/AttributeKeyAndValueList'
        NextToken:
          $ref: '#/components/schemas/NextToken'
      description: Represents the output of a <code>ListObjectAttributes</code> response operation.
    BatchListObjectChildren:
      type: object
      required:
        - ObjectReference
      properties:
        ObjectReference:
          $ref: '#/components/schemas/ObjectReference'
        NextToken:
          $ref: '#/components/schemas/NextToken'
        MaxResults:
          $ref: '#/components/schemas/NumberResults'
      description: Represents the output of a <code>ListObjectChildren</code> operation.
    BatchListObjectChildrenResponse:
      type: object
      properties:
        Children:
          $ref: '#/components/schemas/LinkNameToObjectIdentifierMap'
        NextToken:
          $ref: '#/components/schemas/NextToken'
      description: Represents the output of a <code>ListObjectChildren</code> response operation.
    BatchOperationIndex:
      type: integer
    BatchReadException:
      type: object
      properties:
        Type:
          $ref: '#/components/schemas/BatchReadExceptionType'
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: 'The batch read exception structure, which contains the exception type and message.'
    BatchReadExceptionType:
      type: string
      enum:
        - ValidationException
        - InvalidArnException
        - ResourceNotFoundException
        - InvalidNextTokenException
        - AccessDeniedException
        - NotNodeException
    BatchReadOperation:
      type: object
      properties:
        ListObjectAttributes:
          $ref: '#/components/schemas/BatchListObjectAttributes'
        ListObjectChildren:
          $ref: '#/components/schemas/BatchListObjectChildren'
      description: Represents the output of a <code>BatchRead</code> operation.
    BatchReadOperationList:
      type: array
      items:
        $ref: '#/components/schemas/BatchReadOperation'
    BatchReadOperationResponse:
      type: object
      properties:
        SuccessfulResponse:
          $ref: '#/components/schemas/BatchReadSuccessfulResponse'
        ExceptionResponse:
          $ref: '#/components/schemas/BatchReadException'
      description: Represents the output of a <code>BatchRead</code> response operation.
    BatchReadOperationResponseList:
      type: array
      items:
        $ref: '#/components/schemas/BatchReadOperationResponse'
    BatchReadRequest:
      type: object
      required:
        - Operations
      properties:
        Operations:
          $ref: '#/components/schemas/BatchReadOperationList'
    BatchReadResponse:
      type: object
      properties:
        Responses:
          $ref: '#/components/schemas/BatchReadOperationResponseList'
    BatchReadSuccessfulResponse:
      type: object
      properties:
        ListObjectAttributes:
          $ref: '#/components/schemas/BatchListObjectAttributesResponse'
        ListObjectChildren:
          $ref: '#/components/schemas/BatchListObjectChildrenResponse'
      description: Represents the output of a <code>BatchRead</code> success response operation.
    BatchReferenceName:
      type: string
    BatchRemoveFacetFromObject:
      type: object
      required:
        - SchemaFacet
        - ObjectReference
      properties:
        SchemaFacet:
          $ref: '#/components/schemas/SchemaFacet'
        ObjectReference:
          $ref: '#/components/schemas/ObjectReference'
      description: A batch operation to remove a facet from an object.
    BatchRemoveFacetFromObjectResponse:
      type: object
      properties: {}
      description: An empty result that represents success.
    BatchUpdateObjectAttributes:
      type: object
      required:
        - ObjectReference
        - AttributeUpdates
      properties:
        ObjectReference:
          $ref: '#/components/schemas/ObjectReference'
        AttributeUpdates:
          $ref: '#/components/schemas/ObjectAttributeUpdateList'
      description: 'Represents the output of a <code>BatchUpdate</code> operation. '
    BatchUpdateObjectAttributesResponse:
      type: object
      properties:
        ObjectIdentifier:
          $ref: '#/components/schemas/ObjectIdentifier'
      description: Represents the output of a <code>BatchUpdate</code> response operation.
    BatchWriteException:
      type: object
      properties:
        Index:
          $ref: '#/components/schemas/BatchOperationIndex'
        Type:
          $ref: '#/components/schemas/BatchWriteExceptionType'
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: A <code>BatchWrite</code> exception has occurred.
    BatchWriteExceptionType:
      type: string
      enum:
        - InternalServiceException
        - ValidationException
        - InvalidArnException
        - LinkNameAlreadyInUseException
        - StillContainsLinksException
        - FacetValidationException
        - ObjectNotDetachedException
        - ResourceNotFoundException
        - AccessDeniedException
    BatchWriteOperation:
      type: object
      properties:
        CreateObject:
          $ref: '#/components/schemas/BatchCreateObject'
        AttachObject:
          $ref: '#/components/schemas/BatchAttachObject'
        DetachObject:
          $ref: '#/components/schemas/BatchDetachObject'
        UpdateObjectAttributes:
          $ref: '#/components/schemas/BatchUpdateObjectAttributes'
        DeleteObject:
          $ref: '#/components/schemas/BatchDeleteObject'
        AddFacetToObject:
          $ref: '#/components/schemas/BatchAddFacetToObject'
        RemoveFacetFromObject:
          $ref: '#/components/schemas/BatchRemoveFacetFromObject'
      description: 'Represents the output of a <code>BatchWrite</code> operation. '
    BatchWriteOperationList:
      type: array
      items:
        $ref: '#/components/schemas/BatchWriteOperation'
    BatchWriteOperationResponse:
      type: object
      properties:
        CreateObject:
          $ref: '#/components/schemas/BatchCreateObjectResponse'
        AttachObject:
          $ref: '#/components/schemas/BatchAttachObjectResponse'
        DetachObject:
          $ref: '#/components/schemas/BatchDetachObjectResponse'
        UpdateObjectAttributes:
          $ref: '#/components/schemas/BatchUpdateObjectAttributesResponse'
        DeleteObject:
          $ref: '#/components/schemas/BatchDeleteObjectResponse'
        AddFacetToObject:
          $ref: '#/components/schemas/BatchAddFacetToObjectResponse'
        RemoveFacetFromObject:
          $ref: '#/components/schemas/BatchRemoveFacetFromObjectResponse'
      description: Represents the output of a <code>BatchWrite</code> response operation.
    BatchWriteOperationResponseList:
      type: array
      items:
        $ref: '#/components/schemas/BatchWriteOperationResponse'
    BatchWriteRequest:
      type: object
      required:
        - Operations
      properties:
        Operations:
          $ref: '#/components/schemas/BatchWriteOperationList'
    BatchWriteResponse:
      type: object
      properties:
        Responses:
          $ref: '#/components/schemas/BatchWriteOperationResponseList'
    BinaryAttributeValue:
      type: string
    Bool:
      type: boolean
    BooleanAttributeValue:
      type: boolean
    CannotListParentOfRootException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: Cannot list the parents of a <a>Directory</a> root.
    ConsistencyLevel:
      type: string
      enum:
        - SERIALIZABLE
        - EVENTUAL
    CreateDirectoryRequest:
      type: object
      required:
        - Name
      properties:
        Name:
          $ref: '#/components/schemas/DirectoryName'
    CreateDirectoryResponse:
      type: object
      required:
        - DirectoryArn
        - Name
        - ObjectIdentifier
        - AppliedSchemaArn
      properties:
        DirectoryArn:
          $ref: '#/components/schemas/DirectoryArn'
        Name:
          $ref: '#/components/schemas/DirectoryName'
        ObjectIdentifier:
          $ref: '#/components/schemas/ObjectIdentifier'
        AppliedSchemaArn:
          $ref: '#/components/schemas/Arn'
    CreateFacetRequest:
      type: object
      required:
        - Name
        - ObjectType
      properties:
        Name:
          $ref: '#/components/schemas/FacetName'
        Attributes:
          $ref: '#/components/schemas/FacetAttributeList'
        ObjectType:
          $ref: '#/components/schemas/ObjectType'
    CreateFacetResponse:
      type: object
      properties: {}
    CreateIndexRequest:
      type: object
      required:
        - OrderedIndexedAttributeList
        - IsUnique
      properties:
        OrderedIndexedAttributeList:
          $ref: '#/components/schemas/AttributeKeyList'
        IsUnique:
          $ref: '#/components/schemas/Bool'
        ParentReference:
          $ref: '#/components/schemas/ObjectReference'
        LinkName:
          $ref: '#/components/schemas/LinkName'
    CreateIndexResponse:
      type: object
      properties:
        ObjectIdentifier:
          $ref: '#/components/schemas/ObjectIdentifier'
    CreateObjectRequest:
      type: object
      required:
        - SchemaFacets
      properties:
        SchemaFacets:
          $ref: '#/components/schemas/SchemaFacetList'
        ObjectAttributeList:
          $ref: '#/components/schemas/AttributeKeyAndValueList'
        ParentReference:
          $ref: '#/components/schemas/ObjectReference'
        LinkName:
          $ref: '#/components/schemas/LinkName'
    CreateObjectResponse:
      type: object
      properties:
        ObjectIdentifier:
          $ref: '#/components/schemas/ObjectIdentifier'
    CreateSchemaRequest:
      type: object
      required:
        - Name
      properties:
        Name:
          $ref: '#/components/schemas/SchemaName'
    CreateSchemaResponse:
      type: object
      properties:
        SchemaArn:
          $ref: '#/components/schemas/Arn'
    CreateTypedLinkFacetRequest:
      type: object
      required:
        - Facet
      properties:
        Facet:
          $ref: '#/components/schemas/TypedLinkFacet'
    CreateTypedLinkFacetResponse:
      type: object
      properties: {}
    Date:
      type: string
      format: date-time
    DatetimeAttributeValue:
      type: string
      format: date-time
    DeleteDirectoryRequest:
      type: object
      properties: {}
    DeleteDirectoryResponse:
      type: object
      required:
        - DirectoryArn
      properties:
        DirectoryArn:
          $ref: '#/components/schemas/Arn'
    DeleteFacetRequest:
      type: object
      required:
        - Name
      properties:
        Name:
          $ref: '#/components/schemas/FacetName'
    DeleteFacetResponse:
      type: object
      properties: {}
    DeleteObjectRequest:
      type: object
      required:
        - ObjectReference
      properties:
        ObjectReference:
          $ref: '#/components/schemas/ObjectReference'
    DeleteObjectResponse:
      type: object
      properties: {}
    DeleteSchemaRequest:
      type: object
      properties: {}
    DeleteSchemaResponse:
      type: object
      properties:
        SchemaArn:
          $ref: '#/components/schemas/Arn'
    DeleteTypedLinkFacetRequest:
      type: object
      required:
        - Name
      properties:
        Name:
          $ref: '#/components/schemas/TypedLinkName'
    DeleteTypedLinkFacetResponse:
      type: object
      properties: {}
    DetachFromIndexRequest:
      type: object
      required:
        - IndexReference
        - TargetReference
      properties:
        IndexReference:
          $ref: '#/components/schemas/ObjectReference'
        TargetReference:
          $ref: '#/components/schemas/ObjectReference'
    DetachFromIndexResponse:
      type: object
      properties:
        DetachedObjectIdentifier:
          $ref: '#/components/schemas/ObjectIdentifier'
    DetachObjectRequest:
      type: object
      required:
        - ParentReference
        - LinkName
      properties:
        ParentReference:
          $ref: '#/components/schemas/ObjectReference'
        LinkName:
          $ref: '#/components/schemas/LinkName'
    DetachObjectResponse:
      type: object
      properties:
        DetachedObjectIdentifier:
          $ref: '#/components/schemas/ObjectIdentifier'
    DetachPolicyRequest:
      type: object
      required:
        - PolicyReference
        - ObjectReference
      properties:
        PolicyReference:
          $ref: '#/components/schemas/ObjectReference'
        ObjectReference:
          $ref: '#/components/schemas/ObjectReference'
    DetachPolicyResponse:
      type: object
      properties: {}
    DetachTypedLinkRequest:
      type: object
      required:
        - TypedLinkSpecifier
      properties:
        TypedLinkSpecifier:
          $ref: '#/components/schemas/TypedLinkSpecifier'
    Directory:
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/DirectoryName'
        DirectoryArn:
          $ref: '#/components/schemas/DirectoryArn'
        State:
          $ref: '#/components/schemas/DirectoryState'
        CreationDateTime:
          $ref: '#/components/schemas/Date'
      description: Directory structure that includes the directory name and directory ARN.
    DirectoryAlreadyExistsException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: Indicates that a <a>Directory</a> could not be created due to a naming conflict. Choose a different name and try again.
    DirectoryArn:
      type: string
    DirectoryDeletedException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: 'A directory that has been deleted and to which access has been attempted. Note: The requested resource will eventually cease to exist.'
    DirectoryList:
      type: array
      items:
        $ref: '#/components/schemas/Directory'
    DirectoryName:
      type: string
      pattern: '^[a-zA-Z0-9._-]*$'
      minLength: 1
      maxLength: 64
    DirectoryNotDisabledException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: An operation can only operate on a disabled directory.
    DirectoryNotEnabledException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: An operation can only operate on a directory that is not enabled.
    DirectoryState:
      type: string
      enum:
        - ENABLED
        - DISABLED
        - DELETED
    DisableDirectoryRequest:
      type: object
      properties: {}
    DisableDirectoryResponse:
      type: object
      required:
        - DirectoryArn
      properties:
        DirectoryArn:
          $ref: '#/components/schemas/Arn'
    EnableDirectoryRequest:
      type: object
      properties: {}
    EnableDirectoryResponse:
      type: object
      required:
        - DirectoryArn
      properties:
        DirectoryArn:
          $ref: '#/components/schemas/Arn'
    ExceptionMessage:
      type: string
    Facet:
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/FacetName'
        ObjectType:
          $ref: '#/components/schemas/ObjectType'
      description: 'A structure that contains <code>Name</code>, <code>ARN</code>, <code>Attributes</code>, <a>Rule</a>s, and <code>ObjectTypes</code>.'
    FacetAlreadyExistsException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: A facet with the same name already exists.
    FacetAttribute:
      type: object
      required:
        - Name
      properties:
        Name:
          $ref: '#/components/schemas/AttributeName'
        AttributeDefinition:
          $ref: '#/components/schemas/FacetAttributeDefinition'
        AttributeReference:
          $ref: '#/components/schemas/FacetAttributeReference'
        RequiredBehavior:
          $ref: '#/components/schemas/RequiredAttributeBehavior'
      description: An attribute that is associated with the <a>Facet</a>.
    FacetAttributeDefinition:
      type: object
      required:
        - Type
      properties:
        Type:
          $ref: '#/components/schemas/FacetAttributeType'
        DefaultValue:
          $ref: '#/components/schemas/TypedAttributeValue'
        IsImmutable:
          $ref: '#/components/schemas/Bool'
        Rules:
          $ref: '#/components/schemas/RuleMap'
      description: 'A facet attribute definition. See <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/cd_advanced.html#attributereferences">Attribute References</a> for more information.'
    FacetAttributeList:
      type: array
      items:
        $ref: '#/components/schemas/FacetAttribute'
    FacetAttributeReference:
      type: object
      required:
        - TargetFacetName
        - TargetAttributeName
      properties:
        TargetFacetName:
          $ref: '#/components/schemas/FacetName'
        TargetAttributeName:
          $ref: '#/components/schemas/AttributeName'
      description: The facet attribute reference that specifies the attribute definition that contains the attribute facet name and attribute name.
    FacetAttributeType:
      type: string
      enum:
        - STRING
        - BINARY
        - BOOLEAN
        - NUMBER
        - DATETIME
    FacetAttributeUpdate:
      type: object
      properties:
        Attribute:
          $ref: '#/components/schemas/FacetAttribute'
        Action:
          $ref: '#/components/schemas/UpdateActionType'
      description: A structure that contains information used to update an attribute.
    FacetAttributeUpdateList:
      type: array
      items:
        $ref: '#/components/schemas/FacetAttributeUpdate'
    FacetInUseException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: Occurs when deleting a facet that contains an attribute that is a target to an attribute reference in a different facet.
    FacetName:
      type: string
      pattern: '^[a-zA-Z0-9._-]*$'
      minLength: 1
      maxLength: 64
    FacetNameList:
      type: array
      items:
        $ref: '#/components/schemas/FacetName'
    FacetNotFoundException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: The specified <a>Facet</a> could not be found.
    FacetValidationException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: The <a>Facet</a> that you provided was not well formed or could not be validated with the schema.
    GetDirectoryRequest:
      type: object
      properties: {}
    GetDirectoryResponse:
      type: object
      required:
        - Directory
      properties:
        Directory:
          $ref: '#/components/schemas/Directory'
    GetFacetRequest:
      type: object
      required:
        - Name
      properties:
        Name:
          $ref: '#/components/schemas/FacetName'
    GetFacetResponse:
      type: object
      properties:
        Facet:
          $ref: '#/components/schemas/Facet'
    GetObjectInformationRequest:
      type: object
      required:
        - ObjectReference
      properties:
        ObjectReference:
          $ref: '#/components/schemas/ObjectReference'
    GetObjectInformationResponse:
      type: object
      properties:
        SchemaFacets:
          $ref: '#/components/schemas/SchemaFacetList'
        ObjectIdentifier:
          $ref: '#/components/schemas/ObjectIdentifier'
    GetSchemaAsJsonRequest:
      type: object
      properties: {}
    GetSchemaAsJsonResponse:
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/SchemaName'
        Document:
          $ref: '#/components/schemas/SchemaJsonDocument'
    GetTypedLinkFacetInformationRequest:
      type: object
      required:
        - Name
      properties:
        Name:
          $ref: '#/components/schemas/TypedLinkName'
    GetTypedLinkFacetInformationResponse:
      type: object
      properties:
        IdentityAttributeOrder:
          $ref: '#/components/schemas/AttributeNameList'
    IndexAttachment:
      type: object
      properties:
        IndexedAttributes:
          $ref: '#/components/schemas/AttributeKeyAndValueList'
        ObjectIdentifier:
          $ref: '#/components/schemas/ObjectIdentifier'
      description: Represents an index and an attached object.
    IndexAttachmentList:
      type: array
      items:
        $ref: '#/components/schemas/IndexAttachment'
    IndexedAttributeMissingException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: An object has been attempted to be attached to an object that does not have the appropriate attribute value.
    InternalServiceException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: 'Indicates a problem that must be resolved by Amazon Web Services. This might be a transient error in which case you can retry your request until it succeeds. Otherwise, go to the <a href="http://status.aws.amazon.com/">AWS Service Health Dashboard</a> site to see if there are any operational issues with the service.'
    InvalidArnException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: Indicates that the provided ARN value is not valid.
    InvalidAttachmentException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: Indicates that an attempt to attach an object with the same link name or to apply a schema with the same name has occurred. Rename the link or the schema and then try again.
    InvalidFacetUpdateException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: An attempt to modify a <a>Facet</a> resulted in an invalid schema exception.
    InvalidNextTokenException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: Indicates that the <code>NextToken</code> value is not valid.
    InvalidRuleException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: Occurs when any of the rule parameter keys or values are invalid.
    InvalidSchemaDocException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: Indicates that the provided <code>SchemaDoc</code> value is not valid.
    InvalidTaggingRequestException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: Can occur for multiple reasons such as when you tag a resource that doesn’t exist or if you specify a higher number of tags for a resource than the allowed limit. Allowed limit is 50 tags per resource.
    LimitExceededException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: 'Indicates that limits are exceeded. See <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/limits.html">Limits</a> for more information.'
    LinkName:
      type: string
      pattern: '[^\/\[\]\(\):\{\}#@!?\s\\;]+'
      minLength: 1
      maxLength: 64
    LinkNameAlreadyInUseException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: Indicates that a link could not be created due to a naming conflict. Choose a different name and then try again.
    LinkNameToObjectIdentifierMap:
      type: array
      items:
        type: object
        properties:
          key:
            $ref: '#/components/schemas/LinkName'
          value:
            $ref: '#/components/schemas/ObjectIdentifier'
    ListAppliedSchemaArnsRequest:
      type: object
      required:
        - DirectoryArn
      properties:
        DirectoryArn:
          $ref: '#/components/schemas/Arn'
        NextToken:
          $ref: '#/components/schemas/NextToken'
        MaxResults:
          $ref: '#/components/schemas/NumberResults'
    ListAppliedSchemaArnsResponse:
      type: object
      properties:
        SchemaArns:
          $ref: '#/components/schemas/Arns'
        NextToken:
          $ref: '#/components/schemas/NextToken'
    ListAttachedIndicesRequest:
      type: object
      required:
        - TargetReference
      properties:
        TargetReference:
          $ref: '#/components/schemas/ObjectReference'
        NextToken:
          $ref: '#/components/schemas/NextToken'
        MaxResults:
          $ref: '#/components/schemas/NumberResults'
    ListAttachedIndicesResponse:
      type: object
      properties:
        IndexAttachments:
          $ref: '#/components/schemas/IndexAttachmentList'
        NextToken:
          $ref: '#/components/schemas/NextToken'
    ListDevelopmentSchemaArnsRequest:
      type: object
      properties:
        NextToken:
          $ref: '#/components/schemas/NextToken'
        MaxResults:
          $ref: '#/components/schemas/NumberResults'
    ListDevelopmentSchemaArnsResponse:
      type: object
      properties:
        SchemaArns:
          $ref: '#/components/schemas/Arns'
        NextToken:
          $ref: '#/components/schemas/NextToken'
    ListDirectoriesRequest:
      type: object
      properties:
        NextToken:
          $ref: '#/components/schemas/NextToken'
        MaxResults:
          $ref: '#/components/schemas/NumberResults'
        state:
          $ref: '#/components/schemas/DirectoryState'
    ListDirectoriesResponse:
      type: object
      required:
        - Directories
      properties:
        Directories:
          $ref: '#/components/schemas/DirectoryList'
        NextToken:
          $ref: '#/components/schemas/NextToken'
    ListFacetAttributesRequest:
      type: object
      required:
        - Name
      properties:
        Name:
          $ref: '#/components/schemas/FacetName'
        NextToken:
          $ref: '#/components/schemas/NextToken'
        MaxResults:
          $ref: '#/components/schemas/NumberResults'
    ListFacetAttributesResponse:
      type: object
      properties:
        Attributes:
          $ref: '#/components/schemas/FacetAttributeList'
        NextToken:
          $ref: '#/components/schemas/NextToken'
    ListFacetNamesRequest:
      type: object
      properties:
        NextToken:
          $ref: '#/components/schemas/NextToken'
        MaxResults:
          $ref: '#/components/schemas/NumberResults'
    ListFacetNamesResponse:
      type: object
      properties:
        FacetNames:
          $ref: '#/components/schemas/FacetNameList'
        NextToken:
          $ref: '#/components/schemas/NextToken'
    ListIncomingTypedLinksRequest:
      type: object
      required:
        - ObjectReference
      properties:
        ObjectReference:
          $ref: '#/components/schemas/ObjectReference'
        FilterAttributeRanges:
          $ref: '#/components/schemas/TypedLinkAttributeRangeList'
        FilterTypedLink:
          $ref: '#/components/schemas/TypedLinkSchemaAndFacetName'
        NextToken:
          $ref: '#/components/schemas/NextToken'
        MaxResults:
          $ref: '#/components/schemas/NumberResults'
        ConsistencyLevel:
          $ref: '#/components/schemas/ConsistencyLevel'
    ListIncomingTypedLinksResponse:
      type: object
      properties:
        LinkSpecifiers:
          $ref: '#/components/schemas/TypedLinkSpecifierList'
        NextToken:
          $ref: '#/components/schemas/NextToken'
    ListIndexRequest:
      type: object
      required:
        - IndexReference
      properties:
        RangesOnIndexedValues:
          $ref: '#/components/schemas/ObjectAttributeRangeList'
        IndexReference:
          $ref: '#/components/schemas/ObjectReference'
        MaxResults:
          $ref: '#/components/schemas/NumberResults'
        NextToken:
          $ref: '#/components/schemas/NextToken'
    ListIndexResponse:
      type: object
      properties:
        IndexAttachments:
          $ref: '#/components/schemas/IndexAttachmentList'
        NextToken:
          $ref: '#/components/schemas/NextToken'
    ListObjectAttributesRequest:
      type: object
      required:
        - ObjectReference
      properties:
        ObjectReference:
          $ref: '#/components/schemas/ObjectReference'
        NextToken:
          $ref: '#/components/schemas/NextToken'
        MaxResults:
          $ref: '#/components/schemas/NumberResults'
        FacetFilter:
          $ref: '#/components/schemas/SchemaFacet'
    ListObjectAttributesResponse:
      type: object
      properties:
        Attributes:
          $ref: '#/components/schemas/AttributeKeyAndValueList'
        NextToken:
          $ref: '#/components/schemas/NextToken'
    ListObjectChildrenRequest:
      type: object
      required:
        - ObjectReference
      properties:
        ObjectReference:
          $ref: '#/components/schemas/ObjectReference'
        NextToken:
          $ref: '#/components/schemas/NextToken'
        MaxResults:
          $ref: '#/components/schemas/NumberResults'
    ListObjectChildrenResponse:
      type: object
      properties:
        Children:
          $ref: '#/components/schemas/LinkNameToObjectIdentifierMap'
        NextToken:
          $ref: '#/components/schemas/NextToken'
    ListObjectParentPathsRequest:
      type: object
      required:
        - ObjectReference
      properties:
        ObjectReference:
          $ref: '#/components/schemas/ObjectReference'
        NextToken:
          $ref: '#/components/schemas/NextToken'
        MaxResults:
          $ref: '#/components/schemas/NumberResults'
    ListObjectParentPathsResponse:
      type: object
      properties:
        PathToObjectIdentifiersList:
          $ref: '#/components/schemas/PathToObjectIdentifiersList'
        NextToken:
          $ref: '#/components/schemas/NextToken'
    ListObjectParentsRequest:
      type: object
      required:
        - ObjectReference
      properties:
        ObjectReference:
          $ref: '#/components/schemas/ObjectReference'
        NextToken:
          $ref: '#/components/schemas/NextToken'
        MaxResults:
          $ref: '#/components/schemas/NumberResults'
    ListObjectParentsResponse:
      type: object
      properties:
        Parents:
          $ref: '#/components/schemas/ObjectIdentifierToLinkNameMap'
        NextToken:
          $ref: '#/components/schemas/NextToken'
    ListObjectPoliciesRequest:
      type: object
      required:
        - ObjectReference
      properties:
        ObjectReference:
          $ref: '#/components/schemas/ObjectReference'
        NextToken:
          $ref: '#/components/schemas/NextToken'
        MaxResults:
          $ref: '#/components/schemas/NumberResults'
    ListObjectPoliciesResponse:
      type: object
      properties:
        AttachedPolicyIds:
          $ref: '#/components/schemas/ObjectIdentifierList'
        NextToken:
          $ref: '#/components/schemas/NextToken'
    ListOutgoingTypedLinksRequest:
      type: object
      required:
        - ObjectReference
      properties:
        ObjectReference:
          $ref: '#/components/schemas/ObjectReference'
        FilterAttributeRanges:
          $ref: '#/components/schemas/TypedLinkAttributeRangeList'
        FilterTypedLink:
          $ref: '#/components/schemas/TypedLinkSchemaAndFacetName'
        NextToken:
          $ref: '#/components/schemas/NextToken'
        MaxResults:
          $ref: '#/components/schemas/NumberResults'
        ConsistencyLevel:
          $ref: '#/components/schemas/ConsistencyLevel'
    ListOutgoingTypedLinksResponse:
      type: object
      properties:
        TypedLinkSpecifiers:
          $ref: '#/components/schemas/TypedLinkSpecifierList'
        NextToken:
          $ref: '#/components/schemas/NextToken'
    ListPolicyAttachmentsRequest:
      type: object
      required:
        - PolicyReference
      properties:
        PolicyReference:
          $ref: '#/components/schemas/ObjectReference'
        NextToken:
          $ref: '#/components/schemas/NextToken'
        MaxResults:
          $ref: '#/components/schemas/NumberResults'
    ListPolicyAttachmentsResponse:
      type: object
      properties:
        ObjectIdentifiers:
          $ref: '#/components/schemas/ObjectIdentifierList'
        NextToken:
          $ref: '#/components/schemas/NextToken'
    ListPublishedSchemaArnsRequest:
      type: object
      properties:
        NextToken:
          $ref: '#/components/schemas/NextToken'
        MaxResults:
          $ref: '#/components/schemas/NumberResults'
    ListPublishedSchemaArnsResponse:
      type: object
      properties:
        SchemaArns:
          $ref: '#/components/schemas/Arns'
        NextToken:
          $ref: '#/components/schemas/NextToken'
    ListTagsForResourceRequest:
      type: object
      required:
        - ResourceArn
      properties:
        ResourceArn:
          $ref: '#/components/schemas/Arn'
        NextToken:
          $ref: '#/components/schemas/NextToken'
        MaxResults:
          $ref: '#/components/schemas/TagsNumberResults'
    ListTagsForResourceResponse:
      type: object
      properties:
        Tags:
          $ref: '#/components/schemas/TagList'
        NextToken:
          $ref: '#/components/schemas/NextToken'
    ListTypedLinkFacetAttributesRequest:
      type: object
      required:
        - Name
      properties:
        Name:
          $ref: '#/components/schemas/TypedLinkName'
        NextToken:
          $ref: '#/components/schemas/NextToken'
        MaxResults:
          $ref: '#/components/schemas/NumberResults'
    ListTypedLinkFacetAttributesResponse:
      type: object
      properties:
        Attributes:
          $ref: '#/components/schemas/TypedLinkAttributeDefinitionList'
        NextToken:
          $ref: '#/components/schemas/NextToken'
    ListTypedLinkFacetNamesRequest:
      type: object
      properties:
        NextToken:
          $ref: '#/components/schemas/NextToken'
        MaxResults:
          $ref: '#/components/schemas/NumberResults'
    ListTypedLinkFacetNamesResponse:
      type: object
      properties:
        FacetNames:
          $ref: '#/components/schemas/TypedLinkNameList'
        NextToken:
          $ref: '#/components/schemas/NextToken'
    LookupPolicyRequest:
      type: object
      required:
        - ObjectReference
      properties:
        ObjectReference:
          $ref: '#/components/schemas/ObjectReference'
        NextToken:
          $ref: '#/components/schemas/NextToken'
        MaxResults:
          $ref: '#/components/schemas/NumberResults'
    LookupPolicyResponse:
      type: object
      properties:
        PolicyToPathList:
          $ref: '#/components/schemas/PolicyToPathList'
        NextToken:
          $ref: '#/components/schemas/NextToken'
    NextToken:
      type: string
    NotIndexException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: Indicates that the requested operation can only operate on index objects.
    NotNodeException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: 'Occurs when any invalid operations are performed on an object that is not a node, such as calling <code>ListObjectChildren</code> for a leaf node object.'
    NotPolicyException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: Indicates that the requested operation can only operate on policy objects.
    NumberAttributeValue:
      type: string
    NumberResults:
      type: integer
      minimum: 1
    ObjectAlreadyDetachedException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: Indicates that the object is not attached to the index.
    ObjectAttributeAction:
      type: object
      properties:
        ObjectAttributeActionType:
          $ref: '#/components/schemas/UpdateActionType'
        ObjectAttributeUpdateValue:
          $ref: '#/components/schemas/TypedAttributeValue'
      description: The action to take on the object attribute.
    ObjectAttributeRange:
      type: object
      properties:
        AttributeKey:
          $ref: '#/components/schemas/AttributeKey'
        Range:
          $ref: '#/components/schemas/TypedAttributeValueRange'
      description: A range of attributes.
    ObjectAttributeRangeList:
      type: array
      items:
        $ref: '#/components/schemas/ObjectAttributeRange'
    ObjectAttributeUpdate:
      type: object
      properties:
        ObjectAttributeKey:
          $ref: '#/components/schemas/AttributeKey'
        ObjectAttributeAction:
          $ref: '#/components/schemas/ObjectAttributeAction'
      description: Structure that contains attribute update information.
    ObjectAttributeUpdateList:
      type: array
      items:
        $ref: '#/components/schemas/ObjectAttributeUpdate'
    ObjectIdentifier:
      type: string
    ObjectIdentifierList:
      type: array
      items:
        $ref: '#/components/schemas/ObjectIdentifier'
    ObjectIdentifierToLinkNameMap:
      type: array
      items:
        type: object
        properties:
          key:
            $ref: '#/components/schemas/ObjectIdentifier'
          value:
            $ref: '#/components/schemas/LinkName'
    ObjectNotDetachedException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: Indicates that the requested operation cannot be completed because the object has not been detached from the tree.
    ObjectReference:
      type: object
      properties:
        Selector:
          $ref: '#/components/schemas/SelectorObjectReference'
      description: The reference that identifies an object.
    ObjectType:
      type: string
      enum:
        - NODE
        - LEAF_NODE
        - POLICY
        - INDEX
    PathString:
      type: string
    PathToObjectIdentifiers:
      type: object
      properties:
        Path:
          $ref: '#/components/schemas/PathString'
        ObjectIdentifiers:
          $ref: '#/components/schemas/ObjectIdentifierList'
      description: Returns the path to the <code>ObjectIdentifiers</code> that is associated with the directory.
    PathToObjectIdentifiersList:
      type: array
      items:
        $ref: '#/components/schemas/PathToObjectIdentifiers'
    PolicyAttachment:
      type: object
      properties:
        PolicyId:
          $ref: '#/components/schemas/ObjectIdentifier'
        ObjectIdentifier:
          $ref: '#/components/schemas/ObjectIdentifier'
        PolicyType:
          $ref: '#/components/schemas/PolicyType'
      description: 'Contains the <code>PolicyType</code>, <code>PolicyId</code>, and the <code>ObjectIdentifier</code> to which it is attached. For more information, see <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/cd_key_concepts.html#policies">Policies</a>.'
    PolicyAttachmentList:
      type: array
      items:
        $ref: '#/components/schemas/PolicyAttachment'
    PolicyToPath:
      type: object
      properties:
        Path:
          $ref: '#/components/schemas/PathString'
        Policies:
          $ref: '#/components/schemas/PolicyAttachmentList'
      description: Used when a regular object exists in a <a>Directory</a> and you want to find all of the policies that are associated with that object and the parent to that object.
    PolicyToPathList:
      type: array
      items:
        $ref: '#/components/schemas/PolicyToPath'
    PolicyType:
      type: string
    PublishSchemaRequest:
      type: object
      required:
        - Version
      properties:
        Version:
          $ref: '#/components/schemas/Version'
        Name:
          $ref: '#/components/schemas/SchemaName'
    PublishSchemaResponse:
      type: object
      properties:
        PublishedSchemaArn:
          $ref: '#/components/schemas/Arn'
    PutSchemaFromJsonRequest:
      type: object
      required:
        - Document
      properties:
        Document:
          $ref: '#/components/schemas/SchemaJsonDocument'
    PutSchemaFromJsonResponse:
      type: object
      properties:
        Arn:
          $ref: '#/components/schemas/Arn'
    RangeMode:
      type: string
      enum:
        - FIRST
        - LAST
        - LAST_BEFORE_MISSING_VALUES
        - INCLUSIVE
        - EXCLUSIVE
    RemoveFacetFromObjectRequest:
      type: object
      required:
        - SchemaFacet
        - ObjectReference
      properties:
        SchemaFacet:
          $ref: '#/components/schemas/SchemaFacet'
        ObjectReference:
          $ref: '#/components/schemas/ObjectReference'
    RemoveFacetFromObjectResponse:
      type: object
      properties: {}
    RequiredAttributeBehavior:
      type: string
      enum:
        - REQUIRED_ALWAYS
        - NOT_REQUIRED
    ResourceNotFoundException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: The specified resource could not be found.
    RetryableConflictException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: 'Occurs when a conflict with a previous successful write is detected. For example, if a write operation occurs on an object and then an attempt is made to read the object using “SERIALIZABLE” consistency, this exception may result. This generally occurs when the previous write did not have time to propagate to the host serving the current request. A retry (with appropriate backoff logic) is the recommended response to this exception.'
    Rule:
      type: object
      properties:
        Type:
          $ref: '#/components/schemas/RuleType'
        Parameters:
          $ref: '#/components/schemas/RuleParameterMap'
      description: Contains an Amazon Resource Name (ARN) and parameters that are associated with the rule.
    RuleKey:
      type: string
      pattern: '^[a-zA-Z0-9._-]*$'
      minLength: 1
      maxLength: 64
    RuleMap:
      type: array
      items:
        type: object
        properties:
          key:
            $ref: '#/components/schemas/RuleKey'
          value:
            $ref: '#/components/schemas/Rule'
    RuleParameterKey:
      type: string
    RuleParameterMap:
      type: array
      items:
        type: object
        properties:
          key:
            $ref: '#/components/schemas/RuleParameterKey'
          value:
            $ref: '#/components/schemas/RuleParameterValue'
    RuleParameterValue:
      type: string
    RuleType:
      type: string
      enum:
        - BINARY_LENGTH
        - NUMBER_COMPARISON
        - STRING_FROM_SET
        - STRING_LENGTH
    SchemaAlreadyExistsException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: Indicates that a schema could not be created due to a naming conflict. Please select a different name and then try again.
    SchemaAlreadyPublishedException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: Indicates that a schema is already published.
    SchemaFacet:
      type: object
      properties:
        SchemaArn:
          $ref: '#/components/schemas/Arn'
        FacetName:
          $ref: '#/components/schemas/FacetName'
      description: A facet.
    SchemaFacetList:
      type: array
      items:
        $ref: '#/components/schemas/SchemaFacet'
    SchemaJsonDocument:
      type: string
    SchemaName:
      type: string
      pattern: '^[a-zA-Z0-9._-]*$'
      minLength: 1
      maxLength: 32
    SelectorObjectReference:
      type: string
    StillContainsLinksException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: The object could not be deleted because links still exist. Remove the links and then try the operation again.
    StringAttributeValue:
      type: string
    Tag:
      type: object
      properties:
        Key:
          $ref: '#/components/schemas/TagKey'
        Value:
          $ref: '#/components/schemas/TagValue'
      description: The tag structure that contains a tag key and value.
    TagKey:
      type: string
    TagKeyList:
      type: array
      items:
        $ref: '#/components/schemas/TagKey'
    TagList:
      type: array
      items:
        $ref: '#/components/schemas/Tag'
    TagResourceRequest:
      type: object
      required:
        - ResourceArn
        - Tags
      properties:
        ResourceArn:
          $ref: '#/components/schemas/Arn'
        Tags:
          $ref: '#/components/schemas/TagList'
    TagResourceResponse:
      type: object
      properties: {}
    TagValue:
      type: string
    TagsNumberResults:
      type: integer
      minimum: 50
    TypedAttributeValue:
      type: object
      properties:
        StringValue:
          $ref: '#/components/schemas/StringAttributeValue'
        BinaryValue:
          $ref: '#/components/schemas/BinaryAttributeValue'
        BooleanValue:
          $ref: '#/components/schemas/BooleanAttributeValue'
        NumberValue:
          $ref: '#/components/schemas/NumberAttributeValue'
        DatetimeValue:
          $ref: '#/components/schemas/DatetimeAttributeValue'
      description: 'Represents the data for a typed attribute. You can set one, and only one, of the elements. Each attribute in an item is a name-value pair. Attributes have a single value.'
    TypedAttributeValueRange:
      type: object
      required:
        - StartMode
        - EndMode
      properties:
        StartMode:
          $ref: '#/components/schemas/RangeMode'
        StartValue:
          $ref: '#/components/schemas/TypedAttributeValue'
        EndMode:
          $ref: '#/components/schemas/RangeMode'
        EndValue:
          $ref: '#/components/schemas/TypedAttributeValue'
      description: A range of attribute values.
    TypedLinkAttributeDefinition:
      type: object
      required:
        - Name
        - Type
        - RequiredBehavior
      properties:
        Name:
          $ref: '#/components/schemas/AttributeName'
        Type:
          $ref: '#/components/schemas/FacetAttributeType'
        DefaultValue:
          $ref: '#/components/schemas/TypedAttributeValue'
        IsImmutable:
          $ref: '#/components/schemas/Bool'
        Rules:
          $ref: '#/components/schemas/RuleMap'
        RequiredBehavior:
          $ref: '#/components/schemas/RequiredAttributeBehavior'
      description: A typed link attribute definition.
    TypedLinkAttributeDefinitionList:
      type: array
      items:
        $ref: '#/components/schemas/TypedLinkAttributeDefinition'
    TypedLinkAttributeRange:
      type: object
      required:
        - Range
      properties:
        AttributeName:
          $ref: '#/components/schemas/AttributeName'
        Range:
          $ref: '#/components/schemas/TypedAttributeValueRange'
      description: Identifies the range of attributes that are used by a specified filter.
    TypedLinkAttributeRangeList:
      type: array
      items:
        $ref: '#/components/schemas/TypedLinkAttributeRange'
    TypedLinkFacet:
      type: object
      required:
        - Name
        - Attributes
        - IdentityAttributeOrder
      properties:
        Name:
          $ref: '#/components/schemas/TypedLinkName'
        Attributes:
          $ref: '#/components/schemas/TypedLinkAttributeDefinitionList'
        IdentityAttributeOrder:
          $ref: '#/components/schemas/AttributeNameList'
      description: 'Defines the typed links structure and its attributes. To create a typed link facet, use the <a>CreateTypedLinkFacet</a> API.'
    TypedLinkFacetAttributeUpdate:
      type: object
      required:
        - Attribute
        - Action
      properties:
        Attribute:
          $ref: '#/components/schemas/TypedLinkAttributeDefinition'
        Action:
          $ref: '#/components/schemas/UpdateActionType'
      description: A typed link facet attribute update.
    TypedLinkFacetAttributeUpdateList:
      type: array
      items:
        $ref: '#/components/schemas/TypedLinkFacetAttributeUpdate'
    TypedLinkName:
      type: string
      pattern: '^[a-zA-Z0-9._-]*$'
    TypedLinkNameList:
      type: array
      items:
        $ref: '#/components/schemas/TypedLinkName'
    TypedLinkSchemaAndFacetName:
      type: object
      required:
        - SchemaArn
        - TypedLinkName
      properties:
        SchemaArn:
          $ref: '#/components/schemas/Arn'
        TypedLinkName:
          $ref: '#/components/schemas/TypedLinkName'
      description: Identifies the schema Amazon Resource Name (ARN) and facet name for the typed link.
    TypedLinkSpecifier:
      type: object
      required:
        - TypedLinkFacet
        - SourceObjectReference
        - TargetObjectReference
        - IdentityAttributeValues
      properties:
        TypedLinkFacet:
          $ref: '#/components/schemas/TypedLinkSchemaAndFacetName'
        SourceObjectReference:
          $ref: '#/components/schemas/ObjectReference'
        TargetObjectReference:
          $ref: '#/components/schemas/ObjectReference'
        IdentityAttributeValues:
          $ref: '#/components/schemas/AttributeNameAndValueList'
      description: 'Contains all the information that is used to uniquely identify a typed link. The parameters discussed in this topic are used to uniquely specify the typed link being operated on. The <a>AttachTypedLink</a> API returns a typed link specifier while the <a>DetachTypedLink</a> API accepts one as input. Similarly, the <a>ListIncomingTypedLinks</a> and <a>ListOutgoingTypedLinks</a> API operations provide typed link specifiers as output. You can also construct a typed link specifier from scratch.'
    TypedLinkSpecifierList:
      type: array
      items:
        $ref: '#/components/schemas/TypedLinkSpecifier'
    UnsupportedIndexTypeException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: Indicates that the requested index type is not supported.
    UntagResourceRequest:
      type: object
      required:
        - ResourceArn
        - TagKeys
      properties:
        ResourceArn:
          $ref: '#/components/schemas/Arn'
        TagKeys:
          $ref: '#/components/schemas/TagKeyList'
    UntagResourceResponse:
      type: object
      properties: {}
    UpdateActionType:
      type: string
      enum:
        - CREATE_OR_UPDATE
        - DELETE
    UpdateFacetRequest:
      type: object
      required:
        - Name
      properties:
        Name:
          $ref: '#/components/schemas/FacetName'
        AttributeUpdates:
          $ref: '#/components/schemas/FacetAttributeUpdateList'
        ObjectType:
          $ref: '#/components/schemas/ObjectType'
    UpdateFacetResponse:
      type: object
      properties: {}
    UpdateObjectAttributesRequest:
      type: object
      required:
        - ObjectReference
        - AttributeUpdates
      properties:
        ObjectReference:
          $ref: '#/components/schemas/ObjectReference'
        AttributeUpdates:
          $ref: '#/components/schemas/ObjectAttributeUpdateList'
    UpdateObjectAttributesResponse:
      type: object
      properties:
        ObjectIdentifier:
          $ref: '#/components/schemas/ObjectIdentifier'
    UpdateSchemaRequest:
      type: object
      required:
        - Name
      properties:
        Name:
          $ref: '#/components/schemas/SchemaName'
    UpdateSchemaResponse:
      type: object
      properties:
        SchemaArn:
          $ref: '#/components/schemas/Arn'
    UpdateTypedLinkFacetRequest:
      type: object
      required:
        - Name
        - AttributeUpdates
        - IdentityAttributeOrder
      properties:
        Name:
          $ref: '#/components/schemas/TypedLinkName'
        AttributeUpdates:
          $ref: '#/components/schemas/TypedLinkFacetAttributeUpdateList'
        IdentityAttributeOrder:
          $ref: '#/components/schemas/AttributeNameList'
    UpdateTypedLinkFacetResponse:
      type: object
      properties: {}
    ValidationException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: Indicates that your request is malformed in some manner. See the exception message.
    Version:
      type: string
      pattern: '^[a-zA-Z0-9._-]*$'
      minLength: 1
      maxLength: 10
  parameters:
    Action:
      name: Action
      in: header
      required: true
      schema:
        type: string
    Version:
      name: Version
      in: header
      required: true
      schema:
        type: string
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      required: false
      schema:
        type: string
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      required: false
      schema:
        type: string
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      required: false
      schema:
        type: string
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      required: false
      schema:
        type: string
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      required: false
      schema:
        type: string
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      required: false
      schema:
        type: string
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      required: false
      schema:
        type: string
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
