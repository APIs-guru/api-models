openapi: 3.0.0
servers:
  - url: 'http://route53.amazonaws.com/'
info:
  version: '2013-04-01'
  x-release: v4
  title: Amazon Route 53
  x-logo:
    url: 'https://media.amazonwebservices.com/blog/2007/big_pbaws_logo_300px.jpg'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: route53
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/route53-2013-04-01.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-direct: true
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://aws.amazon.com/route53/'
x-hasEquivalentPaths: true
security:
  - hmac: []
paths:
  '/2013-04-01/hostedzone/{Id}/associatevpc':
    post:
      operationId: AssociateVPCWithHostedZone
      description: '<p>Associates an Amazon VPC with a private hosted zone. </p> <important> <p>To perform the association, the VPC and the private hosted zone must already exist. You can''t convert a public hosted zone into a private hosted zone.</p> </important> <note> <p>If you want to associate a VPC that was created by using one AWS account with a private hosted zone that was created by using a different account, the AWS account that created the private hosted zone must first submit a <code>CreateVPCAssociationAuthorization</code> request. Then the account that created the VPC must submit an <code>AssociateVPCWithHostedZone</code> request.</p> </note>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AssociateVPCWithHostedZoneResponse'
        '480':
          description: NoSuchHostedZone
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchHostedZone'
        '481':
          description: NotAuthorizedException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
        '482':
          description: InvalidVPCId
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidVPCId'
        '483':
          description: InvalidInput
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInput'
        '484':
          description: PublicZoneVPCAssociation
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/PublicZoneVPCAssociation'
        '485':
          description: ConflictingDomainExists
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ConflictingDomainExists'
        '486':
          description: LimitsExceeded
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitsExceeded'
      parameters:
        - name: Id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/AssociateVPCWithHostedZoneRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/2013-04-01/hostedzone/{Id}/rrset/':
    post:
      operationId: ChangeResourceRecordSets
      description: '<p>Creates, changes, or deletes a resource record set, which contains authoritative DNS information for a specified domain name or subdomain name. For example, you can use <code>ChangeResourceRecordSets</code> to create a resource record set that routes traffic for test.example.com to a web server that has an IP address of 192.0.2.44.</p> <p> <b>Change Batches and Transactional Changes</b> </p> <p>The request body must include a document with a <code>ChangeResourceRecordSetsRequest</code> element. The request body contains a list of change items, known as a change batch. Change batches are considered transactional changes. When using the Amazon Route 53 API to change resource record sets, Amazon Route 53 either makes all or none of the changes in a change batch request. This ensures that Amazon Route 53 never partially implements the intended changes to the resource record sets in a hosted zone. </p> <p>For example, a change batch request that deletes the <code>CNAME</code> record for www.example.com and creates an alias resource record set for www.example.com. Amazon Route 53 deletes the first resource record set and creates the second resource record set in a single operation. If either the <code>DELETE</code> or the <code>CREATE</code> action fails, then both changes (plus any other changes in the batch) fail, and the original <code>CNAME</code> record continues to exist.</p> <important> <p>Due to the nature of transactional changes, you can''t delete the same resource record set more than once in a single change batch. If you attempt to delete the same change batch more than once, Amazon Route 53 returns an <code>InvalidChangeBatch</code> error.</p> </important> <p> <b>Traffic Flow</b> </p> <p>To create resource record sets for complex routing configurations, use either the traffic flow visual editor in the Amazon Route 53 console or the API actions for traffic policies and traffic policy instances. Save the configuration as a traffic policy, then associate the traffic policy with one or more domain names (such as example.com) or subdomain names (such as www.example.com), in the same hosted zone or in multiple hosted zones. You can roll back the updates if the new configuration isn''t performing as expected. For more information, see <a href="http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/traffic-flow.html">Using Traffic Flow to Route DNS Traffic</a> in the <i>Amazon Route 53 Developer Guide</i>.</p> <p> <b>Create, Delete, and Upsert</b> </p> <p>Use <code>ChangeResourceRecordsSetsRequest</code> to perform the following actions:</p> <ul> <li> <p> <code>CREATE</code>: Creates a resource record set that has the specified values.</p> </li> <li> <p> <code>DELETE</code>: Deletes an existing resource record set that has the specified values.</p> </li> <li> <p> <code>UPSERT</code>: If a resource record set does not already exist, AWS creates it. If a resource set does exist, Amazon Route 53 updates it with the values in the request. </p> </li> </ul> <p> <b>Syntaxes for Creating, Updating, and Deleting Resource Record Sets</b> </p> <p>The syntax for a request depends on the type of resource record set that you want to create, delete, or update, such as weighted, alias, or failover. The XML elements in your request must appear in the order listed in the syntax. </p> <p>For an example for each type of resource record set, see "Examples."</p> <p>Don''t refer to the syntax in the "Parameter Syntax" section, which includes all of the elements for every kind of resource record set that you can create, delete, or update by using <code>ChangeResourceRecordSets</code>. </p> <p> <b>Change Propagation to Amazon Route 53 DNS Servers</b> </p> <p>When you submit a <code>ChangeResourceRecordSets</code> request, Amazon Route 53 propagates your changes to all of the Amazon Route 53 authoritative DNS servers. While your changes are propagating, <code>GetChange</code> returns a status of <code>PENDING</code>. When propagation is complete, <code>GetChange</code> returns a status of <code>INSYNC</code>. Changes generally propagate to all Amazon Route 53 name servers within 60 seconds. For more information, see <a>GetChange</a>.</p> <p> <b>Limits on ChangeResourceRecordSets Requests</b> </p> <p>For information about the limits on a <code>ChangeResourceRecordSets</code> request, see <a href="http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/DNSLimitations.html">Limits</a> in the <i>Amazon Route 53 Developer Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ChangeResourceRecordSetsResponse'
        '480':
          description: NoSuchHostedZone
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchHostedZone'
        '481':
          description: NoSuchHealthCheck
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchHealthCheck'
        '482':
          description: InvalidChangeBatch
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidChangeBatch'
        '483':
          description: InvalidInput
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInput'
        '484':
          description: PriorRequestNotComplete
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/PriorRequestNotComplete'
      parameters:
        - name: Id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ChangeResourceRecordSetsRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/2013-04-01/tags/{ResourceType}/{ResourceId}':
    get:
      operationId: ListTagsForResource
      description: '<p>Lists tags for one health check or hosted zone. </p> <p>For information about using tags for cost allocation, see <a href="http://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html">Using Cost Allocation Tags</a> in the <i>AWS Billing and Cost Management User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResponse'
        '480':
          description: InvalidInput
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInput'
        '481':
          description: NoSuchHealthCheck
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchHealthCheck'
        '482':
          description: NoSuchHostedZone
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchHostedZone'
        '483':
          description: PriorRequestNotComplete
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/PriorRequestNotComplete'
        '484':
          description: ThrottlingException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: ResourceType
          in: path
          required: true
          schema:
            type: string
        - name: ResourceId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ListTagsForResourceRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /2013-04-01/healthcheck:
    get:
      operationId: ListHealthChecks
      description: 'Retrieve a list of the health checks that are associated with the current AWS account. '
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListHealthChecksResponse'
        '480':
          description: InvalidInput
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInput'
        '481':
          description: IncompatibleVersion
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/IncompatibleVersion'
      parameters:
        - name: MaxItems
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: Marker
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ListHealthChecksRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /2013-04-01/hostedzone:
    get:
      operationId: ListHostedZones
      description: '<p>Retrieves a list of the public and private hosted zones that are associated with the current AWS account. The response includes a <code>HostedZones</code> child element for each hosted zone.</p> <p>Amazon Route 53 returns a maximum of 100 items in each response. If you have a lot of hosted zones, you can use the <code>maxitems</code> parameter to list them in groups of up to 100.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListHostedZonesResponse'
        '480':
          description: InvalidInput
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInput'
        '481':
          description: NoSuchDelegationSet
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchDelegationSet'
        '482':
          description: DelegationSetNotReusable
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DelegationSetNotReusable'
      parameters:
        - name: MaxItems
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: Marker
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ListHostedZonesRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /2013-04-01/delegationset:
    get:
      operationId: ListReusableDelegationSets
      description: Retrieves a list of the reusable delegation sets that are associated with the current AWS account.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListReusableDelegationSetsResponse'
        '480':
          description: InvalidInput
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInput'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ListReusableDelegationSetsRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /2013-04-01/trafficpolicy:
    post:
      operationId: CreateTrafficPolicy
      description: 'Creates a traffic policy, which you use to create multiple DNS resource record sets for one domain name (such as example.com) or one subdomain name (such as www.example.com).'
      responses:
        '201':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateTrafficPolicyResponse'
        '480':
          description: InvalidInput
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInput'
        '481':
          description: TooManyTrafficPolicies
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyTrafficPolicies'
        '482':
          description: TrafficPolicyAlreadyExists
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TrafficPolicyAlreadyExists'
        '483':
          description: InvalidTrafficPolicyDocument
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidTrafficPolicyDocument'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateTrafficPolicyRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /2013-04-01/trafficpolicyinstance:
    post:
      operationId: CreateTrafficPolicyInstance
      description: 'Creates resource record sets in a specified hosted zone based on the settings in a specified traffic policy version. In addition, <code>CreateTrafficPolicyInstance</code> associates the resource record sets with a specified domain name (such as example.com) or subdomain name (such as www.example.com). Amazon Route 53 responds to DNS queries for the domain or subdomain name by using the resource record sets that <code>CreateTrafficPolicyInstance</code> created.'
      responses:
        '201':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateTrafficPolicyInstanceResponse'
        '480':
          description: NoSuchHostedZone
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchHostedZone'
        '481':
          description: InvalidInput
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInput'
        '482':
          description: TooManyTrafficPolicyInstances
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TooManyTrafficPolicyInstances'
        '483':
          description: NoSuchTrafficPolicy
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchTrafficPolicy'
        '484':
          description: TrafficPolicyInstanceAlreadyExists
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TrafficPolicyInstanceAlreadyExists'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateTrafficPolicyInstanceRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/2013-04-01/trafficpolicy/{Id}':
    post:
      operationId: CreateTrafficPolicyVersion
      description: 'Creates a new version of an existing traffic policy. When you create a new version of a traffic policy, you specify the ID of the traffic policy that you want to update and a JSON-formatted document that describes the new version. You use traffic policies to create multiple DNS resource record sets for one domain name (such as example.com) or one subdomain name (such as www.example.com). You can create a maximum of 1000 versions of a traffic policy. If you reach the limit and need to create another version, you''ll need to start a new traffic policy.'
      responses:
        '201':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateTrafficPolicyVersionResponse'
        '480':
          description: NoSuchTrafficPolicy
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchTrafficPolicy'
        '481':
          description: InvalidInput
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInput'
        '482':
          description: ConcurrentModification
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ConcurrentModification'
        '483':
          description: InvalidTrafficPolicyDocument
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidTrafficPolicyDocument'
      parameters:
        - name: Id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateTrafficPolicyVersionRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/2013-04-01/hostedzone/{Id}/authorizevpcassociation':
    get:
      operationId: ListVPCAssociationAuthorizations
      description: <p>Gets a list of the VPCs that were created by other accounts and that can be associated with a specified hosted zone because you've submitted one or more <code>CreateVPCAssociationAuthorization</code> requests. </p> <p>The response includes a <code>VPCs</code> element with a <code>VPC</code> child element for each VPC that can be associated with the hosted zone.</p>
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListVPCAssociationAuthorizationsResponse'
        '480':
          description: NoSuchHostedZone
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchHostedZone'
        '481':
          description: InvalidInput
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInput'
        '482':
          description: InvalidPaginationToken
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidPaginationToken'
      parameters:
        - name: Id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ListVPCAssociationAuthorizationsRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/2013-04-01/healthcheck/{HealthCheckId}':
    post:
      operationId: UpdateHealthCheck
      description: '<p>Updates an existing health check. Note that some values can''t be updated. </p> <p>For more information about updating health checks, see <a href="http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/health-checks-creating-deleting.html">Creating, Updating, and Deleting Health Checks</a> in the <i>Amazon Route 53 Developer Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UpdateHealthCheckResponse'
        '480':
          description: NoSuchHealthCheck
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchHealthCheck'
        '481':
          description: InvalidInput
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInput'
        '482':
          description: HealthCheckVersionMismatch
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/HealthCheckVersionMismatch'
      parameters:
        - name: HealthCheckId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/UpdateHealthCheckRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/2013-04-01/hostedzone/{Id}':
    post:
      operationId: UpdateHostedZoneComment
      description: Updates the comment for a specified hosted zone.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UpdateHostedZoneCommentResponse'
        '480':
          description: NoSuchHostedZone
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchHostedZone'
        '481':
          description: InvalidInput
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInput'
      parameters:
        - name: Id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/UpdateHostedZoneCommentRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/2013-04-01/delegationset/{Id}':
    get:
      operationId: GetReusableDelegationSet
      description: 'Retrieves information about a specified reusable delegation set, including the four name servers that are assigned to the delegation set.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetReusableDelegationSetResponse'
        '480':
          description: NoSuchDelegationSet
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchDelegationSet'
        '481':
          description: DelegationSetNotReusable
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DelegationSetNotReusable'
        '482':
          description: InvalidInput
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInput'
      parameters:
        - name: Id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/GetReusableDelegationSetRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/2013-04-01/trafficpolicy/{Id}/{Version}':
    post:
      operationId: UpdateTrafficPolicyComment
      description: Updates the comment for a specified traffic policy version.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UpdateTrafficPolicyCommentResponse'
        '480':
          description: InvalidInput
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInput'
        '481':
          description: NoSuchTrafficPolicy
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchTrafficPolicy'
        '482':
          description: ConcurrentModification
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ConcurrentModification'
      parameters:
        - name: Id
          in: path
          required: true
          schema:
            type: string
        - name: Version
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/UpdateTrafficPolicyCommentRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/2013-04-01/trafficpolicyinstance/{Id}':
    post:
      operationId: UpdateTrafficPolicyInstance
      description: '<p>Updates the resource record sets in a specified hosted zone that were created based on the settings in a specified traffic policy version.</p> <p>When you update a traffic policy instance, Amazon Route 53 continues to respond to DNS queries for the root resource record set name (such as example.com) while it replaces one group of resource record sets with another. Amazon Route 53 performs the following operations:</p> <ol> <li> <p>Amazon Route 53 creates a new group of resource record sets based on the specified traffic policy. This is true regardless of how significant the differences are between the existing resource record sets and the new resource record sets. </p> </li> <li> <p>When all of the new resource record sets have been created, Amazon Route 53 starts to respond to DNS queries for the root resource record set name (such as example.com) by using the new resource record sets.</p> </li> <li> <p>Amazon Route 53 deletes the old group of resource record sets that are associated with the root resource record set name.</p> </li> </ol>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UpdateTrafficPolicyInstanceResponse'
        '480':
          description: InvalidInput
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInput'
        '481':
          description: NoSuchTrafficPolicy
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchTrafficPolicy'
        '482':
          description: NoSuchTrafficPolicyInstance
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchTrafficPolicyInstance'
        '483':
          description: PriorRequestNotComplete
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/PriorRequestNotComplete'
        '484':
          description: ConflictingTypes
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ConflictingTypes'
      parameters:
        - name: Id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/UpdateTrafficPolicyInstanceRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/2013-04-01/hostedzone/{Id}/deauthorizevpcassociation':
    post:
      operationId: DeleteVPCAssociationAuthorization
      description: '<p>Removes authorization to submit an <code>AssociateVPCWithHostedZone</code> request to associate a specified VPC with a hosted zone that was created by a different account. You must use the account that created the hosted zone to submit a <code>DeleteVPCAssociationAuthorization</code> request.</p> <important> <p>Sending this request only prevents the AWS account that created the VPC from associating the VPC with the Amazon Route 53 hosted zone in the future. If the VPC is already associated with the hosted zone, <code>DeleteVPCAssociationAuthorization</code> won''t disassociate the VPC from the hosted zone. If you want to delete an existing association, use <code>DisassociateVPCFromHostedZone</code>.</p> </important>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteVPCAssociationAuthorizationResponse'
        '480':
          description: ConcurrentModification
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ConcurrentModification'
        '481':
          description: VPCAssociationAuthorizationNotFound
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/VPCAssociationAuthorizationNotFound'
        '482':
          description: NoSuchHostedZone
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchHostedZone'
        '483':
          description: InvalidVPCId
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidVPCId'
        '484':
          description: InvalidInput
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInput'
      parameters:
        - name: Id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteVPCAssociationAuthorizationRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/2013-04-01/hostedzone/{Id}/disassociatevpc':
    post:
      operationId: DisassociateVPCFromHostedZone
      description: <p>Disassociates a VPC from a Amazon Route 53 private hosted zone. </p> <note> <p>You can't disassociate the last VPC from a private hosted zone.</p> </note> <important> <p>You can't disassociate a VPC from a private hosted zone when only one VPC is associated with the hosted zone. You also can't convert a private hosted zone into a public hosted zone.</p> </important>
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DisassociateVPCFromHostedZoneResponse'
        '480':
          description: NoSuchHostedZone
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchHostedZone'
        '481':
          description: InvalidVPCId
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidVPCId'
        '482':
          description: VPCAssociationNotFound
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/VPCAssociationNotFound'
        '483':
          description: LastVPCAssociation
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LastVPCAssociation'
        '484':
          description: InvalidInput
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInput'
      parameters:
        - name: Id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DisassociateVPCFromHostedZoneRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/2013-04-01/change/{Id}':
    get:
      operationId: GetChange
      description: '<p>Returns the current status of a change batch request. The status is one of the following values:</p> <ul> <li> <p> <code>PENDING</code> indicates that the changes in this request have not propagated to all Amazon Route 53 DNS servers. This is the initial status of all change batch requests.</p> </li> <li> <p> <code>INSYNC</code> indicates that the changes have propagated to all Amazon Route 53 DNS servers. </p> </li> </ul>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetChangeResponse'
        '480':
          description: NoSuchChange
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchChange'
        '481':
          description: InvalidInput
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInput'
      parameters:
        - name: Id
          in: path
          required: true
          schema:
            type: string
      x-waiters:
        - delay: 30
          maxAttempts: 60
          operation: GetChange
          acceptors:
            - matcher: path
              expected: INSYNC
              argument: ChangeInfo.Status
              state: success
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/GetChangeRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /2013-04-01/checkeripranges:
    get:
      operationId: GetCheckerIpRanges
      description: ' <code>GetCheckerIpRanges</code> still works, but we recommend that you download ip-ranges.json, which includes IP address ranges for all AWS services. For more information, see <a href="http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/route-53-ip-addresses.html">IP Address Ranges of Amazon Route 53 Servers</a> in the <i>Amazon Route 53 Developer Guide</i>.'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetCheckerIpRangesResponse'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/GetCheckerIpRangesRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /2013-04-01/geolocation:
    get:
      operationId: GetGeoLocation
      description: '<p>Gets information about whether a specified geographic location is supported for Amazon Route 53 geolocation resource record sets.</p> <p>Use the following syntax to determine whether a continent is supported for geolocation:</p> <p> <code>GET /2013-04-01/geolocation?ContinentCode=<i>two-letter abbreviation for a continent</i> </code> </p> <p>Use the following syntax to determine whether a country is supported for geolocation:</p> <p> <code>GET /2013-04-01/geolocation?CountryCode=<i>two-character country code</i> </code> </p> <p>Use the following syntax to determine whether a subdivision of a country is supported for geolocation:</p> <p> <code>GET /2013-04-01/geolocation?CountryCode=<i>two-character country code</i>&amp;SubdivisionCode=<i>subdivision code</i> </code> </p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetGeoLocationResponse'
        '480':
          description: NoSuchGeoLocation
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchGeoLocation'
        '481':
          description: InvalidInput
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInput'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/GetGeoLocationRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /2013-04-01/healthcheckcount:
    get:
      operationId: GetHealthCheckCount
      description: Retrieves the number of health checks that are associated with the current AWS account.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetHealthCheckCountResponse'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/GetHealthCheckCountRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/2013-04-01/healthcheck/{HealthCheckId}/lastfailurereason':
    get:
      operationId: GetHealthCheckLastFailureReason
      description: Gets the reason that a specified health check failed most recently.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetHealthCheckLastFailureReasonResponse'
        '480':
          description: NoSuchHealthCheck
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchHealthCheck'
        '481':
          description: InvalidInput
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInput'
      parameters:
        - name: HealthCheckId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/GetHealthCheckLastFailureReasonRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/2013-04-01/healthcheck/{HealthCheckId}/status':
    get:
      operationId: GetHealthCheckStatus
      description: 'Gets status of a specified health check. '
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetHealthCheckStatusResponse'
        '480':
          description: NoSuchHealthCheck
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchHealthCheck'
        '481':
          description: InvalidInput
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInput'
      parameters:
        - name: HealthCheckId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/GetHealthCheckStatusRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /2013-04-01/hostedzonecount:
    get:
      operationId: GetHostedZoneCount
      description: Retrieves the number of hosted zones that are associated with the current AWS account.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetHostedZoneCountResponse'
        '480':
          description: InvalidInput
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInput'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/GetHostedZoneCountRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /2013-04-01/trafficpolicyinstancecount:
    get:
      operationId: GetTrafficPolicyInstanceCount
      description: Gets the number of traffic policy instances that are associated with the current AWS account.
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetTrafficPolicyInstanceCountResponse'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/GetTrafficPolicyInstanceCountRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /2013-04-01/geolocations:
    get:
      operationId: ListGeoLocations
      description: '<p>Retrieves a list of supported geo locations.</p> <p>Countries are listed first, and continents are listed last. If Amazon Route 53 supports subdivisions for a country (for example, states or provinces), the subdivisions for that country are listed in alphabetical order immediately after the corresponding country.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListGeoLocationsResponse'
        '480':
          description: InvalidInput
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInput'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ListGeoLocationsRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /2013-04-01/hostedzonesbyname:
    get:
      operationId: ListHostedZonesByName
      description: '<p>Retrieves a list of your hosted zones in lexicographic order. The response includes a <code>HostedZones</code> child element for each hosted zone created by the current AWS account. </p> <p> <code>ListHostedZonesByName</code> sorts hosted zones by name with the labels reversed. For example:</p> <p> <code>com.example.www.</code> </p> <p>Note the trailing dot, which can change the sort order in some circumstances.</p> <p>If the domain name includes escape characters or Punycode, <code>ListHostedZonesByName</code> alphabetizes the domain name using the escaped or Punycoded value, which is the format that Amazon Route 53 saves in its database. For example, to create a hosted zone for exämple.com, you specify ex\344mple.com for the domain name. <code>ListHostedZonesByName</code> alphabetizes it as:</p> <p> <code>com.ex\344mple.</code> </p> <p>The labels are reversed and alphabetized using the escaped value. For more information about valid domain name formats, including internationalized domain names, see <a href="http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/DomainNameFormat.html">DNS Domain Name Format</a> in the <i>Amazon Route 53 Developer Guide</i>.</p> <p>Amazon Route 53 returns up to 100 items in each response. If you have a lot of hosted zones, use the <code>MaxItems</code> parameter to list them in groups of up to 100. The response includes values that help navigate from one group of <code>MaxItems</code> hosted zones to the next:</p> <ul> <li> <p>The <code>DNSName</code> and <code>HostedZoneId</code> elements in the response contain the values, if any, specified for the <code>dnsname</code> and <code>hostedzoneid</code> parameters in the request that produced the current response.</p> </li> <li> <p>The <code>MaxItems</code> element in the response contains the value, if any, that you specified for the <code>maxitems</code> parameter in the request that produced the current response.</p> </li> <li> <p>If the value of <code>IsTruncated</code> in the response is true, there are more hosted zones associated with the current AWS account. </p> <p>If <code>IsTruncated</code> is false, this response includes the last hosted zone that is associated with the current account. The <code>NextDNSName</code> element and <code>NextHostedZoneId</code> elements are omitted from the response.</p> </li> <li> <p>The <code>NextDNSName</code> and <code>NextHostedZoneId</code> elements in the response contain the domain name and the hosted zone ID of the next hosted zone that is associated with the current AWS account. If you want to list more hosted zones, make another call to <code>ListHostedZonesByName</code>, and specify the value of <code>NextDNSName</code> and <code>NextHostedZoneId</code> in the <code>dnsname</code> and <code>hostedzoneid</code> parameters, respectively.</p> </li> </ul>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListHostedZonesByNameResponse'
        '480':
          description: InvalidInput
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInput'
        '481':
          description: InvalidDomainName
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidDomainName'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ListHostedZonesByNameRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/2013-04-01/hostedzone/{Id}/rrset':
    get:
      operationId: ListResourceRecordSets
      description: '<p>Lists the resource record sets in a specified hosted zone.</p> <p> <code>ListResourceRecordSets</code> returns up to 100 resource record sets at a time in ASCII order, beginning at a position specified by the <code>name</code> and <code>type</code> elements. The action sorts results first by DNS name with the labels reversed, for example:</p> <p> <code>com.example.www.</code> </p> <p>Note the trailing dot, which can change the sort order in some circumstances.</p> <p>When multiple records have the same DNS name, the action sorts results by the record type.</p> <p>You can use the name and type elements to adjust the beginning position of the list of resource record sets returned:</p> <dl> <dt>If you do not specify Name or Type</dt> <dd> <p>The results begin with the first resource record set that the hosted zone contains.</p> </dd> <dt>If you specify Name but not Type</dt> <dd> <p>The results begin with the first resource record set in the list whose name is greater than or equal to <code>Name</code>.</p> </dd> <dt>If you specify Type but not Name</dt> <dd> <p>Amazon Route 53 returns the <code>InvalidInput</code> error.</p> </dd> <dt>If you specify both Name and Type</dt> <dd> <p>The results begin with the first resource record set in the list whose name is greater than or equal to <code>Name</code>, and whose type is greater than or equal to <code>Type</code>.</p> </dd> </dl> <p>This action returns the most current version of the records. This includes records that are <code>PENDING</code>, and that are not yet available on all Amazon Route 53 DNS servers.</p> <p>To ensure that you get an accurate listing of the resource record sets for a hosted zone at a point in time, do not submit a <code>ChangeResourceRecordSets</code> request while you''re paging through the results of a <code>ListResourceRecordSets</code> request. If you do, some pages may display results without the latest changes while other pages display results with the latest changes.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListResourceRecordSetsResponse'
        '480':
          description: NoSuchHostedZone
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchHostedZone'
        '481':
          description: InvalidInput
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInput'
      parameters:
        - name: MaxItems
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: StartRecordName
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: StartRecordType
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: StartRecordIdentifier
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: Id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ListResourceRecordSetsRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/2013-04-01/tags/{ResourceType}':
    post:
      operationId: ListTagsForResources
      description: '<p>Lists tags for up to 10 health checks or hosted zones.</p> <p>For information about using tags for cost allocation, see <a href="http://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html">Using Cost Allocation Tags</a> in the <i>AWS Billing and Cost Management User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListTagsForResourcesResponse'
        '480':
          description: InvalidInput
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInput'
        '481':
          description: NoSuchHealthCheck
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchHealthCheck'
        '482':
          description: NoSuchHostedZone
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchHostedZone'
        '483':
          description: PriorRequestNotComplete
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/PriorRequestNotComplete'
        '484':
          description: ThrottlingException
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      parameters:
        - name: ResourceType
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ListTagsForResourcesRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /2013-04-01/trafficpolicies:
    get:
      operationId: ListTrafficPolicies
      description: 'Gets information about the latest version for every traffic policy that is associated with the current AWS account. Policies are listed in the order in which they were created. '
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListTrafficPoliciesResponse'
        '480':
          description: InvalidInput
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInput'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ListTrafficPoliciesRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /2013-04-01/trafficpolicyinstances:
    get:
      operationId: ListTrafficPolicyInstances
      description: '<p>Gets information about the traffic policy instances that you created by using the current AWS account.</p> <note> <p>After you submit an <code>UpdateTrafficPolicyInstance</code> request, there''s a brief delay while Amazon Route 53 creates the resource record sets that are specified in the traffic policy definition. For more information, see the <code>State</code> response element.</p> </note> <p>Amazon Route 53 returns a maximum of 100 items in each response. If you have a lot of traffic policy instances, you can use the <code>MaxItems</code> parameter to list them in groups of up to 100.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListTrafficPolicyInstancesResponse'
        '480':
          description: InvalidInput
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInput'
        '481':
          description: NoSuchTrafficPolicyInstance
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchTrafficPolicyInstance'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ListTrafficPolicyInstancesRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /2013-04-01/trafficpolicyinstances/hostedzone:
    get:
      operationId: ListTrafficPolicyInstancesByHostedZone
      description: '<p>Gets information about the traffic policy instances that you created in a specified hosted zone.</p> <note> <p>After you submit a <code>CreateTrafficPolicyInstance</code> or an <code>UpdateTrafficPolicyInstance</code> request, there''s a brief delay while Amazon Route 53 creates the resource record sets that are specified in the traffic policy definition. For more information, see the <code>State</code> response element.</p> </note> <p>Amazon Route 53 returns a maximum of 100 items in each response. If you have a lot of traffic policy instances, you can use the <code>MaxItems</code> parameter to list them in groups of up to 100.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListTrafficPolicyInstancesByHostedZoneResponse'
        '480':
          description: InvalidInput
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInput'
        '481':
          description: NoSuchTrafficPolicyInstance
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchTrafficPolicyInstance'
        '482':
          description: NoSuchHostedZone
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchHostedZone'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ListTrafficPolicyInstancesByHostedZoneRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /2013-04-01/trafficpolicyinstances/trafficpolicy:
    get:
      operationId: ListTrafficPolicyInstancesByPolicy
      description: '<p>Gets information about the traffic policy instances that you created by using a specify traffic policy version.</p> <note> <p>After you submit a <code>CreateTrafficPolicyInstance</code> or an <code>UpdateTrafficPolicyInstance</code> request, there''s a brief delay while Amazon Route 53 creates the resource record sets that are specified in the traffic policy definition. For more information, see the <code>State</code> response element.</p> </note> <p>Amazon Route 53 returns a maximum of 100 items in each response. If you have a lot of traffic policy instances, you can use the <code>MaxItems</code> parameter to list them in groups of up to 100.</p>'
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListTrafficPolicyInstancesByPolicyResponse'
        '480':
          description: InvalidInput
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInput'
        '481':
          description: NoSuchTrafficPolicyInstance
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchTrafficPolicyInstance'
        '482':
          description: NoSuchTrafficPolicy
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchTrafficPolicy'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ListTrafficPolicyInstancesByPolicyRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/2013-04-01/trafficpolicies/{Id}/versions':
    get:
      operationId: ListTrafficPolicyVersions
      description: <p>Gets information about all of the versions for a specified traffic policy.</p> <p>Traffic policy versions are listed in numerical order by <code>VersionNumber</code>.</p>
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListTrafficPolicyVersionsResponse'
        '480':
          description: InvalidInput
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInput'
        '481':
          description: NoSuchTrafficPolicy
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchTrafficPolicy'
      parameters:
        - name: Id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ListTrafficPolicyVersionsRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /2013-04-01/testdnsanswer:
    get:
      operationId: TestDNSAnswer
      description: 'Gets the value that Amazon Route 53 returns in response to a DNS request for a specified record name and type. You can optionally specify the IP address of a DNS resolver, an EDNS0 client subnet IP address, and a subnet mask. '
      responses:
        '200':
          description: Success
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/TestDNSAnswerResponse'
        '480':
          description: NoSuchHostedZone
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchHostedZone'
        '481':
          description: InvalidInput
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInput'
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/TestDNSAnswerRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
components:
  schemas:
    AlarmIdentifier:
      type: object
      required:
        - Region
        - Name
      properties:
        Region:
          $ref: '#/components/schemas/CloudWatchRegion'
        Name:
          $ref: '#/components/schemas/AlarmName'
      description: A complex type that identifies the CloudWatch alarm that you want Amazon Route 53 health checkers to use to determine whether this health check is healthy.
    AlarmName:
      type: string
      minLength: 1
      maxLength: 256
    AliasHealthEnabled:
      type: boolean
    AliasTarget:
      type: object
      required:
        - HostedZoneId
        - DNSName
        - EvaluateTargetHealth
      properties:
        HostedZoneId:
          $ref: '#/components/schemas/ResourceId'
        DNSName:
          $ref: '#/components/schemas/DNSName'
        EvaluateTargetHealth:
          $ref: '#/components/schemas/AliasHealthEnabled'
      description: '<p> <i>Alias resource record sets only:</i> Information about the CloudFront distribution, Elastic Beanstalk environment, ELB load balancer, Amazon S3 bucket, or Amazon Route 53 resource record set that you''re redirecting queries to. An Elastic Beanstalk environment must have a regionalized subdomain.</p> <p>When creating resource record sets for a private hosted zone, note the following:</p> <ul> <li> <p>Resource record sets can''t be created for CloudFront distributions in a private hosted zone.</p> </li> <li> <p>Creating geolocation alias resource record sets or latency alias resource record sets in a private hosted zone is unsupported.</p> </li> <li> <p>For information about creating failover resource record sets in a private hosted zone, see <a href="http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover-private-hosted-zones.html">Configuring Failover in a Private Hosted Zone</a>.</p> </li> </ul>'
    AssociateVPCComment:
      type: string
    AssociateVPCWithHostedZoneRequest:
      type: object
      required:
        - VPC
      example:
        Comment: ''
        HostedZoneId: Z3M3LMPEXAMPLE
        VPC:
          VPCId: vpc-1a2b3c4d
          VPCRegion: us-east-2
      properties:
        VPC:
          $ref: '#/components/schemas/VPC'
        Comment:
          $ref: '#/components/schemas/AssociateVPCComment'
      description: A complex type that contains information about the request to associate a VPC with a private hosted zone.
    AssociateVPCWithHostedZoneResponse:
      type: object
      required:
        - ChangeInfo
      example:
        ChangeInfo:
          Comment: ''
          Id: /change/C3HC6WDB2UANE2
          Status: INSYNC
          SubmittedAt: '2017-01-31T01:36:41.958Z'
      properties:
        ChangeInfo:
          $ref: '#/components/schemas/ChangeInfo'
      description: A complex type that contains the response information for the <code>AssociateVPCWithHostedZone</code> request.
    Change:
      type: object
      required:
        - Action
        - ResourceRecordSet
      properties:
        Action:
          $ref: '#/components/schemas/ChangeAction'
        ResourceRecordSet:
          $ref: '#/components/schemas/ResourceRecordSet'
      description: The information for each resource record set that you want to change.
    ChangeAction:
      type: string
      enum:
        - CREATE
        - DELETE
        - UPSERT
    ChangeBatch:
      type: object
      required:
        - Changes
      properties:
        Comment:
          $ref: '#/components/schemas/ResourceDescription'
        Changes:
          $ref: '#/components/schemas/Changes'
      description: The information for a change request.
    ChangeInfo:
      type: object
      required:
        - Id
        - Status
        - SubmittedAt
      properties:
        Id:
          $ref: '#/components/schemas/ResourceId'
        Status:
          $ref: '#/components/schemas/ChangeStatus'
        SubmittedAt:
          $ref: '#/components/schemas/TimeStamp'
        Comment:
          $ref: '#/components/schemas/ResourceDescription'
      description: A complex type that describes change information about changes made to your hosted zone.
    ChangeResourceRecordSetsRequest:
      type: object
      required:
        - ChangeBatch
      example:
        ChangeBatch:
          Changes:
            - Action: CREATE
              ResourceRecordSet:
                AliasTarget:
                  DNSName: 'example-com-123456789.us-east-2.elb.amazonaws.com '
                  EvaluateTargetHealth: true
                  HostedZoneId: Z3AADJGX6KTTL2
                GeoLocation:
                  ContinentCode: NA
                Name: example.com
                SetIdentifier: North America
                Type: A
            - Action: CREATE
              ResourceRecordSet:
                AliasTarget:
                  DNSName: 'example-com-234567890.sa-east-1.elb.amazonaws.com '
                  EvaluateTargetHealth: true
                  HostedZoneId: Z2P70J7HTTTPLU
                GeoLocation:
                  ContinentCode: SA
                Name: example.com
                SetIdentifier: South America
                Type: A
            - Action: CREATE
              ResourceRecordSet:
                AliasTarget:
                  DNSName: 'example-com-234567890.eu-central-1.elb.amazonaws.com '
                  EvaluateTargetHealth: true
                  HostedZoneId: Z215JYRZR1TBD5
                GeoLocation:
                  ContinentCode: EU
                Name: example.com
                SetIdentifier: Europe
                Type: A
            - Action: CREATE
              ResourceRecordSet:
                AliasTarget:
                  DNSName: 'example-com-234567890.ap-southeast-1.elb.amazonaws.com '
                  EvaluateTargetHealth: true
                  HostedZoneId: Z1LMS91P8CMLE5
                GeoLocation:
                  CountryCode: '*'
                Name: example.com
                SetIdentifier: Other locations
                Type: A
          Comment: Geolocation alias configuration for example.com
        HostedZoneId: Z3M3LMPEXAMPLE
      properties:
        ChangeBatch:
          $ref: '#/components/schemas/ChangeBatch'
      description: A complex type that contains change information for the resource record set.
    ChangeResourceRecordSetsResponse:
      type: object
      required:
        - ChangeInfo
      example:
        ChangeInfo:
          Comment: Geolocation alias configuration for example.com
          Id: /change/C2682N5HXP0BZ4
          Status: PENDING
          SubmittedAt: '2017-02-10T01:36:41.958Z'
      properties:
        ChangeInfo:
          $ref: '#/components/schemas/ChangeInfo'
      description: A complex type containing the response for the request.
    ChangeStatus:
      type: string
      enum:
        - PENDING
        - INSYNC
    ChangeTagsForResourceRequest:
      type: object
      example:
        AddTags:
          - Key: apex
            Value: '3874'
          - Key: acme
            Value: '4938'
        RemoveTagKeys:
          - Nadir
        ResourceId: Z3M3LMPEXAMPLE
        ResourceType: hostedzone
      properties:
        AddTags:
          $ref: '#/components/schemas/TagList'
        RemoveTagKeys:
          $ref: '#/components/schemas/TagKeyList'
      description: 'A complex type that contains information about the tags that you want to add, edit, or delete.'
    ChangeTagsForResourceResponse:
      type: object
      example: {}
      properties: {}
      description: Empty response for the request.
    Changes:
      type: array
      items:
        $ref: '#/components/schemas/Change'
      minItems: 1
    CheckerIpRanges:
      type: array
      items:
        $ref: '#/components/schemas/IPAddressCidr'
    ChildHealthCheckList:
      type: array
      items:
        $ref: '#/components/schemas/HealthCheckId'
      maxItems: 256
    CloudWatchAlarmConfiguration:
      type: object
      required:
        - EvaluationPeriods
        - Threshold
        - ComparisonOperator
        - Period
        - MetricName
        - Namespace
        - Statistic
      properties:
        EvaluationPeriods:
          $ref: '#/components/schemas/EvaluationPeriods'
        Threshold:
          $ref: '#/components/schemas/Threshold'
        ComparisonOperator:
          $ref: '#/components/schemas/ComparisonOperator'
        Period:
          $ref: '#/components/schemas/Period'
        MetricName:
          $ref: '#/components/schemas/MetricName'
        Namespace:
          $ref: '#/components/schemas/Namespace'
        Statistic:
          $ref: '#/components/schemas/Statistic'
        Dimensions:
          $ref: '#/components/schemas/DimensionList'
      description: A complex type that contains information about the CloudWatch alarm that Amazon Route 53 is monitoring for this health check.
    CloudWatchRegion:
      type: string
      enum:
        - us-east-1
        - us-east-2
        - us-west-1
        - us-west-2
        - ca-central-1
        - eu-central-1
        - eu-west-1
        - eu-west-2
        - ap-south-1
        - ap-southeast-1
        - ap-southeast-2
        - ap-northeast-1
        - ap-northeast-2
        - sa-east-1
      minLength: 1
      maxLength: 64
    ComparisonOperator:
      type: string
      enum:
        - GreaterThanOrEqualToThreshold
        - GreaterThanThreshold
        - LessThanThreshold
        - LessThanOrEqualToThreshold
    ConcurrentModification:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      description: 'Another user submitted a request to update the object at the same time that you did. Retry the request. '
    ConflictingDomainExists:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      description: '<p>The cause of this error depends on whether you''re trying to create a public or a private hosted zone:</p> <ul> <li> <p> <b>Public hosted zone:</b> Two hosted zones that have the same name or that have a parent/child relationship (example.com and test.example.com) can''t have any common name servers. You tried to create a hosted zone that has the same name as an existing hosted zone or that''s the parent or child of an existing hosted zone, and you specified a delegation set that shares one or more name servers with the existing hosted zone. </p> </li> <li> <p> <b>Private hosted zone:</b> You specified an Amazon VPC that you''re already using for another hosted zone, and the domain that you specified for one of the hosted zones is a subdomain of the domain that you specified for the other hosted zone. For example, you can''t use the same Amazon VPC for the hosted zones for example.com and test.example.com.</p> </li> </ul>'
    ConflictingTypes:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      description: 'You tried to update a traffic policy instance by using a traffic policy version that has a different DNS type than the current type for the instance. You specified the type in the JSON document in the <code>CreateTrafficPolicy</code> or <code>CreateTrafficPolicyVersion</code>request. '
    CreateHealthCheckRequest:
      type: object
      required:
        - CallerReference
        - HealthCheckConfig
      properties:
        CallerReference:
          $ref: '#/components/schemas/HealthCheckNonce'
        HealthCheckConfig:
          $ref: '#/components/schemas/HealthCheckConfig'
      description: A complex type that contains the health check request information.
    CreateHealthCheckResponse:
      type: object
      required:
        - HealthCheck
      properties:
        HealthCheck:
          $ref: '#/components/schemas/HealthCheck'
      description: A complex type containing the response information for the new health check.
    CreateHostedZoneRequest:
      type: object
      required:
        - Name
        - CallerReference
      properties:
        Name:
          $ref: '#/components/schemas/DNSName'
        VPC:
          $ref: '#/components/schemas/VPC'
        CallerReference:
          $ref: '#/components/schemas/Nonce'
        HostedZoneConfig:
          $ref: '#/components/schemas/HostedZoneConfig'
        DelegationSetId:
          $ref: '#/components/schemas/ResourceId'
      description: A complex type that contains information about the request to create a hosted zone.
    CreateHostedZoneResponse:
      type: object
      required:
        - HostedZone
        - ChangeInfo
        - DelegationSet
      properties:
        HostedZone:
          $ref: '#/components/schemas/HostedZone'
        ChangeInfo:
          $ref: '#/components/schemas/ChangeInfo'
        DelegationSet:
          $ref: '#/components/schemas/DelegationSet'
        VPC:
          $ref: '#/components/schemas/VPC'
      description: A complex type containing the response information for the hosted zone.
    CreateReusableDelegationSetRequest:
      type: object
      required:
        - CallerReference
      properties:
        CallerReference:
          $ref: '#/components/schemas/Nonce'
        HostedZoneId:
          $ref: '#/components/schemas/ResourceId'
    CreateReusableDelegationSetResponse:
      type: object
      required:
        - DelegationSet
      properties:
        DelegationSet:
          $ref: '#/components/schemas/DelegationSet'
    CreateTrafficPolicyInstanceRequest:
      type: object
      required:
        - HostedZoneId
        - Name
        - TTL
        - TrafficPolicyId
        - TrafficPolicyVersion
      properties:
        HostedZoneId:
          $ref: '#/components/schemas/ResourceId'
        Name:
          $ref: '#/components/schemas/DNSName'
        TTL:
          $ref: '#/components/schemas/TTL'
        TrafficPolicyId:
          $ref: '#/components/schemas/TrafficPolicyId'
        TrafficPolicyVersion:
          $ref: '#/components/schemas/TrafficPolicyVersion'
      description: A complex type that contains information about the resource record sets that you want to create based on a specified traffic policy.
    CreateTrafficPolicyInstanceResponse:
      type: object
      required:
        - TrafficPolicyInstance
      properties:
        TrafficPolicyInstance:
          $ref: '#/components/schemas/TrafficPolicyInstance'
      description: A complex type that contains the response information for the <code>CreateTrafficPolicyInstance</code> request.
    CreateTrafficPolicyRequest:
      type: object
      required:
        - Name
        - Document
      properties:
        Name:
          $ref: '#/components/schemas/TrafficPolicyName'
        Document:
          $ref: '#/components/schemas/TrafficPolicyDocument'
        Comment:
          $ref: '#/components/schemas/TrafficPolicyComment'
      description: A complex type that contains information about the traffic policy that you want to create.
    CreateTrafficPolicyResponse:
      type: object
      required:
        - TrafficPolicy
      properties:
        TrafficPolicy:
          $ref: '#/components/schemas/TrafficPolicy'
      description: A complex type that contains the response information for the <code>CreateTrafficPolicy</code> request.
    CreateTrafficPolicyVersionRequest:
      type: object
      required:
        - Document
      properties:
        Document:
          $ref: '#/components/schemas/TrafficPolicyDocument'
        Comment:
          $ref: '#/components/schemas/TrafficPolicyComment'
      description: A complex type that contains information about the traffic policy that you want to create a new version for.
    CreateTrafficPolicyVersionResponse:
      type: object
      required:
        - TrafficPolicy
      properties:
        TrafficPolicy:
          $ref: '#/components/schemas/TrafficPolicy'
      description: A complex type that contains the response information for the <code>CreateTrafficPolicyVersion</code> request.
    CreateVPCAssociationAuthorizationRequest:
      type: object
      required:
        - VPC
      properties:
        VPC:
          $ref: '#/components/schemas/VPC'
      description: A complex type that contains information about the request to authorize associating a VPC with your private hosted zone. Authorization is only required when a private hosted zone and a VPC were created by using different accounts.
    CreateVPCAssociationAuthorizationResponse:
      type: object
      required:
        - HostedZoneId
        - VPC
      properties:
        HostedZoneId:
          $ref: '#/components/schemas/ResourceId'
        VPC:
          $ref: '#/components/schemas/VPC'
      description: A complex type that contains the response information from a <code>CreateVPCAssociationAuthorization</code> request.
    DNSName:
      type: string
      maxLength: 1024
    DNSRCode:
      type: string
    DelegationSet:
      type: object
      required:
        - NameServers
      properties:
        Id:
          $ref: '#/components/schemas/ResourceId'
        CallerReference:
          $ref: '#/components/schemas/Nonce'
        NameServers:
          $ref: '#/components/schemas/DelegationSetNameServers'
      description: 'A complex type that lists the name servers in a delegation set, as well as the <code>CallerReference</code> and the <code>ID</code> for the delegation set.'
    DelegationSetAlreadyCreated:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      description: A delegation set with the same owner and caller reference combination has already been created.
    DelegationSetAlreadyReusable:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      description: The specified delegation set has already been marked as reusable.
    DelegationSetInUse:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      description: The specified delegation contains associated hosted zones which must be deleted before the reusable delegation set can be deleted.
    DelegationSetNameServers:
      type: array
      items:
        $ref: '#/components/schemas/DNSName'
      minItems: 1
    DelegationSetNotAvailable:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      description: 'You can create a hosted zone that has the same name as an existing hosted zone (example.com is common), but there is a limit to the number of hosted zones that have the same name. If you get this error, Amazon Route 53 has reached that limit. If you own the domain name and Amazon Route 53 generates this error, contact Customer Support.'
    DelegationSetNotReusable:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      description: A reusable delegation set with the specified ID does not exist.
    DelegationSets:
      type: array
      items:
        $ref: '#/components/schemas/DelegationSet'
    DeleteHealthCheckRequest:
      type: object
      properties: {}
      description: This action deletes a health check.
    DeleteHealthCheckResponse:
      type: object
      properties: {}
      description: An empty element.
    DeleteHostedZoneRequest:
      type: object
      properties: {}
      description: A request to delete a hosted zone.
    DeleteHostedZoneResponse:
      type: object
      required:
        - ChangeInfo
      properties:
        ChangeInfo:
          $ref: '#/components/schemas/ChangeInfo'
      description: A complex type that contains the response to a <code>DeleteHostedZone</code> request.
    DeleteReusableDelegationSetRequest:
      type: object
      properties: {}
      description: A request to delete a reusable delegation set.
    DeleteReusableDelegationSetResponse:
      type: object
      properties: {}
      description: An empty element.
    DeleteTrafficPolicyInstanceRequest:
      type: object
      properties: {}
      description: A request to delete a specified traffic policy instance.
    DeleteTrafficPolicyInstanceResponse:
      type: object
      properties: {}
      description: An empty element.
    DeleteTrafficPolicyRequest:
      type: object
      properties: {}
      description: A request to delete a specified traffic policy version.
    DeleteTrafficPolicyResponse:
      type: object
      properties: {}
      description: An empty element.
    DeleteVPCAssociationAuthorizationRequest:
      type: object
      required:
        - VPC
      properties:
        VPC:
          $ref: '#/components/schemas/VPC'
      description: 'A complex type that contains information about the request to remove authorization to associate a VPC that was created by one AWS account with a hosted zone that was created with a different AWS account. '
    DeleteVPCAssociationAuthorizationResponse:
      type: object
      properties: {}
      description: Empty response for the request.
    Dimension:
      type: object
      required:
        - Name
        - Value
      properties:
        Name:
          $ref: '#/components/schemas/DimensionField'
        Value:
          $ref: '#/components/schemas/DimensionField'
      description: 'For the metric that the CloudWatch alarm is associated with, a complex type that contains information about one dimension.'
    DimensionField:
      type: string
      minLength: 1
      maxLength: 255
    DimensionList:
      type: array
      items:
        $ref: '#/components/schemas/Dimension'
      maxItems: 10
    DisassociateVPCComment:
      type: string
    DisassociateVPCFromHostedZoneRequest:
      type: object
      required:
        - VPC
      properties:
        VPC:
          $ref: '#/components/schemas/VPC'
        Comment:
          $ref: '#/components/schemas/DisassociateVPCComment'
      description: A complex type that contains information about the VPC that you want to disassociate from a specified private hosted zone.
    DisassociateVPCFromHostedZoneResponse:
      type: object
      required:
        - ChangeInfo
      properties:
        ChangeInfo:
          $ref: '#/components/schemas/ChangeInfo'
      description: A complex type that contains the response information for the disassociate request.
    EnableSNI:
      type: boolean
    ErrorMessage:
      type: string
    ErrorMessages:
      type: array
      items:
        $ref: '#/components/schemas/ErrorMessage'
    EvaluationPeriods:
      type: integer
      minimum: 1
    FailureThreshold:
      type: integer
      minimum: 1
      maximum: 10
    FullyQualifiedDomainName:
      type: string
      maxLength: 255
    GeoLocation:
      type: object
      properties:
        ContinentCode:
          $ref: '#/components/schemas/GeoLocationContinentCode'
        CountryCode:
          $ref: '#/components/schemas/GeoLocationCountryCode'
        SubdivisionCode:
          $ref: '#/components/schemas/GeoLocationSubdivisionCode'
      description: A complex type that contains information about a geo location.
    GeoLocationContinentCode:
      type: string
      minLength: 2
      maxLength: 2
    GeoLocationContinentName:
      type: string
      minLength: 1
      maxLength: 32
    GeoLocationCountryCode:
      type: string
      minLength: 1
      maxLength: 2
    GeoLocationCountryName:
      type: string
      minLength: 1
      maxLength: 64
    GeoLocationDetails:
      type: object
      properties:
        ContinentCode:
          $ref: '#/components/schemas/GeoLocationContinentCode'
        ContinentName:
          $ref: '#/components/schemas/GeoLocationContinentName'
        CountryCode:
          $ref: '#/components/schemas/GeoLocationCountryCode'
        CountryName:
          $ref: '#/components/schemas/GeoLocationCountryName'
        SubdivisionCode:
          $ref: '#/components/schemas/GeoLocationSubdivisionCode'
        SubdivisionName:
          $ref: '#/components/schemas/GeoLocationSubdivisionName'
      description: 'A complex type that contains the codes and full continent, country, and subdivision names for the specified <code>geolocation</code> code.'
    GeoLocationDetailsList:
      type: array
      items:
        $ref: '#/components/schemas/GeoLocationDetails'
    GeoLocationSubdivisionCode:
      type: string
      minLength: 1
      maxLength: 3
    GeoLocationSubdivisionName:
      type: string
      minLength: 1
      maxLength: 64
    GetChangeRequest:
      type: object
      properties: {}
      description: The input for a GetChange request.
    GetChangeResponse:
      type: object
      required:
        - ChangeInfo
      properties:
        ChangeInfo:
          $ref: '#/components/schemas/ChangeInfo'
      description: A complex type that contains the <code>ChangeInfo</code> element.
    GetCheckerIpRangesRequest:
      type: object
      properties: {}
    GetCheckerIpRangesResponse:
      type: object
      required:
        - CheckerIpRanges
      properties:
        CheckerIpRanges:
          $ref: '#/components/schemas/CheckerIpRanges'
    GetGeoLocationRequest:
      type: object
      properties: {}
      description: A request for information about whether a specified geographic location is supported for Amazon Route 53 geolocation resource record sets.
    GetGeoLocationResponse:
      type: object
      required:
        - GeoLocationDetails
      properties:
        GeoLocationDetails:
          $ref: '#/components/schemas/GeoLocationDetails'
      description: A complex type that contains the response information for the specified geolocation code.
    GetHealthCheckCountRequest:
      type: object
      properties: {}
      description: A request for the number of health checks that are associated with the current AWS account.
    GetHealthCheckCountResponse:
      type: object
      required:
        - HealthCheckCount
      properties:
        HealthCheckCount:
          $ref: '#/components/schemas/HealthCheckCount'
      description: A complex type that contains the response to a <code>GetHealthCheckCount</code> request.
    GetHealthCheckLastFailureReasonRequest:
      type: object
      properties: {}
      description: A request for the reason that a health check failed most recently.
    GetHealthCheckLastFailureReasonResponse:
      type: object
      required:
        - HealthCheckObservations
      properties:
        HealthCheckObservations:
          $ref: '#/components/schemas/HealthCheckObservations'
      description: A complex type that contains the response to a <code>GetHealthCheckLastFailureReason</code> request.
    GetHealthCheckRequest:
      type: object
      properties: {}
      description: 'A request to get information about a specified health check. '
    GetHealthCheckResponse:
      type: object
      required:
        - HealthCheck
      properties:
        HealthCheck:
          $ref: '#/components/schemas/HealthCheck'
      description: A complex type that contains the response to a <code>GetHealthCheck</code> request.
    GetHealthCheckStatusRequest:
      type: object
      properties: {}
      description: A request to get the status for a health check.
    GetHealthCheckStatusResponse:
      type: object
      required:
        - HealthCheckObservations
      properties:
        HealthCheckObservations:
          $ref: '#/components/schemas/HealthCheckObservations'
      description: A complex type that contains the response to a <code>GetHealthCheck</code> request.
    GetHostedZoneCountRequest:
      type: object
      properties: {}
      description: A request to retrieve a count of all the hosted zones that are associated with the current AWS account.
    GetHostedZoneCountResponse:
      type: object
      required:
        - HostedZoneCount
      properties:
        HostedZoneCount:
          $ref: '#/components/schemas/HostedZoneCount'
      description: A complex type that contains the response to a <code>GetHostedZoneCount</code> request.
    GetHostedZoneRequest:
      type: object
      example:
        Id: Z3M3LMPEXAMPLE
      properties: {}
      description: 'A request to get information about a specified hosted zone. '
    GetHostedZoneResponse:
      type: object
      required:
        - HostedZone
      example:
        DelegationSet:
          NameServers:
            - ns-2048.awsdns-64.com
            - ns-2049.awsdns-65.net
            - ns-2050.awsdns-66.org
            - ns-2051.awsdns-67.co.uk
        HostedZone:
          CallerReference: C741617D-04E4-F8DE-B9D7-0D150FC61C2E
          Config:
            PrivateZone: false
          Id: /hostedzone/Z3M3LMPEXAMPLE
          Name: myawsbucket.com.
          ResourceRecordSetCount: 8
      properties:
        HostedZone:
          $ref: '#/components/schemas/HostedZone'
        DelegationSet:
          $ref: '#/components/schemas/DelegationSet'
        VPCs:
          $ref: '#/components/schemas/VPCs'
      description: A complex type that contain the response to a <code>GetHostedZone</code> request.
    GetReusableDelegationSetRequest:
      type: object
      properties: {}
      description: A request to get information about a specified reusable delegation set.
    GetReusableDelegationSetResponse:
      type: object
      required:
        - DelegationSet
      properties:
        DelegationSet:
          $ref: '#/components/schemas/DelegationSet'
      description: A complex type that contains the response to the <code>GetReusableDelegationSet</code> request.
    GetTrafficPolicyInstanceCountRequest:
      type: object
      properties: {}
      description: Request to get the number of traffic policy instances that are associated with the current AWS account.
    GetTrafficPolicyInstanceCountResponse:
      type: object
      required:
        - TrafficPolicyInstanceCount
      properties:
        TrafficPolicyInstanceCount:
          $ref: '#/components/schemas/TrafficPolicyInstanceCount'
      description: A complex type that contains information about the resource record sets that Amazon Route 53 created based on a specified traffic policy.
    GetTrafficPolicyInstanceRequest:
      type: object
      properties: {}
      description: Gets information about a specified traffic policy instance.
    GetTrafficPolicyInstanceResponse:
      type: object
      required:
        - TrafficPolicyInstance
      properties:
        TrafficPolicyInstance:
          $ref: '#/components/schemas/TrafficPolicyInstance'
      description: A complex type that contains information about the resource record sets that Amazon Route 53 created based on a specified traffic policy.
    GetTrafficPolicyRequest:
      type: object
      properties: {}
      description: Gets information about a specific traffic policy version.
    GetTrafficPolicyResponse:
      type: object
      required:
        - TrafficPolicy
      properties:
        TrafficPolicy:
          $ref: '#/components/schemas/TrafficPolicy'
      description: A complex type that contains the response information for the request.
    HealthCheck:
      type: object
      required:
        - Id
        - CallerReference
        - HealthCheckConfig
        - HealthCheckVersion
      properties:
        Id:
          $ref: '#/components/schemas/HealthCheckId'
        CallerReference:
          $ref: '#/components/schemas/HealthCheckNonce'
        HealthCheckConfig:
          $ref: '#/components/schemas/HealthCheckConfig'
        HealthCheckVersion:
          $ref: '#/components/schemas/HealthCheckVersion'
        CloudWatchAlarmConfiguration:
          $ref: '#/components/schemas/CloudWatchAlarmConfiguration'
      description: A complex type that contains information about one health check that is associated with the current AWS account.
    HealthCheckAlreadyExists:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      description: '<p> The health check you''re attempting to create already exists. Amazon Route 53 returns this error when you submit a request that has the following values:</p> <ul> <li> <p>The same value for <code>CallerReference</code> as an existing health check, and one or more values that differ from the existing health check that has the same caller reference.</p> </li> <li> <p>The same value for <code>CallerReference</code> as a health check that you created and later deleted, regardless of the other settings in the request.</p> </li> </ul>'
    HealthCheckConfig:
      type: object
      required:
        - Type
      properties:
        IPAddress:
          $ref: '#/components/schemas/IPAddress'
        Port:
          $ref: '#/components/schemas/Port'
        Type:
          $ref: '#/components/schemas/HealthCheckType'
        ResourcePath:
          $ref: '#/components/schemas/ResourcePath'
        FullyQualifiedDomainName:
          $ref: '#/components/schemas/FullyQualifiedDomainName'
        SearchString:
          $ref: '#/components/schemas/SearchString'
        RequestInterval:
          $ref: '#/components/schemas/RequestInterval'
        FailureThreshold:
          $ref: '#/components/schemas/FailureThreshold'
        MeasureLatency:
          $ref: '#/components/schemas/MeasureLatency'
        Inverted:
          $ref: '#/components/schemas/Inverted'
        HealthThreshold:
          $ref: '#/components/schemas/HealthThreshold'
        ChildHealthChecks:
          $ref: '#/components/schemas/ChildHealthCheckList'
        EnableSNI:
          $ref: '#/components/schemas/EnableSNI'
        Regions:
          $ref: '#/components/schemas/HealthCheckRegionList'
        AlarmIdentifier:
          $ref: '#/components/schemas/AlarmIdentifier'
        InsufficientDataHealthStatus:
          $ref: '#/components/schemas/InsufficientDataHealthStatus'
      description: A complex type that contains information about the health check.
    HealthCheckCount:
      type: integer
    HealthCheckId:
      type: string
      maxLength: 64
    HealthCheckInUse:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      description: This error code is not in use.
    HealthCheckNonce:
      type: string
      minLength: 1
      maxLength: 64
    HealthCheckObservation:
      type: object
      properties:
        Region:
          $ref: '#/components/schemas/HealthCheckRegion'
        IPAddress:
          $ref: '#/components/schemas/IPAddress'
        StatusReport:
          $ref: '#/components/schemas/StatusReport'
      description: A complex type that contains the last failure reason as reported by one Amazon Route 53 health checker.
    HealthCheckObservations:
      type: array
      items:
        $ref: '#/components/schemas/HealthCheckObservation'
    HealthCheckRegion:
      type: string
      enum:
        - us-east-1
        - us-west-1
        - us-west-2
        - eu-west-1
        - ap-southeast-1
        - ap-southeast-2
        - ap-northeast-1
        - sa-east-1
      minLength: 1
      maxLength: 64
    HealthCheckRegionList:
      type: array
      items:
        $ref: '#/components/schemas/HealthCheckRegion'
      minItems: 3
      maxItems: 64
    HealthCheckType:
      type: string
      enum:
        - HTTP
        - HTTPS
        - HTTP_STR_MATCH
        - HTTPS_STR_MATCH
        - TCP
        - CALCULATED
        - CLOUDWATCH_METRIC
    HealthCheckVersion:
      type: integer
      minimum: 1
    HealthCheckVersionMismatch:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      description: The value of <code>HealthCheckVersion</code> in the request doesn't match the value of <code>HealthCheckVersion</code> in the health check.
    HealthChecks:
      type: array
      items:
        $ref: '#/components/schemas/HealthCheck'
    HealthThreshold:
      type: integer
      minimum: 0
      maximum: 256
    HostedZone:
      type: object
      required:
        - Id
        - Name
        - CallerReference
      properties:
        Id:
          $ref: '#/components/schemas/ResourceId'
        Name:
          $ref: '#/components/schemas/DNSName'
        CallerReference:
          $ref: '#/components/schemas/Nonce'
        Config:
          $ref: '#/components/schemas/HostedZoneConfig'
        ResourceRecordSetCount:
          $ref: '#/components/schemas/HostedZoneRRSetCount'
      description: A complex type that contains general information about the hosted zone.
    HostedZoneAlreadyExists:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      description: The hosted zone you're trying to create already exists. Amazon Route 53 returns this error when a hosted zone has already been created with the specified <code>CallerReference</code>.
    HostedZoneConfig:
      type: object
      properties:
        Comment:
          $ref: '#/components/schemas/ResourceDescription'
        PrivateZone:
          $ref: '#/components/schemas/IsPrivateZone'
      description: 'A complex type that contains an optional comment about your hosted zone. If you don''t want to specify a comment, omit both the <code>HostedZoneConfig</code> and <code>Comment</code> elements.'
    HostedZoneCount:
      type: integer
    HostedZoneNotEmpty:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      description: The hosted zone contains resource records that are not SOA or NS records.
    HostedZoneNotFound:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      description: The specified HostedZone can't be found.
    HostedZoneRRSetCount:
      type: integer
    HostedZones:
      type: array
      items:
        $ref: '#/components/schemas/HostedZone'
    IPAddress:
      type: string
      pattern: '(^((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))$|^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))$)'
      maxLength: 45
    IPAddressCidr:
      type: string
    IncompatibleVersion:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      description: The resource you're trying to access is unsupported on this Amazon Route 53 endpoint.
    InsufficientDataHealthStatus:
      type: string
      enum:
        - Healthy
        - Unhealthy
        - LastKnownStatus
    InvalidArgument:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      description: Parameter name is invalid.
    InvalidChangeBatch:
      type: object
      properties:
        messages:
          $ref: '#/components/schemas/ErrorMessages'
        message:
          $ref: '#/components/schemas/ErrorMessage'
      description: This exception contains a list of messages that might contain one or more error messages. Each error message indicates one error in the change batch.
    InvalidDomainName:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      description: The specified domain name is not valid.
    InvalidInput:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      description: The input is not valid.
    InvalidPaginationToken:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
    InvalidTrafficPolicyDocument:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      description: The format of the traffic policy document that you specified in the <code>Document</code> element is invalid.
    InvalidVPCId:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      description: The VPC ID that you specified either isn't a valid ID or the current account is not authorized to access this VPC.
    Inverted:
      type: boolean
    IsPrivateZone:
      type: boolean
    LastVPCAssociation:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      description: The VPC that you're trying to disassociate from the private hosted zone is the last VPC that is associated with the hosted zone. Amazon Route 53 doesn't support disassociating the last VPC from a hosted zone.
    LimitsExceeded:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      description: The limits specified for a resource have been exceeded.
    ListGeoLocationsRequest:
      type: object
      properties: {}
      description: 'A request to get a list of geographic locations that Amazon Route 53 supports for geolocation resource record sets. '
    ListGeoLocationsResponse:
      type: object
      required:
        - GeoLocationDetailsList
        - IsTruncated
        - MaxItems
      properties:
        GeoLocationDetailsList:
          $ref: '#/components/schemas/GeoLocationDetailsList'
        IsTruncated:
          $ref: '#/components/schemas/PageTruncated'
        NextContinentCode:
          $ref: '#/components/schemas/GeoLocationContinentCode'
        NextCountryCode:
          $ref: '#/components/schemas/GeoLocationCountryCode'
        NextSubdivisionCode:
          $ref: '#/components/schemas/GeoLocationSubdivisionCode'
        MaxItems:
          $ref: '#/components/schemas/PageMaxItems'
      description: A complex type containing the response information for the request.
    ListHealthChecksRequest:
      type: object
      properties: {}
      description: A request to retrieve a list of the health checks that are associated with the current AWS account.
    ListHealthChecksResponse:
      type: object
      required:
        - HealthChecks
        - Marker
        - IsTruncated
        - MaxItems
      properties:
        HealthChecks:
          $ref: '#/components/schemas/HealthChecks'
        Marker:
          $ref: '#/components/schemas/PageMarker'
        IsTruncated:
          $ref: '#/components/schemas/PageTruncated'
        NextMarker:
          $ref: '#/components/schemas/PageMarker'
        MaxItems:
          $ref: '#/components/schemas/PageMaxItems'
      description: A complex type that contains the response to a <code>ListHealthChecks</code> request.
    ListHostedZonesByNameRequest:
      type: object
      properties: {}
      description: 'Retrieves a list of the public and private hosted zones that are associated with the current AWS account in ASCII order by domain name. '
    ListHostedZonesByNameResponse:
      type: object
      required:
        - HostedZones
        - IsTruncated
        - MaxItems
      properties:
        HostedZones:
          $ref: '#/components/schemas/HostedZones'
        DNSName:
          $ref: '#/components/schemas/DNSName'
        HostedZoneId:
          $ref: '#/components/schemas/ResourceId'
        IsTruncated:
          $ref: '#/components/schemas/PageTruncated'
        NextDNSName:
          $ref: '#/components/schemas/DNSName'
        NextHostedZoneId:
          $ref: '#/components/schemas/ResourceId'
        MaxItems:
          $ref: '#/components/schemas/PageMaxItems'
      description: A complex type that contains the response information for the request.
    ListHostedZonesRequest:
      type: object
      properties: {}
      description: A request to retrieve a list of the public and private hosted zones that are associated with the current AWS account.
    ListHostedZonesResponse:
      type: object
      required:
        - HostedZones
        - Marker
        - IsTruncated
        - MaxItems
      properties:
        HostedZones:
          $ref: '#/components/schemas/HostedZones'
        Marker:
          $ref: '#/components/schemas/PageMarker'
        IsTruncated:
          $ref: '#/components/schemas/PageTruncated'
        NextMarker:
          $ref: '#/components/schemas/PageMarker'
        MaxItems:
          $ref: '#/components/schemas/PageMaxItems'
    ListResourceRecordSetsRequest:
      type: object
      properties: {}
      description: A request for the resource record sets that are associated with a specified hosted zone.
    ListResourceRecordSetsResponse:
      type: object
      required:
        - ResourceRecordSets
        - IsTruncated
        - MaxItems
      properties:
        ResourceRecordSets:
          $ref: '#/components/schemas/ResourceRecordSets'
        IsTruncated:
          $ref: '#/components/schemas/PageTruncated'
        NextRecordName:
          $ref: '#/components/schemas/DNSName'
        NextRecordType:
          $ref: '#/components/schemas/RRType'
        NextRecordIdentifier:
          $ref: '#/components/schemas/ResourceRecordSetIdentifier'
        MaxItems:
          $ref: '#/components/schemas/PageMaxItems'
      description: A complex type that contains list information for the resource record set.
    ListReusableDelegationSetsRequest:
      type: object
      properties: {}
      description: A request to get a list of the reusable delegation sets that are associated with the current AWS account.
    ListReusableDelegationSetsResponse:
      type: object
      required:
        - DelegationSets
        - Marker
        - IsTruncated
        - MaxItems
      properties:
        DelegationSets:
          $ref: '#/components/schemas/DelegationSets'
        Marker:
          $ref: '#/components/schemas/PageMarker'
        IsTruncated:
          $ref: '#/components/schemas/PageTruncated'
        NextMarker:
          $ref: '#/components/schemas/PageMarker'
        MaxItems:
          $ref: '#/components/schemas/PageMaxItems'
      description: A complex type that contains information about the reusable delegation sets that are associated with the current AWS account.
    ListTagsForResourceRequest:
      type: object
      properties: {}
      description: A complex type containing information about a request for a list of the tags that are associated with an individual resource.
    ListTagsForResourceResponse:
      type: object
      required:
        - ResourceTagSet
      properties:
        ResourceTagSet:
          $ref: '#/components/schemas/ResourceTagSet'
      description: A complex type that contains information about the health checks or hosted zones for which you want to list tags.
    ListTagsForResourcesRequest:
      type: object
      required:
        - ResourceIds
      properties:
        ResourceIds:
          $ref: '#/components/schemas/TagResourceIdList'
      description: A complex type that contains information about the health checks or hosted zones for which you want to list tags.
    ListTagsForResourcesResponse:
      type: object
      required:
        - ResourceTagSets
      properties:
        ResourceTagSets:
          $ref: '#/components/schemas/ResourceTagSetList'
      description: A complex type containing tags for the specified resources.
    ListTrafficPoliciesRequest:
      type: object
      properties: {}
      description: A complex type that contains the information about the request to list the traffic policies that are associated with the current AWS account.
    ListTrafficPoliciesResponse:
      type: object
      required:
        - TrafficPolicySummaries
        - IsTruncated
        - TrafficPolicyIdMarker
        - MaxItems
      properties:
        TrafficPolicySummaries:
          $ref: '#/components/schemas/TrafficPolicySummaries'
        IsTruncated:
          $ref: '#/components/schemas/PageTruncated'
        TrafficPolicyIdMarker:
          $ref: '#/components/schemas/TrafficPolicyId'
        MaxItems:
          $ref: '#/components/schemas/PageMaxItems'
      description: A complex type that contains the response information for the request.
    ListTrafficPolicyInstancesByHostedZoneRequest:
      type: object
      properties: {}
      description: A request for the traffic policy instances that you created in a specified hosted zone.
    ListTrafficPolicyInstancesByHostedZoneResponse:
      type: object
      required:
        - TrafficPolicyInstances
        - IsTruncated
        - MaxItems
      properties:
        TrafficPolicyInstances:
          $ref: '#/components/schemas/TrafficPolicyInstances'
        TrafficPolicyInstanceNameMarker:
          $ref: '#/components/schemas/DNSName'
        TrafficPolicyInstanceTypeMarker:
          $ref: '#/components/schemas/RRType'
        IsTruncated:
          $ref: '#/components/schemas/PageTruncated'
        MaxItems:
          $ref: '#/components/schemas/PageMaxItems'
      description: A complex type that contains the response information for the request.
    ListTrafficPolicyInstancesByPolicyRequest:
      type: object
      properties: {}
      description: A complex type that contains the information about the request to list your traffic policy instances.
    ListTrafficPolicyInstancesByPolicyResponse:
      type: object
      required:
        - TrafficPolicyInstances
        - IsTruncated
        - MaxItems
      properties:
        TrafficPolicyInstances:
          $ref: '#/components/schemas/TrafficPolicyInstances'
        HostedZoneIdMarker:
          $ref: '#/components/schemas/ResourceId'
        TrafficPolicyInstanceNameMarker:
          $ref: '#/components/schemas/DNSName'
        TrafficPolicyInstanceTypeMarker:
          $ref: '#/components/schemas/RRType'
        IsTruncated:
          $ref: '#/components/schemas/PageTruncated'
        MaxItems:
          $ref: '#/components/schemas/PageMaxItems'
      description: A complex type that contains the response information for the request.
    ListTrafficPolicyInstancesRequest:
      type: object
      properties: {}
      description: A request to get information about the traffic policy instances that you created by using the current AWS account.
    ListTrafficPolicyInstancesResponse:
      type: object
      required:
        - TrafficPolicyInstances
        - IsTruncated
        - MaxItems
      properties:
        TrafficPolicyInstances:
          $ref: '#/components/schemas/TrafficPolicyInstances'
        HostedZoneIdMarker:
          $ref: '#/components/schemas/ResourceId'
        TrafficPolicyInstanceNameMarker:
          $ref: '#/components/schemas/DNSName'
        TrafficPolicyInstanceTypeMarker:
          $ref: '#/components/schemas/RRType'
        IsTruncated:
          $ref: '#/components/schemas/PageTruncated'
        MaxItems:
          $ref: '#/components/schemas/PageMaxItems'
      description: A complex type that contains the response information for the request.
    ListTrafficPolicyVersionsRequest:
      type: object
      properties: {}
      description: A complex type that contains the information about the request to list your traffic policies.
    ListTrafficPolicyVersionsResponse:
      type: object
      required:
        - TrafficPolicies
        - IsTruncated
        - TrafficPolicyVersionMarker
        - MaxItems
      properties:
        TrafficPolicies:
          $ref: '#/components/schemas/TrafficPolicies'
        IsTruncated:
          $ref: '#/components/schemas/PageTruncated'
        TrafficPolicyVersionMarker:
          $ref: '#/components/schemas/TrafficPolicyVersionMarker'
        MaxItems:
          $ref: '#/components/schemas/PageMaxItems'
      description: A complex type that contains the response information for the request.
    ListVPCAssociationAuthorizationsRequest:
      type: object
      properties: {}
      description: A complex type that contains information about that can be associated with your hosted zone.
    ListVPCAssociationAuthorizationsResponse:
      type: object
      required:
        - HostedZoneId
        - VPCs
      properties:
        HostedZoneId:
          $ref: '#/components/schemas/ResourceId'
        NextToken:
          $ref: '#/components/schemas/PaginationToken'
        VPCs:
          $ref: '#/components/schemas/VPCs'
      description: A complex type that contains the response information for the request.
    MaxResults:
      type: string
    MeasureLatency:
      type: boolean
    Message:
      type: string
      maxLength: 1024
    MetricName:
      type: string
      minLength: 1
      maxLength: 255
    Nameserver:
      type: string
      minLength: 0
      maxLength: 255
    Namespace:
      type: string
      minLength: 1
      maxLength: 255
    NoSuchChange:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      description: A change with the specified change ID does not exist.
    NoSuchDelegationSet:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      description: A reusable delegation set with the specified ID does not exist.
    NoSuchGeoLocation:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      description: Amazon Route 53 doesn't support the specified geolocation.
    NoSuchHealthCheck:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      description: No health check exists with the ID that you specified in the <code>DeleteHealthCheck</code> request.
    NoSuchHostedZone:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      description: No hosted zone exists with the ID that you specified.
    NoSuchTrafficPolicy:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      description: No traffic policy exists with the specified ID.
    NoSuchTrafficPolicyInstance:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      description: No traffic policy instance exists with the specified ID.
    Nonce:
      type: string
      minLength: 1
      maxLength: 128
    NotAuthorizedException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      description: Associating the specified VPC with the specified hosted zone has not been authorized.
    PageMarker:
      type: string
      maxLength: 64
    PageMaxItems:
      type: string
    PageTruncated:
      type: boolean
    PaginationToken:
      type: string
      maxLength: 256
    Period:
      type: integer
      minimum: 60
    Port:
      type: integer
      minimum: 1
      maximum: 65535
    PriorRequestNotComplete:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      description: 'If Amazon Route 53 can''t process a request before the next request arrives, it will reject subsequent requests for the same hosted zone and return an <code>HTTP 400 error</code> (<code>Bad request</code>). If Amazon Route 53 returns this error repeatedly for the same request, we recommend that you wait, in intervals of increasing duration, before you try the request again.'
    PublicZoneVPCAssociation:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      description: You're trying to associate a VPC with a public hosted zone. Amazon Route 53 doesn't support associating a VPC with a public hosted zone.
    RData:
      type: string
      maxLength: 4000
    RRType:
      type: string
      enum:
        - SOA
        - A
        - TXT
        - NS
        - CNAME
        - MX
        - NAPTR
        - PTR
        - SRV
        - SPF
        - AAAA
    RecordData:
      type: array
      items:
        $ref: '#/components/schemas/RecordDataEntry'
    RecordDataEntry:
      type: string
      description: '<p>A value that Amazon Route 53 returned for this resource record set. A <code>RecordDataEntry</code> element is one of the following:</p> <ul> <li> <p>For non-alias resource record sets, a <code>RecordDataEntry</code> element contains one value in the resource record set. If the resource record set contains multiple values, the response includes one <code>RecordDataEntry</code> element for each value.</p> </li> <li> <p>For multiple resource record sets that have the same name and type, which includes weighted, latency, geolocation, and failover, a <code>RecordDataEntry</code> element contains the value from the appropriate resource record set based on the request.</p> </li> <li> <p>For alias resource record sets that refer to AWS resources other than another resource record set, the <code>RecordDataEntry</code> element contains an IP address or a domain name for the AWS resource, depending on the type of resource.</p> </li> <li> <p>For alias resource record sets that refer to other resource record sets, a <code>RecordDataEntry</code> element contains one value from the referenced resource record set. If the referenced resource record set contains multiple values, the response includes one <code>RecordDataEntry</code> element for each value.</p> </li> </ul>'
      minLength: 0
      maxLength: 512
    RequestInterval:
      type: integer
      minimum: 10
      maximum: 30
    ResourceDescription:
      type: string
      maxLength: 256
    ResourceId:
      type: string
      maxLength: 32
    ResourcePath:
      type: string
      maxLength: 255
    ResourceRecord:
      type: object
      required:
        - Value
      properties:
        Value:
          $ref: '#/components/schemas/RData'
      description: '<p>Information specific to the resource record.</p> <note> <p>If you''re creating an alias resource record set, omit <code>ResourceRecord</code>.</p> </note>'
    ResourceRecordSet:
      type: object
      required:
        - Name
        - Type
      properties:
        Name:
          $ref: '#/components/schemas/DNSName'
        Type:
          $ref: '#/components/schemas/RRType'
        SetIdentifier:
          $ref: '#/components/schemas/ResourceRecordSetIdentifier'
        Weight:
          $ref: '#/components/schemas/ResourceRecordSetWeight'
        Region:
          $ref: '#/components/schemas/ResourceRecordSetRegion'
        GeoLocation:
          $ref: '#/components/schemas/GeoLocation'
        Failover:
          $ref: '#/components/schemas/ResourceRecordSetFailover'
        MultiValueAnswer:
          $ref: '#/components/schemas/ResourceRecordSetMultiValueAnswer'
        TTL:
          $ref: '#/components/schemas/TTL'
        ResourceRecords:
          $ref: '#/components/schemas/ResourceRecords'
        AliasTarget:
          $ref: '#/components/schemas/AliasTarget'
        HealthCheckId:
          $ref: '#/components/schemas/HealthCheckId'
        TrafficPolicyInstanceId:
          $ref: '#/components/schemas/TrafficPolicyInstanceId'
      description: Information about the resource record set to create or delete.
    ResourceRecordSetFailover:
      type: string
      enum:
        - PRIMARY
        - SECONDARY
    ResourceRecordSetIdentifier:
      type: string
      minLength: 1
      maxLength: 128
    ResourceRecordSetMultiValueAnswer:
      type: boolean
    ResourceRecordSetRegion:
      type: string
      enum:
        - us-east-1
        - us-east-2
        - us-west-1
        - us-west-2
        - ca-central-1
        - eu-west-1
        - eu-west-2
        - eu-central-1
        - ap-southeast-1
        - ap-southeast-2
        - ap-northeast-1
        - ap-northeast-2
        - sa-east-1
        - cn-north-1
        - ap-south-1
      minLength: 1
      maxLength: 64
    ResourceRecordSetWeight:
      type: integer
      minimum: 0
      maximum: 255
    ResourceRecordSets:
      type: array
      items:
        $ref: '#/components/schemas/ResourceRecordSet'
    ResourceRecords:
      type: array
      items:
        $ref: '#/components/schemas/ResourceRecord'
      minItems: 1
    ResourceTagSet:
      type: object
      properties:
        ResourceType:
          $ref: '#/components/schemas/TagResourceType'
        ResourceId:
          $ref: '#/components/schemas/TagResourceId'
        Tags:
          $ref: '#/components/schemas/TagList'
      description: A complex type containing a resource and its associated tags.
    ResourceTagSetList:
      type: array
      items:
        $ref: '#/components/schemas/ResourceTagSet'
    ResourceURI:
      type: string
      maxLength: 1024
    SearchString:
      type: string
      maxLength: 255
    Statistic:
      type: string
      enum:
        - Average
        - Sum
        - SampleCount
        - Maximum
        - Minimum
    Status:
      type: string
    StatusReport:
      type: object
      properties:
        Status:
          $ref: '#/components/schemas/Status'
        CheckedTime:
          $ref: '#/components/schemas/TimeStamp'
      description: A complex type that contains the status that one Amazon Route 53 health checker reports and the time of the health check.
    SubnetMask:
      type: string
      minLength: 0
      maxLength: 3
    TTL:
      type: integer
      minimum: 0
      maximum: 2147483647
    Tag:
      type: object
      properties:
        Key:
          $ref: '#/components/schemas/TagKey'
        Value:
          $ref: '#/components/schemas/TagValue'
      description: A complex type that contains information about a tag that you want to add or edit for the specified health check or hosted zone.
    TagKey:
      type: string
      maxLength: 128
    TagKeyList:
      type: array
      items:
        $ref: '#/components/schemas/TagKey'
      minItems: 1
      maxItems: 10
    TagList:
      type: array
      items:
        $ref: '#/components/schemas/Tag'
      minItems: 1
      maxItems: 10
    TagResourceId:
      type: string
      maxLength: 64
    TagResourceIdList:
      type: array
      items:
        $ref: '#/components/schemas/TagResourceId'
      minItems: 1
      maxItems: 10
    TagResourceType:
      type: string
      enum:
        - healthcheck
        - hostedzone
    TagValue:
      type: string
      maxLength: 256
    TestDNSAnswerRequest:
      type: object
      properties: {}
      description: 'Gets the value that Amazon Route 53 returns in response to a DNS request for a specified record name and type. You can optionally specify the IP address of a DNS resolver, an EDNS0 client subnet IP address, and a subnet mask. '
    TestDNSAnswerResponse:
      type: object
      required:
        - Nameserver
        - RecordName
        - RecordType
        - RecordData
        - ResponseCode
        - Protocol
      properties:
        Nameserver:
          $ref: '#/components/schemas/Nameserver'
        RecordName:
          $ref: '#/components/schemas/DNSName'
        RecordType:
          $ref: '#/components/schemas/RRType'
        RecordData:
          $ref: '#/components/schemas/RecordData'
        ResponseCode:
          $ref: '#/components/schemas/DNSRCode'
        Protocol:
          $ref: '#/components/schemas/TransportProtocol'
      description: 'A complex type that contains the response to a <code>TestDNSAnswer</code> request. '
    Threshold:
      type: number
      format: double
    ThrottlingException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      description: The limit on the number of requests per second was exceeded.
    TimeStamp:
      type: string
      format: date-time
    TooManyHealthChecks:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      description: 'You have reached the maximum number of active health checks for an AWS account. The default limit is 100. To request a higher limit, <a href="http://aws.amazon.com/route53-request">create a case</a> with the AWS Support Center.'
    TooManyHostedZones:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      description: 'This hosted zone can''t be created because the hosted zone limit is exceeded. To request a limit increase, go to the Amazon Route 53 <a href="http://aws.amazon.com/route53-request/">Contact Us</a> page.'
    TooManyTrafficPolicies:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      description: 'You''ve created the maximum number of traffic policies that can be created for the current AWS account. You can request an increase to the limit on the <a href="http://aws.amazon.com/route53-request/">Contact Us</a> page.'
    TooManyTrafficPolicyInstances:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      description: 'You''ve created the maximum number of traffic policy instances that can be created for the current AWS account. You can request an increase to the limit on the <a href="http://aws.amazon.com/route53-request/">Contact Us</a> page.'
    TooManyVPCAssociationAuthorizations:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      description: 'You''ve created the maximum number of authorizations that can be created for the specified hosted zone. To authorize another VPC to be associated with the hosted zone, submit a <code>DeleteVPCAssociationAuthorization</code> request to remove an existing authorization. To get a list of existing authorizations, submit a <code>ListVPCAssociationAuthorizations</code> request.'
    TrafficPolicies:
      type: array
      items:
        $ref: '#/components/schemas/TrafficPolicy'
    TrafficPolicy:
      type: object
      required:
        - Id
        - Version
        - Name
        - Type
        - Document
      properties:
        Id:
          $ref: '#/components/schemas/TrafficPolicyId'
        Version:
          $ref: '#/components/schemas/TrafficPolicyVersion'
        Name:
          $ref: '#/components/schemas/TrafficPolicyName'
        Type:
          $ref: '#/components/schemas/RRType'
        Document:
          $ref: '#/components/schemas/TrafficPolicyDocument'
        Comment:
          $ref: '#/components/schemas/TrafficPolicyComment'
      description: A complex type that contains settings for a traffic policy.
    TrafficPolicyAlreadyExists:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      description: A traffic policy that has the same value for <code>Name</code> already exists.
    TrafficPolicyComment:
      type: string
      maxLength: 1024
    TrafficPolicyDocument:
      type: string
      maxLength: 102400
    TrafficPolicyId:
      type: string
      minLength: 1
      maxLength: 36
    TrafficPolicyInUse:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      description: One or more traffic policy instances were created by using the specified traffic policy.
    TrafficPolicyInstance:
      type: object
      required:
        - Id
        - HostedZoneId
        - Name
        - TTL
        - State
        - Message
        - TrafficPolicyId
        - TrafficPolicyVersion
        - TrafficPolicyType
      properties:
        Id:
          $ref: '#/components/schemas/TrafficPolicyInstanceId'
        HostedZoneId:
          $ref: '#/components/schemas/ResourceId'
        Name:
          $ref: '#/components/schemas/DNSName'
        TTL:
          $ref: '#/components/schemas/TTL'
        State:
          $ref: '#/components/schemas/TrafficPolicyInstanceState'
        Message:
          $ref: '#/components/schemas/Message'
        TrafficPolicyId:
          $ref: '#/components/schemas/TrafficPolicyId'
        TrafficPolicyVersion:
          $ref: '#/components/schemas/TrafficPolicyVersion'
        TrafficPolicyType:
          $ref: '#/components/schemas/RRType'
      description: A complex type that contains settings for the new traffic policy instance.
    TrafficPolicyInstanceAlreadyExists:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      description: Traffic policy instance with given Id already exists.
    TrafficPolicyInstanceCount:
      type: integer
    TrafficPolicyInstanceId:
      type: string
      minLength: 1
      maxLength: 36
    TrafficPolicyInstanceState:
      type: string
    TrafficPolicyInstances:
      type: array
      items:
        $ref: '#/components/schemas/TrafficPolicyInstance'
    TrafficPolicyName:
      type: string
      maxLength: 512
    TrafficPolicySummaries:
      type: array
      items:
        $ref: '#/components/schemas/TrafficPolicySummary'
    TrafficPolicySummary:
      type: object
      required:
        - Id
        - Name
        - Type
        - LatestVersion
        - TrafficPolicyCount
      properties:
        Id:
          $ref: '#/components/schemas/TrafficPolicyId'
        Name:
          $ref: '#/components/schemas/TrafficPolicyName'
        Type:
          $ref: '#/components/schemas/RRType'
        LatestVersion:
          $ref: '#/components/schemas/TrafficPolicyVersion'
        TrafficPolicyCount:
          $ref: '#/components/schemas/TrafficPolicyVersion'
      description: A complex type that contains information about the latest version of one traffic policy that is associated with the current AWS account.
    TrafficPolicyVersion:
      type: integer
      minimum: 1
      maximum: 1000
    TrafficPolicyVersionMarker:
      type: string
      maxLength: 4
    TransportProtocol:
      type: string
    UpdateHealthCheckRequest:
      type: object
      properties:
        HealthCheckVersion:
          $ref: '#/components/schemas/HealthCheckVersion'
        IPAddress:
          $ref: '#/components/schemas/IPAddress'
        Port:
          $ref: '#/components/schemas/Port'
        ResourcePath:
          $ref: '#/components/schemas/ResourcePath'
        FullyQualifiedDomainName:
          $ref: '#/components/schemas/FullyQualifiedDomainName'
        SearchString:
          $ref: '#/components/schemas/SearchString'
        FailureThreshold:
          $ref: '#/components/schemas/FailureThreshold'
        Inverted:
          $ref: '#/components/schemas/Inverted'
        HealthThreshold:
          $ref: '#/components/schemas/HealthThreshold'
        ChildHealthChecks:
          $ref: '#/components/schemas/ChildHealthCheckList'
        EnableSNI:
          $ref: '#/components/schemas/EnableSNI'
        Regions:
          $ref: '#/components/schemas/HealthCheckRegionList'
        AlarmIdentifier:
          $ref: '#/components/schemas/AlarmIdentifier'
        InsufficientDataHealthStatus:
          $ref: '#/components/schemas/InsufficientDataHealthStatus'
      description: A complex type that contains information about a request to update a health check.
    UpdateHealthCheckResponse:
      type: object
      required:
        - HealthCheck
      properties:
        HealthCheck:
          $ref: '#/components/schemas/HealthCheck'
    UpdateHostedZoneCommentRequest:
      type: object
      properties:
        Comment:
          $ref: '#/components/schemas/ResourceDescription'
      description: A request to update the comment for a hosted zone.
    UpdateHostedZoneCommentResponse:
      type: object
      required:
        - HostedZone
      properties:
        HostedZone:
          $ref: '#/components/schemas/HostedZone'
      description: A complex type that contains the response to the <code>UpdateHostedZoneComment</code> request.
    UpdateTrafficPolicyCommentRequest:
      type: object
      required:
        - Comment
      properties:
        Comment:
          $ref: '#/components/schemas/TrafficPolicyComment'
      description: A complex type that contains information about the traffic policy that you want to update the comment for.
    UpdateTrafficPolicyCommentResponse:
      type: object
      required:
        - TrafficPolicy
      properties:
        TrafficPolicy:
          $ref: '#/components/schemas/TrafficPolicy'
      description: A complex type that contains the response information for the traffic policy.
    UpdateTrafficPolicyInstanceRequest:
      type: object
      required:
        - TTL
        - TrafficPolicyId
        - TrafficPolicyVersion
      properties:
        TTL:
          $ref: '#/components/schemas/TTL'
        TrafficPolicyId:
          $ref: '#/components/schemas/TrafficPolicyId'
        TrafficPolicyVersion:
          $ref: '#/components/schemas/TrafficPolicyVersion'
      description: A complex type that contains information about the resource record sets that you want to update based on a specified traffic policy instance.
    UpdateTrafficPolicyInstanceResponse:
      type: object
      required:
        - TrafficPolicyInstance
      properties:
        TrafficPolicyInstance:
          $ref: '#/components/schemas/TrafficPolicyInstance'
      description: A complex type that contains information about the resource record sets that Amazon Route 53 created based on a specified traffic policy.
    VPC:
      type: object
      properties:
        VPCRegion:
          $ref: '#/components/schemas/VPCRegion'
        VPCId:
          $ref: '#/components/schemas/VPCId'
      description: (Private hosted zones only) A complex type that contains information about an Amazon VPC.
    VPCAssociationAuthorizationNotFound:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      description: The VPC that you specified is not authorized to be associated with the hosted zone.
    VPCAssociationNotFound:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      description: The specified VPC and hosted zone are not currently associated.
    VPCId:
      type: string
      description: '(Private hosted zones only) The ID of an Amazon VPC. '
      maxLength: 1024
    VPCRegion:
      type: string
      enum:
        - us-east-1
        - us-east-2
        - us-west-1
        - us-west-2
        - eu-west-1
        - eu-west-2
        - eu-central-1
        - ap-southeast-1
        - ap-southeast-2
        - ap-south-1
        - ap-northeast-1
        - ap-northeast-2
        - sa-east-1
        - ca-central-1
        - cn-north-1
      minLength: 1
      maxLength: 64
    VPCs:
      type: array
      description: (Private hosted zones only) A list of <code>VPC</code> elements.
      items:
        $ref: '#/components/schemas/VPC'
      minItems: 1
  parameters:
    Action:
      name: Action
      in: header
      required: true
      schema:
        type: string
    Version:
      name: Version
      in: header
      required: true
      schema:
        type: string
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      required: false
      schema:
        type: string
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      required: false
      schema:
        type: string
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      required: false
      schema:
        type: string
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      required: false
      schema:
        type: string
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      required: false
      schema:
        type: string
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      required: false
      schema:
        type: string
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      required: false
      schema:
        type: string
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
