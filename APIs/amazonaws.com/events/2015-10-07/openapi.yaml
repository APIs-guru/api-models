openapi: 3.0.0
servers:
  - url: 'http://events.amazonaws.com/'
info:
  version: '2015-10-07'
  x-release: v4
  title: Amazon CloudWatch Events
  description: '<p>Amazon CloudWatch Events helps you to respond to state changes in your AWS resources. When your resources change state, they automatically send events into an event stream. You can create rules that match selected events in the stream and route them to targets to take action. You can also use rules to take action on a pre-determined schedule. For example, you can configure rules to:</p> <ul> <li> <p>Automatically invoke an AWS Lambda function to update DNS entries when an event notifies you that Amazon EC2 instance enters the running state.</p> </li> <li> <p>Direct specific API records from CloudTrail to an Amazon Kinesis stream for detailed analysis of potential security or availability risks.</p> </li> <li> <p>Periodically invoke a built-in target to create a snapshot of an Amazon EBS volume.</p> </li> </ul> <p>For more information about the features of Amazon CloudWatch Events, see the <a href="http://docs.aws.amazon.com/AmazonCloudWatch/latest/events">Amazon CloudWatch Events User Guide</a>.</p>'
  x-logo:
    url: 'https://media.amazonwebservices.com/blog/2007/big_pbaws_logo_300px.jpg'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: events
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/events-2015-10-07.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-direct: true
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://aws.amazon.com/events/'
x-hasEquivalentPaths: true
security:
  - hmac: []
paths:
  /:
    post:
      operationId: DeleteRule
      description: '<p>Deletes the specified rule.</p> <p>You must remove all targets from a rule using <a>RemoveTargets</a> before you can delete the rule.</p> <p>When you delete a rule, incoming events might continue to match to the deleted rule. Please allow a short period of time for changes to take effect.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
        '481':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteRuleRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DescribeEventBus':
    post:
      operationId: DescribeEventBus
      description: 'Displays the external AWS accounts that are permitted to write events to your account using your account''s event bus, and the associated policy. To enable your account to receive events from other accounts, use <a>PutPermission</a>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeEventBusResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeEventBusRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DescribeRule':
    post:
      operationId: DescribeRule
      description: Describes the specified rule.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeRuleResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeRuleRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DisableRule':
    post:
      operationId: DisableRule
      description: '<p>Disables the specified rule. A disabled rule won''t match any events, and won''t self-trigger if it has a schedule expression.</p> <p>When you disable a rule, incoming events might continue to match to the disabled rule. Please allow a short period of time for changes to take effect.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
        '482':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisableRuleRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#EnableRule':
    post:
      operationId: EnableRule
      description: '<p>Enables the specified rule. If the rule does not exist, the operation fails.</p> <p>When you enable a rule, incoming events might not immediately start matching to a newly enabled rule. Please allow a short period of time for changes to take effect.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
        '482':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnableRuleRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#ListRuleNamesByTarget':
    post:
      operationId: ListRuleNamesByTarget
      description: Lists the rules for the specified target. You can see which of the rules in Amazon CloudWatch Events can invoke a specific target in your account.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRuleNamesByTargetResponse'
        '480':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListRuleNamesByTargetRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#ListRules':
    post:
      operationId: ListRules
      description: Lists your Amazon CloudWatch Events rules. You can either list all the rules or you can provide a prefix to match to the rule names.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRulesResponse'
        '480':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListRulesRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#ListTargetsByRule':
    post:
      operationId: ListTargetsByRule
      description: Lists the targets assigned to the specified rule.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTargetsByRuleResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListTargetsByRuleRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#PutEvents':
    post:
      operationId: PutEvents
      description: Sends custom events to Amazon CloudWatch Events so that they can be matched to rules.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutEventsResponse'
        '480':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutEventsRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#PutPermission':
    post:
      operationId: PutPermission
      description: '<p>Running <code>PutPermission</code> permits the specified AWS account to put events to your account''s default <i>event bus</i>. CloudWatch Events rules in your account are triggered by these events arriving to your default event bus. </p> <p>For another account to send events to your account, that external account must have a CloudWatch Events rule with your account''s default event bus as a target.</p> <p>To enable multiple AWS accounts to put events to your default event bus, run <code>PutPermission</code> once for each of these accounts.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: PolicyLengthExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyLengthExceededException'
        '482':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutPermissionRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#PutRule':
    post:
      operationId: PutRule
      description: '<p>Creates or updates the specified rule. Rules are enabled by default, or based on value of the state. You can disable a rule using <a>DisableRule</a>.</p> <p>When you create or update a rule, incoming events might not immediately start matching to new or updated rules. Please allow a short period of time for changes to take effect.</p> <p>A rule must contain at least an EventPattern or ScheduleExpression. Rules with EventPatterns are triggered when a matching event is observed. Rules with ScheduleExpressions self-trigger based on the given schedule. A rule can have both an EventPattern and a ScheduleExpression, in which case the rule triggers on matching events as well as on a schedule.</p> <p>Most services in AWS treat : or / as the same character in Amazon Resource Names (ARNs). However, CloudWatch Events uses an exact match in event patterns and rules. Be sure to use the correct ARN characters when creating event patterns so that they match the ARN syntax in the event you want to match.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutRuleResponse'
        '480':
          description: InvalidEventPatternException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidEventPatternException'
        '481':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '482':
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
        '483':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutRuleRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#PutTargets':
    post:
      operationId: PutTargets
      description: '<p>Adds the specified targets to the specified rule, or updates the targets if they are already associated with the rule.</p> <p>Targets are the resources that are invoked when a rule is triggered.</p> <p>You can configure the following as targets for CloudWatch Events:</p> <ul> <li> <p>EC2 instances</p> </li> <li> <p>AWS Lambda functions</p> </li> <li> <p>Streams in Amazon Kinesis Streams</p> </li> <li> <p>Delivery streams in Amazon Kinesis Firehose</p> </li> <li> <p>Amazon ECS tasks</p> </li> <li> <p>AWS Step Functions state machines</p> </li> <li> <p>Amazon SNS topics</p> </li> <li> <p>Amazon SQS queues</p> </li> </ul> <p>Note that creating rules with built-in targets is supported only in the AWS Management Console.</p> <p>For some target types, <code>PutTargets</code> provides target-specific parameters. If the target is an Amazon Kinesis stream, you can optionally specify which shard the event goes to by using the <code>KinesisParameters</code> argument. To invoke a command on multiple EC2 instances with one rule, you can use the <code>RunCommandParameters</code> field.</p> <p>To be able to make API calls against the resources that you own, Amazon CloudWatch Events needs the appropriate permissions. For AWS Lambda and Amazon SNS resources, CloudWatch Events relies on resource-based policies. For EC2 instances, Amazon Kinesis streams, and AWS Step Functions state machines, CloudWatch Events relies on IAM roles that you specify in the <code>RoleARN</code> argument in <code>PutTargets</code>. For more information, see <a href="http://docs.aws.amazon.com/AmazonCloudWatch/latest/events/auth-and-access-control-cwe.html">Authentication and Access Control</a> in the <i>Amazon CloudWatch Events User Guide</i>.</p> <p>If another AWS account is in the same region and has granted you permission (using <code>PutPermission</code>), you can set that account''s event bus as a target of the rules in your account. To send the matched events to the other account, specify that account''s event bus as the <code>Arn</code> when you run <code>PutTargets</code>. For more information about enabling cross-account events, see <a>PutPermission</a>.</p> <p> <b>Input</b>, <b>InputPath</b> and <b>InputTransformer</b> are mutually exclusive and optional parameters of a target. When a rule is triggered due to a matched event:</p> <ul> <li> <p>If none of the following arguments are specified for a target, then the entire event is passed to the target in JSON form (unless the target is Amazon EC2 Run Command or Amazon ECS task, in which case nothing from the event is passed to the target).</p> </li> <li> <p>If <b>Input</b> is specified in the form of valid JSON, then the matched event is overridden with this constant.</p> </li> <li> <p>If <b>InputPath</b> is specified in the form of JSONPath (for example, <code>$.detail</code>), then only the part of the event specified in the path is passed to the target (for example, only the detail part of the event is passed).</p> </li> <li> <p>If <b>InputTransformer</b> is specified, then one or more specified JSONPaths are extracted from the event and used as values in a template that you specify as the input to the target.</p> </li> </ul> <p>When you specify <code>Input</code>, <code>InputPath</code>, or <code>InputTransformer</code>, you must use JSON dot notation, not bracket notation.</p> <p>When you add targets to a rule and the associated rule triggers soon after, new or updated targets might not be immediately invoked. Please allow a short period of time for changes to take effect.</p> <p>This action can partially fail if too many requests are made at the same time. If that happens, <code>FailedEntryCount</code> is non-zero in the response and each entry in <code>FailedEntries</code> provides the ID of the failed target and the error code.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutTargetsResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
        '482':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '483':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutTargetsRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#RemovePermission':
    post:
      operationId: RemovePermission
      description: Revokes the permission of another AWS account to be able to put events to your default event bus. Specify the account to revoke by the <code>StatementId</code> value that you associated with the account when you granted it permission with <code>PutPermission</code>. You can find the <code>StatementId</code> by using <a>DescribeEventBus</a>.
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemovePermissionRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#RemoveTargets':
    post:
      operationId: RemoveTargets
      description: '<p>Removes the specified targets from the specified rule. When the rule is triggered, those targets are no longer be invoked.</p> <p>When you remove a target, when the associated rule triggers, removed targets might continue to be invoked. Please allow a short period of time for changes to take effect.</p> <p>This action can partially fail if too many requests are made at the same time. If that happens, <code>FailedEntryCount</code> is non-zero in the response and each entry in <code>FailedEntries</code> provides the ID of the failed target and the error code.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoveTargetsResponse'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
        '482':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoveTargetsRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#TestEventPattern':
    post:
      operationId: TestEventPattern
      description: '<p>Tests whether the specified event pattern matches the provided event.</p> <p>Most services in AWS treat : or / as the same character in Amazon Resource Names (ARNs). However, CloudWatch Events uses an exact match in event patterns and rules. Be sure to use the correct ARN characters when creating event patterns so that they match the ARN syntax in the event you want to match.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestEventPatternResponse'
        '480':
          description: InvalidEventPatternException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidEventPatternException'
        '481':
          description: InternalException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestEventPatternRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
components:
  schemas:
    Action:
      type: string
      pattern: 'events:[a-zA-Z]+'
      minLength: 1
      maxLength: 64
    Arn:
      type: string
      minLength: 1
      maxLength: 1600
    Boolean:
      type: boolean
    ConcurrentModificationException:
      type: object
      properties: {}
      description: There is concurrent modification on a rule or target.
    DeleteRuleRequest:
      type: object
      required:
        - Name
      properties:
        Name:
          $ref: '#/components/schemas/RuleName'
    DescribeEventBusRequest:
      type: object
      properties: {}
    DescribeEventBusResponse:
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/String'
        Arn:
          $ref: '#/components/schemas/String'
        Policy:
          $ref: '#/components/schemas/String'
    DescribeRuleRequest:
      type: object
      required:
        - Name
      properties:
        Name:
          $ref: '#/components/schemas/RuleName'
    DescribeRuleResponse:
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/RuleName'
        Arn:
          $ref: '#/components/schemas/RuleArn'
        EventPattern:
          $ref: '#/components/schemas/EventPattern'
        ScheduleExpression:
          $ref: '#/components/schemas/ScheduleExpression'
        State:
          $ref: '#/components/schemas/RuleState'
        Description:
          $ref: '#/components/schemas/RuleDescription'
        RoleArn:
          $ref: '#/components/schemas/RoleArn'
    DisableRuleRequest:
      type: object
      required:
        - Name
      properties:
        Name:
          $ref: '#/components/schemas/RuleName'
    EcsParameters:
      type: object
      required:
        - TaskDefinitionArn
      properties:
        TaskDefinitionArn:
          $ref: '#/components/schemas/Arn'
        TaskCount:
          $ref: '#/components/schemas/LimitMin1'
      description: The custom parameters to be used when the target is an Amazon ECS cluster.
    EnableRuleRequest:
      type: object
      required:
        - Name
      properties:
        Name:
          $ref: '#/components/schemas/RuleName'
    ErrorCode:
      type: string
    ErrorMessage:
      type: string
    EventId:
      type: string
    EventPattern:
      type: string
      maxLength: 2048
    EventResource:
      type: string
    EventResourceList:
      type: array
      items:
        $ref: '#/components/schemas/EventResource'
    EventTime:
      type: string
      format: date-time
    InputTransformer:
      type: object
      required:
        - InputTemplate
      properties:
        InputPathsMap:
          $ref: '#/components/schemas/TransformerPaths'
        InputTemplate:
          $ref: '#/components/schemas/TransformerInput'
      description: Contains the parameters needed for you to provide custom input to a target based on one or more pieces of data extracted from the event.
    InputTransformerPathKey:
      type: string
      pattern: '[A-Za-z0-9\_\-]+'
      minLength: 1
      maxLength: 256
    Integer:
      type: integer
    InternalException:
      type: object
      properties: {}
      description: This exception occurs due to unexpected causes.
    InvalidEventPatternException:
      type: object
      properties: {}
      description: The event pattern is not valid.
    KinesisParameters:
      type: object
      required:
        - PartitionKeyPath
      properties:
        PartitionKeyPath:
          $ref: '#/components/schemas/TargetPartitionKeyPath'
      description: 'This object enables you to specify a JSON path to extract from the event and use as the partition key for the Amazon Kinesis stream, so that you can control the shard to which the event goes. If you do not include this parameter, the default is to use the <code>eventId</code> as the partition key.'
    LimitExceededException:
      type: object
      properties: {}
      description: You tried to create more rules or add more targets to a rule than is allowed.
    LimitMax100:
      type: integer
      minimum: 1
      maximum: 100
    LimitMin1:
      type: integer
      minimum: 1
    ListRuleNamesByTargetRequest:
      type: object
      required:
        - TargetArn
      properties:
        TargetArn:
          $ref: '#/components/schemas/TargetArn'
        NextToken:
          $ref: '#/components/schemas/NextToken'
        Limit:
          $ref: '#/components/schemas/LimitMax100'
    ListRuleNamesByTargetResponse:
      type: object
      properties:
        RuleNames:
          $ref: '#/components/schemas/RuleNameList'
        NextToken:
          $ref: '#/components/schemas/NextToken'
    ListRulesRequest:
      type: object
      properties:
        NamePrefix:
          $ref: '#/components/schemas/RuleName'
        NextToken:
          $ref: '#/components/schemas/NextToken'
        Limit:
          $ref: '#/components/schemas/LimitMax100'
    ListRulesResponse:
      type: object
      properties:
        Rules:
          $ref: '#/components/schemas/RuleResponseList'
        NextToken:
          $ref: '#/components/schemas/NextToken'
    ListTargetsByRuleRequest:
      type: object
      required:
        - Rule
      properties:
        Rule:
          $ref: '#/components/schemas/RuleName'
        NextToken:
          $ref: '#/components/schemas/NextToken'
        Limit:
          $ref: '#/components/schemas/LimitMax100'
    ListTargetsByRuleResponse:
      type: object
      properties:
        Targets:
          $ref: '#/components/schemas/TargetList'
        NextToken:
          $ref: '#/components/schemas/NextToken'
    NextToken:
      type: string
      minLength: 1
      maxLength: 2048
    PolicyLengthExceededException:
      type: object
      properties: {}
      description: 'The event bus policy is too long. For more information, see the limits.'
    Principal:
      type: string
      pattern: '(\d{12}|\*)'
      minLength: 1
      maxLength: 12
    PutEventsRequest:
      type: object
      required:
        - Entries
      properties:
        Entries:
          $ref: '#/components/schemas/PutEventsRequestEntryList'
    PutEventsRequestEntry:
      type: object
      properties:
        Time:
          $ref: '#/components/schemas/EventTime'
        Source:
          $ref: '#/components/schemas/String'
        Resources:
          $ref: '#/components/schemas/EventResourceList'
        DetailType:
          $ref: '#/components/schemas/String'
        Detail:
          $ref: '#/components/schemas/String'
      description: Represents an event to be submitted.
    PutEventsRequestEntryList:
      type: array
      items:
        $ref: '#/components/schemas/PutEventsRequestEntry'
      minItems: 1
      maxItems: 10
    PutEventsResponse:
      type: object
      properties:
        FailedEntryCount:
          $ref: '#/components/schemas/Integer'
        Entries:
          $ref: '#/components/schemas/PutEventsResultEntryList'
    PutEventsResultEntry:
      type: object
      properties:
        EventId:
          $ref: '#/components/schemas/EventId'
        ErrorCode:
          $ref: '#/components/schemas/ErrorCode'
        ErrorMessage:
          $ref: '#/components/schemas/ErrorMessage'
      description: Represents an event that failed to be submitted.
    PutEventsResultEntryList:
      type: array
      items:
        $ref: '#/components/schemas/PutEventsResultEntry'
    PutPermissionRequest:
      type: object
      required:
        - Action
        - Principal
        - StatementId
      properties:
        Action:
          $ref: '#/components/schemas/Action'
        Principal:
          $ref: '#/components/schemas/Principal'
        StatementId:
          $ref: '#/components/schemas/StatementId'
    PutRuleRequest:
      type: object
      required:
        - Name
      properties:
        Name:
          $ref: '#/components/schemas/RuleName'
        ScheduleExpression:
          $ref: '#/components/schemas/ScheduleExpression'
        EventPattern:
          $ref: '#/components/schemas/EventPattern'
        State:
          $ref: '#/components/schemas/RuleState'
        Description:
          $ref: '#/components/schemas/RuleDescription'
        RoleArn:
          $ref: '#/components/schemas/RoleArn'
    PutRuleResponse:
      type: object
      properties:
        RuleArn:
          $ref: '#/components/schemas/RuleArn'
    PutTargetsRequest:
      type: object
      required:
        - Rule
        - Targets
      properties:
        Rule:
          $ref: '#/components/schemas/RuleName'
        Targets:
          $ref: '#/components/schemas/TargetList'
    PutTargetsResponse:
      type: object
      properties:
        FailedEntryCount:
          $ref: '#/components/schemas/Integer'
        FailedEntries:
          $ref: '#/components/schemas/PutTargetsResultEntryList'
    PutTargetsResultEntry:
      type: object
      properties:
        TargetId:
          $ref: '#/components/schemas/TargetId'
        ErrorCode:
          $ref: '#/components/schemas/ErrorCode'
        ErrorMessage:
          $ref: '#/components/schemas/ErrorMessage'
      description: Represents a target that failed to be added to a rule.
    PutTargetsResultEntryList:
      type: array
      items:
        $ref: '#/components/schemas/PutTargetsResultEntry'
    RemovePermissionRequest:
      type: object
      required:
        - StatementId
      properties:
        StatementId:
          $ref: '#/components/schemas/StatementId'
    RemoveTargetsRequest:
      type: object
      required:
        - Rule
        - Ids
      properties:
        Rule:
          $ref: '#/components/schemas/RuleName'
        Ids:
          $ref: '#/components/schemas/TargetIdList'
    RemoveTargetsResponse:
      type: object
      properties:
        FailedEntryCount:
          $ref: '#/components/schemas/Integer'
        FailedEntries:
          $ref: '#/components/schemas/RemoveTargetsResultEntryList'
    RemoveTargetsResultEntry:
      type: object
      properties:
        TargetId:
          $ref: '#/components/schemas/TargetId'
        ErrorCode:
          $ref: '#/components/schemas/ErrorCode'
        ErrorMessage:
          $ref: '#/components/schemas/ErrorMessage'
      description: Represents a target that failed to be removed from a rule.
    RemoveTargetsResultEntryList:
      type: array
      items:
        $ref: '#/components/schemas/RemoveTargetsResultEntry'
    ResourceNotFoundException:
      type: object
      properties: {}
      description: An entity that you specified does not exist.
    RoleArn:
      type: string
      minLength: 1
      maxLength: 1600
    Rule:
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/RuleName'
        Arn:
          $ref: '#/components/schemas/RuleArn'
        EventPattern:
          $ref: '#/components/schemas/EventPattern'
        State:
          $ref: '#/components/schemas/RuleState'
        Description:
          $ref: '#/components/schemas/RuleDescription'
        ScheduleExpression:
          $ref: '#/components/schemas/ScheduleExpression'
        RoleArn:
          $ref: '#/components/schemas/RoleArn'
      description: Contains information about a rule in Amazon CloudWatch Events.
    RuleArn:
      type: string
      minLength: 1
      maxLength: 1600
    RuleDescription:
      type: string
      maxLength: 512
    RuleName:
      type: string
      pattern: '[\.\-_A-Za-z0-9]+'
      minLength: 1
      maxLength: 64
    RuleNameList:
      type: array
      items:
        $ref: '#/components/schemas/RuleName'
    RuleResponseList:
      type: array
      items:
        $ref: '#/components/schemas/Rule'
    RuleState:
      type: string
      enum:
        - ENABLED
        - DISABLED
    RunCommandParameters:
      type: object
      required:
        - RunCommandTargets
      properties:
        RunCommandTargets:
          $ref: '#/components/schemas/RunCommandTargets'
      description: 'This parameter contains the criteria (either InstanceIds or a tag) used to specify which EC2 instances are to be sent the command. '
    RunCommandTarget:
      type: object
      required:
        - Key
        - Values
      properties:
        Key:
          $ref: '#/components/schemas/RunCommandTargetKey'
        Values:
          $ref: '#/components/schemas/RunCommandTargetValues'
      description: 'Information about the EC2 instances that are to be sent the command, specified as key-value pairs. Each <code>RunCommandTarget</code> block can include only one key, but this key may specify multiple values.'
    RunCommandTargetKey:
      type: string
      pattern: '^[\p{L}\p{Z}\p{N}_.:/=+\-@]*$'
      minLength: 1
      maxLength: 128
    RunCommandTargetValue:
      type: string
      minLength: 1
      maxLength: 256
    RunCommandTargetValues:
      type: array
      items:
        $ref: '#/components/schemas/RunCommandTargetValue'
      minItems: 1
      maxItems: 50
    RunCommandTargets:
      type: array
      items:
        $ref: '#/components/schemas/RunCommandTarget'
      minItems: 1
      maxItems: 5
    ScheduleExpression:
      type: string
      maxLength: 256
    StatementId:
      type: string
      pattern: '[a-zA-Z0-9-_]+'
      minLength: 1
      maxLength: 64
    String:
      type: string
    Target:
      type: object
      required:
        - Id
        - Arn
      properties:
        Id:
          $ref: '#/components/schemas/TargetId'
        Arn:
          $ref: '#/components/schemas/TargetArn'
        RoleArn:
          $ref: '#/components/schemas/RoleArn'
        Input:
          $ref: '#/components/schemas/TargetInput'
        InputPath:
          $ref: '#/components/schemas/TargetInputPath'
        InputTransformer:
          $ref: '#/components/schemas/InputTransformer'
        KinesisParameters:
          $ref: '#/components/schemas/KinesisParameters'
        RunCommandParameters:
          $ref: '#/components/schemas/RunCommandParameters'
        EcsParameters:
          $ref: '#/components/schemas/EcsParameters'
      description: 'Targets are the resources to be invoked when a rule is triggered. Target types include EC2 instances, AWS Lambda functions, Amazon Kinesis streams, Amazon ECS tasks, AWS Step Functions state machines, Run Command, and built-in targets.'
    TargetArn:
      type: string
      minLength: 1
      maxLength: 1600
    TargetId:
      type: string
      pattern: '[\.\-_A-Za-z0-9]+'
      minLength: 1
      maxLength: 64
    TargetIdList:
      type: array
      items:
        $ref: '#/components/schemas/TargetId'
      minItems: 1
      maxItems: 100
    TargetInput:
      type: string
      maxLength: 8192
    TargetInputPath:
      type: string
      maxLength: 256
    TargetList:
      type: array
      items:
        $ref: '#/components/schemas/Target'
      minItems: 1
      maxItems: 100
    TargetPartitionKeyPath:
      type: string
      maxLength: 256
    TestEventPatternRequest:
      type: object
      required:
        - EventPattern
        - Event
      properties:
        EventPattern:
          $ref: '#/components/schemas/EventPattern'
        Event:
          $ref: '#/components/schemas/String'
    TestEventPatternResponse:
      type: object
      properties:
        Result:
          $ref: '#/components/schemas/Boolean'
    TransformerInput:
      type: string
      minLength: 1
      maxLength: 8192
    TransformerPaths:
      type: array
      maxItems: 10
      items:
        type: object
        properties:
          key:
            $ref: '#/components/schemas/InputTransformerPathKey'
          value:
            $ref: '#/components/schemas/TargetInputPath'
  parameters:
    Action:
      name: Action
      in: header
      required: true
      schema:
        type: string
    Version:
      name: Version
      in: header
      required: true
      schema:
        type: string
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      required: false
      schema:
        type: string
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      required: false
      schema:
        type: string
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      required: false
      schema:
        type: string
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      required: false
      schema:
        type: string
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      required: false
      schema:
        type: string
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      required: false
      schema:
        type: string
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      required: false
      schema:
        type: string
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
