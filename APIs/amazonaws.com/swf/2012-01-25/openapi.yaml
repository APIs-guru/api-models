openapi: 3.0.0
servers:
  - url: 'http://swf.amazonaws.com/'
info:
  version: '2012-01-25'
  x-release: v4
  title: Amazon Simple Workflow Service
  description: '<fullname>Amazon Simple Workflow Service</fullname> <p>The Amazon Simple Workflow Service (Amazon SWF) makes it easy to build applications that use Amazon''s cloud to coordinate work across distributed components. In Amazon SWF, a <i>task</i> represents a logical unit of work that is performed by a component of your workflow. Coordinating tasks in a workflow involves managing intertask dependencies, scheduling, and concurrency in accordance with the logical flow of the application.</p> <p>Amazon SWF gives you full control over implementing tasks and coordinating them without worrying about underlying complexities such as tracking their progress and maintaining their state.</p> <p>This documentation serves as reference only. For a broader overview of the Amazon SWF programming model, see the <a href="http://docs.aws.amazon.com/amazonswf/latest/developerguide/">Amazon SWF Developer Guide</a>.</p>'
  x-logo:
    url: 'https://media.amazonwebservices.com/blog/2007/big_pbaws_logo_300px.jpg'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: swf
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/swf-2012-01-25.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-direct: true
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://aws.amazon.com/swf/'
x-hasEquivalentPaths: true
security:
  - hmac: []
paths:
  /:
    post:
      operationId: CountClosedWorkflowExecutions
      description: '<p>Returns the number of closed workflow executions within the given domain that meet the specified filtering criteria.</p> <note>This operation is eventually consistent. The results are best effort and may not exactly reflect recent updates and changes.</note> <p><b>Access Control</b></p> <p>You can use IAM policies to control this action''s access to Amazon SWF resources as follows:</p> <ul> <li>Use a <code>Resource</code> element with the domain name to limit the action to only specified domains.</li> <li>Use an <code>Action</code> element to allow or deny permission to call this action.</li> <li>Constrain the following parameters by using a <code>Condition</code> element with the appropriate keys. <ul> <li><code>tagFilter.tag</code>: String constraint. The key is <code>swf:tagFilter.tag</code>.</li> <li><code>typeFilter.name</code>: String constraint. The key is <code>swf:typeFilter.name</code>.</li> <li><code>typeFilter.version</code>: String constraint. The key is <code>swf:typeFilter.version</code>.</li> </ul> </li> </ul> <p>If the caller does not have sufficient permissions to invoke the action, or the parameter values fall outside the specified constraints, the action fails. The associated event attribute''s <b>cause</b> parameter will be set to OPERATION_NOT_PERMITTED. For details and example IAM policies, see <a href="http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using IAM to Manage Access to Amazon SWF Workflows</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowExecutionCount'
        '480':
          description: UnknownResourceFault
          x-aws-exception: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnknownResourceFault'
        '481':
          description: OperationNotPermittedFault
          x-aws-exception: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedFault'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CountClosedWorkflowExecutionsInput'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#CountOpenWorkflowExecutions':
    post:
      operationId: CountOpenWorkflowExecutions
      description: '<p>Returns the number of open workflow executions within the given domain that meet the specified filtering criteria.</p> <note>This operation is eventually consistent. The results are best effort and may not exactly reflect recent updates and changes.</note> <p><b>Access Control</b></p> <p>You can use IAM policies to control this action''s access to Amazon SWF resources as follows:</p> <ul> <li>Use a <code>Resource</code> element with the domain name to limit the action to only specified domains.</li> <li>Use an <code>Action</code> element to allow or deny permission to call this action.</li> <li>Constrain the following parameters by using a <code>Condition</code> element with the appropriate keys. <ul> <li><code>tagFilter.tag</code>: String constraint. The key is <code>swf:tagFilter.tag</code>.</li> <li><code>typeFilter.name</code>: String constraint. The key is <code>swf:typeFilter.name</code>.</li> <li><code>typeFilter.version</code>: String constraint. The key is <code>swf:typeFilter.version</code>.</li> </ul> </li> </ul> <p>If the caller does not have sufficient permissions to invoke the action, or the parameter values fall outside the specified constraints, the action fails. The associated event attribute''s <b>cause</b> parameter will be set to OPERATION_NOT_PERMITTED. For details and example IAM policies, see <a href="http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using IAM to Manage Access to Amazon SWF Workflows</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowExecutionCount'
        '480':
          description: UnknownResourceFault
          x-aws-exception: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnknownResourceFault'
        '481':
          description: OperationNotPermittedFault
          x-aws-exception: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedFault'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CountOpenWorkflowExecutionsInput'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#CountPendingActivityTasks':
    post:
      operationId: CountPendingActivityTasks
      description: '<p>Returns the estimated number of activity tasks in the specified task list. The count returned is an approximation and is not guaranteed to be exact. If you specify a task list that no activity task was ever scheduled in then 0 will be returned.</p> <p><b>Access Control</b></p> <p>You can use IAM policies to control this action''s access to Amazon SWF resources as follows:</p> <ul> <li>Use a <code>Resource</code> element with the domain name to limit the action to only specified domains.</li> <li>Use an <code>Action</code> element to allow or deny permission to call this action.</li> <li>Constrain the <code>taskList.name</code> parameter by using a <b>Condition</b> element with the <code>swf:taskList.name</code> key to allow the action to access only certain task lists.</li> </ul> <p>If the caller does not have sufficient permissions to invoke the action, or the parameter values fall outside the specified constraints, the action fails. The associated event attribute''s <b>cause</b> parameter will be set to OPERATION_NOT_PERMITTED. For details and example IAM policies, see <a href="http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using IAM to Manage Access to Amazon SWF Workflows</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PendingTaskCount'
        '480':
          description: UnknownResourceFault
          x-aws-exception: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnknownResourceFault'
        '481':
          description: OperationNotPermittedFault
          x-aws-exception: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedFault'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CountPendingActivityTasksInput'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#CountPendingDecisionTasks':
    post:
      operationId: CountPendingDecisionTasks
      description: '<p>Returns the estimated number of decision tasks in the specified task list. The count returned is an approximation and is not guaranteed to be exact. If you specify a task list that no decision task was ever scheduled in then 0 will be returned.</p> <p><b>Access Control</b></p> <p>You can use IAM policies to control this action''s access to Amazon SWF resources as follows:</p> <ul> <li>Use a <code>Resource</code> element with the domain name to limit the action to only specified domains.</li> <li>Use an <code>Action</code> element to allow or deny permission to call this action.</li> <li>Constrain the <code>taskList.name</code> parameter by using a <b>Condition</b> element with the <code>swf:taskList.name</code> key to allow the action to access only certain task lists.</li> </ul> <p>If the caller does not have sufficient permissions to invoke the action, or the parameter values fall outside the specified constraints, the action fails. The associated event attribute''s <b>cause</b> parameter will be set to OPERATION_NOT_PERMITTED. For details and example IAM policies, see <a href="http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using IAM to Manage Access to Amazon SWF Workflows</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PendingTaskCount'
        '480':
          description: UnknownResourceFault
          x-aws-exception: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnknownResourceFault'
        '481':
          description: OperationNotPermittedFault
          x-aws-exception: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedFault'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CountPendingDecisionTasksInput'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DeprecateActivityType':
    post:
      operationId: DeprecateActivityType
      description: '<p>Deprecates the specified <i>activity type</i>. After an activity type has been deprecated, you cannot create new tasks of that activity type. Tasks of this type that were scheduled before the type was deprecated will continue to run.</p> <note>This operation is eventually consistent. The results are best effort and may not exactly reflect recent updates and changes.</note> <p><b>Access Control</b></p> <p>You can use IAM policies to control this action''s access to Amazon SWF resources as follows:</p> <ul> <li>Use a <code>Resource</code> element with the domain name to limit the action to only specified domains.</li> <li>Use an <code>Action</code> element to allow or deny permission to call this action.</li> <li>Constrain the following parameters by using a <code>Condition</code> element with the appropriate keys. <ul> <li><code>activityType.name</code>: String constraint. The key is <code>swf:activityType.name</code>.</li> <li><code>activityType.version</code>: String constraint. The key is <code>swf:activityType.version</code>.</li> </ul> </li> </ul> <p>If the caller does not have sufficient permissions to invoke the action, or the parameter values fall outside the specified constraints, the action fails. The associated event attribute''s <b>cause</b> parameter will be set to OPERATION_NOT_PERMITTED. For details and example IAM policies, see <a href="http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using IAM to Manage Access to Amazon SWF Workflows</a>.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: UnknownResourceFault
          x-aws-exception: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnknownResourceFault'
        '481':
          description: TypeDeprecatedFault
          x-aws-exception: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypeDeprecatedFault'
        '482':
          description: OperationNotPermittedFault
          x-aws-exception: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedFault'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeprecateActivityTypeInput'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DeprecateDomain':
    post:
      operationId: DeprecateDomain
      description: '<p>Deprecates the specified domain. After a domain has been deprecated it cannot be used to create new workflow executions or register new types. However, you can still use visibility actions on this domain. Deprecating a domain also deprecates all activity and workflow types registered in the domain. Executions that were started before the domain was deprecated will continue to run.</p> <note>This operation is eventually consistent. The results are best effort and may not exactly reflect recent updates and changes.</note> <p><b>Access Control</b></p> <p>You can use IAM policies to control this action''s access to Amazon SWF resources as follows:</p> <ul> <li>Use a <code>Resource</code> element with the domain name to limit the action to only specified domains.</li> <li>Use an <code>Action</code> element to allow or deny permission to call this action.</li> <li>You cannot use an IAM policy to constrain this action''s parameters.</li> </ul> <p>If the caller does not have sufficient permissions to invoke the action, or the parameter values fall outside the specified constraints, the action fails. The associated event attribute''s <b>cause</b> parameter will be set to OPERATION_NOT_PERMITTED. For details and example IAM policies, see <a href="http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using IAM to Manage Access to Amazon SWF Workflows</a>.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: UnknownResourceFault
          x-aws-exception: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnknownResourceFault'
        '481':
          description: DomainDeprecatedFault
          x-aws-exception: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainDeprecatedFault'
        '482':
          description: OperationNotPermittedFault
          x-aws-exception: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedFault'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeprecateDomainInput'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DeprecateWorkflowType':
    post:
      operationId: DeprecateWorkflowType
      description: '<p>Deprecates the specified <i>workflow type</i>. After a workflow type has been deprecated, you cannot create new executions of that type. Executions that were started before the type was deprecated will continue to run. A deprecated workflow type may still be used when calling visibility actions.</p> <note>This operation is eventually consistent. The results are best effort and may not exactly reflect recent updates and changes.</note> <p><b>Access Control</b></p> <p>You can use IAM policies to control this action''s access to Amazon SWF resources as follows:</p> <ul> <li>Use a <code>Resource</code> element with the domain name to limit the action to only specified domains.</li> <li>Use an <code>Action</code> element to allow or deny permission to call this action.</li> <li>Constrain the following parameters by using a <code>Condition</code> element with the appropriate keys. <ul> <li><code>workflowType.name</code>: String constraint. The key is <code>swf:workflowType.name</code>.</li> <li><code>workflowType.version</code>: String constraint. The key is <code>swf:workflowType.version</code>.</li> </ul> </li> </ul> <p>If the caller does not have sufficient permissions to invoke the action, or the parameter values fall outside the specified constraints, the action fails. The associated event attribute''s <b>cause</b> parameter will be set to OPERATION_NOT_PERMITTED. For details and example IAM policies, see <a href="http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using IAM to Manage Access to Amazon SWF Workflows</a>.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: UnknownResourceFault
          x-aws-exception: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnknownResourceFault'
        '481':
          description: TypeDeprecatedFault
          x-aws-exception: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypeDeprecatedFault'
        '482':
          description: OperationNotPermittedFault
          x-aws-exception: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedFault'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeprecateWorkflowTypeInput'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DescribeActivityType':
    post:
      operationId: DescribeActivityType
      description: '<p>Returns information about the specified activity type. This includes configuration settings provided when the type was registered and other general information about the type.</p> <p><b>Access Control</b></p> <p>You can use IAM policies to control this action''s access to Amazon SWF resources as follows:</p> <ul> <li>Use a <code>Resource</code> element with the domain name to limit the action to only specified domains.</li> <li>Use an <code>Action</code> element to allow or deny permission to call this action.</li> <li>Constrain the following parameters by using a <code>Condition</code> element with the appropriate keys. <ul> <li><code>activityType.name</code>: String constraint. The key is <code>swf:activityType.name</code>.</li> <li><code>activityType.version</code>: String constraint. The key is <code>swf:activityType.version</code>.</li> </ul> </li> </ul> <p>If the caller does not have sufficient permissions to invoke the action, or the parameter values fall outside the specified constraints, the action fails. The associated event attribute''s <b>cause</b> parameter will be set to OPERATION_NOT_PERMITTED. For details and example IAM policies, see <a href="http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using IAM to Manage Access to Amazon SWF Workflows</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityTypeDetail'
        '480':
          description: UnknownResourceFault
          x-aws-exception: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnknownResourceFault'
        '481':
          description: OperationNotPermittedFault
          x-aws-exception: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedFault'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeActivityTypeInput'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DescribeDomain':
    post:
      operationId: DescribeDomain
      description: '<p>Returns information about the specified domain, including description and status.</p> <p><b>Access Control</b></p> <p>You can use IAM policies to control this action''s access to Amazon SWF resources as follows:</p> <ul> <li>Use a <code>Resource</code> element with the domain name to limit the action to only specified domains.</li> <li>Use an <code>Action</code> element to allow or deny permission to call this action.</li> <li>You cannot use an IAM policy to constrain this action''s parameters.</li> </ul> <p>If the caller does not have sufficient permissions to invoke the action, or the parameter values fall outside the specified constraints, the action fails. The associated event attribute''s <b>cause</b> parameter will be set to OPERATION_NOT_PERMITTED. For details and example IAM policies, see <a href="http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using IAM to Manage Access to Amazon SWF Workflows</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainDetail'
        '480':
          description: UnknownResourceFault
          x-aws-exception: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnknownResourceFault'
        '481':
          description: OperationNotPermittedFault
          x-aws-exception: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedFault'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeDomainInput'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DescribeWorkflowExecution':
    post:
      operationId: DescribeWorkflowExecution
      description: '<p>Returns information about the specified workflow execution including its type and some statistics.</p> <note>This operation is eventually consistent. The results are best effort and may not exactly reflect recent updates and changes.</note> <p><b>Access Control</b></p> <p>You can use IAM policies to control this action''s access to Amazon SWF resources as follows:</p> <ul> <li>Use a <code>Resource</code> element with the domain name to limit the action to only specified domains.</li> <li>Use an <code>Action</code> element to allow or deny permission to call this action.</li> <li>You cannot use an IAM policy to constrain this action''s parameters.</li> </ul> <p>If the caller does not have sufficient permissions to invoke the action, or the parameter values fall outside the specified constraints, the action fails. The associated event attribute''s <b>cause</b> parameter will be set to OPERATION_NOT_PERMITTED. For details and example IAM policies, see <a href="http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using IAM to Manage Access to Amazon SWF Workflows</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowExecutionDetail'
        '480':
          description: UnknownResourceFault
          x-aws-exception: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnknownResourceFault'
        '481':
          description: OperationNotPermittedFault
          x-aws-exception: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedFault'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeWorkflowExecutionInput'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DescribeWorkflowType':
    post:
      operationId: DescribeWorkflowType
      description: '<p>Returns information about the specified <i>workflow type</i>. This includes configuration settings specified when the type was registered and other information such as creation date, current status, and so on.</p> <p><b>Access Control</b></p> <p>You can use IAM policies to control this action''s access to Amazon SWF resources as follows:</p> <ul> <li>Use a <code>Resource</code> element with the domain name to limit the action to only specified domains.</li> <li>Use an <code>Action</code> element to allow or deny permission to call this action.</li> <li>Constrain the following parameters by using a <code>Condition</code> element with the appropriate keys. <ul> <li><code>workflowType.name</code>: String constraint. The key is <code>swf:workflowType.name</code>.</li> <li><code>workflowType.version</code>: String constraint. The key is <code>swf:workflowType.version</code>.</li> </ul> </li> </ul> <p>If the caller does not have sufficient permissions to invoke the action, or the parameter values fall outside the specified constraints, the action fails. The associated event attribute''s <b>cause</b> parameter will be set to OPERATION_NOT_PERMITTED. For details and example IAM policies, see <a href="http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using IAM to Manage Access to Amazon SWF Workflows</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowTypeDetail'
        '480':
          description: UnknownResourceFault
          x-aws-exception: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnknownResourceFault'
        '481':
          description: OperationNotPermittedFault
          x-aws-exception: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedFault'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeWorkflowTypeInput'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#GetWorkflowExecutionHistory':
    post:
      operationId: GetWorkflowExecutionHistory
      description: '<p>Returns the history of the specified workflow execution. The results may be split into multiple pages. To retrieve subsequent pages, make the call again using the <code>nextPageToken</code> returned by the initial call.</p> <note>This operation is eventually consistent. The results are best effort and may not exactly reflect recent updates and changes.</note> <p><b>Access Control</b></p> <p>You can use IAM policies to control this action''s access to Amazon SWF resources as follows:</p> <ul> <li>Use a <code>Resource</code> element with the domain name to limit the action to only specified domains.</li> <li>Use an <code>Action</code> element to allow or deny permission to call this action.</li> <li>You cannot use an IAM policy to constrain this action''s parameters.</li> </ul> <p>If the caller does not have sufficient permissions to invoke the action, or the parameter values fall outside the specified constraints, the action fails. The associated event attribute''s <b>cause</b> parameter will be set to OPERATION_NOT_PERMITTED. For details and example IAM policies, see <a href="http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using IAM to Manage Access to Amazon SWF Workflows</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/History'
        '480':
          description: UnknownResourceFault
          x-aws-exception: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnknownResourceFault'
        '481':
          description: OperationNotPermittedFault
          x-aws-exception: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedFault'
      parameters:
        - name: maximumPageSize
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: nextPageToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetWorkflowExecutionHistoryInput'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#ListActivityTypes':
    post:
      operationId: ListActivityTypes
      description: '<p>Returns information about all activities registered in the specified domain that match the specified name and registration status. The result includes information like creation date, current status of the activity, etc. The results may be split into multiple pages. To retrieve subsequent pages, make the call again using the <code>nextPageToken</code> returned by the initial call.</p> <p><b>Access Control</b></p> <p>You can use IAM policies to control this action''s access to Amazon SWF resources as follows:</p> <ul> <li>Use a <code>Resource</code> element with the domain name to limit the action to only specified domains.</li> <li>Use an <code>Action</code> element to allow or deny permission to call this action.</li> <li>You cannot use an IAM policy to constrain this action''s parameters.</li> </ul> <p>If the caller does not have sufficient permissions to invoke the action, or the parameter values fall outside the specified constraints, the action fails. The associated event attribute''s <b>cause</b> parameter will be set to OPERATION_NOT_PERMITTED. For details and example IAM policies, see <a href="http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using IAM to Manage Access to Amazon SWF Workflows</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityTypeInfos'
        '480':
          description: OperationNotPermittedFault
          x-aws-exception: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedFault'
        '481':
          description: UnknownResourceFault
          x-aws-exception: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnknownResourceFault'
      parameters:
        - name: maximumPageSize
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: nextPageToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListActivityTypesInput'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#ListClosedWorkflowExecutions':
    post:
      operationId: ListClosedWorkflowExecutions
      description: '<p>Returns a list of closed workflow executions in the specified domain that meet the filtering criteria. The results may be split into multiple pages. To retrieve subsequent pages, make the call again using the nextPageToken returned by the initial call.</p> <note>This operation is eventually consistent. The results are best effort and may not exactly reflect recent updates and changes.</note> <p><b>Access Control</b></p> <p>You can use IAM policies to control this action''s access to Amazon SWF resources as follows:</p> <ul> <li>Use a <code>Resource</code> element with the domain name to limit the action to only specified domains.</li> <li>Use an <code>Action</code> element to allow or deny permission to call this action.</li> <li>Constrain the following parameters by using a <code>Condition</code> element with the appropriate keys. <ul> <li><code>tagFilter.tag</code>: String constraint. The key is <code>swf:tagFilter.tag</code>.</li> <li><code>typeFilter.name</code>: String constraint. The key is <code>swf:typeFilter.name</code>.</li> <li><code>typeFilter.version</code>: String constraint. The key is <code>swf:typeFilter.version</code>.</li> </ul> </li> </ul> <p>If the caller does not have sufficient permissions to invoke the action, or the parameter values fall outside the specified constraints, the action fails. The associated event attribute''s <b>cause</b> parameter will be set to OPERATION_NOT_PERMITTED. For details and example IAM policies, see <a href="http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using IAM to Manage Access to Amazon SWF Workflows</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowExecutionInfos'
        '480':
          description: UnknownResourceFault
          x-aws-exception: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnknownResourceFault'
        '481':
          description: OperationNotPermittedFault
          x-aws-exception: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedFault'
      parameters:
        - name: maximumPageSize
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: nextPageToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListClosedWorkflowExecutionsInput'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#ListDomains':
    post:
      operationId: ListDomains
      description: '<p>Returns the list of domains registered in the account. The results may be split into multiple pages. To retrieve subsequent pages, make the call again using the nextPageToken returned by the initial call.</p> <note> This operation is eventually consistent. The results are best effort and may not exactly reflect recent updates and changes.</note> <p><b>Access Control</b></p> <p>You can use IAM policies to control this action''s access to Amazon SWF resources as follows:</p> <ul> <li>Use a <code>Resource</code> element with the domain name to limit the action to only specified domains. The element must be set to <code>arn:aws:swf::AccountID:domain/*</code>, where <i>AccountID</i> is the account ID, with no dashes.</li> <li>Use an <code>Action</code> element to allow or deny permission to call this action.</li> <li>You cannot use an IAM policy to constrain this action''s parameters.</li> </ul> <p>If the caller does not have sufficient permissions to invoke the action, or the parameter values fall outside the specified constraints, the action fails. The associated event attribute''s <b>cause</b> parameter will be set to OPERATION_NOT_PERMITTED. For details and example IAM policies, see <a href="http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using IAM to Manage Access to Amazon SWF Workflows</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainInfos'
        '480':
          description: OperationNotPermittedFault
          x-aws-exception: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedFault'
      parameters:
        - name: maximumPageSize
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: nextPageToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListDomainsInput'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#ListOpenWorkflowExecutions':
    post:
      operationId: ListOpenWorkflowExecutions
      description: '<p>Returns a list of open workflow executions in the specified domain that meet the filtering criteria. The results may be split into multiple pages. To retrieve subsequent pages, make the call again using the nextPageToken returned by the initial call.</p> <note> This operation is eventually consistent. The results are best effort and may not exactly reflect recent updates and changes.</note> <p><b>Access Control</b></p> <p>You can use IAM policies to control this action''s access to Amazon SWF resources as follows:</p> <ul> <li>Use a <code>Resource</code> element with the domain name to limit the action to only specified domains.</li> <li>Use an <code>Action</code> element to allow or deny permission to call this action.</li> <li>Constrain the following parameters by using a <code>Condition</code> element with the appropriate keys. <ul> <li><code>tagFilter.tag</code>: String constraint. The key is <code>swf:tagFilter.tag</code>.</li> <li><code>typeFilter.name</code>: String constraint. The key is <code>swf:typeFilter.name</code>.</li> <li><code>typeFilter.version</code>: String constraint. The key is <code>swf:typeFilter.version</code>.</li> </ul> </li> </ul> <p>If the caller does not have sufficient permissions to invoke the action, or the parameter values fall outside the specified constraints, the action fails. The associated event attribute''s <b>cause</b> parameter will be set to OPERATION_NOT_PERMITTED. For details and example IAM policies, see <a href="http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using IAM to Manage Access to Amazon SWF Workflows</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowExecutionInfos'
        '480':
          description: UnknownResourceFault
          x-aws-exception: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnknownResourceFault'
        '481':
          description: OperationNotPermittedFault
          x-aws-exception: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedFault'
      parameters:
        - name: maximumPageSize
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: nextPageToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListOpenWorkflowExecutionsInput'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#ListWorkflowTypes':
    post:
      operationId: ListWorkflowTypes
      description: '<p>Returns information about workflow types in the specified domain. The results may be split into multiple pages that can be retrieved by making the call repeatedly.</p> <p><b>Access Control</b></p> <p>You can use IAM policies to control this action''s access to Amazon SWF resources as follows:</p> <ul> <li>Use a <code>Resource</code> element with the domain name to limit the action to only specified domains.</li> <li>Use an <code>Action</code> element to allow or deny permission to call this action.</li> <li>You cannot use an IAM policy to constrain this action''s parameters.</li> </ul> <p>If the caller does not have sufficient permissions to invoke the action, or the parameter values fall outside the specified constraints, the action fails. The associated event attribute''s <b>cause</b> parameter will be set to OPERATION_NOT_PERMITTED. For details and example IAM policies, see <a href="http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using IAM to Manage Access to Amazon SWF Workflows</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowTypeInfos'
        '480':
          description: OperationNotPermittedFault
          x-aws-exception: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedFault'
        '481':
          description: UnknownResourceFault
          x-aws-exception: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnknownResourceFault'
      parameters:
        - name: maximumPageSize
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: nextPageToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListWorkflowTypesInput'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#PollForActivityTask':
    post:
      operationId: PollForActivityTask
      description: '<p>Used by workers to get an <a>ActivityTask</a> from the specified activity <code>taskList</code>. This initiates a long poll, where the service holds the HTTP connection open and responds as soon as a task becomes available. The maximum time the service holds on to the request before responding is 60 seconds. If no task is available within 60 seconds, the poll will return an empty result. An empty result, in this context, means that an ActivityTask is returned, but that the value of taskToken is an empty string. If a task is returned, the worker should use its type to identify and process it correctly.</p> <important>Workers should set their client side socket timeout to at least 70 seconds (10 seconds higher than the maximum time service may hold the poll request).</important> <p><b>Access Control</b></p> <p>You can use IAM policies to control this action''s access to Amazon SWF resources as follows:</p> <ul> <li>Use a <code>Resource</code> element with the domain name to limit the action to only specified domains.</li> <li>Use an <code>Action</code> element to allow or deny permission to call this action.</li> <li>Constrain the <code>taskList.name</code> parameter by using a <b>Condition</b> element with the <code>swf:taskList.name</code> key to allow the action to access only certain task lists.</li> </ul> <p>If the caller does not have sufficient permissions to invoke the action, or the parameter values fall outside the specified constraints, the action fails. The associated event attribute''s <b>cause</b> parameter will be set to OPERATION_NOT_PERMITTED. For details and example IAM policies, see <a href="http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using IAM to Manage Access to Amazon SWF Workflows</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityTask'
        '480':
          description: UnknownResourceFault
          x-aws-exception: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnknownResourceFault'
        '481':
          description: OperationNotPermittedFault
          x-aws-exception: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedFault'
        '482':
          description: LimitExceededFault
          x-aws-exception: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededFault'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PollForActivityTaskInput'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#PollForDecisionTask':
    post:
      operationId: PollForDecisionTask
      description: '<p>Used by deciders to get a <a>DecisionTask</a> from the specified decision <code>taskList</code>. A decision task may be returned for any open workflow execution that is using the specified task list. The task includes a paginated view of the history of the workflow execution. The decider should use the workflow type and the history to determine how to properly handle the task.</p> <p>This action initiates a long poll, where the service holds the HTTP connection open and responds as soon a task becomes available. If no decision task is available in the specified task list before the timeout of 60 seconds expires, an empty result is returned. An empty result, in this context, means that a DecisionTask is returned, but that the value of <code>taskToken</code> is an empty string.</p> <important>Deciders should set their client-side socket timeout to at least 70 seconds (10 seconds higher than the timeout).</important> <important>Because the number of workflow history events for a single workflow execution might be very large, the result returned might be split up across a number of pages. To retrieve subsequent pages, make additional calls to <code>PollForDecisionTask</code> using the <code>nextPageToken</code> returned by the initial call. Note that you do <b>not</b> call <code>GetWorkflowExecutionHistory</code> with this <code>nextPageToken</code>. Instead, call <code>PollForDecisionTask</code> again.</important> <p><b>Access Control</b></p> <p>You can use IAM policies to control this action''s access to Amazon SWF resources as follows:</p> <ul> <li>Use a <code>Resource</code> element with the domain name to limit the action to only specified domains.</li> <li>Use an <code>Action</code> element to allow or deny permission to call this action.</li> <li>Constrain the <code>taskList.name</code> parameter by using a <b>Condition</b> element with the <code>swf:taskList.name</code> key to allow the action to access only certain task lists.</li> </ul> <p>If the caller does not have sufficient permissions to invoke the action, or the parameter values fall outside the specified constraints, the action fails. The associated event attribute''s <b>cause</b> parameter will be set to OPERATION_NOT_PERMITTED. For details and example IAM policies, see <a href="http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using IAM to Manage Access to Amazon SWF Workflows</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DecisionTask'
        '480':
          description: UnknownResourceFault
          x-aws-exception: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnknownResourceFault'
        '481':
          description: OperationNotPermittedFault
          x-aws-exception: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedFault'
        '482':
          description: LimitExceededFault
          x-aws-exception: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededFault'
      parameters:
        - name: maximumPageSize
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: nextPageToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PollForDecisionTaskInput'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#RecordActivityTaskHeartbeat':
    post:
      operationId: RecordActivityTaskHeartbeat
      description: '<p>Used by activity workers to report to the service that the <a>ActivityTask</a> represented by the specified <code>taskToken</code> is still making progress. The worker can also (optionally) specify details of the progress, for example percent complete, using the <code>details</code> parameter. This action can also be used by the worker as a mechanism to check if cancellation is being requested for the activity task. If a cancellation is being attempted for the specified task, then the boolean <code>cancelRequested</code> flag returned by the service is set to <code>true</code>.</p> <p>This action resets the <code>taskHeartbeatTimeout</code> clock. The <code>taskHeartbeatTimeout</code> is specified in <a>RegisterActivityType</a>.</p> <p>This action does not in itself create an event in the workflow execution history. However, if the task times out, the workflow execution history will contain a <code>ActivityTaskTimedOut</code> event that contains the information from the last heartbeat generated by the activity worker.</p> <note>The <code>taskStartToCloseTimeout</code> of an activity type is the maximum duration of an activity task, regardless of the number of <a>RecordActivityTaskHeartbeat</a> requests received. The <code>taskStartToCloseTimeout</code> is also specified in <a>RegisterActivityType</a>.</note> <note>This operation is only useful for long-lived activities to report liveliness of the task and to determine if a cancellation is being attempted. </note> <important>If the <code>cancelRequested</code> flag returns <code>true</code>, a cancellation is being attempted. If the worker can cancel the activity, it should respond with <a>RespondActivityTaskCanceled</a>. Otherwise, it should ignore the cancellation request.</important> <p><b>Access Control</b></p> <p>You can use IAM policies to control this action''s access to Amazon SWF resources as follows:</p> <ul> <li>Use a <code>Resource</code> element with the domain name to limit the action to only specified domains.</li> <li>Use an <code>Action</code> element to allow or deny permission to call this action.</li> <li>You cannot use an IAM policy to constrain this action''s parameters.</li> </ul> <p>If the caller does not have sufficient permissions to invoke the action, or the parameter values fall outside the specified constraints, the action fails. The associated event attribute''s <b>cause</b> parameter will be set to OPERATION_NOT_PERMITTED. For details and example IAM policies, see <a href="http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using IAM to Manage Access to Amazon SWF Workflows</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityTaskStatus'
        '480':
          description: UnknownResourceFault
          x-aws-exception: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnknownResourceFault'
        '481':
          description: OperationNotPermittedFault
          x-aws-exception: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedFault'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecordActivityTaskHeartbeatInput'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#RegisterActivityType':
    post:
      operationId: RegisterActivityType
      description: '<p>Registers a new <i>activity type</i> along with its configuration settings in the specified domain.</p> <important>A <code>TypeAlreadyExists</code> fault is returned if the type already exists in the domain. You cannot change any configuration settings of the type after its registration, and it must be registered as a new version.</important> <p><b>Access Control</b></p> <p>You can use IAM policies to control this action''s access to Amazon SWF resources as follows:</p> <ul> <li>Use a <code>Resource</code> element with the domain name to limit the action to only specified domains.</li> <li>Use an <code>Action</code> element to allow or deny permission to call this action.</li> <li>Constrain the following parameters by using a <code>Condition</code> element with the appropriate keys. <ul> <li> <code>defaultTaskList.name</code>: String constraint. The key is <code>swf:defaultTaskList.name</code>.</li> <li> <code>name</code>: String constraint. The key is <code>swf:name</code>.</li> <li> <code>version</code>: String constraint. The key is <code>swf:version</code>.</li> </ul> </li> </ul> <p>If the caller does not have sufficient permissions to invoke the action, or the parameter values fall outside the specified constraints, the action fails. The associated event attribute''s <b>cause</b> parameter will be set to OPERATION_NOT_PERMITTED. For details and example IAM policies, see <a href="http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using IAM to Manage Access to Amazon SWF Workflows</a>.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: TypeAlreadyExistsFault
          x-aws-exception: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypeAlreadyExistsFault'
        '481':
          description: LimitExceededFault
          x-aws-exception: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededFault'
        '482':
          description: UnknownResourceFault
          x-aws-exception: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnknownResourceFault'
        '483':
          description: OperationNotPermittedFault
          x-aws-exception: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedFault'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterActivityTypeInput'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#RegisterDomain':
    post:
      operationId: RegisterDomain
      description: '<p>Registers a new domain.</p> <p><b>Access Control</b></p> <p>You can use IAM policies to control this action''s access to Amazon SWF resources as follows:</p> <ul> <li>You cannot use an IAM policy to control domain access for this action. The name of the domain being registered is available as the resource of this action.</li> <li>Use an <code>Action</code> element to allow or deny permission to call this action.</li> <li>You cannot use an IAM policy to constrain this action''s parameters.</li> </ul> <p>If the caller does not have sufficient permissions to invoke the action, or the parameter values fall outside the specified constraints, the action fails. The associated event attribute''s <b>cause</b> parameter will be set to OPERATION_NOT_PERMITTED. For details and example IAM policies, see <a href="http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using IAM to Manage Access to Amazon SWF Workflows</a>.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: DomainAlreadyExistsFault
          x-aws-exception: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainAlreadyExistsFault'
        '481':
          description: LimitExceededFault
          x-aws-exception: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededFault'
        '482':
          description: OperationNotPermittedFault
          x-aws-exception: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedFault'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterDomainInput'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#RegisterWorkflowType':
    post:
      operationId: RegisterWorkflowType
      description: '<p>Registers a new <i>workflow type</i> and its configuration settings in the specified domain.</p> <p>The retention period for the workflow history is set by the <a>RegisterDomain</a> action.</p> <important>If the type already exists, then a <code>TypeAlreadyExists</code> fault is returned. You cannot change the configuration settings of a workflow type once it is registered and it must be registered as a new version.</important> <p><b>Access Control</b></p> <p>You can use IAM policies to control this action''s access to Amazon SWF resources as follows:</p> <ul> <li>Use a <code>Resource</code> element with the domain name to limit the action to only specified domains.</li> <li>Use an <code>Action</code> element to allow or deny permission to call this action.</li> <li>Constrain the following parameters by using a <code>Condition</code> element with the appropriate keys. <ul> <li> <code>defaultTaskList.name</code>: String constraint. The key is <code>swf:defaultTaskList.name</code>.</li> <li> <code>name</code>: String constraint. The key is <code>swf:name</code>.</li> <li> <code>version</code>: String constraint. The key is <code>swf:version</code>.</li> </ul> </li> </ul> <p>If the caller does not have sufficient permissions to invoke the action, or the parameter values fall outside the specified constraints, the action fails. The associated event attribute''s <b>cause</b> parameter will be set to OPERATION_NOT_PERMITTED. For details and example IAM policies, see <a href="http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using IAM to Manage Access to Amazon SWF Workflows</a>.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: TypeAlreadyExistsFault
          x-aws-exception: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypeAlreadyExistsFault'
        '481':
          description: LimitExceededFault
          x-aws-exception: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededFault'
        '482':
          description: UnknownResourceFault
          x-aws-exception: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnknownResourceFault'
        '483':
          description: OperationNotPermittedFault
          x-aws-exception: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedFault'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterWorkflowTypeInput'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#RequestCancelWorkflowExecution':
    post:
      operationId: RequestCancelWorkflowExecution
      description: '<p>Records a <code>WorkflowExecutionCancelRequested</code> event in the currently running workflow execution identified by the given domain, workflowId, and runId. This logically requests the cancellation of the workflow execution as a whole. It is up to the decider to take appropriate actions when it receives an execution history with this event.</p> <note>If the runId is not specified, the <code>WorkflowExecutionCancelRequested</code> event is recorded in the history of the current open workflow execution with the specified workflowId in the domain.</note> <note>Because this action allows the workflow to properly clean up and gracefully close, it should be used instead of <a>TerminateWorkflowExecution</a> when possible.</note> <p><b>Access Control</b></p> <p>You can use IAM policies to control this action''s access to Amazon SWF resources as follows:</p> <ul> <li>Use a <code>Resource</code> element with the domain name to limit the action to only specified domains.</li> <li>Use an <code>Action</code> element to allow or deny permission to call this action.</li> <li>You cannot use an IAM policy to constrain this action''s parameters.</li> </ul> <p>If the caller does not have sufficient permissions to invoke the action, or the parameter values fall outside the specified constraints, the action fails. The associated event attribute''s <b>cause</b> parameter will be set to OPERATION_NOT_PERMITTED. For details and example IAM policies, see <a href="http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using IAM to Manage Access to Amazon SWF Workflows</a>.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: UnknownResourceFault
          x-aws-exception: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnknownResourceFault'
        '481':
          description: OperationNotPermittedFault
          x-aws-exception: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedFault'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestCancelWorkflowExecutionInput'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#RespondActivityTaskCanceled':
    post:
      operationId: RespondActivityTaskCanceled
      description: '<p>Used by workers to tell the service that the <a>ActivityTask</a> identified by the <code>taskToken</code> was successfully canceled. Additional <code>details</code> can be optionally provided using the <code>details</code> argument.</p> <p>These <code>details</code> (if provided) appear in the <code>ActivityTaskCanceled</code> event added to the workflow history.</p> <important>Only use this operation if the <code>canceled</code> flag of a <a>RecordActivityTaskHeartbeat</a> request returns <code>true</code> and if the activity can be safely undone or abandoned.</important> <p>A task is considered open from the time that it is scheduled until it is closed. Therefore a task is reported as open while a worker is processing it. A task is closed after it has been specified in a call to <a>RespondActivityTaskCompleted</a>, RespondActivityTaskCanceled, <a>RespondActivityTaskFailed</a>, or the task has <a href="http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dg-basic.html#swf-dev-timeout-types">timed out</a>.</p> <p><b>Access Control</b></p> <p>You can use IAM policies to control this action''s access to Amazon SWF resources as follows:</p> <ul> <li>Use a <code>Resource</code> element with the domain name to limit the action to only specified domains.</li> <li>Use an <code>Action</code> element to allow or deny permission to call this action.</li> <li>You cannot use an IAM policy to constrain this action''s parameters.</li> </ul> <p>If the caller does not have sufficient permissions to invoke the action, or the parameter values fall outside the specified constraints, the action fails. The associated event attribute''s <b>cause</b> parameter will be set to OPERATION_NOT_PERMITTED. For details and example IAM policies, see <a href="http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using IAM to Manage Access to Amazon SWF Workflows</a>.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: UnknownResourceFault
          x-aws-exception: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnknownResourceFault'
        '481':
          description: OperationNotPermittedFault
          x-aws-exception: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedFault'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RespondActivityTaskCanceledInput'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#RespondActivityTaskCompleted':
    post:
      operationId: RespondActivityTaskCompleted
      description: '<p>Used by workers to tell the service that the <a>ActivityTask</a> identified by the <code>taskToken</code> completed successfully with a <code>result</code> (if provided). The <code>result</code> appears in the <code>ActivityTaskCompleted</code> event in the workflow history.</p> <important> If the requested task does not complete successfully, use <a>RespondActivityTaskFailed</a> instead. If the worker finds that the task is canceled through the <code>canceled</code> flag returned by <a>RecordActivityTaskHeartbeat</a>, it should cancel the task, clean up and then call <a>RespondActivityTaskCanceled</a>.</important> <p>A task is considered open from the time that it is scheduled until it is closed. Therefore a task is reported as open while a worker is processing it. A task is closed after it has been specified in a call to RespondActivityTaskCompleted, <a>RespondActivityTaskCanceled</a>, <a>RespondActivityTaskFailed</a>, or the task has <a href="http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dg-basic.html#swf-dev-timeout-types">timed out</a>.</p> <p><b>Access Control</b></p> <p>You can use IAM policies to control this action''s access to Amazon SWF resources as follows:</p> <ul> <li>Use a <code>Resource</code> element with the domain name to limit the action to only specified domains.</li> <li>Use an <code>Action</code> element to allow or deny permission to call this action.</li> <li>You cannot use an IAM policy to constrain this action''s parameters.</li> </ul> <p>If the caller does not have sufficient permissions to invoke the action, or the parameter values fall outside the specified constraints, the action fails. The associated event attribute''s <b>cause</b> parameter will be set to OPERATION_NOT_PERMITTED. For details and example IAM policies, see <a href="http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using IAM to Manage Access to Amazon SWF Workflows</a>.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: UnknownResourceFault
          x-aws-exception: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnknownResourceFault'
        '481':
          description: OperationNotPermittedFault
          x-aws-exception: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedFault'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RespondActivityTaskCompletedInput'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#RespondActivityTaskFailed':
    post:
      operationId: RespondActivityTaskFailed
      description: '<p>Used by workers to tell the service that the <a>ActivityTask</a> identified by the <code>taskToken</code> has failed with <code>reason</code> (if specified). The <code>reason</code> and <code>details</code> appear in the <code>ActivityTaskFailed</code> event added to the workflow history.</p> <p>A task is considered open from the time that it is scheduled until it is closed. Therefore a task is reported as open while a worker is processing it. A task is closed after it has been specified in a call to <a>RespondActivityTaskCompleted</a>, <a>RespondActivityTaskCanceled</a>, RespondActivityTaskFailed, or the task has <a href="http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dg-basic.html#swf-dev-timeout-types">timed out</a>.</p> <p><b>Access Control</b></p> <p>You can use IAM policies to control this action''s access to Amazon SWF resources as follows:</p> <ul> <li>Use a <code>Resource</code> element with the domain name to limit the action to only specified domains.</li> <li>Use an <code>Action</code> element to allow or deny permission to call this action.</li> <li>You cannot use an IAM policy to constrain this action''s parameters.</li> </ul> <p>If the caller does not have sufficient permissions to invoke the action, or the parameter values fall outside the specified constraints, the action fails. The associated event attribute''s <b>cause</b> parameter will be set to OPERATION_NOT_PERMITTED. For details and example IAM policies, see <a href="http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using IAM to Manage Access to Amazon SWF Workflows</a>.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: UnknownResourceFault
          x-aws-exception: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnknownResourceFault'
        '481':
          description: OperationNotPermittedFault
          x-aws-exception: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedFault'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RespondActivityTaskFailedInput'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#RespondDecisionTaskCompleted':
    post:
      operationId: RespondDecisionTaskCompleted
      description: '<p>Used by deciders to tell the service that the <a>DecisionTask</a> identified by the <code>taskToken</code> has successfully completed. The <code>decisions</code> argument specifies the list of decisions made while processing the task.</p> <p>A <code>DecisionTaskCompleted</code> event is added to the workflow history. The <code>executionContext</code> specified is attached to the event in the workflow execution history.</p> <p><b>Access Control</b></p> <p>If an IAM policy grants permission to use <code>RespondDecisionTaskCompleted</code>, it can express permissions for the list of decisions in the <code>decisions</code> parameter. Each of the decisions has one or more parameters, much like a regular API call. To allow for policies to be as readable as possible, you can express permissions on decisions as if they were actual API calls, including applying conditions to some parameters. For more information, see <a href="http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using IAM to Manage Access to Amazon SWF Workflows</a>.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: UnknownResourceFault
          x-aws-exception: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnknownResourceFault'
        '481':
          description: OperationNotPermittedFault
          x-aws-exception: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedFault'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RespondDecisionTaskCompletedInput'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#SignalWorkflowExecution':
    post:
      operationId: SignalWorkflowExecution
      description: '<p>Records a <code>WorkflowExecutionSignaled</code> event in the workflow execution history and creates a decision task for the workflow execution identified by the given domain, workflowId and runId. The event is recorded with the specified user defined signalName and input (if provided).</p> <note> If a runId is not specified, then the <code>WorkflowExecutionSignaled</code> event is recorded in the history of the current open workflow with the matching workflowId in the domain.</note> <note> If the specified workflow execution is not open, this method fails with <code>UnknownResource</code>.</note> <p><b>Access Control</b></p> <p>You can use IAM policies to control this action''s access to Amazon SWF resources as follows:</p> <ul> <li>Use a <code>Resource</code> element with the domain name to limit the action to only specified domains.</li> <li>Use an <code>Action</code> element to allow or deny permission to call this action.</li> <li>You cannot use an IAM policy to constrain this action''s parameters.</li> </ul> <p>If the caller does not have sufficient permissions to invoke the action, or the parameter values fall outside the specified constraints, the action fails. The associated event attribute''s <b>cause</b> parameter will be set to OPERATION_NOT_PERMITTED. For details and example IAM policies, see <a href="http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using IAM to Manage Access to Amazon SWF Workflows</a>.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: UnknownResourceFault
          x-aws-exception: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnknownResourceFault'
        '481':
          description: OperationNotPermittedFault
          x-aws-exception: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedFault'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignalWorkflowExecutionInput'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#StartWorkflowExecution':
    post:
      operationId: StartWorkflowExecution
      description: '<p>Starts an execution of the workflow type in the specified domain using the provided <code>workflowId</code> and input data.</p> <p>This action returns the newly started workflow execution.</p> <p><b>Access Control</b></p> <p>You can use IAM policies to control this action''s access to Amazon SWF resources as follows:</p> <ul> <li>Use a <code>Resource</code> element with the domain name to limit the action to only specified domains.</li> <li>Use an <code>Action</code> element to allow or deny permission to call this action.</li> <li>Constrain the following parameters by using a <code>Condition</code> element with the appropriate keys. <ul> <li> <code>tagList.member.0</code>: The key is <code>swf:tagList.member.0</code>.</li> <li> <code>tagList.member.1</code>: The key is <code>swf:tagList.member.1</code>.</li> <li> <code>tagList.member.2</code>: The key is <code>swf:tagList.member.2</code>.</li> <li> <code>tagList.member.3</code>: The key is <code>swf:tagList.member.3</code>.</li> <li> <code>tagList.member.4</code>: The key is <code>swf:tagList.member.4</code>.</li> <li><code>taskList</code>: String constraint. The key is <code>swf:taskList.name</code>.</li> <li><code>workflowType.name</code>: String constraint. The key is <code>swf:workflowType.name</code>.</li> <li><code>workflowType.version</code>: String constraint. The key is <code>swf:workflowType.version</code>.</li> </ul> </li> </ul> <p>If the caller does not have sufficient permissions to invoke the action, or the parameter values fall outside the specified constraints, the action fails. The associated event attribute''s <b>cause</b> parameter will be set to OPERATION_NOT_PERMITTED. For details and example IAM policies, see <a href="http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using IAM to Manage Access to Amazon SWF Workflows</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Run'
        '480':
          description: UnknownResourceFault
          x-aws-exception: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnknownResourceFault'
        '481':
          description: TypeDeprecatedFault
          x-aws-exception: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypeDeprecatedFault'
        '482':
          description: WorkflowExecutionAlreadyStartedFault
          x-aws-exception: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowExecutionAlreadyStartedFault'
        '483':
          description: LimitExceededFault
          x-aws-exception: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededFault'
        '484':
          description: OperationNotPermittedFault
          x-aws-exception: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedFault'
        '485':
          description: DefaultUndefinedFault
          x-aws-exception: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultUndefinedFault'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartWorkflowExecutionInput'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#TerminateWorkflowExecution':
    post:
      operationId: TerminateWorkflowExecution
      description: '<p>Records a <code>WorkflowExecutionTerminated</code> event and forces closure of the workflow execution identified by the given domain, runId, and workflowId. The child policy, registered with the workflow type or specified when starting this execution, is applied to any open child workflow executions of this workflow execution.</p> <important> If the identified workflow execution was in progress, it is terminated immediately.</important> <note> If a runId is not specified, then the <code>WorkflowExecutionTerminated</code> event is recorded in the history of the current open workflow with the matching workflowId in the domain.</note> <note> You should consider using <a>RequestCancelWorkflowExecution</a> action instead because it allows the workflow to gracefully close while <a>TerminateWorkflowExecution</a> does not.</note> <p><b>Access Control</b></p> <p>You can use IAM policies to control this action''s access to Amazon SWF resources as follows:</p> <ul> <li>Use a <code>Resource</code> element with the domain name to limit the action to only specified domains.</li> <li>Use an <code>Action</code> element to allow or deny permission to call this action.</li> <li>You cannot use an IAM policy to constrain this action''s parameters.</li> </ul> <p>If the caller does not have sufficient permissions to invoke the action, or the parameter values fall outside the specified constraints, the action fails. The associated event attribute''s <b>cause</b> parameter will be set to OPERATION_NOT_PERMITTED. For details and example IAM policies, see <a href="http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using IAM to Manage Access to Amazon SWF Workflows</a>.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: UnknownResourceFault
          x-aws-exception: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnknownResourceFault'
        '481':
          description: OperationNotPermittedFault
          x-aws-exception: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedFault'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TerminateWorkflowExecutionInput'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
components:
  schemas:
    ActivityId:
      type: string
      minLength: 1
      maxLength: 256
    ActivityTask:
      type: object
      required:
        - taskToken
        - activityId
        - startedEventId
        - workflowExecution
        - activityType
      properties:
        taskToken:
          $ref: '#/components/schemas/TaskToken'
        activityId:
          $ref: '#/components/schemas/ActivityId'
        startedEventId:
          $ref: '#/components/schemas/EventId'
        workflowExecution:
          $ref: '#/components/schemas/WorkflowExecution'
        activityType:
          $ref: '#/components/schemas/ActivityType'
        input:
          $ref: '#/components/schemas/Data'
      description: Unit of work sent to an activity worker.
    ActivityTaskCancelRequestedEventAttributes:
      type: object
      required:
        - decisionTaskCompletedEventId
        - activityId
      properties:
        decisionTaskCompletedEventId:
          $ref: '#/components/schemas/EventId'
        activityId:
          $ref: '#/components/schemas/ActivityId'
      description: Provides details of the <code>ActivityTaskCancelRequested</code> event.
    ActivityTaskCanceledEventAttributes:
      type: object
      required:
        - scheduledEventId
        - startedEventId
      properties:
        details:
          $ref: '#/components/schemas/Data'
        scheduledEventId:
          $ref: '#/components/schemas/EventId'
        startedEventId:
          $ref: '#/components/schemas/EventId'
        latestCancelRequestedEventId:
          $ref: '#/components/schemas/EventId'
      description: Provides details of the <code>ActivityTaskCanceled</code> event.
    ActivityTaskCompletedEventAttributes:
      type: object
      required:
        - scheduledEventId
        - startedEventId
      properties:
        result:
          $ref: '#/components/schemas/Data'
        scheduledEventId:
          $ref: '#/components/schemas/EventId'
        startedEventId:
          $ref: '#/components/schemas/EventId'
      description: Provides details of the <code>ActivityTaskCompleted</code> event.
    ActivityTaskFailedEventAttributes:
      type: object
      required:
        - scheduledEventId
        - startedEventId
      properties:
        reason:
          $ref: '#/components/schemas/FailureReason'
        details:
          $ref: '#/components/schemas/Data'
        scheduledEventId:
          $ref: '#/components/schemas/EventId'
        startedEventId:
          $ref: '#/components/schemas/EventId'
      description: Provides details of the <code>ActivityTaskFailed</code> event.
    ActivityTaskScheduledEventAttributes:
      type: object
      required:
        - activityType
        - activityId
        - taskList
        - decisionTaskCompletedEventId
      properties:
        activityType:
          $ref: '#/components/schemas/ActivityType'
        activityId:
          $ref: '#/components/schemas/ActivityId'
        input:
          $ref: '#/components/schemas/Data'
        control:
          $ref: '#/components/schemas/Data'
        scheduleToStartTimeout:
          $ref: '#/components/schemas/DurationInSecondsOptional'
        scheduleToCloseTimeout:
          $ref: '#/components/schemas/DurationInSecondsOptional'
        startToCloseTimeout:
          $ref: '#/components/schemas/DurationInSecondsOptional'
        taskList:
          $ref: '#/components/schemas/TaskList'
        taskPriority:
          $ref: '#/components/schemas/TaskPriority'
        decisionTaskCompletedEventId:
          $ref: '#/components/schemas/EventId'
        heartbeatTimeout:
          $ref: '#/components/schemas/DurationInSecondsOptional'
      description: Provides details of the <code>ActivityTaskScheduled</code> event.
    ActivityTaskStartedEventAttributes:
      type: object
      required:
        - scheduledEventId
      properties:
        identity:
          $ref: '#/components/schemas/Identity'
        scheduledEventId:
          $ref: '#/components/schemas/EventId'
      description: Provides details of the <code>ActivityTaskStarted</code> event.
    ActivityTaskStatus:
      type: object
      required:
        - cancelRequested
      properties:
        cancelRequested:
          $ref: '#/components/schemas/Canceled'
      description: Status information about an activity task.
    ActivityTaskTimedOutEventAttributes:
      type: object
      required:
        - timeoutType
        - scheduledEventId
        - startedEventId
      properties:
        timeoutType:
          $ref: '#/components/schemas/ActivityTaskTimeoutType'
        scheduledEventId:
          $ref: '#/components/schemas/EventId'
        startedEventId:
          $ref: '#/components/schemas/EventId'
        details:
          $ref: '#/components/schemas/LimitedData'
      description: Provides details of the <code>ActivityTaskTimedOut</code> event.
    ActivityTaskTimeoutType:
      type: string
      enum:
        - START_TO_CLOSE
        - SCHEDULE_TO_START
        - SCHEDULE_TO_CLOSE
        - HEARTBEAT
    ActivityType:
      type: object
      required:
        - name
        - version
      properties:
        name:
          $ref: '#/components/schemas/Name'
        version:
          $ref: '#/components/schemas/Version'
      description: Represents an activity type.
    ActivityTypeConfiguration:
      type: object
      properties:
        defaultTaskStartToCloseTimeout:
          $ref: '#/components/schemas/DurationInSecondsOptional'
        defaultTaskHeartbeatTimeout:
          $ref: '#/components/schemas/DurationInSecondsOptional'
        defaultTaskList:
          $ref: '#/components/schemas/TaskList'
        defaultTaskPriority:
          $ref: '#/components/schemas/TaskPriority'
        defaultTaskScheduleToStartTimeout:
          $ref: '#/components/schemas/DurationInSecondsOptional'
        defaultTaskScheduleToCloseTimeout:
          $ref: '#/components/schemas/DurationInSecondsOptional'
      description: Configuration settings registered with the activity type.
    ActivityTypeDetail:
      type: object
      required:
        - typeInfo
        - configuration
      properties:
        typeInfo:
          $ref: '#/components/schemas/ActivityTypeInfo'
        configuration:
          $ref: '#/components/schemas/ActivityTypeConfiguration'
      description: Detailed information about an activity type.
    ActivityTypeInfo:
      type: object
      required:
        - activityType
        - status
        - creationDate
      properties:
        activityType:
          $ref: '#/components/schemas/ActivityType'
        status:
          $ref: '#/components/schemas/RegistrationStatus'
        description:
          $ref: '#/components/schemas/Description'
        creationDate:
          $ref: '#/components/schemas/Timestamp'
        deprecationDate:
          $ref: '#/components/schemas/Timestamp'
      description: Detailed information about an activity type.
    ActivityTypeInfoList:
      type: array
      items:
        $ref: '#/components/schemas/ActivityTypeInfo'
    ActivityTypeInfos:
      type: object
      required:
        - typeInfos
      properties:
        typeInfos:
          $ref: '#/components/schemas/ActivityTypeInfoList'
        nextPageToken:
          $ref: '#/components/schemas/PageToken'
      description: Contains a paginated list of activity type information structures.
    Arn:
      type: string
      minLength: 1
      maxLength: 1224
    CancelTimerDecisionAttributes:
      type: object
      required:
        - timerId
      properties:
        timerId:
          $ref: '#/components/schemas/TimerId'
      description: '<p>Provides details of the <code>CancelTimer</code> decision.</p> <p><b>Access Control</b></p> <p>You can use IAM policies to control this decision''s access to Amazon SWF resources as follows:</p> <ul> <li>Use a <code>Resource</code> element with the domain name to limit the action to only specified domains.</li> <li>Use an <code>Action</code> element to allow or deny permission to call this action.</li> <li>You cannot use an IAM policy to constrain this action''s parameters.</li> </ul> <p>If the caller does not have sufficient permissions to invoke the action, or the parameter values fall outside the specified constraints, the action fails. The associated event attribute''s <b>cause</b> parameter will be set to OPERATION_NOT_PERMITTED. For details and example IAM policies, see <a href="http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using IAM to Manage Access to Amazon SWF Workflows</a>.</p>'
    CancelTimerFailedCause:
      type: string
      enum:
        - TIMER_ID_UNKNOWN
        - OPERATION_NOT_PERMITTED
    CancelTimerFailedEventAttributes:
      type: object
      required:
        - timerId
        - cause
        - decisionTaskCompletedEventId
      properties:
        timerId:
          $ref: '#/components/schemas/TimerId'
        cause:
          $ref: '#/components/schemas/CancelTimerFailedCause'
        decisionTaskCompletedEventId:
          $ref: '#/components/schemas/EventId'
      description: Provides details of the <code>CancelTimerFailed</code> event.
    CancelWorkflowExecutionDecisionAttributes:
      type: object
      properties:
        details:
          $ref: '#/components/schemas/Data'
      description: '<p>Provides details of the <code>CancelWorkflowExecution</code> decision.</p> <p><b>Access Control</b></p> <p>You can use IAM policies to control this decision''s access to Amazon SWF resources as follows:</p> <ul> <li>Use a <code>Resource</code> element with the domain name to limit the action to only specified domains.</li> <li>Use an <code>Action</code> element to allow or deny permission to call this action.</li> <li>You cannot use an IAM policy to constrain this action''s parameters.</li> </ul> <p>If the caller does not have sufficient permissions to invoke the action, or the parameter values fall outside the specified constraints, the action fails. The associated event attribute''s <b>cause</b> parameter will be set to OPERATION_NOT_PERMITTED. For details and example IAM policies, see <a href="http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using IAM to Manage Access to Amazon SWF Workflows</a>.</p>'
    CancelWorkflowExecutionFailedCause:
      type: string
      enum:
        - UNHANDLED_DECISION
        - OPERATION_NOT_PERMITTED
    CancelWorkflowExecutionFailedEventAttributes:
      type: object
      required:
        - cause
        - decisionTaskCompletedEventId
      properties:
        cause:
          $ref: '#/components/schemas/CancelWorkflowExecutionFailedCause'
        decisionTaskCompletedEventId:
          $ref: '#/components/schemas/EventId'
      description: Provides details of the <code>CancelWorkflowExecutionFailed</code> event.
    Canceled:
      type: boolean
    CauseMessage:
      type: string
      maxLength: 1728
    ChildPolicy:
      type: string
      enum:
        - TERMINATE
        - REQUEST_CANCEL
        - ABANDON
    ChildWorkflowExecutionCanceledEventAttributes:
      type: object
      required:
        - workflowExecution
        - workflowType
        - initiatedEventId
        - startedEventId
      properties:
        workflowExecution:
          $ref: '#/components/schemas/WorkflowExecution'
        workflowType:
          $ref: '#/components/schemas/WorkflowType'
        details:
          $ref: '#/components/schemas/Data'
        initiatedEventId:
          $ref: '#/components/schemas/EventId'
        startedEventId:
          $ref: '#/components/schemas/EventId'
      description: Provide details of the <code>ChildWorkflowExecutionCanceled</code> event.
    ChildWorkflowExecutionCompletedEventAttributes:
      type: object
      required:
        - workflowExecution
        - workflowType
        - initiatedEventId
        - startedEventId
      properties:
        workflowExecution:
          $ref: '#/components/schemas/WorkflowExecution'
        workflowType:
          $ref: '#/components/schemas/WorkflowType'
        result:
          $ref: '#/components/schemas/Data'
        initiatedEventId:
          $ref: '#/components/schemas/EventId'
        startedEventId:
          $ref: '#/components/schemas/EventId'
      description: Provides details of the <code>ChildWorkflowExecutionCompleted</code> event.
    ChildWorkflowExecutionFailedEventAttributes:
      type: object
      required:
        - workflowExecution
        - workflowType
        - initiatedEventId
        - startedEventId
      properties:
        workflowExecution:
          $ref: '#/components/schemas/WorkflowExecution'
        workflowType:
          $ref: '#/components/schemas/WorkflowType'
        reason:
          $ref: '#/components/schemas/FailureReason'
        details:
          $ref: '#/components/schemas/Data'
        initiatedEventId:
          $ref: '#/components/schemas/EventId'
        startedEventId:
          $ref: '#/components/schemas/EventId'
      description: Provides details of the <code>ChildWorkflowExecutionFailed</code> event.
    ChildWorkflowExecutionStartedEventAttributes:
      type: object
      required:
        - workflowExecution
        - workflowType
        - initiatedEventId
      properties:
        workflowExecution:
          $ref: '#/components/schemas/WorkflowExecution'
        workflowType:
          $ref: '#/components/schemas/WorkflowType'
        initiatedEventId:
          $ref: '#/components/schemas/EventId'
      description: Provides details of the <code>ChildWorkflowExecutionStarted</code> event.
    ChildWorkflowExecutionTerminatedEventAttributes:
      type: object
      required:
        - workflowExecution
        - workflowType
        - initiatedEventId
        - startedEventId
      properties:
        workflowExecution:
          $ref: '#/components/schemas/WorkflowExecution'
        workflowType:
          $ref: '#/components/schemas/WorkflowType'
        initiatedEventId:
          $ref: '#/components/schemas/EventId'
        startedEventId:
          $ref: '#/components/schemas/EventId'
      description: Provides details of the <code>ChildWorkflowExecutionTerminated</code> event.
    ChildWorkflowExecutionTimedOutEventAttributes:
      type: object
      required:
        - workflowExecution
        - workflowType
        - timeoutType
        - initiatedEventId
        - startedEventId
      properties:
        workflowExecution:
          $ref: '#/components/schemas/WorkflowExecution'
        workflowType:
          $ref: '#/components/schemas/WorkflowType'
        timeoutType:
          $ref: '#/components/schemas/WorkflowExecutionTimeoutType'
        initiatedEventId:
          $ref: '#/components/schemas/EventId'
        startedEventId:
          $ref: '#/components/schemas/EventId'
      description: Provides details of the <code>ChildWorkflowExecutionTimedOut</code> event.
    CloseStatus:
      type: string
      enum:
        - COMPLETED
        - FAILED
        - CANCELED
        - TERMINATED
        - CONTINUED_AS_NEW
        - TIMED_OUT
    CloseStatusFilter:
      type: object
      required:
        - status
      properties:
        status:
          $ref: '#/components/schemas/CloseStatus'
      description: Used to filter the closed workflow executions in visibility APIs by their close status.
    CompleteWorkflowExecutionDecisionAttributes:
      type: object
      properties:
        result:
          $ref: '#/components/schemas/Data'
      description: '<p>Provides details of the <code>CompleteWorkflowExecution</code> decision.</p> <p><b>Access Control</b></p> <p>You can use IAM policies to control this decision''s access to Amazon SWF resources as follows:</p> <ul> <li>Use a <code>Resource</code> element with the domain name to limit the action to only specified domains.</li> <li>Use an <code>Action</code> element to allow or deny permission to call this action.</li> <li>You cannot use an IAM policy to constrain this action''s parameters.</li> </ul> <p>If the caller does not have sufficient permissions to invoke the action, or the parameter values fall outside the specified constraints, the action fails. The associated event attribute''s <b>cause</b> parameter will be set to OPERATION_NOT_PERMITTED. For details and example IAM policies, see <a href="http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using IAM to Manage Access to Amazon SWF Workflows</a>.</p>'
    CompleteWorkflowExecutionFailedCause:
      type: string
      enum:
        - UNHANDLED_DECISION
        - OPERATION_NOT_PERMITTED
    CompleteWorkflowExecutionFailedEventAttributes:
      type: object
      required:
        - cause
        - decisionTaskCompletedEventId
      properties:
        cause:
          $ref: '#/components/schemas/CompleteWorkflowExecutionFailedCause'
        decisionTaskCompletedEventId:
          $ref: '#/components/schemas/EventId'
      description: Provides details of the <code>CompleteWorkflowExecutionFailed</code> event.
    ContinueAsNewWorkflowExecutionDecisionAttributes:
      type: object
      properties:
        input:
          $ref: '#/components/schemas/Data'
        executionStartToCloseTimeout:
          $ref: '#/components/schemas/DurationInSecondsOptional'
        taskList:
          $ref: '#/components/schemas/TaskList'
        taskPriority:
          $ref: '#/components/schemas/TaskPriority'
        taskStartToCloseTimeout:
          $ref: '#/components/schemas/DurationInSecondsOptional'
        childPolicy:
          $ref: '#/components/schemas/ChildPolicy'
        tagList:
          $ref: '#/components/schemas/TagList'
        workflowTypeVersion:
          $ref: '#/components/schemas/Version'
        lambdaRole:
          $ref: '#/components/schemas/Arn'
      description: '<p>Provides details of the <code>ContinueAsNewWorkflowExecution</code> decision.</p> <p><b>Access Control</b></p> <p>You can use IAM policies to control this decision''s access to Amazon SWF resources as follows:</p> <ul> <li>Use a <code>Resource</code> element with the domain name to limit the action to only specified domains.</li> <li>Use an <code>Action</code> element to allow or deny permission to call this action.</li> <li>Constrain the following parameters by using a <code>Condition</code> element with the appropriate keys. <ul> <li> <code>tag</code>: <i>Optional.</i>. A tag used to identify the workflow execution</li> <li><code>taskList</code>: String constraint. The key is <code>swf:taskList.name</code>.</li> <li><code>workflowType.version</code>: String constraint. The key is <code>swf:workflowType.version</code>.</li> </ul> </li> </ul> <p>If the caller does not have sufficient permissions to invoke the action, or the parameter values fall outside the specified constraints, the action fails. The associated event attribute''s <b>cause</b> parameter will be set to OPERATION_NOT_PERMITTED. For details and example IAM policies, see <a href="http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using IAM to Manage Access to Amazon SWF Workflows</a>.</p>'
    ContinueAsNewWorkflowExecutionFailedCause:
      type: string
      enum:
        - UNHANDLED_DECISION
        - WORKFLOW_TYPE_DEPRECATED
        - WORKFLOW_TYPE_DOES_NOT_EXIST
        - DEFAULT_EXECUTION_START_TO_CLOSE_TIMEOUT_UNDEFINED
        - DEFAULT_TASK_START_TO_CLOSE_TIMEOUT_UNDEFINED
        - DEFAULT_TASK_LIST_UNDEFINED
        - DEFAULT_CHILD_POLICY_UNDEFINED
        - CONTINUE_AS_NEW_WORKFLOW_EXECUTION_RATE_EXCEEDED
        - OPERATION_NOT_PERMITTED
    ContinueAsNewWorkflowExecutionFailedEventAttributes:
      type: object
      required:
        - cause
        - decisionTaskCompletedEventId
      properties:
        cause:
          $ref: '#/components/schemas/ContinueAsNewWorkflowExecutionFailedCause'
        decisionTaskCompletedEventId:
          $ref: '#/components/schemas/EventId'
      description: Provides details of the <code>ContinueAsNewWorkflowExecutionFailed</code> event.
    Count:
      type: integer
      minimum: 0
    CountClosedWorkflowExecutionsInput:
      type: object
      required:
        - domain
      properties:
        domain:
          $ref: '#/components/schemas/DomainName'
        startTimeFilter:
          $ref: '#/components/schemas/ExecutionTimeFilter'
        closeTimeFilter:
          $ref: '#/components/schemas/ExecutionTimeFilter'
        executionFilter:
          $ref: '#/components/schemas/WorkflowExecutionFilter'
        typeFilter:
          $ref: '#/components/schemas/WorkflowTypeFilter'
        tagFilter:
          $ref: '#/components/schemas/TagFilter'
        closeStatusFilter:
          $ref: '#/components/schemas/CloseStatusFilter'
    CountOpenWorkflowExecutionsInput:
      type: object
      required:
        - domain
        - startTimeFilter
      properties:
        domain:
          $ref: '#/components/schemas/DomainName'
        startTimeFilter:
          $ref: '#/components/schemas/ExecutionTimeFilter'
        typeFilter:
          $ref: '#/components/schemas/WorkflowTypeFilter'
        tagFilter:
          $ref: '#/components/schemas/TagFilter'
        executionFilter:
          $ref: '#/components/schemas/WorkflowExecutionFilter'
    CountPendingActivityTasksInput:
      type: object
      required:
        - domain
        - taskList
      properties:
        domain:
          $ref: '#/components/schemas/DomainName'
        taskList:
          $ref: '#/components/schemas/TaskList'
    CountPendingDecisionTasksInput:
      type: object
      required:
        - domain
        - taskList
      properties:
        domain:
          $ref: '#/components/schemas/DomainName'
        taskList:
          $ref: '#/components/schemas/TaskList'
    Data:
      type: string
      maxLength: 32768
    Decision:
      type: object
      required:
        - decisionType
      properties:
        decisionType:
          $ref: '#/components/schemas/DecisionType'
        scheduleActivityTaskDecisionAttributes:
          $ref: '#/components/schemas/ScheduleActivityTaskDecisionAttributes'
        requestCancelActivityTaskDecisionAttributes:
          $ref: '#/components/schemas/RequestCancelActivityTaskDecisionAttributes'
        completeWorkflowExecutionDecisionAttributes:
          $ref: '#/components/schemas/CompleteWorkflowExecutionDecisionAttributes'
        failWorkflowExecutionDecisionAttributes:
          $ref: '#/components/schemas/FailWorkflowExecutionDecisionAttributes'
        cancelWorkflowExecutionDecisionAttributes:
          $ref: '#/components/schemas/CancelWorkflowExecutionDecisionAttributes'
        continueAsNewWorkflowExecutionDecisionAttributes:
          $ref: '#/components/schemas/ContinueAsNewWorkflowExecutionDecisionAttributes'
        recordMarkerDecisionAttributes:
          $ref: '#/components/schemas/RecordMarkerDecisionAttributes'
        startTimerDecisionAttributes:
          $ref: '#/components/schemas/StartTimerDecisionAttributes'
        cancelTimerDecisionAttributes:
          $ref: '#/components/schemas/CancelTimerDecisionAttributes'
        signalExternalWorkflowExecutionDecisionAttributes:
          $ref: '#/components/schemas/SignalExternalWorkflowExecutionDecisionAttributes'
        requestCancelExternalWorkflowExecutionDecisionAttributes:
          $ref: '#/components/schemas/RequestCancelExternalWorkflowExecutionDecisionAttributes'
        startChildWorkflowExecutionDecisionAttributes:
          $ref: '#/components/schemas/StartChildWorkflowExecutionDecisionAttributes'
        scheduleLambdaFunctionDecisionAttributes:
          $ref: '#/components/schemas/ScheduleLambdaFunctionDecisionAttributes'
      description: '<p>Specifies a decision made by the decider. A decision can be one of these types:</p> <ul> <li> <b>CancelTimer</b>: cancels a previously started timer and records a <code>TimerCanceled</code> event in the history.</li> <li> <b>CancelWorkflowExecution</b>: closes the workflow execution and records a <code>WorkflowExecutionCanceled</code> event in the history.</li> <li> <b>CompleteWorkflowExecution</b>: closes the workflow execution and records a <code>WorkflowExecutionCompleted</code> event in the history .</li> <li> <b>ContinueAsNewWorkflowExecution</b>: closes the workflow execution and starts a new workflow execution of the same type using the same workflow ID and a unique run ID. A <code>WorkflowExecutionContinuedAsNew</code> event is recorded in the history.</li> <li> <b>FailWorkflowExecution</b>: closes the workflow execution and records a <code>WorkflowExecutionFailed</code> event in the history.</li> <li> <b>RecordMarker</b>: records a <code>MarkerRecorded</code> event in the history. Markers can be used for adding custom information in the history for instance to let deciders know that they do not need to look at the history beyond the marker event.</li> <li> <b>RequestCancelActivityTask</b>: attempts to cancel a previously scheduled activity task. If the activity task was scheduled but has not been assigned to a worker, then it will be canceled. If the activity task was already assigned to a worker, then the worker will be informed that cancellation has been requested in the response to <a>RecordActivityTaskHeartbeat</a>.</li> <li> <b>RequestCancelExternalWorkflowExecution</b>: requests that a request be made to cancel the specified external workflow execution and records a <code>RequestCancelExternalWorkflowExecutionInitiated</code> event in the history.</li> <li> <b>ScheduleActivityTask</b>: schedules an activity task.</li> <li> <b>ScheduleLambdaFunction</b>: schedules a AWS Lambda function.</li> <li> <b>SignalExternalWorkflowExecution</b>: requests a signal to be delivered to the specified external workflow execution and records a <code>SignalExternalWorkflowExecutionInitiated</code> event in the history.</li> <li> <b>StartChildWorkflowExecution</b>: requests that a child workflow execution be started and records a <code>StartChildWorkflowExecutionInitiated</code> event in the history. The child workflow execution is a separate workflow execution with its own history.</li> <li> <b>StartTimer</b>: starts a timer for this workflow execution and records a <code>TimerStarted</code> event in the history. This timer will fire after the specified delay and record a <code>TimerFired</code> event.</li> </ul> <p><b>Access Control</b></p> <p>If you grant permission to use <code>RespondDecisionTaskCompleted</code>, you can use IAM policies to express permissions for the list of decisions returned by this action as if they were members of the API. Treating decisions as a pseudo API maintains a uniform conceptual model and helps keep policies readable. For details and example IAM policies, see <a href="http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using IAM to Manage Access to Amazon SWF Workflows</a>.</p> <p><b>Decision Failure</b></p> <p>Decisions can fail for several reasons</p> <ul> <li>The ordering of decisions should follow a logical flow. Some decisions might not make sense in the current context of the workflow execution and will therefore fail.</li> <li>A limit on your account was reached.</li> <li>The decision lacks sufficient permissions.</li> </ul> <p>One of the following events might be added to the history to indicate an error. The event attribute''s <b>cause</b> parameter indicates the cause. If <b>cause</b> is set to OPERATION_NOT_PERMITTED, the decision failed because it lacked sufficient permissions. For details and example IAM policies, see <a href="http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using IAM to Manage Access to Amazon SWF Workflows</a>.</p> <ul> <li> <b>ScheduleActivityTaskFailed</b>: a ScheduleActivityTask decision failed. This could happen if the activity type specified in the decision is not registered, is in a deprecated state, or the decision is not properly configured.</li> <li> <b>ScheduleLambdaFunctionFailed</b>: a ScheduleLambdaFunctionFailed decision failed. This could happen if the AWS Lambda function specified in the decision does not exist, or the AWS Lambda service''s limits are exceeded.</li> <li> <b>RequestCancelActivityTaskFailed</b>: a RequestCancelActivityTask decision failed. This could happen if there is no open activity task with the specified activityId.</li> <li> <b>StartTimerFailed</b>: a StartTimer decision failed. This could happen if there is another open timer with the same timerId.</li> <li> <b>CancelTimerFailed</b>: a CancelTimer decision failed. This could happen if there is no open timer with the specified timerId.</li> <li> <b>StartChildWorkflowExecutionFailed</b>: a StartChildWorkflowExecution decision failed. This could happen if the workflow type specified is not registered, is deprecated, or the decision is not properly configured.</li> <li> <b>SignalExternalWorkflowExecutionFailed</b>: a SignalExternalWorkflowExecution decision failed. This could happen if the <code>workflowID</code> specified in the decision was incorrect.</li> <li> <b>RequestCancelExternalWorkflowExecutionFailed</b>: a RequestCancelExternalWorkflowExecution decision failed. This could happen if the <code>workflowID</code> specified in the decision was incorrect.</li> <li> <b>CancelWorkflowExecutionFailed</b>: a CancelWorkflowExecution decision failed. This could happen if there is an unhandled decision task pending in the workflow execution.</li> <li> <b>CompleteWorkflowExecutionFailed</b>: a CompleteWorkflowExecution decision failed. This could happen if there is an unhandled decision task pending in the workflow execution.</li> <li> <b>ContinueAsNewWorkflowExecutionFailed</b>: a ContinueAsNewWorkflowExecution decision failed. This could happen if there is an unhandled decision task pending in the workflow execution or the ContinueAsNewWorkflowExecution decision was not configured correctly.</li> <li> <b>FailWorkflowExecutionFailed</b>: a FailWorkflowExecution decision failed. This could happen if there is an unhandled decision task pending in the workflow execution.</li> </ul> <p>The preceding error events might occur due to an error in the decider logic, which might put the workflow execution in an unstable state The cause field in the event structure for the error event indicates the cause of the error.</p> <note>A workflow execution may be closed by the decider by returning one of the following decisions when completing a decision task: <code>CompleteWorkflowExecution</code>, <code>FailWorkflowExecution</code>, <code>CancelWorkflowExecution</code> and <code>ContinueAsNewWorkflowExecution</code>. An UnhandledDecision fault will be returned if a workflow closing decision is specified and a signal or activity event had been added to the history while the decision task was being performed by the decider. Unlike the above situations which are logic issues, this fault is always possible because of race conditions in a distributed system. The right action here is to call <a>RespondDecisionTaskCompleted</a> without any decisions. This would result in another decision task with these new events included in the history. The decider should handle the new events and may decide to close the workflow execution.</note> <p><b>How to code a decision</b></p> <p>You code a decision by first setting the decision type field to one of the above decision values, and then set the corresponding attributes field shown below:</p> <ul> <li> <a>ScheduleActivityTaskDecisionAttributes</a> </li> <li> <a>ScheduleLambdaFunctionDecisionAttributes</a> </li> <li> <a>RequestCancelActivityTaskDecisionAttributes</a> </li> <li> <a>CompleteWorkflowExecutionDecisionAttributes</a> </li> <li> <a>FailWorkflowExecutionDecisionAttributes</a> </li> <li> <a>CancelWorkflowExecutionDecisionAttributes</a> </li> <li> <a>ContinueAsNewWorkflowExecutionDecisionAttributes</a> </li> <li> <a>RecordMarkerDecisionAttributes</a> </li> <li> <a>StartTimerDecisionAttributes</a> </li> <li> <a>CancelTimerDecisionAttributes</a> </li> <li> <a>SignalExternalWorkflowExecutionDecisionAttributes</a> </li> <li> <a>RequestCancelExternalWorkflowExecutionDecisionAttributes</a> </li> <li> <a>StartChildWorkflowExecutionDecisionAttributes</a> </li> </ul>'
    DecisionList:
      type: array
      items:
        $ref: '#/components/schemas/Decision'
    DecisionTask:
      type: object
      required:
        - taskToken
        - startedEventId
        - workflowExecution
        - workflowType
        - events
      properties:
        taskToken:
          $ref: '#/components/schemas/TaskToken'
        startedEventId:
          $ref: '#/components/schemas/EventId'
        workflowExecution:
          $ref: '#/components/schemas/WorkflowExecution'
        workflowType:
          $ref: '#/components/schemas/WorkflowType'
        events:
          $ref: '#/components/schemas/HistoryEventList'
        nextPageToken:
          $ref: '#/components/schemas/PageToken'
        previousStartedEventId:
          $ref: '#/components/schemas/EventId'
      description: A structure that represents a decision task. Decision tasks are sent to deciders in order for them to make decisions.
    DecisionTaskCompletedEventAttributes:
      type: object
      required:
        - scheduledEventId
        - startedEventId
      properties:
        executionContext:
          $ref: '#/components/schemas/Data'
        scheduledEventId:
          $ref: '#/components/schemas/EventId'
        startedEventId:
          $ref: '#/components/schemas/EventId'
      description: Provides details of the <code>DecisionTaskCompleted</code> event.
    DecisionTaskScheduledEventAttributes:
      type: object
      required:
        - taskList
      properties:
        taskList:
          $ref: '#/components/schemas/TaskList'
        taskPriority:
          $ref: '#/components/schemas/TaskPriority'
        startToCloseTimeout:
          $ref: '#/components/schemas/DurationInSecondsOptional'
      description: Provides details about the <code>DecisionTaskScheduled</code> event.
    DecisionTaskStartedEventAttributes:
      type: object
      required:
        - scheduledEventId
      properties:
        identity:
          $ref: '#/components/schemas/Identity'
        scheduledEventId:
          $ref: '#/components/schemas/EventId'
      description: Provides details of the <code>DecisionTaskStarted</code> event.
    DecisionTaskTimedOutEventAttributes:
      type: object
      required:
        - timeoutType
        - scheduledEventId
        - startedEventId
      properties:
        timeoutType:
          $ref: '#/components/schemas/DecisionTaskTimeoutType'
        scheduledEventId:
          $ref: '#/components/schemas/EventId'
        startedEventId:
          $ref: '#/components/schemas/EventId'
      description: Provides details of the <code>DecisionTaskTimedOut</code> event.
    DecisionTaskTimeoutType:
      type: string
      enum:
        - START_TO_CLOSE
    DecisionType:
      type: string
      enum:
        - ScheduleActivityTask
        - RequestCancelActivityTask
        - CompleteWorkflowExecution
        - FailWorkflowExecution
        - CancelWorkflowExecution
        - ContinueAsNewWorkflowExecution
        - RecordMarker
        - StartTimer
        - CancelTimer
        - SignalExternalWorkflowExecution
        - RequestCancelExternalWorkflowExecution
        - StartChildWorkflowExecution
        - ScheduleLambdaFunction
    DefaultUndefinedFault:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
    DeprecateActivityTypeInput:
      type: object
      required:
        - domain
        - activityType
      properties:
        domain:
          $ref: '#/components/schemas/DomainName'
        activityType:
          $ref: '#/components/schemas/ActivityType'
    DeprecateDomainInput:
      type: object
      required:
        - name
      properties:
        name:
          $ref: '#/components/schemas/DomainName'
    DeprecateWorkflowTypeInput:
      type: object
      required:
        - domain
        - workflowType
      properties:
        domain:
          $ref: '#/components/schemas/DomainName'
        workflowType:
          $ref: '#/components/schemas/WorkflowType'
    DescribeActivityTypeInput:
      type: object
      required:
        - domain
        - activityType
      properties:
        domain:
          $ref: '#/components/schemas/DomainName'
        activityType:
          $ref: '#/components/schemas/ActivityType'
    DescribeDomainInput:
      type: object
      required:
        - name
      properties:
        name:
          $ref: '#/components/schemas/DomainName'
    DescribeWorkflowExecutionInput:
      type: object
      required:
        - domain
        - execution
      properties:
        domain:
          $ref: '#/components/schemas/DomainName'
        execution:
          $ref: '#/components/schemas/WorkflowExecution'
    DescribeWorkflowTypeInput:
      type: object
      required:
        - domain
        - workflowType
      properties:
        domain:
          $ref: '#/components/schemas/DomainName'
        workflowType:
          $ref: '#/components/schemas/WorkflowType'
    Description:
      type: string
      maxLength: 1024
    DomainAlreadyExistsFault:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      description: Returned if the specified domain already exists. You will get this fault even if the existing domain is in deprecated status.
    DomainConfiguration:
      type: object
      required:
        - workflowExecutionRetentionPeriodInDays
      properties:
        workflowExecutionRetentionPeriodInDays:
          $ref: '#/components/schemas/DurationInDays'
      description: Contains the configuration settings of a domain.
    DomainDeprecatedFault:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      description: Returned when the specified domain has been deprecated.
    DomainDetail:
      type: object
      required:
        - domainInfo
        - configuration
      properties:
        domainInfo:
          $ref: '#/components/schemas/DomainInfo'
        configuration:
          $ref: '#/components/schemas/DomainConfiguration'
      description: Contains details of a domain.
    DomainInfo:
      type: object
      required:
        - name
        - status
      properties:
        name:
          $ref: '#/components/schemas/DomainName'
        status:
          $ref: '#/components/schemas/RegistrationStatus'
        description:
          $ref: '#/components/schemas/Description'
      description: Contains general information about a domain.
    DomainInfoList:
      type: array
      items:
        $ref: '#/components/schemas/DomainInfo'
    DomainInfos:
      type: object
      required:
        - domainInfos
      properties:
        domainInfos:
          $ref: '#/components/schemas/DomainInfoList'
        nextPageToken:
          $ref: '#/components/schemas/PageToken'
      description: Contains a paginated collection of DomainInfo structures.
    DomainName:
      type: string
      minLength: 1
      maxLength: 256
    DurationInDays:
      type: string
      minLength: 1
      maxLength: 8
    DurationInSeconds:
      type: string
      minLength: 1
      maxLength: 8
    DurationInSecondsOptional:
      type: string
      maxLength: 8
    ErrorMessage:
      type: string
    EventId:
      type: integer
    EventType:
      type: string
      enum:
        - WorkflowExecutionStarted
        - WorkflowExecutionCancelRequested
        - WorkflowExecutionCompleted
        - CompleteWorkflowExecutionFailed
        - WorkflowExecutionFailed
        - FailWorkflowExecutionFailed
        - WorkflowExecutionTimedOut
        - WorkflowExecutionCanceled
        - CancelWorkflowExecutionFailed
        - WorkflowExecutionContinuedAsNew
        - ContinueAsNewWorkflowExecutionFailed
        - WorkflowExecutionTerminated
        - DecisionTaskScheduled
        - DecisionTaskStarted
        - DecisionTaskCompleted
        - DecisionTaskTimedOut
        - ActivityTaskScheduled
        - ScheduleActivityTaskFailed
        - ActivityTaskStarted
        - ActivityTaskCompleted
        - ActivityTaskFailed
        - ActivityTaskTimedOut
        - ActivityTaskCanceled
        - ActivityTaskCancelRequested
        - RequestCancelActivityTaskFailed
        - WorkflowExecutionSignaled
        - MarkerRecorded
        - RecordMarkerFailed
        - TimerStarted
        - StartTimerFailed
        - TimerFired
        - TimerCanceled
        - CancelTimerFailed
        - StartChildWorkflowExecutionInitiated
        - StartChildWorkflowExecutionFailed
        - ChildWorkflowExecutionStarted
        - ChildWorkflowExecutionCompleted
        - ChildWorkflowExecutionFailed
        - ChildWorkflowExecutionTimedOut
        - ChildWorkflowExecutionCanceled
        - ChildWorkflowExecutionTerminated
        - SignalExternalWorkflowExecutionInitiated
        - SignalExternalWorkflowExecutionFailed
        - ExternalWorkflowExecutionSignaled
        - RequestCancelExternalWorkflowExecutionInitiated
        - RequestCancelExternalWorkflowExecutionFailed
        - ExternalWorkflowExecutionCancelRequested
        - LambdaFunctionScheduled
        - LambdaFunctionStarted
        - LambdaFunctionCompleted
        - LambdaFunctionFailed
        - LambdaFunctionTimedOut
        - ScheduleLambdaFunctionFailed
        - StartLambdaFunctionFailed
    ExecutionStatus:
      type: string
      enum:
        - OPEN
        - CLOSED
    ExecutionTimeFilter:
      type: object
      required:
        - oldestDate
      properties:
        oldestDate:
          $ref: '#/components/schemas/Timestamp'
        latestDate:
          $ref: '#/components/schemas/Timestamp'
      description: 'Used to filter the workflow executions in visibility APIs by various time-based rules. Each parameter, if specified, defines a rule that must be satisfied by each returned query result. The parameter values are in the <a href="https://en.wikipedia.org/wiki/Unix_time">Unix Time format</a>. For example: <code>"oldestDate": 1325376070.</code>'
    ExternalWorkflowExecutionCancelRequestedEventAttributes:
      type: object
      required:
        - workflowExecution
        - initiatedEventId
      properties:
        workflowExecution:
          $ref: '#/components/schemas/WorkflowExecution'
        initiatedEventId:
          $ref: '#/components/schemas/EventId'
      description: Provides details of the <code>ExternalWorkflowExecutionCancelRequested</code> event.
    ExternalWorkflowExecutionSignaledEventAttributes:
      type: object
      required:
        - workflowExecution
        - initiatedEventId
      properties:
        workflowExecution:
          $ref: '#/components/schemas/WorkflowExecution'
        initiatedEventId:
          $ref: '#/components/schemas/EventId'
      description: ' Provides details of the <code>ExternalWorkflowExecutionSignaled</code> event.'
    FailWorkflowExecutionDecisionAttributes:
      type: object
      properties:
        reason:
          $ref: '#/components/schemas/FailureReason'
        details:
          $ref: '#/components/schemas/Data'
      description: '<p>Provides details of the <code>FailWorkflowExecution</code> decision.</p> <p><b>Access Control</b></p> <p>You can use IAM policies to control this decision''s access to Amazon SWF resources as follows:</p> <ul> <li>Use a <code>Resource</code> element with the domain name to limit the action to only specified domains.</li> <li>Use an <code>Action</code> element to allow or deny permission to call this action.</li> <li>You cannot use an IAM policy to constrain this action''s parameters.</li> </ul> <p>If the caller does not have sufficient permissions to invoke the action, or the parameter values fall outside the specified constraints, the action fails. The associated event attribute''s <b>cause</b> parameter will be set to OPERATION_NOT_PERMITTED. For details and example IAM policies, see <a href="http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using IAM to Manage Access to Amazon SWF Workflows</a>.</p>'
    FailWorkflowExecutionFailedCause:
      type: string
      enum:
        - UNHANDLED_DECISION
        - OPERATION_NOT_PERMITTED
    FailWorkflowExecutionFailedEventAttributes:
      type: object
      required:
        - cause
        - decisionTaskCompletedEventId
      properties:
        cause:
          $ref: '#/components/schemas/FailWorkflowExecutionFailedCause'
        decisionTaskCompletedEventId:
          $ref: '#/components/schemas/EventId'
      description: Provides details of the <code>FailWorkflowExecutionFailed</code> event.
    FailureReason:
      type: string
      maxLength: 256
    FunctionId:
      type: string
      minLength: 1
      maxLength: 256
    FunctionInput:
      type: string
      minLength: 1
      maxLength: 32768
    FunctionName:
      type: string
      minLength: 1
      maxLength: 64
    GetWorkflowExecutionHistoryInput:
      type: object
      required:
        - domain
        - execution
      properties:
        domain:
          $ref: '#/components/schemas/DomainName'
        execution:
          $ref: '#/components/schemas/WorkflowExecution'
        nextPageToken:
          $ref: '#/components/schemas/PageToken'
        maximumPageSize:
          $ref: '#/components/schemas/PageSize'
        reverseOrder:
          $ref: '#/components/schemas/ReverseOrder'
    History:
      type: object
      required:
        - events
      properties:
        events:
          $ref: '#/components/schemas/HistoryEventList'
        nextPageToken:
          $ref: '#/components/schemas/PageToken'
      description: 'Paginated representation of a workflow history for a workflow execution. This is the up to date, complete and authoritative record of the events related to all tasks and events in the life of the workflow execution.'
    HistoryEvent:
      type: object
      required:
        - eventTimestamp
        - eventType
        - eventId
      properties:
        eventTimestamp:
          $ref: '#/components/schemas/Timestamp'
        eventType:
          $ref: '#/components/schemas/EventType'
        eventId:
          $ref: '#/components/schemas/EventId'
        workflowExecutionStartedEventAttributes:
          $ref: '#/components/schemas/WorkflowExecutionStartedEventAttributes'
        workflowExecutionCompletedEventAttributes:
          $ref: '#/components/schemas/WorkflowExecutionCompletedEventAttributes'
        completeWorkflowExecutionFailedEventAttributes:
          $ref: '#/components/schemas/CompleteWorkflowExecutionFailedEventAttributes'
        workflowExecutionFailedEventAttributes:
          $ref: '#/components/schemas/WorkflowExecutionFailedEventAttributes'
        failWorkflowExecutionFailedEventAttributes:
          $ref: '#/components/schemas/FailWorkflowExecutionFailedEventAttributes'
        workflowExecutionTimedOutEventAttributes:
          $ref: '#/components/schemas/WorkflowExecutionTimedOutEventAttributes'
        workflowExecutionCanceledEventAttributes:
          $ref: '#/components/schemas/WorkflowExecutionCanceledEventAttributes'
        cancelWorkflowExecutionFailedEventAttributes:
          $ref: '#/components/schemas/CancelWorkflowExecutionFailedEventAttributes'
        workflowExecutionContinuedAsNewEventAttributes:
          $ref: '#/components/schemas/WorkflowExecutionContinuedAsNewEventAttributes'
        continueAsNewWorkflowExecutionFailedEventAttributes:
          $ref: '#/components/schemas/ContinueAsNewWorkflowExecutionFailedEventAttributes'
        workflowExecutionTerminatedEventAttributes:
          $ref: '#/components/schemas/WorkflowExecutionTerminatedEventAttributes'
        workflowExecutionCancelRequestedEventAttributes:
          $ref: '#/components/schemas/WorkflowExecutionCancelRequestedEventAttributes'
        decisionTaskScheduledEventAttributes:
          $ref: '#/components/schemas/DecisionTaskScheduledEventAttributes'
        decisionTaskStartedEventAttributes:
          $ref: '#/components/schemas/DecisionTaskStartedEventAttributes'
        decisionTaskCompletedEventAttributes:
          $ref: '#/components/schemas/DecisionTaskCompletedEventAttributes'
        decisionTaskTimedOutEventAttributes:
          $ref: '#/components/schemas/DecisionTaskTimedOutEventAttributes'
        activityTaskScheduledEventAttributes:
          $ref: '#/components/schemas/ActivityTaskScheduledEventAttributes'
        activityTaskStartedEventAttributes:
          $ref: '#/components/schemas/ActivityTaskStartedEventAttributes'
        activityTaskCompletedEventAttributes:
          $ref: '#/components/schemas/ActivityTaskCompletedEventAttributes'
        activityTaskFailedEventAttributes:
          $ref: '#/components/schemas/ActivityTaskFailedEventAttributes'
        activityTaskTimedOutEventAttributes:
          $ref: '#/components/schemas/ActivityTaskTimedOutEventAttributes'
        activityTaskCanceledEventAttributes:
          $ref: '#/components/schemas/ActivityTaskCanceledEventAttributes'
        activityTaskCancelRequestedEventAttributes:
          $ref: '#/components/schemas/ActivityTaskCancelRequestedEventAttributes'
        workflowExecutionSignaledEventAttributes:
          $ref: '#/components/schemas/WorkflowExecutionSignaledEventAttributes'
        markerRecordedEventAttributes:
          $ref: '#/components/schemas/MarkerRecordedEventAttributes'
        recordMarkerFailedEventAttributes:
          $ref: '#/components/schemas/RecordMarkerFailedEventAttributes'
        timerStartedEventAttributes:
          $ref: '#/components/schemas/TimerStartedEventAttributes'
        timerFiredEventAttributes:
          $ref: '#/components/schemas/TimerFiredEventAttributes'
        timerCanceledEventAttributes:
          $ref: '#/components/schemas/TimerCanceledEventAttributes'
        startChildWorkflowExecutionInitiatedEventAttributes:
          $ref: '#/components/schemas/StartChildWorkflowExecutionInitiatedEventAttributes'
        childWorkflowExecutionStartedEventAttributes:
          $ref: '#/components/schemas/ChildWorkflowExecutionStartedEventAttributes'
        childWorkflowExecutionCompletedEventAttributes:
          $ref: '#/components/schemas/ChildWorkflowExecutionCompletedEventAttributes'
        childWorkflowExecutionFailedEventAttributes:
          $ref: '#/components/schemas/ChildWorkflowExecutionFailedEventAttributes'
        childWorkflowExecutionTimedOutEventAttributes:
          $ref: '#/components/schemas/ChildWorkflowExecutionTimedOutEventAttributes'
        childWorkflowExecutionCanceledEventAttributes:
          $ref: '#/components/schemas/ChildWorkflowExecutionCanceledEventAttributes'
        childWorkflowExecutionTerminatedEventAttributes:
          $ref: '#/components/schemas/ChildWorkflowExecutionTerminatedEventAttributes'
        signalExternalWorkflowExecutionInitiatedEventAttributes:
          $ref: '#/components/schemas/SignalExternalWorkflowExecutionInitiatedEventAttributes'
        externalWorkflowExecutionSignaledEventAttributes:
          $ref: '#/components/schemas/ExternalWorkflowExecutionSignaledEventAttributes'
        signalExternalWorkflowExecutionFailedEventAttributes:
          $ref: '#/components/schemas/SignalExternalWorkflowExecutionFailedEventAttributes'
        externalWorkflowExecutionCancelRequestedEventAttributes:
          $ref: '#/components/schemas/ExternalWorkflowExecutionCancelRequestedEventAttributes'
        requestCancelExternalWorkflowExecutionInitiatedEventAttributes:
          $ref: '#/components/schemas/RequestCancelExternalWorkflowExecutionInitiatedEventAttributes'
        requestCancelExternalWorkflowExecutionFailedEventAttributes:
          $ref: '#/components/schemas/RequestCancelExternalWorkflowExecutionFailedEventAttributes'
        scheduleActivityTaskFailedEventAttributes:
          $ref: '#/components/schemas/ScheduleActivityTaskFailedEventAttributes'
        requestCancelActivityTaskFailedEventAttributes:
          $ref: '#/components/schemas/RequestCancelActivityTaskFailedEventAttributes'
        startTimerFailedEventAttributes:
          $ref: '#/components/schemas/StartTimerFailedEventAttributes'
        cancelTimerFailedEventAttributes:
          $ref: '#/components/schemas/CancelTimerFailedEventAttributes'
        startChildWorkflowExecutionFailedEventAttributes:
          $ref: '#/components/schemas/StartChildWorkflowExecutionFailedEventAttributes'
        lambdaFunctionScheduledEventAttributes:
          $ref: '#/components/schemas/LambdaFunctionScheduledEventAttributes'
        lambdaFunctionStartedEventAttributes:
          $ref: '#/components/schemas/LambdaFunctionStartedEventAttributes'
        lambdaFunctionCompletedEventAttributes:
          $ref: '#/components/schemas/LambdaFunctionCompletedEventAttributes'
        lambdaFunctionFailedEventAttributes:
          $ref: '#/components/schemas/LambdaFunctionFailedEventAttributes'
        lambdaFunctionTimedOutEventAttributes:
          $ref: '#/components/schemas/LambdaFunctionTimedOutEventAttributes'
        scheduleLambdaFunctionFailedEventAttributes:
          $ref: '#/components/schemas/ScheduleLambdaFunctionFailedEventAttributes'
        startLambdaFunctionFailedEventAttributes:
          $ref: '#/components/schemas/StartLambdaFunctionFailedEventAttributes'
      description: '<p>Event within a workflow execution. A history event can be one of these types:</p> <ul> <li> <b>WorkflowExecutionStarted</b>: The workflow execution was started.</li> <li> <b>WorkflowExecutionCompleted</b>: The workflow execution was closed due to successful completion.</li> <li> <b>WorkflowExecutionFailed</b>: The workflow execution closed due to a failure.</li> <li> <b>WorkflowExecutionTimedOut</b>: The workflow execution was closed because a time out was exceeded.</li> <li> <b>WorkflowExecutionCanceled</b>: The workflow execution was successfully canceled and closed.</li> <li> <b>WorkflowExecutionTerminated</b>: The workflow execution was terminated.</li> <li> <b>WorkflowExecutionContinuedAsNew</b>: The workflow execution was closed and a new execution of the same type was created with the same workflowId.</li> <li> <b>WorkflowExecutionCancelRequested</b>: A request to cancel this workflow execution was made.</li> <li> <b>DecisionTaskScheduled</b>: A decision task was scheduled for the workflow execution.</li> <li> <b>DecisionTaskStarted</b>: The decision task was dispatched to a decider.</li> <li> <b>DecisionTaskCompleted</b>: The decider successfully completed a decision task by calling <a>RespondDecisionTaskCompleted</a>.</li> <li> <b>DecisionTaskTimedOut</b>: The decision task timed out.</li> <li> <b>ActivityTaskScheduled</b>: An activity task was scheduled for execution.</li> <li> <b>ScheduleActivityTaskFailed</b>: Failed to process ScheduleActivityTask decision. This happens when the decision is not configured properly, for example the activity type specified is not registered.</li> <li> <b>ActivityTaskStarted</b>: The scheduled activity task was dispatched to a worker.</li> <li> <b>ActivityTaskCompleted</b>: An activity worker successfully completed an activity task by calling <a>RespondActivityTaskCompleted</a>.</li> <li> <b>ActivityTaskFailed</b>: An activity worker failed an activity task by calling <a>RespondActivityTaskFailed</a>.</li> <li> <b>ActivityTaskTimedOut</b>: The activity task timed out.</li> <li> <b>ActivityTaskCanceled</b>: The activity task was successfully canceled.</li> <li> <b>ActivityTaskCancelRequested</b>: A <code>RequestCancelActivityTask</code> decision was received by the system.</li> <li> <b>RequestCancelActivityTaskFailed</b>: Failed to process RequestCancelActivityTask decision. This happens when the decision is not configured properly.</li> <li> <b>WorkflowExecutionSignaled</b>: An external signal was received for the workflow execution.</li> <li> <b>MarkerRecorded</b>: A marker was recorded in the workflow history as the result of a <code>RecordMarker</code> decision.</li> <li> <b>TimerStarted</b>: A timer was started for the workflow execution due to a <code>StartTimer</code> decision.</li> <li> <b>StartTimerFailed</b>: Failed to process StartTimer decision. This happens when the decision is not configured properly, for example a timer already exists with the specified timer ID.</li> <li> <b>TimerFired</b>: A timer, previously started for this workflow execution, fired.</li> <li> <b>TimerCanceled</b>: A timer, previously started for this workflow execution, was successfully canceled.</li> <li> <b>CancelTimerFailed</b>: Failed to process CancelTimer decision. This happens when the decision is not configured properly, for example no timer exists with the specified timer ID.</li> <li> <b>StartChildWorkflowExecutionInitiated</b>: A request was made to start a child workflow execution.</li> <li> <b>StartChildWorkflowExecutionFailed</b>: Failed to process StartChildWorkflowExecution decision. This happens when the decision is not configured properly, for example the workflow type specified is not registered.</li> <li> <b>ChildWorkflowExecutionStarted</b>: A child workflow execution was successfully started.</li> <li> <b>ChildWorkflowExecutionCompleted</b>: A child workflow execution, started by this workflow execution, completed successfully and was closed.</li> <li> <b>ChildWorkflowExecutionFailed</b>: A child workflow execution, started by this workflow execution, failed to complete successfully and was closed.</li> <li> <b>ChildWorkflowExecutionTimedOut</b>: A child workflow execution, started by this workflow execution, timed out and was closed.</li> <li> <b>ChildWorkflowExecutionCanceled</b>: A child workflow execution, started by this workflow execution, was canceled and closed.</li> <li> <b>ChildWorkflowExecutionTerminated</b>: A child workflow execution, started by this workflow execution, was terminated.</li> <li> <b>SignalExternalWorkflowExecutionInitiated</b>: A request to signal an external workflow was made.</li> <li> <b>ExternalWorkflowExecutionSignaled</b>: A signal, requested by this workflow execution, was successfully delivered to the target external workflow execution.</li> <li> <b>SignalExternalWorkflowExecutionFailed</b>: The request to signal an external workflow execution failed.</li> <li> <b>RequestCancelExternalWorkflowExecutionInitiated</b>: A request was made to request the cancellation of an external workflow execution.</li> <li> <b>ExternalWorkflowExecutionCancelRequested</b>: Request to cancel an external workflow execution was successfully delivered to the target execution.</li> <li> <b>RequestCancelExternalWorkflowExecutionFailed</b>: Request to cancel an external workflow execution failed.</li> <li> <b>LambdaFunctionScheduled</b>: An AWS Lambda function was scheduled for execution.</li> <li> <b>LambdaFunctionStarted</b>: The scheduled function was invoked in the AWS Lambda service.</li> <li> <b>LambdaFunctionCompleted</b>: The AWS Lambda function successfully completed.</li> <li> <b>LambdaFunctionFailed</b>: The AWS Lambda function execution failed.</li> <li> <b>LambdaFunctionTimedOut</b>: The AWS Lambda function execution timed out.</li> <li> <b>ScheduleLambdaFunctionFailed</b>: Failed to process ScheduleLambdaFunction decision. This happens when the workflow execution does not have the proper IAM role attached to invoke AWS Lambda functions.</li> <li> <b>StartLambdaFunctionFailed</b>: Failed to invoke the scheduled function in the AWS Lambda service. This happens when the AWS Lambda service is not available in the current region, or received too many requests.</li> </ul>'
    HistoryEventList:
      type: array
      items:
        $ref: '#/components/schemas/HistoryEvent'
    Identity:
      type: string
      maxLength: 256
    LambdaFunctionCompletedEventAttributes:
      type: object
      required:
        - scheduledEventId
        - startedEventId
      properties:
        scheduledEventId:
          $ref: '#/components/schemas/EventId'
        startedEventId:
          $ref: '#/components/schemas/EventId'
        result:
          $ref: '#/components/schemas/Data'
      description: Provides details for the <code>LambdaFunctionCompleted</code> event.
    LambdaFunctionFailedEventAttributes:
      type: object
      required:
        - scheduledEventId
        - startedEventId
      properties:
        scheduledEventId:
          $ref: '#/components/schemas/EventId'
        startedEventId:
          $ref: '#/components/schemas/EventId'
        reason:
          $ref: '#/components/schemas/FailureReason'
        details:
          $ref: '#/components/schemas/Data'
      description: Provides details for the <code>LambdaFunctionFailed</code> event.
    LambdaFunctionScheduledEventAttributes:
      type: object
      required:
        - id
        - name
        - decisionTaskCompletedEventId
      properties:
        id:
          $ref: '#/components/schemas/FunctionId'
        name:
          $ref: '#/components/schemas/FunctionName'
        input:
          $ref: '#/components/schemas/FunctionInput'
        startToCloseTimeout:
          $ref: '#/components/schemas/DurationInSecondsOptional'
        decisionTaskCompletedEventId:
          $ref: '#/components/schemas/EventId'
      description: Provides details for the <code>LambdaFunctionScheduled</code> event.
    LambdaFunctionStartedEventAttributes:
      type: object
      required:
        - scheduledEventId
      properties:
        scheduledEventId:
          $ref: '#/components/schemas/EventId'
      description: Provides details for the <code>LambdaFunctionStarted</code> event.
    LambdaFunctionTimedOutEventAttributes:
      type: object
      required:
        - scheduledEventId
        - startedEventId
      properties:
        scheduledEventId:
          $ref: '#/components/schemas/EventId'
        startedEventId:
          $ref: '#/components/schemas/EventId'
        timeoutType:
          $ref: '#/components/schemas/LambdaFunctionTimeoutType'
      description: Provides details for the <code>LambdaFunctionTimedOut</code> event.
    LambdaFunctionTimeoutType:
      type: string
      enum:
        - START_TO_CLOSE
    LimitExceededFault:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      description: Returned by any operation if a system imposed limitation has been reached. To address this fault you should either clean up unused resources or increase the limit by contacting AWS.
    LimitedData:
      type: string
      maxLength: 2048
    ListActivityTypesInput:
      type: object
      required:
        - domain
        - registrationStatus
      properties:
        domain:
          $ref: '#/components/schemas/DomainName'
        name:
          $ref: '#/components/schemas/Name'
        registrationStatus:
          $ref: '#/components/schemas/RegistrationStatus'
        nextPageToken:
          $ref: '#/components/schemas/PageToken'
        maximumPageSize:
          $ref: '#/components/schemas/PageSize'
        reverseOrder:
          $ref: '#/components/schemas/ReverseOrder'
    ListClosedWorkflowExecutionsInput:
      type: object
      required:
        - domain
      properties:
        domain:
          $ref: '#/components/schemas/DomainName'
        startTimeFilter:
          $ref: '#/components/schemas/ExecutionTimeFilter'
        closeTimeFilter:
          $ref: '#/components/schemas/ExecutionTimeFilter'
        executionFilter:
          $ref: '#/components/schemas/WorkflowExecutionFilter'
        closeStatusFilter:
          $ref: '#/components/schemas/CloseStatusFilter'
        typeFilter:
          $ref: '#/components/schemas/WorkflowTypeFilter'
        tagFilter:
          $ref: '#/components/schemas/TagFilter'
        nextPageToken:
          $ref: '#/components/schemas/PageToken'
        maximumPageSize:
          $ref: '#/components/schemas/PageSize'
        reverseOrder:
          $ref: '#/components/schemas/ReverseOrder'
    ListDomainsInput:
      type: object
      required:
        - registrationStatus
      properties:
        nextPageToken:
          $ref: '#/components/schemas/PageToken'
        registrationStatus:
          $ref: '#/components/schemas/RegistrationStatus'
        maximumPageSize:
          $ref: '#/components/schemas/PageSize'
        reverseOrder:
          $ref: '#/components/schemas/ReverseOrder'
    ListOpenWorkflowExecutionsInput:
      type: object
      required:
        - domain
        - startTimeFilter
      properties:
        domain:
          $ref: '#/components/schemas/DomainName'
        startTimeFilter:
          $ref: '#/components/schemas/ExecutionTimeFilter'
        typeFilter:
          $ref: '#/components/schemas/WorkflowTypeFilter'
        tagFilter:
          $ref: '#/components/schemas/TagFilter'
        nextPageToken:
          $ref: '#/components/schemas/PageToken'
        maximumPageSize:
          $ref: '#/components/schemas/PageSize'
        reverseOrder:
          $ref: '#/components/schemas/ReverseOrder'
        executionFilter:
          $ref: '#/components/schemas/WorkflowExecutionFilter'
    ListWorkflowTypesInput:
      type: object
      required:
        - domain
        - registrationStatus
      properties:
        domain:
          $ref: '#/components/schemas/DomainName'
        name:
          $ref: '#/components/schemas/Name'
        registrationStatus:
          $ref: '#/components/schemas/RegistrationStatus'
        nextPageToken:
          $ref: '#/components/schemas/PageToken'
        maximumPageSize:
          $ref: '#/components/schemas/PageSize'
        reverseOrder:
          $ref: '#/components/schemas/ReverseOrder'
    MarkerName:
      type: string
      minLength: 1
      maxLength: 256
    MarkerRecordedEventAttributes:
      type: object
      required:
        - markerName
        - decisionTaskCompletedEventId
      properties:
        markerName:
          $ref: '#/components/schemas/MarkerName'
        details:
          $ref: '#/components/schemas/Data'
        decisionTaskCompletedEventId:
          $ref: '#/components/schemas/EventId'
      description: Provides details of the <code>MarkerRecorded</code> event.
    Name:
      type: string
      minLength: 1
      maxLength: 256
    OpenDecisionTasksCount:
      type: integer
      minimum: 0
      maximum: 1
    OperationNotPermittedFault:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      description: Returned when the caller does not have sufficient permissions to invoke the action.
    PageSize:
      type: integer
      minimum: 0
      maximum: 1000
    PageToken:
      type: string
      maxLength: 2048
    PendingTaskCount:
      type: object
      required:
        - count
      properties:
        count:
          $ref: '#/components/schemas/Count'
        truncated:
          $ref: '#/components/schemas/Truncated'
      description: Contains the count of tasks in a task list.
    PollForActivityTaskInput:
      type: object
      required:
        - domain
        - taskList
      properties:
        domain:
          $ref: '#/components/schemas/DomainName'
        taskList:
          $ref: '#/components/schemas/TaskList'
        identity:
          $ref: '#/components/schemas/Identity'
    PollForDecisionTaskInput:
      type: object
      required:
        - domain
        - taskList
      properties:
        domain:
          $ref: '#/components/schemas/DomainName'
        taskList:
          $ref: '#/components/schemas/TaskList'
        identity:
          $ref: '#/components/schemas/Identity'
        nextPageToken:
          $ref: '#/components/schemas/PageToken'
        maximumPageSize:
          $ref: '#/components/schemas/PageSize'
        reverseOrder:
          $ref: '#/components/schemas/ReverseOrder'
    RecordActivityTaskHeartbeatInput:
      type: object
      required:
        - taskToken
      properties:
        taskToken:
          $ref: '#/components/schemas/TaskToken'
        details:
          $ref: '#/components/schemas/LimitedData'
    RecordMarkerDecisionAttributes:
      type: object
      required:
        - markerName
      properties:
        markerName:
          $ref: '#/components/schemas/MarkerName'
        details:
          $ref: '#/components/schemas/Data'
      description: '<p>Provides details of the <code>RecordMarker</code> decision.</p> <p><b>Access Control</b></p> <p>You can use IAM policies to control this decision''s access to Amazon SWF resources as follows:</p> <ul> <li>Use a <code>Resource</code> element with the domain name to limit the action to only specified domains.</li> <li>Use an <code>Action</code> element to allow or deny permission to call this action.</li> <li>You cannot use an IAM policy to constrain this action''s parameters.</li> </ul> <p>If the caller does not have sufficient permissions to invoke the action, or the parameter values fall outside the specified constraints, the action fails. The associated event attribute''s <b>cause</b> parameter will be set to OPERATION_NOT_PERMITTED. For details and example IAM policies, see <a href="http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using IAM to Manage Access to Amazon SWF Workflows</a>.</p>'
    RecordMarkerFailedCause:
      type: string
      enum:
        - OPERATION_NOT_PERMITTED
    RecordMarkerFailedEventAttributes:
      type: object
      required:
        - markerName
        - cause
        - decisionTaskCompletedEventId
      properties:
        markerName:
          $ref: '#/components/schemas/MarkerName'
        cause:
          $ref: '#/components/schemas/RecordMarkerFailedCause'
        decisionTaskCompletedEventId:
          $ref: '#/components/schemas/EventId'
      description: Provides details of the <code>RecordMarkerFailed</code> event.
    RegisterActivityTypeInput:
      type: object
      required:
        - domain
        - name
        - version
      properties:
        domain:
          $ref: '#/components/schemas/DomainName'
        name:
          $ref: '#/components/schemas/Name'
        version:
          $ref: '#/components/schemas/Version'
        description:
          $ref: '#/components/schemas/Description'
        defaultTaskStartToCloseTimeout:
          $ref: '#/components/schemas/DurationInSecondsOptional'
        defaultTaskHeartbeatTimeout:
          $ref: '#/components/schemas/DurationInSecondsOptional'
        defaultTaskList:
          $ref: '#/components/schemas/TaskList'
        defaultTaskPriority:
          $ref: '#/components/schemas/TaskPriority'
        defaultTaskScheduleToStartTimeout:
          $ref: '#/components/schemas/DurationInSecondsOptional'
        defaultTaskScheduleToCloseTimeout:
          $ref: '#/components/schemas/DurationInSecondsOptional'
    RegisterDomainInput:
      type: object
      required:
        - name
        - workflowExecutionRetentionPeriodInDays
      properties:
        name:
          $ref: '#/components/schemas/DomainName'
        description:
          $ref: '#/components/schemas/Description'
        workflowExecutionRetentionPeriodInDays:
          $ref: '#/components/schemas/DurationInDays'
    RegisterWorkflowTypeInput:
      type: object
      required:
        - domain
        - name
        - version
      properties:
        domain:
          $ref: '#/components/schemas/DomainName'
        name:
          $ref: '#/components/schemas/Name'
        version:
          $ref: '#/components/schemas/Version'
        description:
          $ref: '#/components/schemas/Description'
        defaultTaskStartToCloseTimeout:
          $ref: '#/components/schemas/DurationInSecondsOptional'
        defaultExecutionStartToCloseTimeout:
          $ref: '#/components/schemas/DurationInSecondsOptional'
        defaultTaskList:
          $ref: '#/components/schemas/TaskList'
        defaultTaskPriority:
          $ref: '#/components/schemas/TaskPriority'
        defaultChildPolicy:
          $ref: '#/components/schemas/ChildPolicy'
        defaultLambdaRole:
          $ref: '#/components/schemas/Arn'
    RegistrationStatus:
      type: string
      enum:
        - REGISTERED
        - DEPRECATED
    RequestCancelActivityTaskDecisionAttributes:
      type: object
      required:
        - activityId
      properties:
        activityId:
          $ref: '#/components/schemas/ActivityId'
      description: '<p>Provides details of the <code>RequestCancelActivityTask</code> decision.</p> <p><b>Access Control</b></p> <p>You can use IAM policies to control this decision''s access to Amazon SWF resources as follows:</p> <ul> <li>Use a <code>Resource</code> element with the domain name to limit the action to only specified domains.</li> <li>Use an <code>Action</code> element to allow or deny permission to call this action.</li> <li>You cannot use an IAM policy to constrain this action''s parameters.</li> </ul> <p>If the caller does not have sufficient permissions to invoke the action, or the parameter values fall outside the specified constraints, the action fails. The associated event attribute''s <b>cause</b> parameter will be set to OPERATION_NOT_PERMITTED. For details and example IAM policies, see <a href="http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using IAM to Manage Access to Amazon SWF Workflows</a>.</p>'
    RequestCancelActivityTaskFailedCause:
      type: string
      enum:
        - ACTIVITY_ID_UNKNOWN
        - OPERATION_NOT_PERMITTED
    RequestCancelActivityTaskFailedEventAttributes:
      type: object
      required:
        - activityId
        - cause
        - decisionTaskCompletedEventId
      properties:
        activityId:
          $ref: '#/components/schemas/ActivityId'
        cause:
          $ref: '#/components/schemas/RequestCancelActivityTaskFailedCause'
        decisionTaskCompletedEventId:
          $ref: '#/components/schemas/EventId'
      description: Provides details of the <code>RequestCancelActivityTaskFailed</code> event.
    RequestCancelExternalWorkflowExecutionDecisionAttributes:
      type: object
      required:
        - workflowId
      properties:
        workflowId:
          $ref: '#/components/schemas/WorkflowId'
        runId:
          $ref: '#/components/schemas/RunIdOptional'
        control:
          $ref: '#/components/schemas/Data'
      description: '<p>Provides details of the <code>RequestCancelExternalWorkflowExecution</code> decision.</p> <p><b>Access Control</b></p> <p>You can use IAM policies to control this decision''s access to Amazon SWF resources as follows:</p> <ul> <li>Use a <code>Resource</code> element with the domain name to limit the action to only specified domains.</li> <li>Use an <code>Action</code> element to allow or deny permission to call this action.</li> <li>You cannot use an IAM policy to constrain this action''s parameters.</li> </ul> <p>If the caller does not have sufficient permissions to invoke the action, or the parameter values fall outside the specified constraints, the action fails. The associated event attribute''s <b>cause</b> parameter will be set to OPERATION_NOT_PERMITTED. For details and example IAM policies, see <a href="http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using IAM to Manage Access to Amazon SWF Workflows</a>.</p>'
    RequestCancelExternalWorkflowExecutionFailedCause:
      type: string
      enum:
        - UNKNOWN_EXTERNAL_WORKFLOW_EXECUTION
        - REQUEST_CANCEL_EXTERNAL_WORKFLOW_EXECUTION_RATE_EXCEEDED
        - OPERATION_NOT_PERMITTED
    RequestCancelExternalWorkflowExecutionFailedEventAttributes:
      type: object
      required:
        - workflowId
        - cause
        - initiatedEventId
        - decisionTaskCompletedEventId
      properties:
        workflowId:
          $ref: '#/components/schemas/WorkflowId'
        runId:
          $ref: '#/components/schemas/RunIdOptional'
        cause:
          $ref: '#/components/schemas/RequestCancelExternalWorkflowExecutionFailedCause'
        initiatedEventId:
          $ref: '#/components/schemas/EventId'
        decisionTaskCompletedEventId:
          $ref: '#/components/schemas/EventId'
        control:
          $ref: '#/components/schemas/Data'
      description: Provides details of the <code>RequestCancelExternalWorkflowExecutionFailed</code> event.
    RequestCancelExternalWorkflowExecutionInitiatedEventAttributes:
      type: object
      required:
        - workflowId
        - decisionTaskCompletedEventId
      properties:
        workflowId:
          $ref: '#/components/schemas/WorkflowId'
        runId:
          $ref: '#/components/schemas/RunIdOptional'
        decisionTaskCompletedEventId:
          $ref: '#/components/schemas/EventId'
        control:
          $ref: '#/components/schemas/Data'
      description: Provides details of the <code>RequestCancelExternalWorkflowExecutionInitiated</code> event.
    RequestCancelWorkflowExecutionInput:
      type: object
      required:
        - domain
        - workflowId
      properties:
        domain:
          $ref: '#/components/schemas/DomainName'
        workflowId:
          $ref: '#/components/schemas/WorkflowId'
        runId:
          $ref: '#/components/schemas/RunIdOptional'
    RespondActivityTaskCanceledInput:
      type: object
      required:
        - taskToken
      properties:
        taskToken:
          $ref: '#/components/schemas/TaskToken'
        details:
          $ref: '#/components/schemas/Data'
    RespondActivityTaskCompletedInput:
      type: object
      required:
        - taskToken
      properties:
        taskToken:
          $ref: '#/components/schemas/TaskToken'
        result:
          $ref: '#/components/schemas/Data'
    RespondActivityTaskFailedInput:
      type: object
      required:
        - taskToken
      properties:
        taskToken:
          $ref: '#/components/schemas/TaskToken'
        reason:
          $ref: '#/components/schemas/FailureReason'
        details:
          $ref: '#/components/schemas/Data'
    RespondDecisionTaskCompletedInput:
      type: object
      required:
        - taskToken
      properties:
        taskToken:
          $ref: '#/components/schemas/TaskToken'
        decisions:
          $ref: '#/components/schemas/DecisionList'
        executionContext:
          $ref: '#/components/schemas/Data'
    ReverseOrder:
      type: boolean
    Run:
      type: object
      properties:
        runId:
          $ref: '#/components/schemas/RunId'
      description: Specifies the <code>runId</code> of a workflow execution.
    RunId:
      type: string
      minLength: 1
      maxLength: 64
    RunIdOptional:
      type: string
      maxLength: 64
    ScheduleActivityTaskDecisionAttributes:
      type: object
      required:
        - activityType
        - activityId
      properties:
        activityType:
          $ref: '#/components/schemas/ActivityType'
        activityId:
          $ref: '#/components/schemas/ActivityId'
        control:
          $ref: '#/components/schemas/Data'
        input:
          $ref: '#/components/schemas/Data'
        scheduleToCloseTimeout:
          $ref: '#/components/schemas/DurationInSecondsOptional'
        taskList:
          $ref: '#/components/schemas/TaskList'
        taskPriority:
          $ref: '#/components/schemas/TaskPriority'
        scheduleToStartTimeout:
          $ref: '#/components/schemas/DurationInSecondsOptional'
        startToCloseTimeout:
          $ref: '#/components/schemas/DurationInSecondsOptional'
        heartbeatTimeout:
          $ref: '#/components/schemas/DurationInSecondsOptional'
      description: '<p>Provides details of the <code>ScheduleActivityTask</code> decision.</p> <p><b>Access Control</b></p> <p>You can use IAM policies to control this decision''s access to Amazon SWF resources as follows:</p> <ul> <li>Use a <code>Resource</code> element with the domain name to limit the action to only specified domains.</li> <li>Use an <code>Action</code> element to allow or deny permission to call this action.</li> <li>Constrain the following parameters by using a <code>Condition</code> element with the appropriate keys. <ul> <li><code>activityType.name</code>: String constraint. The key is <code>swf:activityType.name</code>.</li> <li><code>activityType.version</code>: String constraint. The key is <code>swf:activityType.version</code>.</li> <li><code>taskList</code>: String constraint. The key is <code>swf:taskList.name</code>.</li> </ul> </li> </ul> <p>If the caller does not have sufficient permissions to invoke the action, or the parameter values fall outside the specified constraints, the action fails. The associated event attribute''s <b>cause</b> parameter will be set to OPERATION_NOT_PERMITTED. For details and example IAM policies, see <a href="http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using IAM to Manage Access to Amazon SWF Workflows</a>.</p>'
    ScheduleActivityTaskFailedCause:
      type: string
      enum:
        - ACTIVITY_TYPE_DEPRECATED
        - ACTIVITY_TYPE_DOES_NOT_EXIST
        - ACTIVITY_ID_ALREADY_IN_USE
        - OPEN_ACTIVITIES_LIMIT_EXCEEDED
        - ACTIVITY_CREATION_RATE_EXCEEDED
        - DEFAULT_SCHEDULE_TO_CLOSE_TIMEOUT_UNDEFINED
        - DEFAULT_TASK_LIST_UNDEFINED
        - DEFAULT_SCHEDULE_TO_START_TIMEOUT_UNDEFINED
        - DEFAULT_START_TO_CLOSE_TIMEOUT_UNDEFINED
        - DEFAULT_HEARTBEAT_TIMEOUT_UNDEFINED
        - OPERATION_NOT_PERMITTED
    ScheduleActivityTaskFailedEventAttributes:
      type: object
      required:
        - activityType
        - activityId
        - cause
        - decisionTaskCompletedEventId
      properties:
        activityType:
          $ref: '#/components/schemas/ActivityType'
        activityId:
          $ref: '#/components/schemas/ActivityId'
        cause:
          $ref: '#/components/schemas/ScheduleActivityTaskFailedCause'
        decisionTaskCompletedEventId:
          $ref: '#/components/schemas/EventId'
      description: Provides details of the <code>ScheduleActivityTaskFailed</code> event.
    ScheduleLambdaFunctionDecisionAttributes:
      type: object
      required:
        - id
        - name
      properties:
        id:
          $ref: '#/components/schemas/FunctionId'
        name:
          $ref: '#/components/schemas/FunctionName'
        input:
          $ref: '#/components/schemas/FunctionInput'
        startToCloseTimeout:
          $ref: '#/components/schemas/DurationInSecondsOptional'
      description: '<p>Provides details of the <code>ScheduleLambdaFunction</code> decision.</p> <p><b>Access Control</b></p> <p>You can use IAM policies to control this decision''s access to Amazon SWF resources as follows:</p> <ul> <li>Use a <code>Resource</code> element with the domain name to limit the action to only specified domains.</li> <li>Use an <code>Action</code> element to allow or deny permission to call this action.</li> <li>Constrain the following parameters by using a <code>Condition</code> element with the appropriate keys. <ul> <li><code>activityType.name</code>: String constraint. The key is <code>swf:activityType.name</code>.</li> <li><code>activityType.version</code>: String constraint. The key is <code>swf:activityType.version</code>.</li> <li><code>taskList</code>: String constraint. The key is <code>swf:taskList.name</code>.</li> </ul> </li> </ul> <p>If the caller does not have sufficient permissions to invoke the action, or the parameter values fall outside the specified constraints, the action fails. The associated event attribute''s <b>cause</b> parameter will be set to OPERATION_NOT_PERMITTED. For details and example IAM policies, see <a href="http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using IAM to Manage Access to Amazon SWF Workflows</a>.</p>'
    ScheduleLambdaFunctionFailedCause:
      type: string
      enum:
        - ID_ALREADY_IN_USE
        - OPEN_LAMBDA_FUNCTIONS_LIMIT_EXCEEDED
        - LAMBDA_FUNCTION_CREATION_RATE_EXCEEDED
        - LAMBDA_SERVICE_NOT_AVAILABLE_IN_REGION
    ScheduleLambdaFunctionFailedEventAttributes:
      type: object
      required:
        - id
        - name
        - cause
        - decisionTaskCompletedEventId
      properties:
        id:
          $ref: '#/components/schemas/FunctionId'
        name:
          $ref: '#/components/schemas/FunctionName'
        cause:
          $ref: '#/components/schemas/ScheduleLambdaFunctionFailedCause'
        decisionTaskCompletedEventId:
          $ref: '#/components/schemas/EventId'
      description: Provides details for the <code>ScheduleLambdaFunctionFailed</code> event.
    SignalExternalWorkflowExecutionDecisionAttributes:
      type: object
      required:
        - workflowId
        - signalName
      properties:
        workflowId:
          $ref: '#/components/schemas/WorkflowId'
        runId:
          $ref: '#/components/schemas/RunIdOptional'
        signalName:
          $ref: '#/components/schemas/SignalName'
        input:
          $ref: '#/components/schemas/Data'
        control:
          $ref: '#/components/schemas/Data'
      description: '<p>Provides details of the <code>SignalExternalWorkflowExecution</code> decision.</p> <p><b>Access Control</b></p> <p>You can use IAM policies to control this decision''s access to Amazon SWF resources as follows:</p> <ul> <li>Use a <code>Resource</code> element with the domain name to limit the action to only specified domains.</li> <li>Use an <code>Action</code> element to allow or deny permission to call this action.</li> <li>You cannot use an IAM policy to constrain this action''s parameters.</li> </ul> <p>If the caller does not have sufficient permissions to invoke the action, or the parameter values fall outside the specified constraints, the action fails. The associated event attribute''s <b>cause</b> parameter will be set to OPERATION_NOT_PERMITTED. For details and example IAM policies, see <a href="http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using IAM to Manage Access to Amazon SWF Workflows</a>.</p>'
    SignalExternalWorkflowExecutionFailedCause:
      type: string
      enum:
        - UNKNOWN_EXTERNAL_WORKFLOW_EXECUTION
        - SIGNAL_EXTERNAL_WORKFLOW_EXECUTION_RATE_EXCEEDED
        - OPERATION_NOT_PERMITTED
    SignalExternalWorkflowExecutionFailedEventAttributes:
      type: object
      required:
        - workflowId
        - cause
        - initiatedEventId
        - decisionTaskCompletedEventId
      properties:
        workflowId:
          $ref: '#/components/schemas/WorkflowId'
        runId:
          $ref: '#/components/schemas/RunIdOptional'
        cause:
          $ref: '#/components/schemas/SignalExternalWorkflowExecutionFailedCause'
        initiatedEventId:
          $ref: '#/components/schemas/EventId'
        decisionTaskCompletedEventId:
          $ref: '#/components/schemas/EventId'
        control:
          $ref: '#/components/schemas/Data'
      description: Provides details of the <code>SignalExternalWorkflowExecutionFailed</code> event.
    SignalExternalWorkflowExecutionInitiatedEventAttributes:
      type: object
      required:
        - workflowId
        - signalName
        - decisionTaskCompletedEventId
      properties:
        workflowId:
          $ref: '#/components/schemas/WorkflowId'
        runId:
          $ref: '#/components/schemas/RunIdOptional'
        signalName:
          $ref: '#/components/schemas/SignalName'
        input:
          $ref: '#/components/schemas/Data'
        decisionTaskCompletedEventId:
          $ref: '#/components/schemas/EventId'
        control:
          $ref: '#/components/schemas/Data'
      description: Provides details of the <code>SignalExternalWorkflowExecutionInitiated</code> event.
    SignalName:
      type: string
      minLength: 1
      maxLength: 256
    SignalWorkflowExecutionInput:
      type: object
      required:
        - domain
        - workflowId
        - signalName
      properties:
        domain:
          $ref: '#/components/schemas/DomainName'
        workflowId:
          $ref: '#/components/schemas/WorkflowId'
        runId:
          $ref: '#/components/schemas/RunIdOptional'
        signalName:
          $ref: '#/components/schemas/SignalName'
        input:
          $ref: '#/components/schemas/Data'
    StartChildWorkflowExecutionDecisionAttributes:
      type: object
      required:
        - workflowType
        - workflowId
      properties:
        workflowType:
          $ref: '#/components/schemas/WorkflowType'
        workflowId:
          $ref: '#/components/schemas/WorkflowId'
        control:
          $ref: '#/components/schemas/Data'
        input:
          $ref: '#/components/schemas/Data'
        executionStartToCloseTimeout:
          $ref: '#/components/schemas/DurationInSecondsOptional'
        taskList:
          $ref: '#/components/schemas/TaskList'
        taskPriority:
          $ref: '#/components/schemas/TaskPriority'
        taskStartToCloseTimeout:
          $ref: '#/components/schemas/DurationInSecondsOptional'
        childPolicy:
          $ref: '#/components/schemas/ChildPolicy'
        tagList:
          $ref: '#/components/schemas/TagList'
        lambdaRole:
          $ref: '#/components/schemas/Arn'
      description: '<p>Provides details of the <code>StartChildWorkflowExecution</code> decision.</p> <p><b>Access Control</b></p> <p>You can use IAM policies to control this decision''s access to Amazon SWF resources as follows:</p> <ul> <li>Use a <code>Resource</code> element with the domain name to limit the action to only specified domains.</li> <li>Use an <code>Action</code> element to allow or deny permission to call this action.</li> <li>Constrain the following parameters by using a <code>Condition</code> element with the appropriate keys. <ul> <li> <code>tagList.member.N</code>: The key is "swf:tagList.N" where N is the tag number from 0 to 4, inclusive.</li> <li><code>taskList</code>: String constraint. The key is <code>swf:taskList.name</code>.</li> <li><code>workflowType.name</code>: String constraint. The key is <code>swf:workflowType.name</code>.</li> <li><code>workflowType.version</code>: String constraint. The key is <code>swf:workflowType.version</code>.</li> </ul> </li> </ul> <p>If the caller does not have sufficient permissions to invoke the action, or the parameter values fall outside the specified constraints, the action fails. The associated event attribute''s <b>cause</b> parameter will be set to OPERATION_NOT_PERMITTED. For details and example IAM policies, see <a href="http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using IAM to Manage Access to Amazon SWF Workflows</a>.</p>'
    StartChildWorkflowExecutionFailedCause:
      type: string
      enum:
        - WORKFLOW_TYPE_DOES_NOT_EXIST
        - WORKFLOW_TYPE_DEPRECATED
        - OPEN_CHILDREN_LIMIT_EXCEEDED
        - OPEN_WORKFLOWS_LIMIT_EXCEEDED
        - CHILD_CREATION_RATE_EXCEEDED
        - WORKFLOW_ALREADY_RUNNING
        - DEFAULT_EXECUTION_START_TO_CLOSE_TIMEOUT_UNDEFINED
        - DEFAULT_TASK_LIST_UNDEFINED
        - DEFAULT_TASK_START_TO_CLOSE_TIMEOUT_UNDEFINED
        - DEFAULT_CHILD_POLICY_UNDEFINED
        - OPERATION_NOT_PERMITTED
    StartChildWorkflowExecutionFailedEventAttributes:
      type: object
      required:
        - workflowType
        - cause
        - workflowId
        - initiatedEventId
        - decisionTaskCompletedEventId
      properties:
        workflowType:
          $ref: '#/components/schemas/WorkflowType'
        cause:
          $ref: '#/components/schemas/StartChildWorkflowExecutionFailedCause'
        workflowId:
          $ref: '#/components/schemas/WorkflowId'
        initiatedEventId:
          $ref: '#/components/schemas/EventId'
        decisionTaskCompletedEventId:
          $ref: '#/components/schemas/EventId'
        control:
          $ref: '#/components/schemas/Data'
      description: Provides details of the <code>StartChildWorkflowExecutionFailed</code> event.
    StartChildWorkflowExecutionInitiatedEventAttributes:
      type: object
      required:
        - workflowId
        - workflowType
        - taskList
        - decisionTaskCompletedEventId
        - childPolicy
      properties:
        workflowId:
          $ref: '#/components/schemas/WorkflowId'
        workflowType:
          $ref: '#/components/schemas/WorkflowType'
        control:
          $ref: '#/components/schemas/Data'
        input:
          $ref: '#/components/schemas/Data'
        executionStartToCloseTimeout:
          $ref: '#/components/schemas/DurationInSecondsOptional'
        taskList:
          $ref: '#/components/schemas/TaskList'
        taskPriority:
          $ref: '#/components/schemas/TaskPriority'
        decisionTaskCompletedEventId:
          $ref: '#/components/schemas/EventId'
        childPolicy:
          $ref: '#/components/schemas/ChildPolicy'
        taskStartToCloseTimeout:
          $ref: '#/components/schemas/DurationInSecondsOptional'
        tagList:
          $ref: '#/components/schemas/TagList'
        lambdaRole:
          $ref: '#/components/schemas/Arn'
      description: Provides details of the <code>StartChildWorkflowExecutionInitiated</code> event.
    StartLambdaFunctionFailedCause:
      type: string
      enum:
        - ASSUME_ROLE_FAILED
    StartLambdaFunctionFailedEventAttributes:
      type: object
      properties:
        scheduledEventId:
          $ref: '#/components/schemas/EventId'
        cause:
          $ref: '#/components/schemas/StartLambdaFunctionFailedCause'
        message:
          $ref: '#/components/schemas/CauseMessage'
      description: Provides details for the <code>StartLambdaFunctionFailed</code> event.
    StartTimerDecisionAttributes:
      type: object
      required:
        - timerId
        - startToFireTimeout
      properties:
        timerId:
          $ref: '#/components/schemas/TimerId'
        control:
          $ref: '#/components/schemas/Data'
        startToFireTimeout:
          $ref: '#/components/schemas/DurationInSeconds'
      description: '<p>Provides details of the <code>StartTimer</code> decision.</p> <p><b>Access Control</b></p> <p>You can use IAM policies to control this decision''s access to Amazon SWF resources as follows:</p> <ul> <li>Use a <code>Resource</code> element with the domain name to limit the action to only specified domains.</li> <li>Use an <code>Action</code> element to allow or deny permission to call this action.</li> <li>You cannot use an IAM policy to constrain this action''s parameters.</li> </ul> <p>If the caller does not have sufficient permissions to invoke the action, or the parameter values fall outside the specified constraints, the action fails. The associated event attribute''s <b>cause</b> parameter will be set to OPERATION_NOT_PERMITTED. For details and example IAM policies, see <a href="http://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using IAM to Manage Access to Amazon SWF Workflows</a>.</p>'
    StartTimerFailedCause:
      type: string
      enum:
        - TIMER_ID_ALREADY_IN_USE
        - OPEN_TIMERS_LIMIT_EXCEEDED
        - TIMER_CREATION_RATE_EXCEEDED
        - OPERATION_NOT_PERMITTED
    StartTimerFailedEventAttributes:
      type: object
      required:
        - timerId
        - cause
        - decisionTaskCompletedEventId
      properties:
        timerId:
          $ref: '#/components/schemas/TimerId'
        cause:
          $ref: '#/components/schemas/StartTimerFailedCause'
        decisionTaskCompletedEventId:
          $ref: '#/components/schemas/EventId'
      description: Provides details of the <code>StartTimerFailed</code> event.
    StartWorkflowExecutionInput:
      type: object
      required:
        - domain
        - workflowId
        - workflowType
      properties:
        domain:
          $ref: '#/components/schemas/DomainName'
        workflowId:
          $ref: '#/components/schemas/WorkflowId'
        workflowType:
          $ref: '#/components/schemas/WorkflowType'
        taskList:
          $ref: '#/components/schemas/TaskList'
        taskPriority:
          $ref: '#/components/schemas/TaskPriority'
        input:
          $ref: '#/components/schemas/Data'
        executionStartToCloseTimeout:
          $ref: '#/components/schemas/DurationInSecondsOptional'
        tagList:
          $ref: '#/components/schemas/TagList'
        taskStartToCloseTimeout:
          $ref: '#/components/schemas/DurationInSecondsOptional'
        childPolicy:
          $ref: '#/components/schemas/ChildPolicy'
        lambdaRole:
          $ref: '#/components/schemas/Arn'
    Tag:
      type: string
      minLength: 1
      maxLength: 256
    TagFilter:
      type: object
      required:
        - tag
      properties:
        tag:
          $ref: '#/components/schemas/Tag'
      description: Used to filter the workflow executions in visibility APIs based on a tag.
    TagList:
      type: array
      items:
        $ref: '#/components/schemas/Tag'
      maxItems: 5
    TaskList:
      type: object
      required:
        - name
      properties:
        name:
          $ref: '#/components/schemas/Name'
      description: Represents a task list.
    TaskPriority:
      type: string
      maxLength: 11
    TaskToken:
      type: string
      minLength: 1
      maxLength: 1024
    TerminateReason:
      type: string
      maxLength: 256
    TerminateWorkflowExecutionInput:
      type: object
      required:
        - domain
        - workflowId
      properties:
        domain:
          $ref: '#/components/schemas/DomainName'
        workflowId:
          $ref: '#/components/schemas/WorkflowId'
        runId:
          $ref: '#/components/schemas/RunIdOptional'
        reason:
          $ref: '#/components/schemas/TerminateReason'
        details:
          $ref: '#/components/schemas/Data'
        childPolicy:
          $ref: '#/components/schemas/ChildPolicy'
    TimerCanceledEventAttributes:
      type: object
      required:
        - timerId
        - startedEventId
        - decisionTaskCompletedEventId
      properties:
        timerId:
          $ref: '#/components/schemas/TimerId'
        startedEventId:
          $ref: '#/components/schemas/EventId'
        decisionTaskCompletedEventId:
          $ref: '#/components/schemas/EventId'
      description: ' Provides details of the <code>TimerCanceled</code> event. '
    TimerFiredEventAttributes:
      type: object
      required:
        - timerId
        - startedEventId
      properties:
        timerId:
          $ref: '#/components/schemas/TimerId'
        startedEventId:
          $ref: '#/components/schemas/EventId'
      description: Provides details of the <code>TimerFired</code> event.
    TimerId:
      type: string
      minLength: 1
      maxLength: 256
    TimerStartedEventAttributes:
      type: object
      required:
        - timerId
        - startToFireTimeout
        - decisionTaskCompletedEventId
      properties:
        timerId:
          $ref: '#/components/schemas/TimerId'
        control:
          $ref: '#/components/schemas/Data'
        startToFireTimeout:
          $ref: '#/components/schemas/DurationInSeconds'
        decisionTaskCompletedEventId:
          $ref: '#/components/schemas/EventId'
      description: Provides details of the <code>TimerStarted</code> event.
    Timestamp:
      type: string
      format: date-time
    Truncated:
      type: boolean
    TypeAlreadyExistsFault:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      description: Returned if the type already exists in the specified domain. You will get this fault even if the existing type is in deprecated status. You can specify another version if the intent is to create a new distinct version of the type.
    TypeDeprecatedFault:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      description: Returned when the specified activity or workflow type was already deprecated.
    UnknownResourceFault:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      description: Returned when the named resource cannot be found with in the scope of this operation (region or domain). This could happen if the named resource was never created or is no longer available for this operation.
    Version:
      type: string
      minLength: 1
      maxLength: 64
    VersionOptional:
      type: string
      maxLength: 64
    WorkflowExecution:
      type: object
      required:
        - workflowId
        - runId
      properties:
        workflowId:
          $ref: '#/components/schemas/WorkflowId'
        runId:
          $ref: '#/components/schemas/RunId'
      description: Represents a workflow execution.
    WorkflowExecutionAlreadyStartedFault:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      description: Returned by <a>StartWorkflowExecution</a> when an open execution with the same workflowId is already running in the specified domain.
    WorkflowExecutionCancelRequestedCause:
      type: string
      enum:
        - CHILD_POLICY_APPLIED
    WorkflowExecutionCancelRequestedEventAttributes:
      type: object
      properties:
        externalWorkflowExecution:
          $ref: '#/components/schemas/WorkflowExecution'
        externalInitiatedEventId:
          $ref: '#/components/schemas/EventId'
        cause:
          $ref: '#/components/schemas/WorkflowExecutionCancelRequestedCause'
      description: Provides details of the <code>WorkflowExecutionCancelRequested</code> event.
    WorkflowExecutionCanceledEventAttributes:
      type: object
      required:
        - decisionTaskCompletedEventId
      properties:
        details:
          $ref: '#/components/schemas/Data'
        decisionTaskCompletedEventId:
          $ref: '#/components/schemas/EventId'
      description: Provides details of the <code>WorkflowExecutionCanceled</code> event.
    WorkflowExecutionCompletedEventAttributes:
      type: object
      required:
        - decisionTaskCompletedEventId
      properties:
        result:
          $ref: '#/components/schemas/Data'
        decisionTaskCompletedEventId:
          $ref: '#/components/schemas/EventId'
      description: Provides details of the <code>WorkflowExecutionCompleted</code> event.
    WorkflowExecutionConfiguration:
      type: object
      required:
        - taskStartToCloseTimeout
        - executionStartToCloseTimeout
        - taskList
        - childPolicy
      properties:
        taskStartToCloseTimeout:
          $ref: '#/components/schemas/DurationInSeconds'
        executionStartToCloseTimeout:
          $ref: '#/components/schemas/DurationInSeconds'
        taskList:
          $ref: '#/components/schemas/TaskList'
        taskPriority:
          $ref: '#/components/schemas/TaskPriority'
        childPolicy:
          $ref: '#/components/schemas/ChildPolicy'
        lambdaRole:
          $ref: '#/components/schemas/Arn'
      description: 'The configuration settings for a workflow execution including timeout values, tasklist etc. These configuration settings are determined from the defaults specified when registering the workflow type and those specified when starting the workflow execution.'
    WorkflowExecutionContinuedAsNewEventAttributes:
      type: object
      required:
        - decisionTaskCompletedEventId
        - newExecutionRunId
        - taskList
        - childPolicy
        - workflowType
      properties:
        input:
          $ref: '#/components/schemas/Data'
        decisionTaskCompletedEventId:
          $ref: '#/components/schemas/EventId'
        newExecutionRunId:
          $ref: '#/components/schemas/RunId'
        executionStartToCloseTimeout:
          $ref: '#/components/schemas/DurationInSecondsOptional'
        taskList:
          $ref: '#/components/schemas/TaskList'
        taskPriority:
          $ref: '#/components/schemas/TaskPriority'
        taskStartToCloseTimeout:
          $ref: '#/components/schemas/DurationInSecondsOptional'
        childPolicy:
          $ref: '#/components/schemas/ChildPolicy'
        tagList:
          $ref: '#/components/schemas/TagList'
        workflowType:
          $ref: '#/components/schemas/WorkflowType'
        lambdaRole:
          $ref: '#/components/schemas/Arn'
      description: Provides details of the <code>WorkflowExecutionContinuedAsNew</code> event.
    WorkflowExecutionCount:
      type: object
      required:
        - count
      properties:
        count:
          $ref: '#/components/schemas/Count'
        truncated:
          $ref: '#/components/schemas/Truncated'
      description: Contains the count of workflow executions returned from <a>CountOpenWorkflowExecutions</a> or <a>CountClosedWorkflowExecutions</a>
    WorkflowExecutionDetail:
      type: object
      required:
        - executionInfo
        - executionConfiguration
        - openCounts
      properties:
        executionInfo:
          $ref: '#/components/schemas/WorkflowExecutionInfo'
        executionConfiguration:
          $ref: '#/components/schemas/WorkflowExecutionConfiguration'
        openCounts:
          $ref: '#/components/schemas/WorkflowExecutionOpenCounts'
        latestActivityTaskTimestamp:
          $ref: '#/components/schemas/Timestamp'
        latestExecutionContext:
          $ref: '#/components/schemas/Data'
      description: Contains details about a workflow execution.
    WorkflowExecutionFailedEventAttributes:
      type: object
      required:
        - decisionTaskCompletedEventId
      properties:
        reason:
          $ref: '#/components/schemas/FailureReason'
        details:
          $ref: '#/components/schemas/Data'
        decisionTaskCompletedEventId:
          $ref: '#/components/schemas/EventId'
      description: Provides details of the <code>WorkflowExecutionFailed</code> event.
    WorkflowExecutionFilter:
      type: object
      required:
        - workflowId
      properties:
        workflowId:
          $ref: '#/components/schemas/WorkflowId'
      description: Used to filter the workflow executions in visibility APIs by their <code>workflowId</code>.
    WorkflowExecutionInfo:
      type: object
      required:
        - execution
        - workflowType
        - startTimestamp
        - executionStatus
      properties:
        execution:
          $ref: '#/components/schemas/WorkflowExecution'
        workflowType:
          $ref: '#/components/schemas/WorkflowType'
        startTimestamp:
          $ref: '#/components/schemas/Timestamp'
        closeTimestamp:
          $ref: '#/components/schemas/Timestamp'
        executionStatus:
          $ref: '#/components/schemas/ExecutionStatus'
        closeStatus:
          $ref: '#/components/schemas/CloseStatus'
        parent:
          $ref: '#/components/schemas/WorkflowExecution'
        tagList:
          $ref: '#/components/schemas/TagList'
        cancelRequested:
          $ref: '#/components/schemas/Canceled'
      description: 'Contains information about a workflow execution. '
    WorkflowExecutionInfoList:
      type: array
      items:
        $ref: '#/components/schemas/WorkflowExecutionInfo'
    WorkflowExecutionInfos:
      type: object
      required:
        - executionInfos
      properties:
        executionInfos:
          $ref: '#/components/schemas/WorkflowExecutionInfoList'
        nextPageToken:
          $ref: '#/components/schemas/PageToken'
      description: Contains a paginated list of information about workflow executions.
    WorkflowExecutionOpenCounts:
      type: object
      required:
        - openActivityTasks
        - openDecisionTasks
        - openTimers
        - openChildWorkflowExecutions
      properties:
        openActivityTasks:
          $ref: '#/components/schemas/Count'
        openDecisionTasks:
          $ref: '#/components/schemas/OpenDecisionTasksCount'
        openTimers:
          $ref: '#/components/schemas/Count'
        openChildWorkflowExecutions:
          $ref: '#/components/schemas/Count'
        openLambdaFunctions:
          $ref: '#/components/schemas/Count'
      description: 'Contains the counts of open tasks, child workflow executions and timers for a workflow execution.'
    WorkflowExecutionSignaledEventAttributes:
      type: object
      required:
        - signalName
      properties:
        signalName:
          $ref: '#/components/schemas/SignalName'
        input:
          $ref: '#/components/schemas/Data'
        externalWorkflowExecution:
          $ref: '#/components/schemas/WorkflowExecution'
        externalInitiatedEventId:
          $ref: '#/components/schemas/EventId'
      description: Provides details of the <code>WorkflowExecutionSignaled</code> event.
    WorkflowExecutionStartedEventAttributes:
      type: object
      required:
        - childPolicy
        - taskList
        - workflowType
      properties:
        input:
          $ref: '#/components/schemas/Data'
        executionStartToCloseTimeout:
          $ref: '#/components/schemas/DurationInSecondsOptional'
        taskStartToCloseTimeout:
          $ref: '#/components/schemas/DurationInSecondsOptional'
        childPolicy:
          $ref: '#/components/schemas/ChildPolicy'
        taskList:
          $ref: '#/components/schemas/TaskList'
        workflowType:
          $ref: '#/components/schemas/WorkflowType'
        tagList:
          $ref: '#/components/schemas/TagList'
        taskPriority:
          $ref: '#/components/schemas/TaskPriority'
        continuedExecutionRunId:
          $ref: '#/components/schemas/RunIdOptional'
        parentWorkflowExecution:
          $ref: '#/components/schemas/WorkflowExecution'
        parentInitiatedEventId:
          $ref: '#/components/schemas/EventId'
        lambdaRole:
          $ref: '#/components/schemas/Arn'
      description: Provides details of <code>WorkflowExecutionStarted</code> event.
    WorkflowExecutionTerminatedCause:
      type: string
      enum:
        - CHILD_POLICY_APPLIED
        - EVENT_LIMIT_EXCEEDED
        - OPERATOR_INITIATED
    WorkflowExecutionTerminatedEventAttributes:
      type: object
      required:
        - childPolicy
      properties:
        reason:
          $ref: '#/components/schemas/TerminateReason'
        details:
          $ref: '#/components/schemas/Data'
        childPolicy:
          $ref: '#/components/schemas/ChildPolicy'
        cause:
          $ref: '#/components/schemas/WorkflowExecutionTerminatedCause'
      description: Provides details of the <code>WorkflowExecutionTerminated</code> event.
    WorkflowExecutionTimedOutEventAttributes:
      type: object
      required:
        - timeoutType
        - childPolicy
      properties:
        timeoutType:
          $ref: '#/components/schemas/WorkflowExecutionTimeoutType'
        childPolicy:
          $ref: '#/components/schemas/ChildPolicy'
      description: Provides details of the <code>WorkflowExecutionTimedOut</code> event.
    WorkflowExecutionTimeoutType:
      type: string
      enum:
        - START_TO_CLOSE
    WorkflowId:
      type: string
      minLength: 1
      maxLength: 256
    WorkflowType:
      type: object
      required:
        - name
        - version
      properties:
        name:
          $ref: '#/components/schemas/Name'
        version:
          $ref: '#/components/schemas/Version'
      description: Represents a workflow type.
    WorkflowTypeConfiguration:
      type: object
      properties:
        defaultTaskStartToCloseTimeout:
          $ref: '#/components/schemas/DurationInSecondsOptional'
        defaultExecutionStartToCloseTimeout:
          $ref: '#/components/schemas/DurationInSecondsOptional'
        defaultTaskList:
          $ref: '#/components/schemas/TaskList'
        defaultTaskPriority:
          $ref: '#/components/schemas/TaskPriority'
        defaultChildPolicy:
          $ref: '#/components/schemas/ChildPolicy'
        defaultLambdaRole:
          $ref: '#/components/schemas/Arn'
      description: The configuration settings of a workflow type.
    WorkflowTypeDetail:
      type: object
      required:
        - typeInfo
        - configuration
      properties:
        typeInfo:
          $ref: '#/components/schemas/WorkflowTypeInfo'
        configuration:
          $ref: '#/components/schemas/WorkflowTypeConfiguration'
      description: Contains details about a workflow type.
    WorkflowTypeFilter:
      type: object
      required:
        - name
      properties:
        name:
          $ref: '#/components/schemas/Name'
        version:
          $ref: '#/components/schemas/VersionOptional'
      description: 'Used to filter workflow execution query results by type. Each parameter, if specified, defines a rule that must be satisfied by each returned result.'
    WorkflowTypeInfo:
      type: object
      required:
        - workflowType
        - status
        - creationDate
      properties:
        workflowType:
          $ref: '#/components/schemas/WorkflowType'
        status:
          $ref: '#/components/schemas/RegistrationStatus'
        description:
          $ref: '#/components/schemas/Description'
        creationDate:
          $ref: '#/components/schemas/Timestamp'
        deprecationDate:
          $ref: '#/components/schemas/Timestamp'
      description: Contains information about a workflow type.
    WorkflowTypeInfoList:
      type: array
      items:
        $ref: '#/components/schemas/WorkflowTypeInfo'
    WorkflowTypeInfos:
      type: object
      required:
        - typeInfos
      properties:
        typeInfos:
          $ref: '#/components/schemas/WorkflowTypeInfoList'
        nextPageToken:
          $ref: '#/components/schemas/PageToken'
      description: Contains a paginated list of information structures about workflow types.
  parameters:
    Action:
      name: Action
      in: header
      required: true
      schema:
        type: string
    Version:
      name: Version
      in: header
      required: true
      schema:
        type: string
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      required: false
      schema:
        type: string
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      required: false
      schema:
        type: string
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      required: false
      schema:
        type: string
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      required: false
      schema:
        type: string
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      required: false
      schema:
        type: string
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      required: false
      schema:
        type: string
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      required: false
      schema:
        type: string
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
