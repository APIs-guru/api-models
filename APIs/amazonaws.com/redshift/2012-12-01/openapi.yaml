openapi: 3.0.0
servers:
  - url: 'http://redshift.amazonaws.com/'
info:
  version: '2012-12-01'
  x-release: v4
  title: Amazon Redshift
  description: '<fullname>Amazon Redshift</fullname> <p> <b>Overview</b> </p> <p>This is an interface reference for Amazon Redshift. It contains documentation for one of the programming or command line interfaces you can use to manage Amazon Redshift clusters. Note that Amazon Redshift is asynchronous, which means that some interfaces may require techniques, such as polling or asynchronous callback handlers, to determine when a command has been applied. In this reference, the parameter descriptions indicate whether a change is applied immediately, on the next instance reboot, or during the next maintenance window. For a summary of the Amazon Redshift cluster management interfaces, go to <a href="http://docs.aws.amazon.com/redshift/latest/mgmt/using-aws-sdk.html">Using the Amazon Redshift Management Interfaces</a>.</p> <p>Amazon Redshift manages all the work of setting up, operating, and scaling a data warehouse: provisioning capacity, monitoring and backing up the cluster, and applying patches and upgrades to the Amazon Redshift engine. You can focus on using your data to acquire new insights for your business and customers.</p> <p>If you are a first-time user of Amazon Redshift, we recommend that you begin by reading the <a href="http://docs.aws.amazon.com/redshift/latest/gsg/getting-started.html">Amazon Redshift Getting Started Guide</a>.</p> <p>If you are a database developer, the <a href="http://docs.aws.amazon.com/redshift/latest/dg/welcome.html">Amazon Redshift Database Developer Guide</a> explains how to design, build, query, and maintain the databases that make up your data warehouse. </p>'
  x-logo:
    url: 'https://media.amazonwebservices.com/blog/2007/big_pbaws_logo_300px.jpg'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: redshift
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/redshift-2012-12-01.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-direct: true
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://aws.amazon.com/redshift/'
x-hasEquivalentPaths: true
security:
  - hmac: []
paths:
  /:
    post:
      operationId: AuthorizeClusterSecurityGroupIngress
      description: '<p>Adds an inbound (ingress) rule to an Amazon Redshift security group. Depending on whether the application accessing your cluster is running on the Internet or an Amazon EC2 instance, you can authorize inbound access to either a Classless Interdomain Routing (CIDR)/Internet Protocol (IP) range or to an Amazon EC2 security group. You can add as many as 20 ingress rules to an Amazon Redshift security group.</p> <p>If you authorize access to an Amazon EC2 security group, specify <i>EC2SecurityGroupName</i> and <i>EC2SecurityGroupOwnerId</i>. The Amazon EC2 security group and Amazon Redshift cluster must be in the same AWS region. </p> <p>If you authorize access to a CIDR/IP address range, specify <i>CIDRIP</i>. For an overview of CIDR blocks, see the Wikipedia article on <a href="http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing">Classless Inter-Domain Routing</a>. </p> <p>You must also associate the security group with a cluster so that clients running on these IP addresses or the EC2 instance are authorized to connect to the cluster. For information about managing security groups, go to <a href="http://docs.aws.amazon.com/redshift/latest/mgmt/working-with-security-groups.html">Working with Security Groups</a> in the <i>Amazon Redshift Cluster Management Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AuthorizeClusterSecurityGroupIngressResult'
        '480':
          description: ClusterSecurityGroupNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ClusterSecurityGroupNotFoundFault'
        '481':
          description: InvalidClusterSecurityGroupStateFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidClusterSecurityGroupStateFault'
        '482':
          description: AuthorizationAlreadyExistsFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AuthorizationAlreadyExistsFault'
        '483':
          description: AuthorizationQuotaExceededFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AuthorizationQuotaExceededFault'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthorizeClusterSecurityGroupIngressMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#AuthorizeSnapshotAccess':
    post:
      operationId: AuthorizeSnapshotAccess
      description: '<p>Authorizes the specified AWS customer account to restore the specified snapshot.</p> <p> For more information about working with snapshots, go to <a href="http://docs.aws.amazon.com/redshift/latest/mgmt/working-with-snapshots.html">Amazon Redshift Snapshots</a> in the <i>Amazon Redshift Cluster Management Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AuthorizeSnapshotAccessResult'
        '480':
          description: ClusterSnapshotNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ClusterSnapshotNotFoundFault'
        '481':
          description: AuthorizationAlreadyExistsFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AuthorizationAlreadyExistsFault'
        '482':
          description: AuthorizationQuotaExceededFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AuthorizationQuotaExceededFault'
        '483':
          description: DependentServiceRequestThrottlingFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DependentServiceRequestThrottlingFault'
        '484':
          description: InvalidClusterSnapshotStateFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidClusterSnapshotStateFault'
        '485':
          description: LimitExceededFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/LimitExceededFault'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthorizeSnapshotAccessMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#CopyClusterSnapshot':
    post:
      operationId: CopyClusterSnapshot
      description: '<p>Copies the specified automated cluster snapshot to a new manual cluster snapshot. The source must be an automated snapshot and it must be in the available state.</p> <p>When you delete a cluster, Amazon Redshift deletes any automated snapshots of the cluster. Also, when the retention period of the snapshot expires, Amazon Redshift automatically deletes it. If you want to keep an automated snapshot for a longer period, you can make a manual copy of the snapshot. Manual snapshots are retained until you delete them.</p> <p> For more information about working with snapshots, go to <a href="http://docs.aws.amazon.com/redshift/latest/mgmt/working-with-snapshots.html">Amazon Redshift Snapshots</a> in the <i>Amazon Redshift Cluster Management Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CopyClusterSnapshotResult'
        '480':
          description: ClusterSnapshotAlreadyExistsFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ClusterSnapshotAlreadyExistsFault'
        '481':
          description: ClusterSnapshotNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ClusterSnapshotNotFoundFault'
        '482':
          description: InvalidClusterSnapshotStateFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidClusterSnapshotStateFault'
        '483':
          description: ClusterSnapshotQuotaExceededFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ClusterSnapshotQuotaExceededFault'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CopyClusterSnapshotMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#CreateCluster':
    post:
      operationId: CreateCluster
      description: '<p>Creates a new cluster.</p> <p>To create the cluster in Virtual Private Cloud (VPC), you must provide a cluster subnet group name. The cluster subnet group identifies the subnets of your VPC that Amazon Redshift uses when creating the cluster. For more information about managing clusters, go to <a href="http://docs.aws.amazon.com/redshift/latest/mgmt/working-with-clusters.html">Amazon Redshift Clusters</a> in the <i>Amazon Redshift Cluster Management Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CreateClusterResult'
        '480':
          description: ClusterAlreadyExistsFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ClusterAlreadyExistsFault'
        '481':
          description: InsufficientClusterCapacityFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InsufficientClusterCapacityFault'
        '482':
          description: ClusterParameterGroupNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ClusterParameterGroupNotFoundFault'
        '483':
          description: ClusterSecurityGroupNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ClusterSecurityGroupNotFoundFault'
        '484':
          description: ClusterQuotaExceededFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ClusterQuotaExceededFault'
        '485':
          description: NumberOfNodesQuotaExceededFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/NumberOfNodesQuotaExceededFault'
        '486':
          description: NumberOfNodesPerClusterLimitExceededFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/NumberOfNodesPerClusterLimitExceededFault'
        '487':
          description: ClusterSubnetGroupNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ClusterSubnetGroupNotFoundFault'
        '488':
          description: InvalidVPCNetworkStateFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidVPCNetworkStateFault'
        '489':
          description: InvalidClusterSubnetGroupStateFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidClusterSubnetGroupStateFault'
        '490':
          description: InvalidSubnet
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidSubnet'
        '491':
          description: UnauthorizedOperation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UnauthorizedOperation'
        '492':
          description: HsmClientCertificateNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/HsmClientCertificateNotFoundFault'
        '493':
          description: HsmConfigurationNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/HsmConfigurationNotFoundFault'
        '494':
          description: InvalidElasticIpFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidElasticIpFault'
        '495':
          description: TagLimitExceededFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TagLimitExceededFault'
        '496':
          description: InvalidTagFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidTagFault'
        '497':
          description: LimitExceededFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/LimitExceededFault'
        '498':
          description: DependentServiceRequestThrottlingFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DependentServiceRequestThrottlingFault'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateClusterMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#CreateClusterParameterGroup':
    post:
      operationId: CreateClusterParameterGroup
      description: '<p>Creates an Amazon Redshift parameter group.</p> <p>Creating parameter groups is independent of creating clusters. You can associate a cluster with a parameter group when you create the cluster. You can also associate an existing cluster with a parameter group after the cluster is created by using <a>ModifyCluster</a>. </p> <p>Parameters in the parameter group define specific behavior that applies to the databases you create on the cluster. For more information about parameters and parameter groups, go to <a href="http://docs.aws.amazon.com/redshift/latest/mgmt/working-with-parameter-groups.html">Amazon Redshift Parameter Groups</a> in the <i>Amazon Redshift Cluster Management Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CreateClusterParameterGroupResult'
        '480':
          description: ClusterParameterGroupQuotaExceededFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ClusterParameterGroupQuotaExceededFault'
        '481':
          description: ClusterParameterGroupAlreadyExistsFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ClusterParameterGroupAlreadyExistsFault'
        '482':
          description: TagLimitExceededFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TagLimitExceededFault'
        '483':
          description: InvalidTagFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidTagFault'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateClusterParameterGroupMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#CreateClusterSecurityGroup':
    post:
      operationId: CreateClusterSecurityGroup
      description: '<p>Creates a new Amazon Redshift security group. You use security groups to control access to non-VPC clusters.</p> <p> For information about managing security groups, go to <a href="http://docs.aws.amazon.com/redshift/latest/mgmt/working-with-security-groups.html">Amazon Redshift Cluster Security Groups</a> in the <i>Amazon Redshift Cluster Management Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CreateClusterSecurityGroupResult'
        '480':
          description: ClusterSecurityGroupAlreadyExistsFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ClusterSecurityGroupAlreadyExistsFault'
        '481':
          description: ClusterSecurityGroupQuotaExceededFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ClusterSecurityGroupQuotaExceededFault'
        '482':
          description: TagLimitExceededFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TagLimitExceededFault'
        '483':
          description: InvalidTagFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidTagFault'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateClusterSecurityGroupMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#CreateClusterSnapshot':
    post:
      operationId: CreateClusterSnapshot
      description: '<p>Creates a manual snapshot of the specified cluster. The cluster must be in the <code>available</code> state. </p> <p> For more information about working with snapshots, go to <a href="http://docs.aws.amazon.com/redshift/latest/mgmt/working-with-snapshots.html">Amazon Redshift Snapshots</a> in the <i>Amazon Redshift Cluster Management Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CreateClusterSnapshotResult'
        '480':
          description: ClusterSnapshotAlreadyExistsFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ClusterSnapshotAlreadyExistsFault'
        '481':
          description: InvalidClusterStateFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidClusterStateFault'
        '482':
          description: ClusterNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ClusterNotFoundFault'
        '483':
          description: ClusterSnapshotQuotaExceededFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ClusterSnapshotQuotaExceededFault'
        '484':
          description: TagLimitExceededFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TagLimitExceededFault'
        '485':
          description: InvalidTagFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidTagFault'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateClusterSnapshotMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#CreateClusterSubnetGroup':
    post:
      operationId: CreateClusterSubnetGroup
      description: '<p>Creates a new Amazon Redshift subnet group. You must provide a list of one or more subnets in your existing Amazon Virtual Private Cloud (Amazon VPC) when creating Amazon Redshift subnet group.</p> <p> For information about subnet groups, go to <a href="http://docs.aws.amazon.com/redshift/latest/mgmt/working-with-cluster-subnet-groups.html">Amazon Redshift Cluster Subnet Groups</a> in the <i>Amazon Redshift Cluster Management Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CreateClusterSubnetGroupResult'
        '480':
          description: ClusterSubnetGroupAlreadyExistsFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ClusterSubnetGroupAlreadyExistsFault'
        '481':
          description: ClusterSubnetGroupQuotaExceededFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ClusterSubnetGroupQuotaExceededFault'
        '482':
          description: ClusterSubnetQuotaExceededFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ClusterSubnetQuotaExceededFault'
        '483':
          description: InvalidSubnet
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidSubnet'
        '484':
          description: UnauthorizedOperation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UnauthorizedOperation'
        '485':
          description: TagLimitExceededFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TagLimitExceededFault'
        '486':
          description: InvalidTagFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidTagFault'
        '487':
          description: DependentServiceRequestThrottlingFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DependentServiceRequestThrottlingFault'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateClusterSubnetGroupMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#CreateEventSubscription':
    post:
      operationId: CreateEventSubscription
      description: '<p>Creates an Amazon Redshift event notification subscription. This action requires an ARN (Amazon Resource Name) of an Amazon SNS topic created by either the Amazon Redshift console, the Amazon SNS console, or the Amazon SNS API. To obtain an ARN with Amazon SNS, you must create a topic in Amazon SNS and subscribe to the topic. The ARN is displayed in the SNS console.</p> <p>You can specify the source type, and lists of Amazon Redshift source IDs, event categories, and event severities. Notifications will be sent for all events you want that match those criteria. For example, you can specify source type = cluster, source ID = my-cluster-1 and mycluster2, event categories = Availability, Backup, and severity = ERROR. The subscription will only send notifications for those ERROR events in the Availability and Backup categories for the specified clusters.</p> <p>If you specify both the source type and source IDs, such as source type = cluster and source identifier = my-cluster-1, notifications will be sent for all the cluster events for my-cluster-1. If you specify a source type but do not specify a source identifier, you will receive notice of the events for the objects of that type in your AWS account. If you do not specify either the SourceType nor the SourceIdentifier, you will be notified of events generated from all Amazon Redshift sources belonging to your AWS account. You must specify a source type if you specify a source ID.</p>'
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CreateEventSubscriptionResult'
        '480':
          description: EventSubscriptionQuotaExceededFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EventSubscriptionQuotaExceededFault'
        '481':
          description: SubscriptionAlreadyExistFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SubscriptionAlreadyExistFault'
        '482':
          description: SNSInvalidTopicFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SNSInvalidTopicFault'
        '483':
          description: SNSNoAuthorizationFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SNSNoAuthorizationFault'
        '484':
          description: SNSTopicArnNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SNSTopicArnNotFoundFault'
        '485':
          description: SubscriptionEventIdNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SubscriptionEventIdNotFoundFault'
        '486':
          description: SubscriptionCategoryNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SubscriptionCategoryNotFoundFault'
        '487':
          description: SubscriptionSeverityNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SubscriptionSeverityNotFoundFault'
        '488':
          description: SourceNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SourceNotFoundFault'
        '489':
          description: TagLimitExceededFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TagLimitExceededFault'
        '490':
          description: InvalidTagFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidTagFault'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEventSubscriptionMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#CreateHsmClientCertificate':
    post:
      operationId: CreateHsmClientCertificate
      description: '<p>Creates an HSM client certificate that an Amazon Redshift cluster will use to connect to the client''s HSM in order to store and retrieve the keys used to encrypt the cluster databases.</p> <p>The command returns a public key, which you must store in the HSM. In addition to creating the HSM certificate, you must create an Amazon Redshift HSM configuration that provides a cluster the information needed to store and use encryption keys in the HSM. For more information, go to <a href="http://docs.aws.amazon.com/redshift/latest/mgmt/working-with-HSM.html">Hardware Security Modules</a> in the Amazon Redshift Cluster Management Guide.</p>'
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CreateHsmClientCertificateResult'
        '480':
          description: HsmClientCertificateAlreadyExistsFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/HsmClientCertificateAlreadyExistsFault'
        '481':
          description: HsmClientCertificateQuotaExceededFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/HsmClientCertificateQuotaExceededFault'
        '482':
          description: TagLimitExceededFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TagLimitExceededFault'
        '483':
          description: InvalidTagFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidTagFault'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateHsmClientCertificateMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#CreateHsmConfiguration':
    post:
      operationId: CreateHsmConfiguration
      description: '<p>Creates an HSM configuration that contains the information required by an Amazon Redshift cluster to store and use database encryption keys in a Hardware Security Module (HSM). After creating the HSM configuration, you can specify it as a parameter when creating a cluster. The cluster will then store its encryption keys in the HSM.</p> <p>In addition to creating an HSM configuration, you must also create an HSM client certificate. For more information, go to <a href="http://docs.aws.amazon.com/redshift/latest/mgmt/working-with-HSM.html">Hardware Security Modules</a> in the Amazon Redshift Cluster Management Guide.</p>'
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CreateHsmConfigurationResult'
        '480':
          description: HsmConfigurationAlreadyExistsFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/HsmConfigurationAlreadyExistsFault'
        '481':
          description: HsmConfigurationQuotaExceededFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/HsmConfigurationQuotaExceededFault'
        '482':
          description: TagLimitExceededFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TagLimitExceededFault'
        '483':
          description: InvalidTagFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidTagFault'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateHsmConfigurationMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#CreateSnapshotCopyGrant':
    post:
      operationId: CreateSnapshotCopyGrant
      description: '<p>Creates a snapshot copy grant that permits Amazon Redshift to use a customer master key (CMK) from AWS Key Management Service (AWS KMS) to encrypt copied snapshots in a destination region.</p> <p> For more information about managing snapshot copy grants, go to <a href="http://docs.aws.amazon.com/redshift/latest/mgmt/working-with-db-encryption.html">Amazon Redshift Database Encryption</a> in the <i>Amazon Redshift Cluster Management Guide</i>. </p>'
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CreateSnapshotCopyGrantResult'
        '480':
          description: SnapshotCopyGrantAlreadyExistsFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SnapshotCopyGrantAlreadyExistsFault'
        '481':
          description: SnapshotCopyGrantQuotaExceededFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SnapshotCopyGrantQuotaExceededFault'
        '482':
          description: LimitExceededFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/LimitExceededFault'
        '483':
          description: TagLimitExceededFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TagLimitExceededFault'
        '484':
          description: InvalidTagFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidTagFault'
        '485':
          description: DependentServiceRequestThrottlingFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DependentServiceRequestThrottlingFault'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSnapshotCopyGrantMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#CreateTags':
    post:
      operationId: CreateTags
      description: '<p>Adds one or more tags to a specified resource.</p> <p>A resource can have up to 10 tags. If you try to create more than 10 tags for a resource, you will receive an error and the attempt will fail.</p> <p>If you specify a key that already exists for the resource, the value for that key will be updated with the new value.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: TagLimitExceededFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TagLimitExceededFault'
        '481':
          description: ResourceNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResourceNotFoundFault'
        '482':
          description: InvalidTagFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidTagFault'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTagsMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DeleteCluster':
    post:
      operationId: DeleteCluster
      description: '<p>Deletes a previously provisioned cluster. A successful response from the web service indicates that the request was received correctly. Use <a>DescribeClusters</a> to monitor the status of the deletion. The delete operation cannot be canceled or reverted once submitted. For more information about managing clusters, go to <a href="http://docs.aws.amazon.com/redshift/latest/mgmt/working-with-clusters.html">Amazon Redshift Clusters</a> in the <i>Amazon Redshift Cluster Management Guide</i>.</p> <p>If you want to shut down the cluster and retain it for future use, set <i>SkipFinalClusterSnapshot</i> to <code>false</code> and specify a name for <i>FinalClusterSnapshotIdentifier</i>. You can later restore this snapshot to resume using the cluster. If a final cluster snapshot is requested, the status of the cluster will be "final-snapshot" while the snapshot is being taken, then it''s "deleting" once Amazon Redshift begins deleting the cluster. </p> <p> For more information about managing clusters, go to <a href="http://docs.aws.amazon.com/redshift/latest/mgmt/working-with-clusters.html">Amazon Redshift Clusters</a> in the <i>Amazon Redshift Cluster Management Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DeleteClusterResult'
        '480':
          description: ClusterNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ClusterNotFoundFault'
        '481':
          description: InvalidClusterStateFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidClusterStateFault'
        '482':
          description: ClusterSnapshotAlreadyExistsFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ClusterSnapshotAlreadyExistsFault'
        '483':
          description: ClusterSnapshotQuotaExceededFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ClusterSnapshotQuotaExceededFault'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteClusterMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DeleteClusterParameterGroup':
    post:
      operationId: DeleteClusterParameterGroup
      description: <p>Deletes a specified Amazon Redshift parameter group.</p> <note> <p>You cannot delete a parameter group if it is associated with a cluster.</p> </note>
      responses:
        '200':
          description: Success
        '480':
          description: InvalidClusterParameterGroupStateFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidClusterParameterGroupStateFault'
        '481':
          description: ClusterParameterGroupNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ClusterParameterGroupNotFoundFault'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteClusterParameterGroupMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DeleteClusterSecurityGroup':
    post:
      operationId: DeleteClusterSecurityGroup
      description: '<p>Deletes an Amazon Redshift security group.</p> <note> <p>You cannot delete a security group that is associated with any clusters. You cannot delete the default security group.</p> </note> <p> For information about managing security groups, go to <a href="http://docs.aws.amazon.com/redshift/latest/mgmt/working-with-security-groups.html">Amazon Redshift Cluster Security Groups</a> in the <i>Amazon Redshift Cluster Management Guide</i>.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: InvalidClusterSecurityGroupStateFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidClusterSecurityGroupStateFault'
        '481':
          description: ClusterSecurityGroupNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ClusterSecurityGroupNotFoundFault'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteClusterSecurityGroupMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DeleteClusterSnapshot':
    post:
      operationId: DeleteClusterSnapshot
      description: '<p>Deletes the specified manual snapshot. The snapshot must be in the <code>available</code> state, with no other users authorized to access the snapshot. </p> <p>Unlike automated snapshots, manual snapshots are retained even after you delete your cluster. Amazon Redshift does not delete your manual snapshots. You must delete manual snapshot explicitly to avoid getting charged. If other accounts are authorized to access the snapshot, you must revoke all of the authorizations before you can delete the snapshot.</p>'
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DeleteClusterSnapshotResult'
        '480':
          description: InvalidClusterSnapshotStateFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidClusterSnapshotStateFault'
        '481':
          description: ClusterSnapshotNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ClusterSnapshotNotFoundFault'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteClusterSnapshotMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DeleteClusterSubnetGroup':
    post:
      operationId: DeleteClusterSubnetGroup
      description: Deletes the specified cluster subnet group.
      responses:
        '200':
          description: Success
        '480':
          description: InvalidClusterSubnetGroupStateFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidClusterSubnetGroupStateFault'
        '481':
          description: InvalidClusterSubnetStateFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidClusterSubnetStateFault'
        '482':
          description: ClusterSubnetGroupNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ClusterSubnetGroupNotFoundFault'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteClusterSubnetGroupMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DeleteEventSubscription':
    post:
      operationId: DeleteEventSubscription
      description: Deletes an Amazon Redshift event notification subscription.
      responses:
        '200':
          description: Success
        '480':
          description: SubscriptionNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SubscriptionNotFoundFault'
        '481':
          description: InvalidSubscriptionStateFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidSubscriptionStateFault'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteEventSubscriptionMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DeleteHsmClientCertificate':
    post:
      operationId: DeleteHsmClientCertificate
      description: Deletes the specified HSM client certificate.
      responses:
        '200':
          description: Success
        '480':
          description: InvalidHsmClientCertificateStateFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidHsmClientCertificateStateFault'
        '481':
          description: HsmClientCertificateNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/HsmClientCertificateNotFoundFault'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteHsmClientCertificateMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DeleteHsmConfiguration':
    post:
      operationId: DeleteHsmConfiguration
      description: Deletes the specified Amazon Redshift HSM configuration.
      responses:
        '200':
          description: Success
        '480':
          description: InvalidHsmConfigurationStateFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidHsmConfigurationStateFault'
        '481':
          description: HsmConfigurationNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/HsmConfigurationNotFoundFault'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteHsmConfigurationMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DeleteSnapshotCopyGrant':
    post:
      operationId: DeleteSnapshotCopyGrant
      description: Deletes the specified snapshot copy grant.
      responses:
        '200':
          description: Success
        '480':
          description: InvalidSnapshotCopyGrantStateFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidSnapshotCopyGrantStateFault'
        '481':
          description: SnapshotCopyGrantNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SnapshotCopyGrantNotFoundFault'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteSnapshotCopyGrantMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DeleteTags':
    post:
      operationId: DeleteTags
      description: Deletes a tag or tags from a resource. You must provide the ARN of the resource from which you want to delete the tag or tags.
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResourceNotFoundFault'
        '481':
          description: InvalidTagFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidTagFault'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteTagsMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DescribeClusterParameterGroups':
    post:
      operationId: DescribeClusterParameterGroups
      description: '<p>Returns a list of Amazon Redshift parameter groups, including parameter groups you created and the default parameter group. For each parameter group, the response includes the parameter group name, description, and parameter group family name. You can optionally specify a name to retrieve the description of a specific parameter group.</p> <p> For more information about parameters and parameter groups, go to <a href="http://docs.aws.amazon.com/redshift/latest/mgmt/working-with-parameter-groups.html">Amazon Redshift Parameter Groups</a> in the <i>Amazon Redshift Cluster Management Guide</i>.</p> <p>If you specify both tag keys and tag values in the same request, Amazon Redshift returns all parameter groups that match any combination of the specified keys and values. For example, if you have <code>owner</code> and <code>environment</code> for tag keys, and <code>admin</code> and <code>test</code> for tag values, all parameter groups that have any combination of those values are returned.</p> <p>If both tag keys and values are omitted from the request, parameter groups are returned regardless of whether they have tag keys or values associated with them.</p>'
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ClusterParameterGroupsMessage'
        '480':
          description: ClusterParameterGroupNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ClusterParameterGroupNotFoundFault'
        '481':
          description: InvalidTagFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidTagFault'
      parameters:
        - name: MaxRecords
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: Marker
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeClusterParameterGroupsMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DescribeClusterParameters':
    post:
      operationId: DescribeClusterParameters
      description: '<p>Returns a detailed list of parameters contained within the specified Amazon Redshift parameter group. For each parameter the response includes information such as parameter name, description, data type, value, whether the parameter value is modifiable, and so on.</p> <p>You can specify <i>source</i> filter to retrieve parameters of only specific type. For example, to retrieve parameters that were modified by a user action such as from <a>ModifyClusterParameterGroup</a>, you can specify <i>source</i> equal to <i>user</i>.</p> <p> For more information about parameters and parameter groups, go to <a href="http://docs.aws.amazon.com/redshift/latest/mgmt/working-with-parameter-groups.html">Amazon Redshift Parameter Groups</a> in the <i>Amazon Redshift Cluster Management Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ClusterParameterGroupDetails'
        '480':
          description: ClusterParameterGroupNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ClusterParameterGroupNotFoundFault'
      parameters:
        - name: MaxRecords
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: Marker
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeClusterParametersMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DescribeClusterSecurityGroups':
    post:
      operationId: DescribeClusterSecurityGroups
      description: '<p>Returns information about Amazon Redshift security groups. If the name of a security group is specified, the response will contain only information about only that security group.</p> <p> For information about managing security groups, go to <a href="http://docs.aws.amazon.com/redshift/latest/mgmt/working-with-security-groups.html">Amazon Redshift Cluster Security Groups</a> in the <i>Amazon Redshift Cluster Management Guide</i>.</p> <p>If you specify both tag keys and tag values in the same request, Amazon Redshift returns all security groups that match any combination of the specified keys and values. For example, if you have <code>owner</code> and <code>environment</code> for tag keys, and <code>admin</code> and <code>test</code> for tag values, all security groups that have any combination of those values are returned.</p> <p>If both tag keys and values are omitted from the request, security groups are returned regardless of whether they have tag keys or values associated with them.</p>'
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ClusterSecurityGroupMessage'
        '480':
          description: ClusterSecurityGroupNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ClusterSecurityGroupNotFoundFault'
        '481':
          description: InvalidTagFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidTagFault'
      parameters:
        - name: MaxRecords
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: Marker
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeClusterSecurityGroupsMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DescribeClusterSnapshots':
    post:
      operationId: DescribeClusterSnapshots
      description: '<p>Returns one or more snapshot objects, which contain metadata about your cluster snapshots. By default, this operation returns information about all snapshots of all clusters that are owned by you AWS customer account. No information is returned for snapshots owned by inactive AWS customer accounts.</p> <p>If you specify both tag keys and tag values in the same request, Amazon Redshift returns all snapshots that match any combination of the specified keys and values. For example, if you have <code>owner</code> and <code>environment</code> for tag keys, and <code>admin</code> and <code>test</code> for tag values, all snapshots that have any combination of those values are returned. Only snapshots that you own are returned in the response; shared snapshots are not returned with the tag key and tag value request parameters.</p> <p>If both tag keys and values are omitted from the request, snapshots are returned regardless of whether they have tag keys or values associated with them.</p>'
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SnapshotMessage'
        '480':
          description: ClusterSnapshotNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ClusterSnapshotNotFoundFault'
        '481':
          description: InvalidTagFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidTagFault'
      parameters:
        - name: MaxRecords
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: Marker
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
      x-waiters:
        - delay: 15
          operation: DescribeClusterSnapshots
          maxAttempts: 20
          acceptors:
            - expected: available
              matcher: pathAll
              state: success
              argument: 'Snapshots[].Status'
            - expected: failed
              matcher: pathAny
              state: failure
              argument: 'Snapshots[].Status'
            - expected: deleted
              matcher: pathAny
              state: failure
              argument: 'Snapshots[].Status'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeClusterSnapshotsMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DescribeClusterSubnetGroups':
    post:
      operationId: DescribeClusterSubnetGroups
      description: '<p>Returns one or more cluster subnet group objects, which contain metadata about your cluster subnet groups. By default, this operation returns information about all cluster subnet groups that are defined in you AWS account.</p> <p>If you specify both tag keys and tag values in the same request, Amazon Redshift returns all subnet groups that match any combination of the specified keys and values. For example, if you have <code>owner</code> and <code>environment</code> for tag keys, and <code>admin</code> and <code>test</code> for tag values, all subnet groups that have any combination of those values are returned.</p> <p>If both tag keys and values are omitted from the request, subnet groups are returned regardless of whether they have tag keys or values associated with them.</p>'
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ClusterSubnetGroupMessage'
        '480':
          description: ClusterSubnetGroupNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ClusterSubnetGroupNotFoundFault'
        '481':
          description: InvalidTagFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidTagFault'
      parameters:
        - name: MaxRecords
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: Marker
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeClusterSubnetGroupsMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DescribeClusterVersions':
    post:
      operationId: DescribeClusterVersions
      description: 'Returns descriptions of the available Amazon Redshift cluster versions. You can call this operation even before creating any clusters to learn more about the Amazon Redshift versions. For more information about managing clusters, go to <a href="http://docs.aws.amazon.com/redshift/latest/mgmt/working-with-clusters.html">Amazon Redshift Clusters</a> in the <i>Amazon Redshift Cluster Management Guide</i>.'
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ClusterVersionsMessage'
      parameters:
        - name: MaxRecords
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: Marker
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeClusterVersionsMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DescribeClusters':
    post:
      operationId: DescribeClusters
      description: '<p>Returns properties of provisioned clusters including general cluster properties, cluster database properties, maintenance and backup properties, and security and access properties. This operation supports pagination. For more information about managing clusters, go to <a href="http://docs.aws.amazon.com/redshift/latest/mgmt/working-with-clusters.html">Amazon Redshift Clusters</a> in the <i>Amazon Redshift Cluster Management Guide</i>.</p> <p>If you specify both tag keys and tag values in the same request, Amazon Redshift returns all clusters that match any combination of the specified keys and values. For example, if you have <code>owner</code> and <code>environment</code> for tag keys, and <code>admin</code> and <code>test</code> for tag values, all clusters that have any combination of those values are returned.</p> <p>If both tag keys and values are omitted from the request, clusters are returned regardless of whether they have tag keys or values associated with them.</p>'
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ClustersMessage'
        '480':
          description: ClusterNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ClusterNotFoundFault'
        '481':
          description: InvalidTagFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidTagFault'
      parameters:
        - name: MaxRecords
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: Marker
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
      x-waiters:
        - delay: 60
          operation: DescribeClusters
          maxAttempts: 30
          acceptors:
            - expected: available
              matcher: pathAll
              state: success
              argument: 'Clusters[].ClusterStatus'
            - expected: deleting
              matcher: pathAny
              state: failure
              argument: 'Clusters[].ClusterStatus'
            - expected: ClusterNotFound
              matcher: error
              state: retry
        - delay: 60
          operation: DescribeClusters
          maxAttempts: 30
          acceptors:
            - expected: ClusterNotFound
              matcher: error
              state: success
            - expected: creating
              matcher: pathAny
              state: failure
              argument: 'Clusters[].ClusterStatus'
            - expected: modifying
              matcher: pathAny
              state: failure
              argument: 'Clusters[].ClusterStatus'
        - operation: DescribeClusters
          maxAttempts: 30
          delay: 60
          acceptors:
            - state: success
              matcher: pathAll
              argument: 'Clusters[].RestoreStatus.Status'
              expected: completed
            - state: failure
              matcher: pathAny
              argument: 'Clusters[].ClusterStatus'
              expected: deleting
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeClustersMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DescribeDefaultClusterParameters':
    post:
      operationId: DescribeDefaultClusterParameters
      description: '<p>Returns a list of parameter settings for the specified parameter group family.</p> <p> For more information about parameters and parameter groups, go to <a href="http://docs.aws.amazon.com/redshift/latest/mgmt/working-with-parameter-groups.html">Amazon Redshift Parameter Groups</a> in the <i>Amazon Redshift Cluster Management Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DescribeDefaultClusterParametersResult'
      parameters:
        - name: MaxRecords
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: Marker
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeDefaultClusterParametersMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DescribeEventCategories':
    post:
      operationId: DescribeEventCategories
      description: 'Displays a list of event categories for all event source types, or for a specified source type. For a list of the event categories and source types, go to <a href="http://docs.aws.amazon.com/redshift/latest/mgmt/working-with-event-notifications.html">Amazon Redshift Event Notifications</a>.'
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EventCategoriesMessage'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeEventCategoriesMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DescribeEventSubscriptions':
    post:
      operationId: DescribeEventSubscriptions
      description: 'Lists descriptions of all the Amazon Redshift event notifications subscription for a customer account. If you specify a subscription name, lists the description for that subscription.'
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EventSubscriptionsMessage'
        '480':
          description: SubscriptionNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SubscriptionNotFoundFault'
      parameters:
        - name: MaxRecords
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: Marker
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeEventSubscriptionsMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DescribeEvents':
    post:
      operationId: DescribeEvents
      description: 'Returns events related to clusters, security groups, snapshots, and parameter groups for the past 14 days. Events specific to a particular cluster, security group, snapshot or parameter group can be obtained by providing the name as a parameter. By default, the past hour of events are returned.'
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EventsMessage'
      parameters:
        - name: MaxRecords
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: Marker
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeEventsMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DescribeHsmClientCertificates':
    post:
      operationId: DescribeHsmClientCertificates
      description: '<p>Returns information about the specified HSM client certificate. If no certificate ID is specified, returns information about all the HSM certificates owned by your AWS customer account.</p> <p>If you specify both tag keys and tag values in the same request, Amazon Redshift returns all HSM client certificates that match any combination of the specified keys and values. For example, if you have <code>owner</code> and <code>environment</code> for tag keys, and <code>admin</code> and <code>test</code> for tag values, all HSM client certificates that have any combination of those values are returned.</p> <p>If both tag keys and values are omitted from the request, HSM client certificates are returned regardless of whether they have tag keys or values associated with them.</p>'
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/HsmClientCertificateMessage'
        '480':
          description: HsmClientCertificateNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/HsmClientCertificateNotFoundFault'
        '481':
          description: InvalidTagFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidTagFault'
      parameters:
        - name: MaxRecords
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: Marker
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeHsmClientCertificatesMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DescribeHsmConfigurations':
    post:
      operationId: DescribeHsmConfigurations
      description: '<p>Returns information about the specified Amazon Redshift HSM configuration. If no configuration ID is specified, returns information about all the HSM configurations owned by your AWS customer account.</p> <p>If you specify both tag keys and tag values in the same request, Amazon Redshift returns all HSM connections that match any combination of the specified keys and values. For example, if you have <code>owner</code> and <code>environment</code> for tag keys, and <code>admin</code> and <code>test</code> for tag values, all HSM connections that have any combination of those values are returned.</p> <p>If both tag keys and values are omitted from the request, HSM connections are returned regardless of whether they have tag keys or values associated with them.</p>'
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/HsmConfigurationMessage'
        '480':
          description: HsmConfigurationNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/HsmConfigurationNotFoundFault'
        '481':
          description: InvalidTagFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidTagFault'
      parameters:
        - name: MaxRecords
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: Marker
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeHsmConfigurationsMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DescribeLoggingStatus':
    post:
      operationId: DescribeLoggingStatus
      description: 'Describes whether information, such as queries and connection attempts, is being logged for the specified Amazon Redshift cluster.'
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/LoggingStatus'
        '480':
          description: ClusterNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ClusterNotFoundFault'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeLoggingStatusMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DescribeOrderableClusterOptions':
    post:
      operationId: DescribeOrderableClusterOptions
      description: 'Returns a list of orderable cluster options. Before you create a new cluster you can use this operation to find what options are available, such as the EC2 Availability Zones (AZ) in the specific AWS region that you can specify, and the node types you can request. The node types differ by available storage, memory, CPU and price. With the cost involved you might want to obtain a list of cluster options in the specific region and specify values when creating a cluster. For more information about managing clusters, go to <a href="http://docs.aws.amazon.com/redshift/latest/mgmt/working-with-clusters.html">Amazon Redshift Clusters</a> in the <i>Amazon Redshift Cluster Management Guide</i>.'
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OrderableClusterOptionsMessage'
      parameters:
        - name: MaxRecords
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: Marker
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeOrderableClusterOptionsMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DescribeReservedNodeOfferings':
    post:
      operationId: DescribeReservedNodeOfferings
      description: '<p>Returns a list of the available reserved node offerings by Amazon Redshift with their descriptions including the node type, the fixed and recurring costs of reserving the node and duration the node will be reserved for you. These descriptions help you determine which reserve node offering you want to purchase. You then use the unique offering ID in you call to <a>PurchaseReservedNodeOffering</a> to reserve one or more nodes for your Amazon Redshift cluster. </p> <p> For more information about reserved node offerings, go to <a href="http://docs.aws.amazon.com/redshift/latest/mgmt/purchase-reserved-node-instance.html">Purchasing Reserved Nodes</a> in the <i>Amazon Redshift Cluster Management Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ReservedNodeOfferingsMessage'
        '480':
          description: ReservedNodeOfferingNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ReservedNodeOfferingNotFoundFault'
        '481':
          description: UnsupportedOperationFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UnsupportedOperationFault'
        '482':
          description: DependentServiceUnavailableFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DependentServiceUnavailableFault'
      parameters:
        - name: MaxRecords
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: Marker
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeReservedNodeOfferingsMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DescribeReservedNodes':
    post:
      operationId: DescribeReservedNodes
      description: Returns the descriptions of the reserved nodes.
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ReservedNodesMessage'
        '480':
          description: ReservedNodeNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ReservedNodeNotFoundFault'
        '481':
          description: DependentServiceUnavailableFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DependentServiceUnavailableFault'
      parameters:
        - name: MaxRecords
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: Marker
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeReservedNodesMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DescribeResize':
    post:
      operationId: DescribeResize
      description: '<p>Returns information about the last resize operation for the specified cluster. If no resize operation has ever been initiated for the specified cluster, a <code>HTTP 404</code> error is returned. If a resize operation was initiated and completed, the status of the resize remains as <code>SUCCEEDED</code> until the next resize. </p> <p>A resize operation can be requested using <a>ModifyCluster</a> and specifying a different number or type of nodes for the cluster. </p>'
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResizeProgressMessage'
        '480':
          description: ClusterNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ClusterNotFoundFault'
        '481':
          description: ResizeNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResizeNotFoundFault'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeResizeMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DescribeSnapshotCopyGrants':
    post:
      operationId: DescribeSnapshotCopyGrants
      description: '<p>Returns a list of snapshot copy grants owned by the AWS account in the destination region.</p> <p> For more information about managing snapshot copy grants, go to <a href="http://docs.aws.amazon.com/redshift/latest/mgmt/working-with-db-encryption.html">Amazon Redshift Database Encryption</a> in the <i>Amazon Redshift Cluster Management Guide</i>. </p>'
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SnapshotCopyGrantMessage'
        '480':
          description: SnapshotCopyGrantNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SnapshotCopyGrantNotFoundFault'
        '481':
          description: InvalidTagFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidTagFault'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeSnapshotCopyGrantsMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DescribeTableRestoreStatus':
    post:
      operationId: DescribeTableRestoreStatus
      description: 'Lists the status of one or more table restore requests made using the <a>RestoreTableFromClusterSnapshot</a> API action. If you don''t specify a value for the <code>TableRestoreRequestId</code> parameter, then <code>DescribeTableRestoreStatus</code> returns the status of all table restore requests ordered by the date and time of the request in ascending order. Otherwise <code>DescribeTableRestoreStatus</code> returns the status of the table specified by <code>TableRestoreRequestId</code>.'
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TableRestoreStatusMessage'
        '480':
          description: TableRestoreNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TableRestoreNotFoundFault'
        '481':
          description: ClusterNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ClusterNotFoundFault'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeTableRestoreStatusMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DescribeTags':
    post:
      operationId: DescribeTags
      description: '<p>Returns a list of tags. You can return tags from a specific resource by specifying an ARN, or you can return all tags for a given type of resource, such as clusters, snapshots, and so on.</p> <p>The following are limitations for <code>DescribeTags</code>: </p> <ul> <li> <p>You cannot specify an ARN and a resource-type value together in the same request.</p> </li> <li> <p>You cannot use the <code>MaxRecords</code> and <code>Marker</code> parameters together with the ARN parameter.</p> </li> <li> <p>The <code>MaxRecords</code> parameter can be a range from 10 to 50 results to return in a request.</p> </li> </ul> <p>If you specify both tag keys and tag values in the same request, Amazon Redshift returns all resources that match any combination of the specified keys and values. For example, if you have <code>owner</code> and <code>environment</code> for tag keys, and <code>admin</code> and <code>test</code> for tag values, all resources that have any combination of those values are returned.</p> <p>If both tag keys and values are omitted from the request, resources are returned regardless of whether they have tag keys or values associated with them.</p>'
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TaggedResourceListMessage'
        '480':
          description: ResourceNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResourceNotFoundFault'
        '481':
          description: InvalidTagFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidTagFault'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeTagsMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DisableLogging':
    post:
      operationId: DisableLogging
      description: 'Stops logging information, such as queries and connection attempts, for the specified Amazon Redshift cluster.'
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/LoggingStatus'
        '480':
          description: ClusterNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ClusterNotFoundFault'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisableLoggingMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DisableSnapshotCopy':
    post:
      operationId: DisableSnapshotCopy
      description: '<p>Disables the automatic copying of snapshots from one region to another region for a specified cluster.</p> <p>If your cluster and its snapshots are encrypted using a customer master key (CMK) from AWS KMS, use <a>DeleteSnapshotCopyGrant</a> to delete the grant that grants Amazon Redshift permission to the CMK in the destination region. </p>'
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DisableSnapshotCopyResult'
        '480':
          description: ClusterNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ClusterNotFoundFault'
        '481':
          description: SnapshotCopyAlreadyDisabledFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SnapshotCopyAlreadyDisabledFault'
        '482':
          description: InvalidClusterStateFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidClusterStateFault'
        '483':
          description: UnauthorizedOperation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UnauthorizedOperation'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisableSnapshotCopyMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#EnableLogging':
    post:
      operationId: EnableLogging
      description: 'Starts logging information, such as queries and connection attempts, for the specified Amazon Redshift cluster.'
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/LoggingStatus'
        '480':
          description: ClusterNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ClusterNotFoundFault'
        '481':
          description: BucketNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BucketNotFoundFault'
        '482':
          description: InsufficientS3BucketPolicyFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InsufficientS3BucketPolicyFault'
        '483':
          description: InvalidS3KeyPrefixFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidS3KeyPrefixFault'
        '484':
          description: InvalidS3BucketNameFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidS3BucketNameFault'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnableLoggingMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#EnableSnapshotCopy':
    post:
      operationId: EnableSnapshotCopy
      description: Enables the automatic copy of snapshots from one region to another region for a specified cluster.
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EnableSnapshotCopyResult'
        '480':
          description: IncompatibleOrderableOptions
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/IncompatibleOrderableOptions'
        '481':
          description: InvalidClusterStateFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidClusterStateFault'
        '482':
          description: ClusterNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ClusterNotFoundFault'
        '483':
          description: CopyToRegionDisabledFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CopyToRegionDisabledFault'
        '484':
          description: SnapshotCopyAlreadyEnabledFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SnapshotCopyAlreadyEnabledFault'
        '485':
          description: UnknownSnapshotCopyRegionFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UnknownSnapshotCopyRegionFault'
        '486':
          description: UnauthorizedOperation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UnauthorizedOperation'
        '487':
          description: SnapshotCopyGrantNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SnapshotCopyGrantNotFoundFault'
        '488':
          description: LimitExceededFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/LimitExceededFault'
        '489':
          description: DependentServiceRequestThrottlingFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DependentServiceRequestThrottlingFault'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnableSnapshotCopyMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#GetClusterCredentials':
    post:
      operationId: GetClusterCredentials
      description: '<p>Returns a database user name and temporary password with temporary authorization to log in to an Amazon Redshift database. The action returns the database user name prefixed with <code>IAM:</code> if <code>AutoCreate</code> is <code>False</code> or <code>IAMA:</code> if <code>AutoCreate</code> is <code>True</code>. You can optionally specify one or more database user groups that the user will join at log in. By default, the temporary credentials expire in 900 seconds. You can optionally specify a duration between 900 seconds (15 minutes) and 3600 seconds (60 minutes). For more information, see Generating IAM Database User Credentials in the Amazon Redshift Cluster Management Guide.</p> <p>The IAM user or role that executes GetClusterCredentials must have an IAM policy attached that allows the <code>redshift:GetClusterCredentials</code> action with access to the <code>dbuser</code> resource on the cluster. The user name specified for <code>dbuser</code> in the IAM policy and the user name specified for the <code>DbUser</code> parameter must match.</p> <p>If the <code>DbGroups</code> parameter is specified, the IAM policy must allow the <code>redshift:JoinGroup</code> action with access to the listed <code>dbgroups</code>. </p> <p>In addition, if the <code>AutoCreate</code> parameter is set to <code>True</code>, then the policy must include the <code>redshift:CreateClusterUser</code> privilege.</p> <p>If the <code>DbName</code> parameter is specified, the IAM policy must allow access to the resource <code>dbname</code> for the specified database name. </p>'
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ClusterCredentials'
        '480':
          description: ClusterNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ClusterNotFoundFault'
        '481':
          description: UnsupportedOperationFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UnsupportedOperationFault'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetClusterCredentialsMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#ModifyCluster':
    post:
      operationId: ModifyCluster
      description: '<p>Modifies the settings for a cluster. For example, you can add another security or parameter group, update the preferred maintenance window, or change the master user password. Resetting a cluster password or modifying the security groups associated with a cluster do not need a reboot. However, modifying a parameter group requires a reboot for parameters to take effect. For more information about managing clusters, go to <a href="http://docs.aws.amazon.com/redshift/latest/mgmt/working-with-clusters.html">Amazon Redshift Clusters</a> in the <i>Amazon Redshift Cluster Management Guide</i>.</p> <p>You can also change node type and the number of nodes to scale up or down the cluster. When resizing a cluster, you must specify both the number of nodes and the node type even if one of the parameters does not change.</p>'
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ModifyClusterResult'
        '480':
          description: InvalidClusterStateFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidClusterStateFault'
        '481':
          description: InvalidClusterSecurityGroupStateFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidClusterSecurityGroupStateFault'
        '482':
          description: ClusterNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ClusterNotFoundFault'
        '483':
          description: NumberOfNodesQuotaExceededFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/NumberOfNodesQuotaExceededFault'
        '484':
          description: NumberOfNodesPerClusterLimitExceededFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/NumberOfNodesPerClusterLimitExceededFault'
        '485':
          description: ClusterSecurityGroupNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ClusterSecurityGroupNotFoundFault'
        '486':
          description: ClusterParameterGroupNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ClusterParameterGroupNotFoundFault'
        '487':
          description: InsufficientClusterCapacityFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InsufficientClusterCapacityFault'
        '488':
          description: UnsupportedOptionFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UnsupportedOptionFault'
        '489':
          description: UnauthorizedOperation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UnauthorizedOperation'
        '490':
          description: HsmClientCertificateNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/HsmClientCertificateNotFoundFault'
        '491':
          description: HsmConfigurationNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/HsmConfigurationNotFoundFault'
        '492':
          description: ClusterAlreadyExistsFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ClusterAlreadyExistsFault'
        '493':
          description: LimitExceededFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/LimitExceededFault'
        '494':
          description: DependentServiceRequestThrottlingFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DependentServiceRequestThrottlingFault'
        '495':
          description: InvalidElasticIpFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidElasticIpFault'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifyClusterMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#ModifyClusterIamRoles':
    post:
      operationId: ModifyClusterIamRoles
      description: <p>Modifies the list of AWS Identity and Access Management (IAM) roles that can be used by the cluster to access other AWS services.</p> <p>A cluster can have up to 10 IAM roles associated at any time.</p>
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ModifyClusterIamRolesResult'
        '480':
          description: InvalidClusterStateFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidClusterStateFault'
        '481':
          description: ClusterNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ClusterNotFoundFault'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifyClusterIamRolesMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#ModifyClusterParameterGroup':
    post:
      operationId: ModifyClusterParameterGroup
      description: '<p>Modifies the parameters of a parameter group.</p> <p> For more information about parameters and parameter groups, go to <a href="http://docs.aws.amazon.com/redshift/latest/mgmt/working-with-parameter-groups.html">Amazon Redshift Parameter Groups</a> in the <i>Amazon Redshift Cluster Management Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ClusterParameterGroupNameMessage'
        '480':
          description: ClusterParameterGroupNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ClusterParameterGroupNotFoundFault'
        '481':
          description: InvalidClusterParameterGroupStateFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidClusterParameterGroupStateFault'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifyClusterParameterGroupMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#ModifyClusterSubnetGroup':
    post:
      operationId: ModifyClusterSubnetGroup
      description: Modifies a cluster subnet group to include the specified list of VPC subnets. The operation replaces the existing list of subnets with the new list of subnets.
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ModifyClusterSubnetGroupResult'
        '480':
          description: ClusterSubnetGroupNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ClusterSubnetGroupNotFoundFault'
        '481':
          description: ClusterSubnetQuotaExceededFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ClusterSubnetQuotaExceededFault'
        '482':
          description: SubnetAlreadyInUse
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SubnetAlreadyInUse'
        '483':
          description: InvalidSubnet
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidSubnet'
        '484':
          description: UnauthorizedOperation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UnauthorizedOperation'
        '485':
          description: DependentServiceRequestThrottlingFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DependentServiceRequestThrottlingFault'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifyClusterSubnetGroupMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#ModifyEventSubscription':
    post:
      operationId: ModifyEventSubscription
      description: Modifies an existing Amazon Redshift event notification subscription.
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ModifyEventSubscriptionResult'
        '480':
          description: SubscriptionNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SubscriptionNotFoundFault'
        '481':
          description: SNSInvalidTopicFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SNSInvalidTopicFault'
        '482':
          description: SNSNoAuthorizationFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SNSNoAuthorizationFault'
        '483':
          description: SNSTopicArnNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SNSTopicArnNotFoundFault'
        '484':
          description: SubscriptionEventIdNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SubscriptionEventIdNotFoundFault'
        '485':
          description: SubscriptionCategoryNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SubscriptionCategoryNotFoundFault'
        '486':
          description: SubscriptionSeverityNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SubscriptionSeverityNotFoundFault'
        '487':
          description: SourceNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SourceNotFoundFault'
        '488':
          description: InvalidSubscriptionStateFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidSubscriptionStateFault'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifyEventSubscriptionMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#ModifySnapshotCopyRetentionPeriod':
    post:
      operationId: ModifySnapshotCopyRetentionPeriod
      description: Modifies the number of days to retain automated snapshots in the destination region after they are copied from the source region.
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ModifySnapshotCopyRetentionPeriodResult'
        '480':
          description: ClusterNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ClusterNotFoundFault'
        '481':
          description: SnapshotCopyDisabledFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SnapshotCopyDisabledFault'
        '482':
          description: UnauthorizedOperation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UnauthorizedOperation'
        '483':
          description: InvalidClusterStateFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidClusterStateFault'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifySnapshotCopyRetentionPeriodMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#PurchaseReservedNodeOffering':
    post:
      operationId: PurchaseReservedNodeOffering
      description: '<p>Allows you to purchase reserved nodes. Amazon Redshift offers a predefined set of reserved node offerings. You can purchase one or more of the offerings. You can call the <a>DescribeReservedNodeOfferings</a> API to obtain the available reserved node offerings. You can call this API by providing a specific reserved node offering and the number of nodes you want to reserve. </p> <p> For more information about reserved node offerings, go to <a href="http://docs.aws.amazon.com/redshift/latest/mgmt/purchase-reserved-node-instance.html">Purchasing Reserved Nodes</a> in the <i>Amazon Redshift Cluster Management Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PurchaseReservedNodeOfferingResult'
        '480':
          description: ReservedNodeOfferingNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ReservedNodeOfferingNotFoundFault'
        '481':
          description: ReservedNodeAlreadyExistsFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ReservedNodeAlreadyExistsFault'
        '482':
          description: ReservedNodeQuotaExceededFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ReservedNodeQuotaExceededFault'
        '483':
          description: UnsupportedOperationFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UnsupportedOperationFault'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurchaseReservedNodeOfferingMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#RebootCluster':
    post:
      operationId: RebootCluster
      description: 'Reboots a cluster. This action is taken as soon as possible. It results in a momentary outage to the cluster, during which the cluster status is set to <code>rebooting</code>. A cluster event is created when the reboot is completed. Any pending cluster modifications (see <a>ModifyCluster</a>) are applied at this reboot. For more information about managing clusters, go to <a href="http://docs.aws.amazon.com/redshift/latest/mgmt/working-with-clusters.html">Amazon Redshift Clusters</a> in the <i>Amazon Redshift Cluster Management Guide</i>. '
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RebootClusterResult'
        '480':
          description: InvalidClusterStateFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidClusterStateFault'
        '481':
          description: ClusterNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ClusterNotFoundFault'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RebootClusterMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#ResetClusterParameterGroup':
    post:
      operationId: ResetClusterParameterGroup
      description: 'Sets one or more parameters of the specified parameter group to their default values and sets the source values of the parameters to "engine-default". To reset the entire parameter group specify the <i>ResetAllParameters</i> parameter. For parameter changes to take effect you must reboot any associated clusters. '
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ClusterParameterGroupNameMessage'
        '480':
          description: InvalidClusterParameterGroupStateFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidClusterParameterGroupStateFault'
        '481':
          description: ClusterParameterGroupNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ClusterParameterGroupNotFoundFault'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetClusterParameterGroupMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#RestoreFromClusterSnapshot':
    post:
      operationId: RestoreFromClusterSnapshot
      description: '<p>Creates a new cluster from a snapshot. By default, Amazon Redshift creates the resulting cluster with the same configuration as the original cluster from which the snapshot was created, except that the new cluster is created with the default cluster security and parameter groups. After Amazon Redshift creates the cluster, you can use the <a>ModifyCluster</a> API to associate a different security group and different parameter group with the restored cluster. If you are using a DS node type, you can also choose to change to another DS node type of the same size during restore.</p> <p>If you restore a cluster into a VPC, you must provide a cluster subnet group where you want the cluster restored.</p> <p> For more information about working with snapshots, go to <a href="http://docs.aws.amazon.com/redshift/latest/mgmt/working-with-snapshots.html">Amazon Redshift Snapshots</a> in the <i>Amazon Redshift Cluster Management Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestoreFromClusterSnapshotResult'
        '480':
          description: AccessToSnapshotDeniedFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AccessToSnapshotDeniedFault'
        '481':
          description: ClusterAlreadyExistsFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ClusterAlreadyExistsFault'
        '482':
          description: ClusterSnapshotNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ClusterSnapshotNotFoundFault'
        '483':
          description: ClusterQuotaExceededFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ClusterQuotaExceededFault'
        '484':
          description: InsufficientClusterCapacityFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InsufficientClusterCapacityFault'
        '485':
          description: InvalidClusterSnapshotStateFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidClusterSnapshotStateFault'
        '486':
          description: InvalidRestoreFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidRestoreFault'
        '487':
          description: NumberOfNodesQuotaExceededFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/NumberOfNodesQuotaExceededFault'
        '488':
          description: NumberOfNodesPerClusterLimitExceededFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/NumberOfNodesPerClusterLimitExceededFault'
        '489':
          description: InvalidVPCNetworkStateFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidVPCNetworkStateFault'
        '490':
          description: InvalidClusterSubnetGroupStateFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidClusterSubnetGroupStateFault'
        '491':
          description: InvalidSubnet
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidSubnet'
        '492':
          description: ClusterSubnetGroupNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ClusterSubnetGroupNotFoundFault'
        '493':
          description: UnauthorizedOperation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UnauthorizedOperation'
        '494':
          description: HsmClientCertificateNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/HsmClientCertificateNotFoundFault'
        '495':
          description: HsmConfigurationNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/HsmConfigurationNotFoundFault'
        '496':
          description: InvalidElasticIpFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidElasticIpFault'
        '497':
          description: ClusterParameterGroupNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ClusterParameterGroupNotFoundFault'
        '498':
          description: ClusterSecurityGroupNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ClusterSecurityGroupNotFoundFault'
        '499':
          description: LimitExceededFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/LimitExceededFault'
        '500':
          description: DependentServiceRequestThrottlingFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DependentServiceRequestThrottlingFault'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestoreFromClusterSnapshotMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#RestoreTableFromClusterSnapshot':
    post:
      operationId: RestoreTableFromClusterSnapshot
      description: '<p>Creates a new table from a table in an Amazon Redshift cluster snapshot. You must create the new table within the Amazon Redshift cluster that the snapshot was taken from.</p> <p>You cannot use <code>RestoreTableFromClusterSnapshot</code> to restore a table with the same name as an existing table in an Amazon Redshift cluster. That is, you cannot overwrite an existing table in a cluster with a restored table. If you want to replace your original table with a new, restored table, then rename or drop your original table before you call <code>RestoreTableFromClusterSnapshot</code>. When you have renamed your original table, then you can pass the original name of the table as the <code>NewTableName</code> parameter value in the call to <code>RestoreTableFromClusterSnapshot</code>. This way, you can replace the original table with the table created from the snapshot.</p>'
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestoreTableFromClusterSnapshotResult'
        '480':
          description: ClusterSnapshotNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ClusterSnapshotNotFoundFault'
        '481':
          description: InProgressTableRestoreQuotaExceededFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InProgressTableRestoreQuotaExceededFault'
        '482':
          description: InvalidClusterSnapshotStateFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidClusterSnapshotStateFault'
        '483':
          description: InvalidTableRestoreArgumentFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidTableRestoreArgumentFault'
        '484':
          description: ClusterNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ClusterNotFoundFault'
        '485':
          description: InvalidClusterStateFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidClusterStateFault'
        '486':
          description: UnsupportedOperationFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UnsupportedOperationFault'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestoreTableFromClusterSnapshotMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#RevokeClusterSecurityGroupIngress':
    post:
      operationId: RevokeClusterSecurityGroupIngress
      description: 'Revokes an ingress rule in an Amazon Redshift security group for a previously authorized IP range or Amazon EC2 security group. To add an ingress rule, see <a>AuthorizeClusterSecurityGroupIngress</a>. For information about managing security groups, go to <a href="http://docs.aws.amazon.com/redshift/latest/mgmt/working-with-security-groups.html">Amazon Redshift Cluster Security Groups</a> in the <i>Amazon Redshift Cluster Management Guide</i>. '
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RevokeClusterSecurityGroupIngressResult'
        '480':
          description: ClusterSecurityGroupNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ClusterSecurityGroupNotFoundFault'
        '481':
          description: AuthorizationNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AuthorizationNotFoundFault'
        '482':
          description: InvalidClusterSecurityGroupStateFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidClusterSecurityGroupStateFault'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RevokeClusterSecurityGroupIngressMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#RevokeSnapshotAccess':
    post:
      operationId: RevokeSnapshotAccess
      description: '<p>Removes the ability of the specified AWS customer account to restore the specified snapshot. If the account is currently restoring the snapshot, the restore will run to completion.</p> <p> For more information about working with snapshots, go to <a href="http://docs.aws.amazon.com/redshift/latest/mgmt/working-with-snapshots.html">Amazon Redshift Snapshots</a> in the <i>Amazon Redshift Cluster Management Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RevokeSnapshotAccessResult'
        '480':
          description: AccessToSnapshotDeniedFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AccessToSnapshotDeniedFault'
        '481':
          description: AuthorizationNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AuthorizationNotFoundFault'
        '482':
          description: ClusterSnapshotNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ClusterSnapshotNotFoundFault'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RevokeSnapshotAccessMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#RotateEncryptionKey':
    post:
      operationId: RotateEncryptionKey
      description: Rotates the encryption keys for a cluster.
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RotateEncryptionKeyResult'
        '480':
          description: ClusterNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ClusterNotFoundFault'
        '481':
          description: InvalidClusterStateFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidClusterStateFault'
        '482':
          description: DependentServiceRequestThrottlingFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DependentServiceRequestThrottlingFault'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RotateEncryptionKeyMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
components:
  schemas:
    AccessToSnapshotDeniedFault:
      type: object
      properties: {}
      description: The owner of the specified snapshot has not authorized your account to access the snapshot.
    AccountWithRestoreAccess:
      type: object
      properties:
        AccountId:
          $ref: '#/components/schemas/String'
        AccountAlias:
          $ref: '#/components/schemas/String'
      description: Describes an AWS customer account authorized to restore a snapshot.
    AccountsWithRestoreAccessList:
      type: array
      items:
        $ref: '#/components/schemas/AccountWithRestoreAccess'
    AuthorizationAlreadyExistsFault:
      type: object
      properties: {}
      description: The specified CIDR block or EC2 security group is already authorized for the specified cluster security group.
    AuthorizationNotFoundFault:
      type: object
      properties: {}
      description: The specified CIDR IP range or EC2 security group is not authorized for the specified cluster security group.
    AuthorizationQuotaExceededFault:
      type: object
      properties: {}
      description: The authorization quota for the cluster security group has been reached.
    AuthorizeClusterSecurityGroupIngressMessage:
      type: object
      required:
        - ClusterSecurityGroupName
      properties:
        ClusterSecurityGroupName:
          $ref: '#/components/schemas/String'
        CIDRIP:
          $ref: '#/components/schemas/String'
        EC2SecurityGroupName:
          $ref: '#/components/schemas/String'
        EC2SecurityGroupOwnerId:
          $ref: '#/components/schemas/String'
      description: <p/>
    AuthorizeClusterSecurityGroupIngressResult:
      type: object
      properties:
        ClusterSecurityGroup:
          $ref: '#/components/schemas/ClusterSecurityGroup'
    AuthorizeSnapshotAccessMessage:
      type: object
      required:
        - SnapshotIdentifier
        - AccountWithRestoreAccess
      properties:
        SnapshotIdentifier:
          $ref: '#/components/schemas/String'
        SnapshotClusterIdentifier:
          $ref: '#/components/schemas/String'
        AccountWithRestoreAccess:
          $ref: '#/components/schemas/String'
      description: <p/>
    AuthorizeSnapshotAccessResult:
      type: object
      properties:
        Snapshot:
          $ref: '#/components/schemas/Snapshot'
    AvailabilityZone:
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/String'
      description: Describes an availability zone.
    AvailabilityZoneList:
      type: array
      items:
        $ref: '#/components/schemas/AvailabilityZone'
    Boolean:
      type: boolean
    BooleanOptional:
      type: boolean
    BucketNotFoundFault:
      type: object
      properties: {}
      description: Could not find the specified S3 bucket.
    Cluster:
      type: object
      properties:
        ClusterIdentifier:
          $ref: '#/components/schemas/String'
        NodeType:
          $ref: '#/components/schemas/String'
        ClusterStatus:
          $ref: '#/components/schemas/String'
        ModifyStatus:
          $ref: '#/components/schemas/String'
        MasterUsername:
          $ref: '#/components/schemas/String'
        DBName:
          $ref: '#/components/schemas/String'
        Endpoint:
          $ref: '#/components/schemas/Endpoint'
        ClusterCreateTime:
          $ref: '#/components/schemas/TStamp'
        AutomatedSnapshotRetentionPeriod:
          $ref: '#/components/schemas/Integer'
        ClusterSecurityGroups:
          $ref: '#/components/schemas/ClusterSecurityGroupMembershipList'
        VpcSecurityGroups:
          $ref: '#/components/schemas/VpcSecurityGroupMembershipList'
        ClusterParameterGroups:
          $ref: '#/components/schemas/ClusterParameterGroupStatusList'
        ClusterSubnetGroupName:
          $ref: '#/components/schemas/String'
        VpcId:
          $ref: '#/components/schemas/String'
        AvailabilityZone:
          $ref: '#/components/schemas/String'
        PreferredMaintenanceWindow:
          $ref: '#/components/schemas/String'
        PendingModifiedValues:
          $ref: '#/components/schemas/PendingModifiedValues'
        ClusterVersion:
          $ref: '#/components/schemas/String'
        AllowVersionUpgrade:
          $ref: '#/components/schemas/Boolean'
        NumberOfNodes:
          $ref: '#/components/schemas/Integer'
        PubliclyAccessible:
          $ref: '#/components/schemas/Boolean'
        Encrypted:
          $ref: '#/components/schemas/Boolean'
        RestoreStatus:
          $ref: '#/components/schemas/RestoreStatus'
        HsmStatus:
          $ref: '#/components/schemas/HsmStatus'
        ClusterSnapshotCopyStatus:
          $ref: '#/components/schemas/ClusterSnapshotCopyStatus'
        ClusterPublicKey:
          $ref: '#/components/schemas/String'
        ClusterNodes:
          $ref: '#/components/schemas/ClusterNodesList'
        ElasticIpStatus:
          $ref: '#/components/schemas/ElasticIpStatus'
        ClusterRevisionNumber:
          $ref: '#/components/schemas/String'
        Tags:
          $ref: '#/components/schemas/TagList'
        KmsKeyId:
          $ref: '#/components/schemas/String'
        EnhancedVpcRouting:
          $ref: '#/components/schemas/Boolean'
        IamRoles:
          $ref: '#/components/schemas/ClusterIamRoleList'
      description: Describes a cluster.
    ClusterAlreadyExistsFault:
      type: object
      properties: {}
      description: The account already has a cluster with the given identifier.
    ClusterCredentials:
      type: object
      properties:
        DbUser:
          $ref: '#/components/schemas/String'
        DbPassword:
          $ref: '#/components/schemas/SensitiveString'
        Expiration:
          $ref: '#/components/schemas/TStamp'
      description: 'Temporary credentials with authorization to log in to an Amazon Redshift database. '
    ClusterIamRole:
      type: object
      properties:
        IamRoleArn:
          $ref: '#/components/schemas/String'
        ApplyStatus:
          $ref: '#/components/schemas/String'
      description: An AWS Identity and Access Management (IAM) role that can be used by the associated Amazon Redshift cluster to access other AWS services.
    ClusterIamRoleList:
      type: array
      items:
        $ref: '#/components/schemas/ClusterIamRole'
    ClusterList:
      type: array
      items:
        $ref: '#/components/schemas/Cluster'
    ClusterNode:
      type: object
      properties:
        NodeRole:
          $ref: '#/components/schemas/String'
        PrivateIPAddress:
          $ref: '#/components/schemas/String'
        PublicIPAddress:
          $ref: '#/components/schemas/String'
      description: The identifier of a node in a cluster.
    ClusterNodesList:
      type: array
      items:
        $ref: '#/components/schemas/ClusterNode'
    ClusterNotFoundFault:
      type: object
      properties: {}
      description: 'The <code>ClusterIdentifier</code> parameter does not refer to an existing cluster. '
    ClusterParameterGroup:
      type: object
      properties:
        ParameterGroupName:
          $ref: '#/components/schemas/String'
        ParameterGroupFamily:
          $ref: '#/components/schemas/String'
        Description:
          $ref: '#/components/schemas/String'
        Tags:
          $ref: '#/components/schemas/TagList'
      description: Describes a parameter group.
    ClusterParameterGroupAlreadyExistsFault:
      type: object
      properties: {}
      description: A cluster parameter group with the same name already exists.
    ClusterParameterGroupDetails:
      type: object
      properties:
        Parameters:
          $ref: '#/components/schemas/ParametersList'
        Marker:
          $ref: '#/components/schemas/String'
      description: 'Contains the output from the <a>DescribeClusterParameters</a> action. '
    ClusterParameterGroupNameMessage:
      type: object
      properties:
        ParameterGroupName:
          $ref: '#/components/schemas/String'
        ParameterGroupStatus:
          $ref: '#/components/schemas/String'
      description: <p/>
    ClusterParameterGroupNotFoundFault:
      type: object
      properties: {}
      description: The parameter group name does not refer to an existing parameter group.
    ClusterParameterGroupQuotaExceededFault:
      type: object
      properties: {}
      description: 'The request would result in the user exceeding the allowed number of cluster parameter groups. For information about increasing your quota, go to <a href="http://docs.aws.amazon.com/redshift/latest/mgmt/amazon-redshift-limits.html">Limits in Amazon Redshift</a> in the <i>Amazon Redshift Cluster Management Guide</i>. '
    ClusterParameterGroupStatus:
      type: object
      properties:
        ParameterGroupName:
          $ref: '#/components/schemas/String'
        ParameterApplyStatus:
          $ref: '#/components/schemas/String'
        ClusterParameterStatusList:
          $ref: '#/components/schemas/ClusterParameterStatusList'
      description: Describes the status of a parameter group.
    ClusterParameterGroupStatusList:
      type: array
      items:
        $ref: '#/components/schemas/ClusterParameterGroupStatus'
    ClusterParameterGroupsMessage:
      type: object
      properties:
        Marker:
          $ref: '#/components/schemas/String'
        ParameterGroups:
          $ref: '#/components/schemas/ParameterGroupList'
      description: 'Contains the output from the <a>DescribeClusterParameterGroups</a> action. '
    ClusterParameterStatus:
      type: object
      properties:
        ParameterName:
          $ref: '#/components/schemas/String'
        ParameterApplyStatus:
          $ref: '#/components/schemas/String'
        ParameterApplyErrorDescription:
          $ref: '#/components/schemas/String'
      description: Describes the status of a parameter group.
    ClusterParameterStatusList:
      type: array
      items:
        $ref: '#/components/schemas/ClusterParameterStatus'
    ClusterQuotaExceededFault:
      type: object
      properties: {}
      description: 'The request would exceed the allowed number of cluster instances for this account. For information about increasing your quota, go to <a href="http://docs.aws.amazon.com/redshift/latest/mgmt/amazon-redshift-limits.html">Limits in Amazon Redshift</a> in the <i>Amazon Redshift Cluster Management Guide</i>. '
    ClusterSecurityGroup:
      type: object
      properties:
        ClusterSecurityGroupName:
          $ref: '#/components/schemas/String'
        Description:
          $ref: '#/components/schemas/String'
        EC2SecurityGroups:
          $ref: '#/components/schemas/EC2SecurityGroupList'
        IPRanges:
          $ref: '#/components/schemas/IPRangeList'
        Tags:
          $ref: '#/components/schemas/TagList'
      description: Describes a security group.
    ClusterSecurityGroupAlreadyExistsFault:
      type: object
      properties: {}
      description: A cluster security group with the same name already exists.
    ClusterSecurityGroupMembership:
      type: object
      properties:
        ClusterSecurityGroupName:
          $ref: '#/components/schemas/String'
        Status:
          $ref: '#/components/schemas/String'
      description: Describes a cluster security group.
    ClusterSecurityGroupMembershipList:
      type: array
      items:
        $ref: '#/components/schemas/ClusterSecurityGroupMembership'
    ClusterSecurityGroupMessage:
      type: object
      properties:
        Marker:
          $ref: '#/components/schemas/String'
        ClusterSecurityGroups:
          $ref: '#/components/schemas/ClusterSecurityGroups'
      description: <p/>
    ClusterSecurityGroupNameList:
      type: array
      items:
        $ref: '#/components/schemas/String'
    ClusterSecurityGroupNotFoundFault:
      type: object
      properties: {}
      description: The cluster security group name does not refer to an existing cluster security group.
    ClusterSecurityGroupQuotaExceededFault:
      type: object
      properties: {}
      description: 'The request would result in the user exceeding the allowed number of cluster security groups. For information about increasing your quota, go to <a href="http://docs.aws.amazon.com/redshift/latest/mgmt/amazon-redshift-limits.html">Limits in Amazon Redshift</a> in the <i>Amazon Redshift Cluster Management Guide</i>. '
    ClusterSecurityGroups:
      type: array
      items:
        $ref: '#/components/schemas/ClusterSecurityGroup'
    ClusterSnapshotAlreadyExistsFault:
      type: object
      properties: {}
      description: The value specified as a snapshot identifier is already used by an existing snapshot.
    ClusterSnapshotCopyStatus:
      type: object
      properties:
        DestinationRegion:
          $ref: '#/components/schemas/String'
        RetentionPeriod:
          $ref: '#/components/schemas/Long'
        SnapshotCopyGrantName:
          $ref: '#/components/schemas/String'
      description: Returns the destination region and retention period that are configured for cross-region snapshot copy.
    ClusterSnapshotNotFoundFault:
      type: object
      properties: {}
      description: The snapshot identifier does not refer to an existing cluster snapshot.
    ClusterSnapshotQuotaExceededFault:
      type: object
      properties: {}
      description: The request would result in the user exceeding the allowed number of cluster snapshots.
    ClusterSubnetGroup:
      type: object
      properties:
        ClusterSubnetGroupName:
          $ref: '#/components/schemas/String'
        Description:
          $ref: '#/components/schemas/String'
        VpcId:
          $ref: '#/components/schemas/String'
        SubnetGroupStatus:
          $ref: '#/components/schemas/String'
        Subnets:
          $ref: '#/components/schemas/SubnetList'
        Tags:
          $ref: '#/components/schemas/TagList'
      description: Describes a subnet group.
    ClusterSubnetGroupAlreadyExistsFault:
      type: object
      properties: {}
      description: 'A <i>ClusterSubnetGroupName</i> is already used by an existing cluster subnet group. '
    ClusterSubnetGroupMessage:
      type: object
      properties:
        Marker:
          $ref: '#/components/schemas/String'
        ClusterSubnetGroups:
          $ref: '#/components/schemas/ClusterSubnetGroups'
      description: 'Contains the output from the <a>DescribeClusterSubnetGroups</a> action. '
    ClusterSubnetGroupNotFoundFault:
      type: object
      properties: {}
      description: The cluster subnet group name does not refer to an existing cluster subnet group.
    ClusterSubnetGroupQuotaExceededFault:
      type: object
      properties: {}
      description: 'The request would result in user exceeding the allowed number of cluster subnet groups. For information about increasing your quota, go to <a href="http://docs.aws.amazon.com/redshift/latest/mgmt/amazon-redshift-limits.html">Limits in Amazon Redshift</a> in the <i>Amazon Redshift Cluster Management Guide</i>. '
    ClusterSubnetGroups:
      type: array
      items:
        $ref: '#/components/schemas/ClusterSubnetGroup'
    ClusterSubnetQuotaExceededFault:
      type: object
      properties: {}
      description: 'The request would result in user exceeding the allowed number of subnets in a cluster subnet groups. For information about increasing your quota, go to <a href="http://docs.aws.amazon.com/redshift/latest/mgmt/amazon-redshift-limits.html">Limits in Amazon Redshift</a> in the <i>Amazon Redshift Cluster Management Guide</i>. '
    ClusterVersion:
      type: object
      properties:
        ClusterVersion:
          $ref: '#/components/schemas/String'
        ClusterParameterGroupFamily:
          $ref: '#/components/schemas/String'
        Description:
          $ref: '#/components/schemas/String'
      description: 'Describes a cluster version, including the parameter group family and description of the version.'
    ClusterVersionList:
      type: array
      items:
        $ref: '#/components/schemas/ClusterVersion'
    ClusterVersionsMessage:
      type: object
      properties:
        Marker:
          $ref: '#/components/schemas/String'
        ClusterVersions:
          $ref: '#/components/schemas/ClusterVersionList'
      description: 'Contains the output from the <a>DescribeClusterVersions</a> action. '
    ClustersMessage:
      type: object
      properties:
        Marker:
          $ref: '#/components/schemas/String'
        Clusters:
          $ref: '#/components/schemas/ClusterList'
      description: 'Contains the output from the <a>DescribeClusters</a> action. '
    CopyClusterSnapshotMessage:
      type: object
      required:
        - SourceSnapshotIdentifier
        - TargetSnapshotIdentifier
      properties:
        SourceSnapshotIdentifier:
          $ref: '#/components/schemas/String'
        SourceSnapshotClusterIdentifier:
          $ref: '#/components/schemas/String'
        TargetSnapshotIdentifier:
          $ref: '#/components/schemas/String'
      description: <p/>
    CopyClusterSnapshotResult:
      type: object
      properties:
        Snapshot:
          $ref: '#/components/schemas/Snapshot'
    CopyToRegionDisabledFault:
      type: object
      properties: {}
      description: Cross-region snapshot copy was temporarily disabled. Try your request again.
    CreateClusterMessage:
      type: object
      required:
        - ClusterIdentifier
        - NodeType
        - MasterUsername
        - MasterUserPassword
      properties:
        DBName:
          $ref: '#/components/schemas/String'
        ClusterIdentifier:
          $ref: '#/components/schemas/String'
        ClusterType:
          $ref: '#/components/schemas/String'
        NodeType:
          $ref: '#/components/schemas/String'
        MasterUsername:
          $ref: '#/components/schemas/String'
        MasterUserPassword:
          $ref: '#/components/schemas/String'
        ClusterSecurityGroups:
          $ref: '#/components/schemas/ClusterSecurityGroupNameList'
        VpcSecurityGroupIds:
          $ref: '#/components/schemas/VpcSecurityGroupIdList'
        ClusterSubnetGroupName:
          $ref: '#/components/schemas/String'
        AvailabilityZone:
          $ref: '#/components/schemas/String'
        PreferredMaintenanceWindow:
          $ref: '#/components/schemas/String'
        ClusterParameterGroupName:
          $ref: '#/components/schemas/String'
        AutomatedSnapshotRetentionPeriod:
          $ref: '#/components/schemas/IntegerOptional'
        Port:
          $ref: '#/components/schemas/IntegerOptional'
        ClusterVersion:
          $ref: '#/components/schemas/String'
        AllowVersionUpgrade:
          $ref: '#/components/schemas/BooleanOptional'
        NumberOfNodes:
          $ref: '#/components/schemas/IntegerOptional'
        PubliclyAccessible:
          $ref: '#/components/schemas/BooleanOptional'
        Encrypted:
          $ref: '#/components/schemas/BooleanOptional'
        HsmClientCertificateIdentifier:
          $ref: '#/components/schemas/String'
        HsmConfigurationIdentifier:
          $ref: '#/components/schemas/String'
        ElasticIp:
          $ref: '#/components/schemas/String'
        Tags:
          $ref: '#/components/schemas/TagList'
        KmsKeyId:
          $ref: '#/components/schemas/String'
        EnhancedVpcRouting:
          $ref: '#/components/schemas/BooleanOptional'
        AdditionalInfo:
          $ref: '#/components/schemas/String'
        IamRoles:
          $ref: '#/components/schemas/IamRoleArnList'
      description: <p/>
    CreateClusterParameterGroupMessage:
      type: object
      required:
        - ParameterGroupName
        - ParameterGroupFamily
        - Description
      properties:
        ParameterGroupName:
          $ref: '#/components/schemas/String'
        ParameterGroupFamily:
          $ref: '#/components/schemas/String'
        Description:
          $ref: '#/components/schemas/String'
        Tags:
          $ref: '#/components/schemas/TagList'
      description: <p/>
    CreateClusterParameterGroupResult:
      type: object
      properties:
        ClusterParameterGroup:
          $ref: '#/components/schemas/ClusterParameterGroup'
    CreateClusterResult:
      type: object
      properties:
        Cluster:
          $ref: '#/components/schemas/Cluster'
    CreateClusterSecurityGroupMessage:
      type: object
      required:
        - ClusterSecurityGroupName
        - Description
      properties:
        ClusterSecurityGroupName:
          $ref: '#/components/schemas/String'
        Description:
          $ref: '#/components/schemas/String'
        Tags:
          $ref: '#/components/schemas/TagList'
      description: <p/>
    CreateClusterSecurityGroupResult:
      type: object
      properties:
        ClusterSecurityGroup:
          $ref: '#/components/schemas/ClusterSecurityGroup'
    CreateClusterSnapshotMessage:
      type: object
      required:
        - SnapshotIdentifier
        - ClusterIdentifier
      properties:
        SnapshotIdentifier:
          $ref: '#/components/schemas/String'
        ClusterIdentifier:
          $ref: '#/components/schemas/String'
        Tags:
          $ref: '#/components/schemas/TagList'
      description: <p/>
    CreateClusterSnapshotResult:
      type: object
      properties:
        Snapshot:
          $ref: '#/components/schemas/Snapshot'
    CreateClusterSubnetGroupMessage:
      type: object
      required:
        - ClusterSubnetGroupName
        - Description
        - SubnetIds
      properties:
        ClusterSubnetGroupName:
          $ref: '#/components/schemas/String'
        Description:
          $ref: '#/components/schemas/String'
        SubnetIds:
          $ref: '#/components/schemas/SubnetIdentifierList'
        Tags:
          $ref: '#/components/schemas/TagList'
      description: <p/>
    CreateClusterSubnetGroupResult:
      type: object
      properties:
        ClusterSubnetGroup:
          $ref: '#/components/schemas/ClusterSubnetGroup'
    CreateEventSubscriptionMessage:
      type: object
      required:
        - SubscriptionName
        - SnsTopicArn
      properties:
        SubscriptionName:
          $ref: '#/components/schemas/String'
        SnsTopicArn:
          $ref: '#/components/schemas/String'
        SourceType:
          $ref: '#/components/schemas/String'
        SourceIds:
          $ref: '#/components/schemas/SourceIdsList'
        EventCategories:
          $ref: '#/components/schemas/EventCategoriesList'
        Severity:
          $ref: '#/components/schemas/String'
        Enabled:
          $ref: '#/components/schemas/BooleanOptional'
        Tags:
          $ref: '#/components/schemas/TagList'
      description: <p/>
    CreateEventSubscriptionResult:
      type: object
      properties:
        EventSubscription:
          $ref: '#/components/schemas/EventSubscription'
    CreateHsmClientCertificateMessage:
      type: object
      required:
        - HsmClientCertificateIdentifier
      properties:
        HsmClientCertificateIdentifier:
          $ref: '#/components/schemas/String'
        Tags:
          $ref: '#/components/schemas/TagList'
      description: <p/>
    CreateHsmClientCertificateResult:
      type: object
      properties:
        HsmClientCertificate:
          $ref: '#/components/schemas/HsmClientCertificate'
    CreateHsmConfigurationMessage:
      type: object
      required:
        - HsmConfigurationIdentifier
        - Description
        - HsmIpAddress
        - HsmPartitionName
        - HsmPartitionPassword
        - HsmServerPublicCertificate
      properties:
        HsmConfigurationIdentifier:
          $ref: '#/components/schemas/String'
        Description:
          $ref: '#/components/schemas/String'
        HsmIpAddress:
          $ref: '#/components/schemas/String'
        HsmPartitionName:
          $ref: '#/components/schemas/String'
        HsmPartitionPassword:
          $ref: '#/components/schemas/String'
        HsmServerPublicCertificate:
          $ref: '#/components/schemas/String'
        Tags:
          $ref: '#/components/schemas/TagList'
      description: <p/>
    CreateHsmConfigurationResult:
      type: object
      properties:
        HsmConfiguration:
          $ref: '#/components/schemas/HsmConfiguration'
    CreateSnapshotCopyGrantMessage:
      type: object
      required:
        - SnapshotCopyGrantName
      properties:
        SnapshotCopyGrantName:
          $ref: '#/components/schemas/String'
        KmsKeyId:
          $ref: '#/components/schemas/String'
        Tags:
          $ref: '#/components/schemas/TagList'
      description: The result of the <code>CreateSnapshotCopyGrant</code> action.
    CreateSnapshotCopyGrantResult:
      type: object
      properties:
        SnapshotCopyGrant:
          $ref: '#/components/schemas/SnapshotCopyGrant'
    CreateTagsMessage:
      type: object
      required:
        - ResourceName
        - Tags
      properties:
        ResourceName:
          $ref: '#/components/schemas/String'
        Tags:
          $ref: '#/components/schemas/TagList'
      description: 'Contains the output from the <code>CreateTags</code> action. '
    DbGroupList:
      type: array
      items:
        $ref: '#/components/schemas/String'
    DefaultClusterParameters:
      type: object
      properties:
        ParameterGroupFamily:
          $ref: '#/components/schemas/String'
        Marker:
          $ref: '#/components/schemas/String'
        Parameters:
          $ref: '#/components/schemas/ParametersList'
      description: Describes the default cluster parameters for a parameter group family.
    DeleteClusterMessage:
      type: object
      required:
        - ClusterIdentifier
      properties:
        ClusterIdentifier:
          $ref: '#/components/schemas/String'
        SkipFinalClusterSnapshot:
          $ref: '#/components/schemas/Boolean'
        FinalClusterSnapshotIdentifier:
          $ref: '#/components/schemas/String'
      description: <p/>
    DeleteClusterParameterGroupMessage:
      type: object
      required:
        - ParameterGroupName
      properties:
        ParameterGroupName:
          $ref: '#/components/schemas/String'
      description: <p/>
    DeleteClusterResult:
      type: object
      properties:
        Cluster:
          $ref: '#/components/schemas/Cluster'
    DeleteClusterSecurityGroupMessage:
      type: object
      required:
        - ClusterSecurityGroupName
      properties:
        ClusterSecurityGroupName:
          $ref: '#/components/schemas/String'
      description: <p/>
    DeleteClusterSnapshotMessage:
      type: object
      required:
        - SnapshotIdentifier
      properties:
        SnapshotIdentifier:
          $ref: '#/components/schemas/String'
        SnapshotClusterIdentifier:
          $ref: '#/components/schemas/String'
      description: <p/>
    DeleteClusterSnapshotResult:
      type: object
      properties:
        Snapshot:
          $ref: '#/components/schemas/Snapshot'
    DeleteClusterSubnetGroupMessage:
      type: object
      required:
        - ClusterSubnetGroupName
      properties:
        ClusterSubnetGroupName:
          $ref: '#/components/schemas/String'
      description: <p/>
    DeleteEventSubscriptionMessage:
      type: object
      required:
        - SubscriptionName
      properties:
        SubscriptionName:
          $ref: '#/components/schemas/String'
      description: <p/>
    DeleteHsmClientCertificateMessage:
      type: object
      required:
        - HsmClientCertificateIdentifier
      properties:
        HsmClientCertificateIdentifier:
          $ref: '#/components/schemas/String'
      description: <p/>
    DeleteHsmConfigurationMessage:
      type: object
      required:
        - HsmConfigurationIdentifier
      properties:
        HsmConfigurationIdentifier:
          $ref: '#/components/schemas/String'
      description: <p/>
    DeleteSnapshotCopyGrantMessage:
      type: object
      required:
        - SnapshotCopyGrantName
      properties:
        SnapshotCopyGrantName:
          $ref: '#/components/schemas/String'
      description: The result of the <code>DeleteSnapshotCopyGrant</code> action.
    DeleteTagsMessage:
      type: object
      required:
        - ResourceName
        - TagKeys
      properties:
        ResourceName:
          $ref: '#/components/schemas/String'
        TagKeys:
          $ref: '#/components/schemas/TagKeyList'
      description: 'Contains the output from the <code>DeleteTags</code> action. '
    DependentServiceRequestThrottlingFault:
      type: object
      properties: {}
      description: The request cannot be completed because a dependent service is throttling requests made by Amazon Redshift on your behalf. Wait and retry the request.
    DependentServiceUnavailableFault:
      type: object
      properties: {}
      description: Your request cannot be completed because a dependent internal service is temporarily unavailable. Wait 30 to 60 seconds and try again.
    DescribeClusterParameterGroupsMessage:
      type: object
      properties:
        ParameterGroupName:
          $ref: '#/components/schemas/String'
        MaxRecords:
          $ref: '#/components/schemas/IntegerOptional'
        Marker:
          $ref: '#/components/schemas/String'
        TagKeys:
          $ref: '#/components/schemas/TagKeyList'
        TagValues:
          $ref: '#/components/schemas/TagValueList'
      description: <p/>
    DescribeClusterParametersMessage:
      type: object
      required:
        - ParameterGroupName
      properties:
        ParameterGroupName:
          $ref: '#/components/schemas/String'
        Source:
          $ref: '#/components/schemas/String'
        MaxRecords:
          $ref: '#/components/schemas/IntegerOptional'
        Marker:
          $ref: '#/components/schemas/String'
      description: <p/>
    DescribeClusterSecurityGroupsMessage:
      type: object
      properties:
        ClusterSecurityGroupName:
          $ref: '#/components/schemas/String'
        MaxRecords:
          $ref: '#/components/schemas/IntegerOptional'
        Marker:
          $ref: '#/components/schemas/String'
        TagKeys:
          $ref: '#/components/schemas/TagKeyList'
        TagValues:
          $ref: '#/components/schemas/TagValueList'
      description: <p/>
    DescribeClusterSnapshotsMessage:
      type: object
      properties:
        ClusterIdentifier:
          $ref: '#/components/schemas/String'
        SnapshotIdentifier:
          $ref: '#/components/schemas/String'
        SnapshotType:
          $ref: '#/components/schemas/String'
        StartTime:
          $ref: '#/components/schemas/TStamp'
        EndTime:
          $ref: '#/components/schemas/TStamp'
        MaxRecords:
          $ref: '#/components/schemas/IntegerOptional'
        Marker:
          $ref: '#/components/schemas/String'
        OwnerAccount:
          $ref: '#/components/schemas/String'
        TagKeys:
          $ref: '#/components/schemas/TagKeyList'
        TagValues:
          $ref: '#/components/schemas/TagValueList'
      description: <p/>
    DescribeClusterSubnetGroupsMessage:
      type: object
      properties:
        ClusterSubnetGroupName:
          $ref: '#/components/schemas/String'
        MaxRecords:
          $ref: '#/components/schemas/IntegerOptional'
        Marker:
          $ref: '#/components/schemas/String'
        TagKeys:
          $ref: '#/components/schemas/TagKeyList'
        TagValues:
          $ref: '#/components/schemas/TagValueList'
      description: <p/>
    DescribeClusterVersionsMessage:
      type: object
      properties:
        ClusterVersion:
          $ref: '#/components/schemas/String'
        ClusterParameterGroupFamily:
          $ref: '#/components/schemas/String'
        MaxRecords:
          $ref: '#/components/schemas/IntegerOptional'
        Marker:
          $ref: '#/components/schemas/String'
      description: <p/>
    DescribeClustersMessage:
      type: object
      properties:
        ClusterIdentifier:
          $ref: '#/components/schemas/String'
        MaxRecords:
          $ref: '#/components/schemas/IntegerOptional'
        Marker:
          $ref: '#/components/schemas/String'
        TagKeys:
          $ref: '#/components/schemas/TagKeyList'
        TagValues:
          $ref: '#/components/schemas/TagValueList'
      description: <p/>
    DescribeDefaultClusterParametersMessage:
      type: object
      required:
        - ParameterGroupFamily
      properties:
        ParameterGroupFamily:
          $ref: '#/components/schemas/String'
        MaxRecords:
          $ref: '#/components/schemas/IntegerOptional'
        Marker:
          $ref: '#/components/schemas/String'
      description: <p/>
    DescribeDefaultClusterParametersResult:
      type: object
      properties:
        DefaultClusterParameters:
          $ref: '#/components/schemas/DefaultClusterParameters'
    DescribeEventCategoriesMessage:
      type: object
      properties:
        SourceType:
          $ref: '#/components/schemas/String'
      description: <p/>
    DescribeEventSubscriptionsMessage:
      type: object
      properties:
        SubscriptionName:
          $ref: '#/components/schemas/String'
        MaxRecords:
          $ref: '#/components/schemas/IntegerOptional'
        Marker:
          $ref: '#/components/schemas/String'
      description: <p/>
    DescribeEventsMessage:
      type: object
      properties:
        SourceIdentifier:
          $ref: '#/components/schemas/String'
        SourceType:
          $ref: '#/components/schemas/SourceType'
        StartTime:
          $ref: '#/components/schemas/TStamp'
        EndTime:
          $ref: '#/components/schemas/TStamp'
        Duration:
          $ref: '#/components/schemas/IntegerOptional'
        MaxRecords:
          $ref: '#/components/schemas/IntegerOptional'
        Marker:
          $ref: '#/components/schemas/String'
      description: <p/>
    DescribeHsmClientCertificatesMessage:
      type: object
      properties:
        HsmClientCertificateIdentifier:
          $ref: '#/components/schemas/String'
        MaxRecords:
          $ref: '#/components/schemas/IntegerOptional'
        Marker:
          $ref: '#/components/schemas/String'
        TagKeys:
          $ref: '#/components/schemas/TagKeyList'
        TagValues:
          $ref: '#/components/schemas/TagValueList'
      description: <p/>
    DescribeHsmConfigurationsMessage:
      type: object
      properties:
        HsmConfigurationIdentifier:
          $ref: '#/components/schemas/String'
        MaxRecords:
          $ref: '#/components/schemas/IntegerOptional'
        Marker:
          $ref: '#/components/schemas/String'
        TagKeys:
          $ref: '#/components/schemas/TagKeyList'
        TagValues:
          $ref: '#/components/schemas/TagValueList'
      description: <p/>
    DescribeLoggingStatusMessage:
      type: object
      required:
        - ClusterIdentifier
      properties:
        ClusterIdentifier:
          $ref: '#/components/schemas/String'
      description: <p/>
    DescribeOrderableClusterOptionsMessage:
      type: object
      properties:
        ClusterVersion:
          $ref: '#/components/schemas/String'
        NodeType:
          $ref: '#/components/schemas/String'
        MaxRecords:
          $ref: '#/components/schemas/IntegerOptional'
        Marker:
          $ref: '#/components/schemas/String'
      description: <p/>
    DescribeReservedNodeOfferingsMessage:
      type: object
      properties:
        ReservedNodeOfferingId:
          $ref: '#/components/schemas/String'
        MaxRecords:
          $ref: '#/components/schemas/IntegerOptional'
        Marker:
          $ref: '#/components/schemas/String'
      description: <p/>
    DescribeReservedNodesMessage:
      type: object
      properties:
        ReservedNodeId:
          $ref: '#/components/schemas/String'
        MaxRecords:
          $ref: '#/components/schemas/IntegerOptional'
        Marker:
          $ref: '#/components/schemas/String'
      description: <p/>
    DescribeResizeMessage:
      type: object
      required:
        - ClusterIdentifier
      properties:
        ClusterIdentifier:
          $ref: '#/components/schemas/String'
      description: <p/>
    DescribeSnapshotCopyGrantsMessage:
      type: object
      properties:
        SnapshotCopyGrantName:
          $ref: '#/components/schemas/String'
        MaxRecords:
          $ref: '#/components/schemas/IntegerOptional'
        Marker:
          $ref: '#/components/schemas/String'
        TagKeys:
          $ref: '#/components/schemas/TagKeyList'
        TagValues:
          $ref: '#/components/schemas/TagValueList'
      description: The result of the <code>DescribeSnapshotCopyGrants</code> action.
    DescribeTableRestoreStatusMessage:
      type: object
      properties:
        ClusterIdentifier:
          $ref: '#/components/schemas/String'
        TableRestoreRequestId:
          $ref: '#/components/schemas/String'
        MaxRecords:
          $ref: '#/components/schemas/IntegerOptional'
        Marker:
          $ref: '#/components/schemas/String'
      description: <p/>
    DescribeTagsMessage:
      type: object
      properties:
        ResourceName:
          $ref: '#/components/schemas/String'
        ResourceType:
          $ref: '#/components/schemas/String'
        MaxRecords:
          $ref: '#/components/schemas/IntegerOptional'
        Marker:
          $ref: '#/components/schemas/String'
        TagKeys:
          $ref: '#/components/schemas/TagKeyList'
        TagValues:
          $ref: '#/components/schemas/TagValueList'
      description: <p/>
    DisableLoggingMessage:
      type: object
      required:
        - ClusterIdentifier
      properties:
        ClusterIdentifier:
          $ref: '#/components/schemas/String'
      description: <p/>
    DisableSnapshotCopyMessage:
      type: object
      required:
        - ClusterIdentifier
      properties:
        ClusterIdentifier:
          $ref: '#/components/schemas/String'
      description: <p/>
    DisableSnapshotCopyResult:
      type: object
      properties:
        Cluster:
          $ref: '#/components/schemas/Cluster'
    Double:
      type: number
      format: double
    DoubleOptional:
      type: number
      format: double
    EC2SecurityGroup:
      type: object
      properties:
        Status:
          $ref: '#/components/schemas/String'
        EC2SecurityGroupName:
          $ref: '#/components/schemas/String'
        EC2SecurityGroupOwnerId:
          $ref: '#/components/schemas/String'
        Tags:
          $ref: '#/components/schemas/TagList'
      description: Describes an Amazon EC2 security group.
    EC2SecurityGroupList:
      type: array
      items:
        $ref: '#/components/schemas/EC2SecurityGroup'
    ElasticIpStatus:
      type: object
      properties:
        ElasticIp:
          $ref: '#/components/schemas/String'
        Status:
          $ref: '#/components/schemas/String'
      description: Describes the status of the elastic IP (EIP) address.
    EnableLoggingMessage:
      type: object
      required:
        - ClusterIdentifier
        - BucketName
      properties:
        ClusterIdentifier:
          $ref: '#/components/schemas/String'
        BucketName:
          $ref: '#/components/schemas/String'
        S3KeyPrefix:
          $ref: '#/components/schemas/String'
      description: <p/>
    EnableSnapshotCopyMessage:
      type: object
      required:
        - ClusterIdentifier
        - DestinationRegion
      properties:
        ClusterIdentifier:
          $ref: '#/components/schemas/String'
        DestinationRegion:
          $ref: '#/components/schemas/String'
        RetentionPeriod:
          $ref: '#/components/schemas/IntegerOptional'
        SnapshotCopyGrantName:
          $ref: '#/components/schemas/String'
      description: <p/>
    EnableSnapshotCopyResult:
      type: object
      properties:
        Cluster:
          $ref: '#/components/schemas/Cluster'
    Endpoint:
      type: object
      properties:
        Address:
          $ref: '#/components/schemas/String'
        Port:
          $ref: '#/components/schemas/Integer'
      description: Describes a connection endpoint.
    Event:
      type: object
      properties:
        SourceIdentifier:
          $ref: '#/components/schemas/String'
        SourceType:
          $ref: '#/components/schemas/SourceType'
        Message:
          $ref: '#/components/schemas/String'
        EventCategories:
          $ref: '#/components/schemas/EventCategoriesList'
        Severity:
          $ref: '#/components/schemas/String'
        Date:
          $ref: '#/components/schemas/TStamp'
        EventId:
          $ref: '#/components/schemas/String'
      description: Describes an event.
    EventCategoriesList:
      type: array
      items:
        $ref: '#/components/schemas/String'
    EventCategoriesMap:
      type: object
      properties:
        SourceType:
          $ref: '#/components/schemas/String'
        Events:
          $ref: '#/components/schemas/EventInfoMapList'
      description: Describes event categories.
    EventCategoriesMapList:
      type: array
      items:
        $ref: '#/components/schemas/EventCategoriesMap'
    EventCategoriesMessage:
      type: object
      properties:
        EventCategoriesMapList:
          $ref: '#/components/schemas/EventCategoriesMapList'
      description: <p/>
    EventInfoMap:
      type: object
      properties:
        EventId:
          $ref: '#/components/schemas/String'
        EventCategories:
          $ref: '#/components/schemas/EventCategoriesList'
        EventDescription:
          $ref: '#/components/schemas/String'
        Severity:
          $ref: '#/components/schemas/String'
      description: Describes event information.
    EventInfoMapList:
      type: array
      items:
        $ref: '#/components/schemas/EventInfoMap'
    EventList:
      type: array
      items:
        $ref: '#/components/schemas/Event'
    EventSubscription:
      type: object
      properties:
        CustomerAwsId:
          $ref: '#/components/schemas/String'
        CustSubscriptionId:
          $ref: '#/components/schemas/String'
        SnsTopicArn:
          $ref: '#/components/schemas/String'
        Status:
          $ref: '#/components/schemas/String'
        SubscriptionCreationTime:
          $ref: '#/components/schemas/TStamp'
        SourceType:
          $ref: '#/components/schemas/String'
        SourceIdsList:
          $ref: '#/components/schemas/SourceIdsList'
        EventCategoriesList:
          $ref: '#/components/schemas/EventCategoriesList'
        Severity:
          $ref: '#/components/schemas/String'
        Enabled:
          $ref: '#/components/schemas/Boolean'
        Tags:
          $ref: '#/components/schemas/TagList'
      description: Describes event subscriptions.
    EventSubscriptionQuotaExceededFault:
      type: object
      properties: {}
      description: 'The request would exceed the allowed number of event subscriptions for this account. For information about increasing your quota, go to <a href="http://docs.aws.amazon.com/redshift/latest/mgmt/amazon-redshift-limits.html">Limits in Amazon Redshift</a> in the <i>Amazon Redshift Cluster Management Guide</i>. '
    EventSubscriptionsList:
      type: array
      items:
        $ref: '#/components/schemas/EventSubscription'
    EventSubscriptionsMessage:
      type: object
      properties:
        Marker:
          $ref: '#/components/schemas/String'
        EventSubscriptionsList:
          $ref: '#/components/schemas/EventSubscriptionsList'
      description: <p/>
    EventsMessage:
      type: object
      properties:
        Marker:
          $ref: '#/components/schemas/String'
        Events:
          $ref: '#/components/schemas/EventList'
      description: <p/>
    GetClusterCredentialsMessage:
      type: object
      required:
        - DbUser
        - ClusterIdentifier
      properties:
        DbUser:
          $ref: '#/components/schemas/String'
        DbName:
          $ref: '#/components/schemas/String'
        ClusterIdentifier:
          $ref: '#/components/schemas/String'
        DurationSeconds:
          $ref: '#/components/schemas/IntegerOptional'
        AutoCreate:
          $ref: '#/components/schemas/BooleanOptional'
        DbGroups:
          $ref: '#/components/schemas/DbGroupList'
      description: The request parameters to get cluster credentials.
    HsmClientCertificate:
      type: object
      properties:
        HsmClientCertificateIdentifier:
          $ref: '#/components/schemas/String'
        HsmClientCertificatePublicKey:
          $ref: '#/components/schemas/String'
        Tags:
          $ref: '#/components/schemas/TagList'
      description: 'Returns information about an HSM client certificate. The certificate is stored in a secure Hardware Storage Module (HSM), and used by the Amazon Redshift cluster to encrypt data files.'
    HsmClientCertificateAlreadyExistsFault:
      type: object
      properties: {}
      description: There is already an existing Amazon Redshift HSM client certificate with the specified identifier.
    HsmClientCertificateList:
      type: array
      items:
        $ref: '#/components/schemas/HsmClientCertificate'
    HsmClientCertificateMessage:
      type: object
      properties:
        Marker:
          $ref: '#/components/schemas/String'
        HsmClientCertificates:
          $ref: '#/components/schemas/HsmClientCertificateList'
      description: <p/>
    HsmClientCertificateNotFoundFault:
      type: object
      properties: {}
      description: There is no Amazon Redshift HSM client certificate with the specified identifier.
    HsmClientCertificateQuotaExceededFault:
      type: object
      properties: {}
      description: 'The quota for HSM client certificates has been reached. For information about increasing your quota, go to <a href="http://docs.aws.amazon.com/redshift/latest/mgmt/amazon-redshift-limits.html">Limits in Amazon Redshift</a> in the <i>Amazon Redshift Cluster Management Guide</i>. '
    HsmConfiguration:
      type: object
      properties:
        HsmConfigurationIdentifier:
          $ref: '#/components/schemas/String'
        Description:
          $ref: '#/components/schemas/String'
        HsmIpAddress:
          $ref: '#/components/schemas/String'
        HsmPartitionName:
          $ref: '#/components/schemas/String'
        Tags:
          $ref: '#/components/schemas/TagList'
      description: 'Returns information about an HSM configuration, which is an object that describes to Amazon Redshift clusters the information they require to connect to an HSM where they can store database encryption keys.'
    HsmConfigurationAlreadyExistsFault:
      type: object
      properties: {}
      description: There is already an existing Amazon Redshift HSM configuration with the specified identifier.
    HsmConfigurationList:
      type: array
      items:
        $ref: '#/components/schemas/HsmConfiguration'
    HsmConfigurationMessage:
      type: object
      properties:
        Marker:
          $ref: '#/components/schemas/String'
        HsmConfigurations:
          $ref: '#/components/schemas/HsmConfigurationList'
      description: <p/>
    HsmConfigurationNotFoundFault:
      type: object
      properties: {}
      description: There is no Amazon Redshift HSM configuration with the specified identifier.
    HsmConfigurationQuotaExceededFault:
      type: object
      properties: {}
      description: 'The quota for HSM configurations has been reached. For information about increasing your quota, go to <a href="http://docs.aws.amazon.com/redshift/latest/mgmt/amazon-redshift-limits.html">Limits in Amazon Redshift</a> in the <i>Amazon Redshift Cluster Management Guide</i>. '
    HsmStatus:
      type: object
      properties:
        HsmClientCertificateIdentifier:
          $ref: '#/components/schemas/String'
        HsmConfigurationIdentifier:
          $ref: '#/components/schemas/String'
        Status:
          $ref: '#/components/schemas/String'
      description: Describes the status of changes to HSM settings.
    IPRange:
      type: object
      properties:
        Status:
          $ref: '#/components/schemas/String'
        CIDRIP:
          $ref: '#/components/schemas/String'
        Tags:
          $ref: '#/components/schemas/TagList'
      description: Describes an IP range used in a security group.
    IPRangeList:
      type: array
      items:
        $ref: '#/components/schemas/IPRange'
    IamRoleArnList:
      type: array
      items:
        $ref: '#/components/schemas/String'
    ImportTablesCompleted:
      type: array
      items:
        $ref: '#/components/schemas/String'
    ImportTablesInProgress:
      type: array
      items:
        $ref: '#/components/schemas/String'
    ImportTablesNotStarted:
      type: array
      items:
        $ref: '#/components/schemas/String'
    InProgressTableRestoreQuotaExceededFault:
      type: object
      properties: {}
      description: You have exceeded the allowed number of table restore requests. Wait for your current table restore requests to complete before making a new request.
    IncompatibleOrderableOptions:
      type: object
      properties: {}
      description: The specified options are incompatible.
    InsufficientClusterCapacityFault:
      type: object
      properties: {}
      description: The number of nodes specified exceeds the allotted capacity of the cluster.
    InsufficientS3BucketPolicyFault:
      type: object
      properties: {}
      description: The cluster does not have read bucket or put object permissions on the S3 bucket specified when enabling logging.
    Integer:
      type: integer
    IntegerOptional:
      type: integer
    InvalidClusterParameterGroupStateFault:
      type: object
      properties: {}
      description: The cluster parameter group action can not be completed because another task is in progress that involves the parameter group. Wait a few moments and try the operation again.
    InvalidClusterSecurityGroupStateFault:
      type: object
      properties: {}
      description: 'The state of the cluster security group is not <code>available</code>. '
    InvalidClusterSnapshotStateFault:
      type: object
      properties: {}
      description: 'The specified cluster snapshot is not in the <code>available</code> state, or other accounts are authorized to access the snapshot. '
    InvalidClusterStateFault:
      type: object
      properties: {}
      description: 'The specified cluster is not in the <code>available</code> state. '
    InvalidClusterSubnetGroupStateFault:
      type: object
      properties: {}
      description: The cluster subnet group cannot be deleted because it is in use.
    InvalidClusterSubnetStateFault:
      type: object
      properties: {}
      description: The state of the subnet is invalid.
    InvalidElasticIpFault:
      type: object
      properties: {}
      description: The Elastic IP (EIP) is invalid or cannot be found.
    InvalidHsmClientCertificateStateFault:
      type: object
      properties: {}
      description: 'The specified HSM client certificate is not in the <code>available</code> state, or it is still in use by one or more Amazon Redshift clusters.'
    InvalidHsmConfigurationStateFault:
      type: object
      properties: {}
      description: 'The specified HSM configuration is not in the <code>available</code> state, or it is still in use by one or more Amazon Redshift clusters.'
    InvalidRestoreFault:
      type: object
      properties: {}
      description: The restore is invalid.
    InvalidS3BucketNameFault:
      type: object
      properties: {}
      description: 'The S3 bucket name is invalid. For more information about naming rules, go to <a href="http://docs.aws.amazon.com/AmazonS3/latest/dev/BucketRestrictions.html">Bucket Restrictions and Limitations</a> in the Amazon Simple Storage Service (S3) Developer Guide.'
    InvalidS3KeyPrefixFault:
      type: object
      properties: {}
      description: The string specified for the logging S3 key prefix does not comply with the documented constraints.
    InvalidSnapshotCopyGrantStateFault:
      type: object
      properties: {}
      description: The snapshot copy grant can't be deleted because it is used by one or more clusters.
    InvalidSubnet:
      type: object
      properties: {}
      description: 'The requested subnet is not valid, or not all of the subnets are in the same VPC.'
    InvalidSubscriptionStateFault:
      type: object
      properties: {}
      description: The subscription request is invalid because it is a duplicate request. This subscription request is already in progress.
    InvalidTableRestoreArgumentFault:
      type: object
      properties: {}
      description: 'The value specified for the <code>sourceDatabaseName</code>, <code>sourceSchemaName</code>, or <code>sourceTableName</code> parameter, or a combination of these, doesn''t exist in the snapshot.'
    InvalidTagFault:
      type: object
      properties: {}
      description: The tag is invalid.
    InvalidVPCNetworkStateFault:
      type: object
      properties: {}
      description: The cluster subnet group does not cover all Availability Zones.
    LimitExceededFault:
      type: object
      properties: {}
      description: The encryption key has exceeded its grant limit in AWS KMS.
    LoggingStatus:
      type: object
      properties:
        LoggingEnabled:
          $ref: '#/components/schemas/Boolean'
        BucketName:
          $ref: '#/components/schemas/String'
        S3KeyPrefix:
          $ref: '#/components/schemas/String'
        LastSuccessfulDeliveryTime:
          $ref: '#/components/schemas/TStamp'
        LastFailureTime:
          $ref: '#/components/schemas/TStamp'
        LastFailureMessage:
          $ref: '#/components/schemas/String'
      description: Describes the status of logging for a cluster.
    Long:
      type: integer
    LongOptional:
      type: integer
    ModifyClusterIamRolesMessage:
      type: object
      required:
        - ClusterIdentifier
      properties:
        ClusterIdentifier:
          $ref: '#/components/schemas/String'
        AddIamRoles:
          $ref: '#/components/schemas/IamRoleArnList'
        RemoveIamRoles:
          $ref: '#/components/schemas/IamRoleArnList'
      description: <p/>
    ModifyClusterIamRolesResult:
      type: object
      properties:
        Cluster:
          $ref: '#/components/schemas/Cluster'
    ModifyClusterMessage:
      type: object
      required:
        - ClusterIdentifier
      properties:
        ClusterIdentifier:
          $ref: '#/components/schemas/String'
        ClusterType:
          $ref: '#/components/schemas/String'
        NodeType:
          $ref: '#/components/schemas/String'
        NumberOfNodes:
          $ref: '#/components/schemas/IntegerOptional'
        ClusterSecurityGroups:
          $ref: '#/components/schemas/ClusterSecurityGroupNameList'
        VpcSecurityGroupIds:
          $ref: '#/components/schemas/VpcSecurityGroupIdList'
        MasterUserPassword:
          $ref: '#/components/schemas/String'
        ClusterParameterGroupName:
          $ref: '#/components/schemas/String'
        AutomatedSnapshotRetentionPeriod:
          $ref: '#/components/schemas/IntegerOptional'
        PreferredMaintenanceWindow:
          $ref: '#/components/schemas/String'
        ClusterVersion:
          $ref: '#/components/schemas/String'
        AllowVersionUpgrade:
          $ref: '#/components/schemas/BooleanOptional'
        HsmClientCertificateIdentifier:
          $ref: '#/components/schemas/String'
        HsmConfigurationIdentifier:
          $ref: '#/components/schemas/String'
        NewClusterIdentifier:
          $ref: '#/components/schemas/String'
        PubliclyAccessible:
          $ref: '#/components/schemas/BooleanOptional'
        ElasticIp:
          $ref: '#/components/schemas/String'
        EnhancedVpcRouting:
          $ref: '#/components/schemas/BooleanOptional'
      description: <p/>
    ModifyClusterParameterGroupMessage:
      type: object
      required:
        - ParameterGroupName
        - Parameters
      properties:
        ParameterGroupName:
          $ref: '#/components/schemas/String'
        Parameters:
          $ref: '#/components/schemas/ParametersList'
      description: <p/>
    ModifyClusterResult:
      type: object
      properties:
        Cluster:
          $ref: '#/components/schemas/Cluster'
    ModifyClusterSubnetGroupMessage:
      type: object
      required:
        - ClusterSubnetGroupName
        - SubnetIds
      properties:
        ClusterSubnetGroupName:
          $ref: '#/components/schemas/String'
        Description:
          $ref: '#/components/schemas/String'
        SubnetIds:
          $ref: '#/components/schemas/SubnetIdentifierList'
      description: <p/>
    ModifyClusterSubnetGroupResult:
      type: object
      properties:
        ClusterSubnetGroup:
          $ref: '#/components/schemas/ClusterSubnetGroup'
    ModifyEventSubscriptionMessage:
      type: object
      required:
        - SubscriptionName
      properties:
        SubscriptionName:
          $ref: '#/components/schemas/String'
        SnsTopicArn:
          $ref: '#/components/schemas/String'
        SourceType:
          $ref: '#/components/schemas/String'
        SourceIds:
          $ref: '#/components/schemas/SourceIdsList'
        EventCategories:
          $ref: '#/components/schemas/EventCategoriesList'
        Severity:
          $ref: '#/components/schemas/String'
        Enabled:
          $ref: '#/components/schemas/BooleanOptional'
      description: <p/>
    ModifyEventSubscriptionResult:
      type: object
      properties:
        EventSubscription:
          $ref: '#/components/schemas/EventSubscription'
    ModifySnapshotCopyRetentionPeriodMessage:
      type: object
      required:
        - ClusterIdentifier
        - RetentionPeriod
      properties:
        ClusterIdentifier:
          $ref: '#/components/schemas/String'
        RetentionPeriod:
          $ref: '#/components/schemas/Integer'
      description: <p/>
    ModifySnapshotCopyRetentionPeriodResult:
      type: object
      properties:
        Cluster:
          $ref: '#/components/schemas/Cluster'
    NumberOfNodesPerClusterLimitExceededFault:
      type: object
      properties: {}
      description: The operation would exceed the number of nodes allowed for a cluster.
    NumberOfNodesQuotaExceededFault:
      type: object
      properties: {}
      description: 'The operation would exceed the number of nodes allotted to the account. For information about increasing your quota, go to <a href="http://docs.aws.amazon.com/redshift/latest/mgmt/amazon-redshift-limits.html">Limits in Amazon Redshift</a> in the <i>Amazon Redshift Cluster Management Guide</i>. '
    OrderableClusterOption:
      type: object
      properties:
        ClusterVersion:
          $ref: '#/components/schemas/String'
        ClusterType:
          $ref: '#/components/schemas/String'
        NodeType:
          $ref: '#/components/schemas/String'
        AvailabilityZones:
          $ref: '#/components/schemas/AvailabilityZoneList'
      description: Describes an orderable cluster option.
    OrderableClusterOptionsList:
      type: array
      items:
        $ref: '#/components/schemas/OrderableClusterOption'
    OrderableClusterOptionsMessage:
      type: object
      properties:
        OrderableClusterOptions:
          $ref: '#/components/schemas/OrderableClusterOptionsList'
        Marker:
          $ref: '#/components/schemas/String'
      description: 'Contains the output from the <a>DescribeOrderableClusterOptions</a> action. '
    Parameter:
      type: object
      properties:
        ParameterName:
          $ref: '#/components/schemas/String'
        ParameterValue:
          $ref: '#/components/schemas/String'
        Description:
          $ref: '#/components/schemas/String'
        Source:
          $ref: '#/components/schemas/String'
        DataType:
          $ref: '#/components/schemas/String'
        AllowedValues:
          $ref: '#/components/schemas/String'
        ApplyType:
          $ref: '#/components/schemas/ParameterApplyType'
        IsModifiable:
          $ref: '#/components/schemas/Boolean'
        MinimumEngineVersion:
          $ref: '#/components/schemas/String'
      description: Describes a parameter in a cluster parameter group.
    ParameterApplyType:
      type: string
      enum:
        - static
        - dynamic
    ParameterGroupList:
      type: array
      items:
        $ref: '#/components/schemas/ClusterParameterGroup'
    ParametersList:
      type: array
      items:
        $ref: '#/components/schemas/Parameter'
    PendingModifiedValues:
      type: object
      properties:
        MasterUserPassword:
          $ref: '#/components/schemas/String'
        NodeType:
          $ref: '#/components/schemas/String'
        NumberOfNodes:
          $ref: '#/components/schemas/IntegerOptional'
        ClusterType:
          $ref: '#/components/schemas/String'
        ClusterVersion:
          $ref: '#/components/schemas/String'
        AutomatedSnapshotRetentionPeriod:
          $ref: '#/components/schemas/IntegerOptional'
        ClusterIdentifier:
          $ref: '#/components/schemas/String'
        PubliclyAccessible:
          $ref: '#/components/schemas/BooleanOptional'
        EnhancedVpcRouting:
          $ref: '#/components/schemas/BooleanOptional'
      description: Describes cluster attributes that are in a pending state. A change to one or more the attributes was requested and is in progress or will be applied.
    PurchaseReservedNodeOfferingMessage:
      type: object
      required:
        - ReservedNodeOfferingId
      properties:
        ReservedNodeOfferingId:
          $ref: '#/components/schemas/String'
        NodeCount:
          $ref: '#/components/schemas/IntegerOptional'
      description: <p/>
    PurchaseReservedNodeOfferingResult:
      type: object
      properties:
        ReservedNode:
          $ref: '#/components/schemas/ReservedNode'
    RebootClusterMessage:
      type: object
      required:
        - ClusterIdentifier
      properties:
        ClusterIdentifier:
          $ref: '#/components/schemas/String'
      description: <p/>
    RebootClusterResult:
      type: object
      properties:
        Cluster:
          $ref: '#/components/schemas/Cluster'
    RecurringCharge:
      type: object
      properties:
        RecurringChargeAmount:
          $ref: '#/components/schemas/Double'
        RecurringChargeFrequency:
          $ref: '#/components/schemas/String'
      description: Describes a recurring charge.
    RecurringChargeList:
      type: array
      items:
        $ref: '#/components/schemas/RecurringCharge'
    ReservedNode:
      type: object
      properties:
        ReservedNodeId:
          $ref: '#/components/schemas/String'
        ReservedNodeOfferingId:
          $ref: '#/components/schemas/String'
        NodeType:
          $ref: '#/components/schemas/String'
        StartTime:
          $ref: '#/components/schemas/TStamp'
        Duration:
          $ref: '#/components/schemas/Integer'
        FixedPrice:
          $ref: '#/components/schemas/Double'
        UsagePrice:
          $ref: '#/components/schemas/Double'
        CurrencyCode:
          $ref: '#/components/schemas/String'
        NodeCount:
          $ref: '#/components/schemas/Integer'
        State:
          $ref: '#/components/schemas/String'
        OfferingType:
          $ref: '#/components/schemas/String'
        RecurringCharges:
          $ref: '#/components/schemas/RecurringChargeList'
      description: 'Describes a reserved node. You can call the <a>DescribeReservedNodeOfferings</a> API to obtain the available reserved node offerings. '
    ReservedNodeAlreadyExistsFault:
      type: object
      properties: {}
      description: User already has a reservation with the given identifier.
    ReservedNodeList:
      type: array
      items:
        $ref: '#/components/schemas/ReservedNode'
    ReservedNodeNotFoundFault:
      type: object
      properties: {}
      description: The specified reserved compute node not found.
    ReservedNodeOffering:
      type: object
      properties:
        ReservedNodeOfferingId:
          $ref: '#/components/schemas/String'
        NodeType:
          $ref: '#/components/schemas/String'
        Duration:
          $ref: '#/components/schemas/Integer'
        FixedPrice:
          $ref: '#/components/schemas/Double'
        UsagePrice:
          $ref: '#/components/schemas/Double'
        CurrencyCode:
          $ref: '#/components/schemas/String'
        OfferingType:
          $ref: '#/components/schemas/String'
        RecurringCharges:
          $ref: '#/components/schemas/RecurringChargeList'
      description: Describes a reserved node offering.
    ReservedNodeOfferingList:
      type: array
      items:
        $ref: '#/components/schemas/ReservedNodeOffering'
    ReservedNodeOfferingNotFoundFault:
      type: object
      properties: {}
      description: Specified offering does not exist.
    ReservedNodeOfferingsMessage:
      type: object
      properties:
        Marker:
          $ref: '#/components/schemas/String'
        ReservedNodeOfferings:
          $ref: '#/components/schemas/ReservedNodeOfferingList'
      description: <p/>
    ReservedNodeQuotaExceededFault:
      type: object
      properties: {}
      description: 'Request would exceed the user''s compute node quota. For information about increasing your quota, go to <a href="http://docs.aws.amazon.com/redshift/latest/mgmt/amazon-redshift-limits.html">Limits in Amazon Redshift</a> in the <i>Amazon Redshift Cluster Management Guide</i>. '
    ReservedNodesMessage:
      type: object
      properties:
        Marker:
          $ref: '#/components/schemas/String'
        ReservedNodes:
          $ref: '#/components/schemas/ReservedNodeList'
      description: <p/>
    ResetClusterParameterGroupMessage:
      type: object
      required:
        - ParameterGroupName
      properties:
        ParameterGroupName:
          $ref: '#/components/schemas/String'
        ResetAllParameters:
          $ref: '#/components/schemas/Boolean'
        Parameters:
          $ref: '#/components/schemas/ParametersList'
      description: <p/>
    ResizeNotFoundFault:
      type: object
      properties: {}
      description: A resize operation for the specified cluster is not found.
    ResizeProgressMessage:
      type: object
      properties:
        TargetNodeType:
          $ref: '#/components/schemas/String'
        TargetNumberOfNodes:
          $ref: '#/components/schemas/IntegerOptional'
        TargetClusterType:
          $ref: '#/components/schemas/String'
        Status:
          $ref: '#/components/schemas/String'
        ImportTablesCompleted:
          $ref: '#/components/schemas/ImportTablesCompleted'
        ImportTablesInProgress:
          $ref: '#/components/schemas/ImportTablesInProgress'
        ImportTablesNotStarted:
          $ref: '#/components/schemas/ImportTablesNotStarted'
        AvgResizeRateInMegaBytesPerSecond:
          $ref: '#/components/schemas/DoubleOptional'
        TotalResizeDataInMegaBytes:
          $ref: '#/components/schemas/LongOptional'
        ProgressInMegaBytes:
          $ref: '#/components/schemas/LongOptional'
        ElapsedTimeInSeconds:
          $ref: '#/components/schemas/LongOptional'
        EstimatedTimeToCompletionInSeconds:
          $ref: '#/components/schemas/LongOptional'
      description: Describes the result of a cluster resize operation.
    ResourceNotFoundFault:
      type: object
      properties: {}
      description: The resource could not be found.
    RestorableNodeTypeList:
      type: array
      items:
        $ref: '#/components/schemas/String'
    RestoreFromClusterSnapshotMessage:
      type: object
      required:
        - ClusterIdentifier
        - SnapshotIdentifier
      properties:
        ClusterIdentifier:
          $ref: '#/components/schemas/String'
        SnapshotIdentifier:
          $ref: '#/components/schemas/String'
        SnapshotClusterIdentifier:
          $ref: '#/components/schemas/String'
        Port:
          $ref: '#/components/schemas/IntegerOptional'
        AvailabilityZone:
          $ref: '#/components/schemas/String'
        AllowVersionUpgrade:
          $ref: '#/components/schemas/BooleanOptional'
        ClusterSubnetGroupName:
          $ref: '#/components/schemas/String'
        PubliclyAccessible:
          $ref: '#/components/schemas/BooleanOptional'
        OwnerAccount:
          $ref: '#/components/schemas/String'
        HsmClientCertificateIdentifier:
          $ref: '#/components/schemas/String'
        HsmConfigurationIdentifier:
          $ref: '#/components/schemas/String'
        ElasticIp:
          $ref: '#/components/schemas/String'
        ClusterParameterGroupName:
          $ref: '#/components/schemas/String'
        ClusterSecurityGroups:
          $ref: '#/components/schemas/ClusterSecurityGroupNameList'
        VpcSecurityGroupIds:
          $ref: '#/components/schemas/VpcSecurityGroupIdList'
        PreferredMaintenanceWindow:
          $ref: '#/components/schemas/String'
        AutomatedSnapshotRetentionPeriod:
          $ref: '#/components/schemas/IntegerOptional'
        KmsKeyId:
          $ref: '#/components/schemas/String'
        NodeType:
          $ref: '#/components/schemas/String'
        EnhancedVpcRouting:
          $ref: '#/components/schemas/BooleanOptional'
        AdditionalInfo:
          $ref: '#/components/schemas/String'
        IamRoles:
          $ref: '#/components/schemas/IamRoleArnList'
      description: <p/>
    RestoreFromClusterSnapshotResult:
      type: object
      properties:
        Cluster:
          $ref: '#/components/schemas/Cluster'
    RestoreStatus:
      type: object
      properties:
        Status:
          $ref: '#/components/schemas/String'
        CurrentRestoreRateInMegaBytesPerSecond:
          $ref: '#/components/schemas/Double'
        SnapshotSizeInMegaBytes:
          $ref: '#/components/schemas/Long'
        ProgressInMegaBytes:
          $ref: '#/components/schemas/Long'
        ElapsedTimeInSeconds:
          $ref: '#/components/schemas/Long'
        EstimatedTimeToCompletionInSeconds:
          $ref: '#/components/schemas/Long'
      description: Describes the status of a cluster restore action. Returns null if the cluster was not created by restoring a snapshot.
    RestoreTableFromClusterSnapshotMessage:
      type: object
      required:
        - ClusterIdentifier
        - SnapshotIdentifier
        - SourceDatabaseName
        - SourceTableName
        - NewTableName
      properties:
        ClusterIdentifier:
          $ref: '#/components/schemas/String'
        SnapshotIdentifier:
          $ref: '#/components/schemas/String'
        SourceDatabaseName:
          $ref: '#/components/schemas/String'
        SourceSchemaName:
          $ref: '#/components/schemas/String'
        SourceTableName:
          $ref: '#/components/schemas/String'
        TargetDatabaseName:
          $ref: '#/components/schemas/String'
        TargetSchemaName:
          $ref: '#/components/schemas/String'
        NewTableName:
          $ref: '#/components/schemas/String'
      description: <p/>
    RestoreTableFromClusterSnapshotResult:
      type: object
      properties:
        TableRestoreStatus:
          $ref: '#/components/schemas/TableRestoreStatus'
    RevokeClusterSecurityGroupIngressMessage:
      type: object
      required:
        - ClusterSecurityGroupName
      properties:
        ClusterSecurityGroupName:
          $ref: '#/components/schemas/String'
        CIDRIP:
          $ref: '#/components/schemas/String'
        EC2SecurityGroupName:
          $ref: '#/components/schemas/String'
        EC2SecurityGroupOwnerId:
          $ref: '#/components/schemas/String'
      description: <p/>
    RevokeClusterSecurityGroupIngressResult:
      type: object
      properties:
        ClusterSecurityGroup:
          $ref: '#/components/schemas/ClusterSecurityGroup'
    RevokeSnapshotAccessMessage:
      type: object
      required:
        - SnapshotIdentifier
        - AccountWithRestoreAccess
      properties:
        SnapshotIdentifier:
          $ref: '#/components/schemas/String'
        SnapshotClusterIdentifier:
          $ref: '#/components/schemas/String'
        AccountWithRestoreAccess:
          $ref: '#/components/schemas/String'
      description: <p/>
    RevokeSnapshotAccessResult:
      type: object
      properties:
        Snapshot:
          $ref: '#/components/schemas/Snapshot'
    RotateEncryptionKeyMessage:
      type: object
      required:
        - ClusterIdentifier
      properties:
        ClusterIdentifier:
          $ref: '#/components/schemas/String'
      description: <p/>
    RotateEncryptionKeyResult:
      type: object
      properties:
        Cluster:
          $ref: '#/components/schemas/Cluster'
    SNSInvalidTopicFault:
      type: object
      properties: {}
      description: Amazon SNS has responded that there is a problem with the specified Amazon SNS topic.
    SNSNoAuthorizationFault:
      type: object
      properties: {}
      description: You do not have permission to publish to the specified Amazon SNS topic.
    SNSTopicArnNotFoundFault:
      type: object
      properties: {}
      description: An Amazon SNS topic with the specified Amazon Resource Name (ARN) does not exist.
    SensitiveString:
      type: string
      format: password
    Snapshot:
      type: object
      properties:
        SnapshotIdentifier:
          $ref: '#/components/schemas/String'
        ClusterIdentifier:
          $ref: '#/components/schemas/String'
        SnapshotCreateTime:
          $ref: '#/components/schemas/TStamp'
        Status:
          $ref: '#/components/schemas/String'
        Port:
          $ref: '#/components/schemas/Integer'
        AvailabilityZone:
          $ref: '#/components/schemas/String'
        ClusterCreateTime:
          $ref: '#/components/schemas/TStamp'
        MasterUsername:
          $ref: '#/components/schemas/String'
        ClusterVersion:
          $ref: '#/components/schemas/String'
        SnapshotType:
          $ref: '#/components/schemas/String'
        NodeType:
          $ref: '#/components/schemas/String'
        NumberOfNodes:
          $ref: '#/components/schemas/Integer'
        DBName:
          $ref: '#/components/schemas/String'
        VpcId:
          $ref: '#/components/schemas/String'
        Encrypted:
          $ref: '#/components/schemas/Boolean'
        KmsKeyId:
          $ref: '#/components/schemas/String'
        EncryptedWithHSM:
          $ref: '#/components/schemas/Boolean'
        AccountsWithRestoreAccess:
          $ref: '#/components/schemas/AccountsWithRestoreAccessList'
        OwnerAccount:
          $ref: '#/components/schemas/String'
        TotalBackupSizeInMegaBytes:
          $ref: '#/components/schemas/Double'
        ActualIncrementalBackupSizeInMegaBytes:
          $ref: '#/components/schemas/Double'
        BackupProgressInMegaBytes:
          $ref: '#/components/schemas/Double'
        CurrentBackupRateInMegaBytesPerSecond:
          $ref: '#/components/schemas/Double'
        EstimatedSecondsToCompletion:
          $ref: '#/components/schemas/Long'
        ElapsedTimeInSeconds:
          $ref: '#/components/schemas/Long'
        SourceRegion:
          $ref: '#/components/schemas/String'
        Tags:
          $ref: '#/components/schemas/TagList'
        RestorableNodeTypes:
          $ref: '#/components/schemas/RestorableNodeTypeList'
        EnhancedVpcRouting:
          $ref: '#/components/schemas/Boolean'
      description: Describes a snapshot.
    SnapshotCopyAlreadyDisabledFault:
      type: object
      properties: {}
      description: The cluster already has cross-region snapshot copy disabled.
    SnapshotCopyAlreadyEnabledFault:
      type: object
      properties: {}
      description: The cluster already has cross-region snapshot copy enabled.
    SnapshotCopyDisabledFault:
      type: object
      properties: {}
      description: Cross-region snapshot copy was temporarily disabled. Try your request again.
    SnapshotCopyGrant:
      type: object
      properties:
        SnapshotCopyGrantName:
          $ref: '#/components/schemas/String'
        KmsKeyId:
          $ref: '#/components/schemas/String'
        Tags:
          $ref: '#/components/schemas/TagList'
      description: '<p>The snapshot copy grant that grants Amazon Redshift permission to encrypt copied snapshots with the specified customer master key (CMK) from AWS KMS in the destination region.</p> <p> For more information about managing snapshot copy grants, go to <a href="http://docs.aws.amazon.com/redshift/latest/mgmt/working-with-db-encryption.html">Amazon Redshift Database Encryption</a> in the <i>Amazon Redshift Cluster Management Guide</i>. </p>'
    SnapshotCopyGrantAlreadyExistsFault:
      type: object
      properties: {}
      description: The snapshot copy grant can't be created because a grant with the same name already exists.
    SnapshotCopyGrantList:
      type: array
      items:
        $ref: '#/components/schemas/SnapshotCopyGrant'
    SnapshotCopyGrantMessage:
      type: object
      properties:
        Marker:
          $ref: '#/components/schemas/String'
        SnapshotCopyGrants:
          $ref: '#/components/schemas/SnapshotCopyGrantList'
      description: <p/>
    SnapshotCopyGrantNotFoundFault:
      type: object
      properties: {}
      description: The specified snapshot copy grant can't be found. Make sure that the name is typed correctly and that the grant exists in the destination region.
    SnapshotCopyGrantQuotaExceededFault:
      type: object
      properties: {}
      description: The AWS account has exceeded the maximum number of snapshot copy grants in this region.
    SnapshotList:
      type: array
      items:
        $ref: '#/components/schemas/Snapshot'
    SnapshotMessage:
      type: object
      properties:
        Marker:
          $ref: '#/components/schemas/String'
        Snapshots:
          $ref: '#/components/schemas/SnapshotList'
      description: 'Contains the output from the <a>DescribeClusterSnapshots</a> action. '
    SourceIdsList:
      type: array
      items:
        $ref: '#/components/schemas/String'
    SourceNotFoundFault:
      type: object
      properties: {}
      description: The specified Amazon Redshift event source could not be found.
    SourceType:
      type: string
      enum:
        - cluster
        - cluster-parameter-group
        - cluster-security-group
        - cluster-snapshot
    String:
      type: string
    Subnet:
      type: object
      properties:
        SubnetIdentifier:
          $ref: '#/components/schemas/String'
        SubnetAvailabilityZone:
          $ref: '#/components/schemas/AvailabilityZone'
        SubnetStatus:
          $ref: '#/components/schemas/String'
      description: Describes a subnet.
    SubnetAlreadyInUse:
      type: object
      properties: {}
      description: A specified subnet is already in use by another cluster.
    SubnetIdentifierList:
      type: array
      items:
        $ref: '#/components/schemas/String'
    SubnetList:
      type: array
      items:
        $ref: '#/components/schemas/Subnet'
    SubscriptionAlreadyExistFault:
      type: object
      properties: {}
      description: There is already an existing event notification subscription with the specified name.
    SubscriptionCategoryNotFoundFault:
      type: object
      properties: {}
      description: 'The value specified for the event category was not one of the allowed values, or it specified a category that does not apply to the specified source type. The allowed values are Configuration, Management, Monitoring, and Security.'
    SubscriptionEventIdNotFoundFault:
      type: object
      properties: {}
      description: An Amazon Redshift event with the specified event ID does not exist.
    SubscriptionNotFoundFault:
      type: object
      properties: {}
      description: An Amazon Redshift event notification subscription with the specified name does not exist.
    SubscriptionSeverityNotFoundFault:
      type: object
      properties: {}
      description: 'The value specified for the event severity was not one of the allowed values, or it specified a severity that does not apply to the specified source type. The allowed values are ERROR and INFO.'
    TStamp:
      type: string
      format: date-time
    TableRestoreNotFoundFault:
      type: object
      properties: {}
      description: The specified <code>TableRestoreRequestId</code> value was not found.
    TableRestoreStatus:
      type: object
      properties:
        TableRestoreRequestId:
          $ref: '#/components/schemas/String'
        Status:
          $ref: '#/components/schemas/TableRestoreStatusType'
        Message:
          $ref: '#/components/schemas/String'
        RequestTime:
          $ref: '#/components/schemas/TStamp'
        ProgressInMegaBytes:
          $ref: '#/components/schemas/LongOptional'
        TotalDataInMegaBytes:
          $ref: '#/components/schemas/LongOptional'
        ClusterIdentifier:
          $ref: '#/components/schemas/String'
        SnapshotIdentifier:
          $ref: '#/components/schemas/String'
        SourceDatabaseName:
          $ref: '#/components/schemas/String'
        SourceSchemaName:
          $ref: '#/components/schemas/String'
        SourceTableName:
          $ref: '#/components/schemas/String'
        TargetDatabaseName:
          $ref: '#/components/schemas/String'
        TargetSchemaName:
          $ref: '#/components/schemas/String'
        NewTableName:
          $ref: '#/components/schemas/String'
      description: Describes the status of a <a>RestoreTableFromClusterSnapshot</a> operation.
    TableRestoreStatusList:
      type: array
      items:
        $ref: '#/components/schemas/TableRestoreStatus'
    TableRestoreStatusMessage:
      type: object
      properties:
        TableRestoreStatusDetails:
          $ref: '#/components/schemas/TableRestoreStatusList'
        Marker:
          $ref: '#/components/schemas/String'
      description: <p/>
    TableRestoreStatusType:
      type: string
      enum:
        - PENDING
        - IN_PROGRESS
        - SUCCEEDED
        - FAILED
        - CANCELED
    Tag:
      type: object
      properties:
        Key:
          $ref: '#/components/schemas/String'
        Value:
          $ref: '#/components/schemas/String'
      description: A tag consisting of a name/value pair for a resource.
    TagKeyList:
      type: array
      items:
        $ref: '#/components/schemas/String'
    TagLimitExceededFault:
      type: object
      properties: {}
      description: The request exceeds the limit of 10 tags for the resource.
    TagList:
      type: array
      items:
        $ref: '#/components/schemas/Tag'
    TagValueList:
      type: array
      items:
        $ref: '#/components/schemas/String'
    TaggedResource:
      type: object
      properties:
        Tag:
          $ref: '#/components/schemas/Tag'
        ResourceName:
          $ref: '#/components/schemas/String'
        ResourceType:
          $ref: '#/components/schemas/String'
      description: A tag and its associated resource.
    TaggedResourceList:
      type: array
      items:
        $ref: '#/components/schemas/TaggedResource'
    TaggedResourceListMessage:
      type: object
      properties:
        TaggedResources:
          $ref: '#/components/schemas/TaggedResourceList'
        Marker:
          $ref: '#/components/schemas/String'
      description: <p/>
    UnauthorizedOperation:
      type: object
      properties: {}
      description: Your account is not authorized to perform the requested operation.
    UnknownSnapshotCopyRegionFault:
      type: object
      properties: {}
      description: The specified region is incorrect or does not exist.
    UnsupportedOperationFault:
      type: object
      properties: {}
      description: The requested operation isn't supported.
    UnsupportedOptionFault:
      type: object
      properties: {}
      description: A request option was specified that is not supported.
    VpcSecurityGroupIdList:
      type: array
      items:
        $ref: '#/components/schemas/String'
    VpcSecurityGroupMembership:
      type: object
      properties:
        VpcSecurityGroupId:
          $ref: '#/components/schemas/String'
        Status:
          $ref: '#/components/schemas/String'
      description: Describes the members of a VPC security group.
    VpcSecurityGroupMembershipList:
      type: array
      items:
        $ref: '#/components/schemas/VpcSecurityGroupMembership'
  parameters:
    Action:
      name: Action
      in: header
      required: true
      schema:
        type: string
    Version:
      name: Version
      in: header
      required: true
      schema:
        type: string
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      required: false
      schema:
        type: string
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      required: false
      schema:
        type: string
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      required: false
      schema:
        type: string
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      required: false
      schema:
        type: string
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      required: false
      schema:
        type: string
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      required: false
      schema:
        type: string
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      required: false
      schema:
        type: string
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
