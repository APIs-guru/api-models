openapi: 3.0.0
servers:
  - url: 'http://firehose.amazonaws.com/'
info:
  version: '2015-08-04'
  x-release: v4
  title: Amazon Kinesis Firehose
  description: '<fullname>Amazon Kinesis Firehose API Reference</fullname> <p>Amazon Kinesis Firehose is a fully-managed service that delivers real-time streaming data to destinations such as Amazon Simple Storage Service (Amazon S3), Amazon Elasticsearch Service (Amazon ES), and Amazon Redshift.</p>'
  x-logo:
    url: 'https://media.amazonwebservices.com/blog/2007/big_pbaws_logo_300px.jpg'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: firehose
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/firehose-2015-08-04.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-direct: true
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://aws.amazon.com/firehose/'
x-hasEquivalentPaths: true
security:
  - hmac: []
paths:
  /:
    post:
      operationId: CreateDeliveryStream
      description: '<p>Creates a delivery stream.</p> <p>By default, you can create up to 20 delivery streams per region.</p> <p>This is an asynchronous operation that immediately returns. The initial status of the delivery stream is <code>CREATING</code>. After the delivery stream is created, its status is <code>ACTIVE</code> and it now accepts data. Attempts to send data to a delivery stream that is not in the <code>ACTIVE</code> state cause an exception. To check the state of a delivery stream, use <a>DescribeDeliveryStream</a>.</p> <p>A delivery stream is configured with a single destination: Amazon S3, Amazon Elasticsearch Service, or Amazon Redshift. You must specify only one of the following destination configuration parameters: <b>ExtendedS3DestinationConfiguration</b>, <b>S3DestinationConfiguration</b>, <b>ElasticsearchDestinationConfiguration</b>, or <b>RedshiftDestinationConfiguration</b>.</p> <p>When you specify <b>S3DestinationConfiguration</b>, you can also provide the following optional values: <b>BufferingHints</b>, <b>EncryptionConfiguration</b>, and <b>CompressionFormat</b>. By default, if no <b>BufferingHints</b> value is provided, Firehose buffers data up to 5 MB or for 5 minutes, whichever condition is satisfied first. Note that <b>BufferingHints</b> is a hint, so there are some cases where the service cannot adhere to these conditions strictly; for example, record boundaries are such that the size is a little over or under the configured buffering size. By default, no encryption is performed. We strongly recommend that you enable encryption to ensure secure data storage in Amazon S3.</p> <p>A few notes about Amazon Redshift as a destination:</p> <ul> <li> <p>An Amazon Redshift destination requires an S3 bucket as intermediate location, as Firehose first delivers data to S3 and then uses <code>COPY</code> syntax to load data into an Amazon Redshift table. This is specified in the <b>RedshiftDestinationConfiguration.S3Configuration</b> parameter.</p> </li> <li> <p>The compression formats <code>SNAPPY</code> or <code>ZIP</code> cannot be specified in <b>RedshiftDestinationConfiguration.S3Configuration</b> because the Amazon Redshift <code>COPY</code> operation that reads from the S3 bucket doesn''t support these compression formats.</p> </li> <li> <p>We strongly recommend that you use the user name and password you provide exclusively with Firehose, and that the permissions for the account are restricted for Amazon Redshift <code>INSERT</code> permissions.</p> </li> </ul> <p>Firehose assumes the IAM role that is configured as part of the destination. The role should allow the Firehose principal to assume the role, and the role should have permissions that allows the service to deliver the data. For more information, see <a href="http://docs.aws.amazon.com/firehose/latest/dev/controlling-access.html#using-iam-s3">Amazon S3 Bucket Access</a> in the <i>Amazon Kinesis Firehose Developer Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDeliveryStreamOutput'
        '480':
          description: InvalidArgumentException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArgumentException'
        '481':
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '482':
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDeliveryStreamInput'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DeleteDeliveryStream':
    post:
      operationId: DeleteDeliveryStream
      description: '<p>Deletes a delivery stream and its data.</p> <p>You can delete a delivery stream only if it is in <code>ACTIVE</code> or <code>DELETING</code> state, and not in the <code>CREATING</code> state. While the deletion request is in process, the delivery stream is in the <code>DELETING</code> state.</p> <p>To check the state of a delivery stream, use <a>DescribeDeliveryStream</a>.</p> <p>While the delivery stream is <code>DELETING</code> state, the service may continue to accept the records, but the service doesn''t make any guarantees with respect to delivering the data. Therefore, as a best practice, you should first stop any applications that are sending records before deleting a delivery stream.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteDeliveryStreamOutput'
        '480':
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
        '481':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteDeliveryStreamInput'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DescribeDeliveryStream':
    post:
      operationId: DescribeDeliveryStream
      description: 'Describes the specified delivery stream and gets the status. For example, after your delivery stream is created, call <a>DescribeDeliveryStream</a> to see if the delivery stream is <code>ACTIVE</code> and therefore ready for data to be sent to it.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeDeliveryStreamOutput'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeDeliveryStreamInput'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#ListDeliveryStreams':
    post:
      operationId: ListDeliveryStreams
      description: '<p>Lists your delivery streams.</p> <p>The number of delivery streams might be too large to return using a single call to <a>ListDeliveryStreams</a>. You can limit the number of delivery streams returned, using the <b>Limit</b> parameter. To determine whether there are more delivery streams to list, check the value of <b>HasMoreDeliveryStreams</b> in the output. If there are more delivery streams to list, you can request them by specifying the name of the last delivery stream returned in the call in the <b>ExclusiveStartDeliveryStreamName</b> parameter of a subsequent call.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDeliveryStreamsOutput'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListDeliveryStreamsInput'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#PutRecord':
    post:
      operationId: PutRecord
      description: '<p>Writes a single data record into an Amazon Kinesis Firehose delivery stream. To write multiple data records into a delivery stream, use <a>PutRecordBatch</a>. Applications using these operations are referred to as producers.</p> <p>By default, each delivery stream can take in up to 2,000 transactions per second, 5,000 records per second, or 5 MB per second. Note that if you use <a>PutRecord</a> and <a>PutRecordBatch</a>, the limits are an aggregate across these two operations for each delivery stream. For more information about limits and how to request an increase, see <a href="http://docs.aws.amazon.com/firehose/latest/dev/limits.html">Amazon Kinesis Firehose Limits</a>. </p> <p>You must specify the name of the delivery stream and the data record when using <a>PutRecord</a>. The data record consists of a data blob that can be up to 1,000 KB in size, and any kind of data, for example, a segment from a log file, geographic location data, web site clickstream data, etc.</p> <p>Firehose buffers records before delivering them to the destination. To disambiguate the data blobs at the destination, a common solution is to use delimiters in the data, such as a newline (<code>\n</code>) or some other character unique within the data. This allows the consumer application(s) to parse individual data items when reading the data from the destination.</p> <p>The <a>PutRecord</a> operation returns a <b>RecordId</b>, which is a unique string assigned to each record. Producer applications can use this ID for purposes such as auditability and investigation.</p> <p>If the <a>PutRecord</a> operation throws a <b>ServiceUnavailableException</b>, back off and retry. If the exception persists, it is possible that the throughput limits have been exceeded for the delivery stream. </p> <p>Data records sent to Firehose are stored for 24 hours from the time they are added to a delivery stream as it attempts to send the records to the destination. If the destination is unreachable for more than 24 hours, the data is no longer available.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutRecordOutput'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InvalidArgumentException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArgumentException'
        '482':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutRecordInput'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#PutRecordBatch':
    post:
      operationId: PutRecordBatch
      description: '<p>Writes multiple data records into a delivery stream in a single call, which can achieve higher throughput per producer than when writing single records. To write single data records into a delivery stream, use <a>PutRecord</a>. Applications using these operations are referred to as producers.</p> <p>By default, each delivery stream can take in up to 2,000 transactions per second, 5,000 records per second, or 5 MB per second. Note that if you use <a>PutRecord</a> and <a>PutRecordBatch</a>, the limits are an aggregate across these two operations for each delivery stream. For more information about limits, see <a href="http://docs.aws.amazon.com/firehose/latest/dev/limits.html">Amazon Kinesis Firehose Limits</a>.</p> <p>Each <a>PutRecordBatch</a> request supports up to 500 records. Each record in the request can be as large as 1,000 KB (before 64-bit encoding), up to a limit of 4 MB for the entire request. These limits cannot be changed.</p> <p>You must specify the name of the delivery stream and the data record when using <a>PutRecord</a>. The data record consists of a data blob that can be up to 1,000 KB in size, and any kind of data, for example, a segment from a log file, geographic location data, web site clickstream data, and so on.</p> <p>Firehose buffers records before delivering them to the destination. To disambiguate the data blobs at the destination, a common solution is to use delimiters in the data, such as a newline (<code>\n</code>) or some other character unique within the data. This allows the consumer application(s) to parse individual data items when reading the data from the destination.</p> <p>The <a>PutRecordBatch</a> response includes a count of failed records, <b>FailedPutCount</b>, and an array of responses, <b>RequestResponses</b>. Each entry in the <b>RequestResponses</b> array provides additional information about the processed record, and directly correlates with a record in the request array using the same ordering, from the top to the bottom. The response array always includes the same number of records as the request array. <b>RequestResponses</b> includes both successfully and unsuccessfully processed records. Firehose attempts to process all records in each <a>PutRecordBatch</a> request. A single record failure does not stop the processing of subsequent records.</p> <p>A successfully processed record includes a <b>RecordId</b> value, which is unique for the record. An unsuccessfully processed record includes <b>ErrorCode</b> and <b>ErrorMessage</b> values. <b>ErrorCode</b> reflects the type of error, and is one of the following values: <code>ServiceUnavailable</code> or <code>InternalFailure</code>. <b>ErrorMessage</b> provides more detailed information about the error.</p> <p>If there is an internal server error or a timeout, the write might have completed or it might have failed. If <b>FailedPutCount</b> is greater than 0, retry the request, resending only those records that might have failed processing. This minimizes the possible duplicate records and also reduces the total bytes sent (and corresponding charges). We recommend that you handle any duplicates at the destination.</p> <p>If <a>PutRecordBatch</a> throws <b>ServiceUnavailableException</b>, back off and retry. If the exception persists, it is possible that the throughput limits have been exceeded for the delivery stream.</p> <p>Data records sent to Firehose are stored for 24 hours from the time they are added to a delivery stream as it attempts to send the records to the destination. If the destination is unreachable for more than 24 hours, the data is no longer available.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutRecordBatchOutput'
        '480':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '481':
          description: InvalidArgumentException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArgumentException'
        '482':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutRecordBatchInput'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#UpdateDestination':
    post:
      operationId: UpdateDestination
      description: '<p>Updates the specified destination of the specified delivery stream.</p> <p>You can use this operation to change the destination type (for example, to replace the Amazon S3 destination with Amazon Redshift) or change the parameters associated with a destination (for example, to change the bucket name of the Amazon S3 destination). The update might not occur immediately. The target delivery stream remains active while the configurations are updated, so data writes to the delivery stream can continue during this process. The updated configurations are usually effective within a few minutes.</p> <p>Note that switching between Amazon ES and other services is not supported. For an Amazon ES destination, you can only update to another Amazon ES destination.</p> <p>If the destination type is the same, Firehose merges the configuration parameters specified with the destination configuration that already exists on the delivery stream. If any of the parameters are not specified in the call, the existing values are retained. For example, in the Amazon S3 destination, if <a>EncryptionConfiguration</a> is not specified then the existing <a>EncryptionConfiguration</a> is maintained on the destination.</p> <p>If the destination type is not the same, for example, changing the destination from Amazon S3 to Amazon Redshift, Firehose does not merge any parameters. In this case, all parameters must be specified.</p> <p>Firehose uses <b>CurrentDeliveryStreamVersionId</b> to avoid race conditions and conflicting merges. This is a required field, and the service updates the configuration only if the existing configuration has a version ID that matches. After the update is applied successfully, the version ID is updated, and can be retrieved using <a>DescribeDeliveryStream</a>. You should use the new version ID to set <b>CurrentDeliveryStreamVersionId</b> in the next call.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateDestinationOutput'
        '480':
          description: InvalidArgumentException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArgumentException'
        '481':
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
        '482':
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '483':
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDestinationInput'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
components:
  schemas:
    AWSKMSKeyARN:
      type: string
      pattern: 'arn:.*'
      minLength: 1
      maxLength: 512
    BooleanObject:
      type: boolean
    BucketARN:
      type: string
      pattern: 'arn:.*'
      minLength: 1
      maxLength: 2048
    BufferingHints:
      type: object
      properties:
        SizeInMBs:
          $ref: '#/components/schemas/SizeInMBs'
        IntervalInSeconds:
          $ref: '#/components/schemas/IntervalInSeconds'
      description: 'Describes hints for the buffering to perform before delivering data to the destination. Please note that these options are treated as hints, and therefore Firehose may choose to use different values when it is optimal.'
    CloudWatchLoggingOptions:
      type: object
      properties:
        Enabled:
          $ref: '#/components/schemas/BooleanObject'
        LogGroupName:
          $ref: '#/components/schemas/LogGroupName'
        LogStreamName:
          $ref: '#/components/schemas/LogStreamName'
      description: Describes the CloudWatch logging options for your delivery stream.
    ClusterJDBCURL:
      type: string
      pattern: 'jdbc:\(redshift\|postgresql\)://\(\(\?!-\)[A-Za-z0-9-]\{1,63\}\(\?<!-\)\.\)\+redshift\.amazonaws\.com:\d\{1,5\}/[a-zA-Z0-9_$]\+'
      minLength: 1
    CompressionFormat:
      type: string
      enum:
        - UNCOMPRESSED
        - GZIP
        - ZIP
        - Snappy
    ConcurrentModificationException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      description: Another modification has already happened. Fetch <b>VersionId</b> again and use it to update the destination.
    CopyCommand:
      type: object
      required:
        - DataTableName
      properties:
        DataTableName:
          $ref: '#/components/schemas/DataTableName'
        DataTableColumns:
          $ref: '#/components/schemas/DataTableColumns'
        CopyOptions:
          $ref: '#/components/schemas/CopyOptions'
      description: Describes a <code>COPY</code> command for Amazon Redshift.
    CopyOptions:
      type: string
    CreateDeliveryStreamInput:
      type: object
      required:
        - DeliveryStreamName
      properties:
        DeliveryStreamName:
          $ref: '#/components/schemas/DeliveryStreamName'
        S3DestinationConfiguration:
          $ref: '#/components/schemas/S3DestinationConfiguration'
        ExtendedS3DestinationConfiguration:
          $ref: '#/components/schemas/ExtendedS3DestinationConfiguration'
        RedshiftDestinationConfiguration:
          $ref: '#/components/schemas/RedshiftDestinationConfiguration'
        ElasticsearchDestinationConfiguration:
          $ref: '#/components/schemas/ElasticsearchDestinationConfiguration'
    CreateDeliveryStreamOutput:
      type: object
      properties:
        DeliveryStreamARN:
          $ref: '#/components/schemas/DeliveryStreamARN'
    Data:
      type: string
      minLength: 0
      maxLength: 1024000
    DataTableColumns:
      type: string
    DataTableName:
      type: string
      minLength: 1
    DeleteDeliveryStreamInput:
      type: object
      required:
        - DeliveryStreamName
      properties:
        DeliveryStreamName:
          $ref: '#/components/schemas/DeliveryStreamName'
    DeleteDeliveryStreamOutput:
      type: object
      properties: {}
    DeliveryStreamARN:
      type: string
      pattern: 'arn:.*'
      minLength: 1
      maxLength: 512
    DeliveryStreamDescription:
      type: object
      required:
        - DeliveryStreamName
        - DeliveryStreamARN
        - DeliveryStreamStatus
        - VersionId
        - Destinations
        - HasMoreDestinations
      properties:
        DeliveryStreamName:
          $ref: '#/components/schemas/DeliveryStreamName'
        DeliveryStreamARN:
          $ref: '#/components/schemas/DeliveryStreamARN'
        DeliveryStreamStatus:
          $ref: '#/components/schemas/DeliveryStreamStatus'
        VersionId:
          $ref: '#/components/schemas/DeliveryStreamVersionId'
        CreateTimestamp:
          $ref: '#/components/schemas/Timestamp'
        LastUpdateTimestamp:
          $ref: '#/components/schemas/Timestamp'
        Destinations:
          $ref: '#/components/schemas/DestinationDescriptionList'
        HasMoreDestinations:
          $ref: '#/components/schemas/BooleanObject'
      description: Contains information about a delivery stream.
    DeliveryStreamName:
      type: string
      pattern: '[a-zA-Z0-9_.-]+'
      minLength: 1
      maxLength: 64
    DeliveryStreamNameList:
      type: array
      items:
        $ref: '#/components/schemas/DeliveryStreamName'
    DeliveryStreamStatus:
      type: string
      enum:
        - CREATING
        - DELETING
        - ACTIVE
    DeliveryStreamVersionId:
      type: string
      pattern: '[0-9]+'
      minLength: 1
      maxLength: 50
    DescribeDeliveryStreamInput:
      type: object
      required:
        - DeliveryStreamName
      properties:
        DeliveryStreamName:
          $ref: '#/components/schemas/DeliveryStreamName'
        Limit:
          $ref: '#/components/schemas/DescribeDeliveryStreamInputLimit'
        ExclusiveStartDestinationId:
          $ref: '#/components/schemas/DestinationId'
    DescribeDeliveryStreamInputLimit:
      type: integer
      minimum: 1
      maximum: 10000
    DescribeDeliveryStreamOutput:
      type: object
      required:
        - DeliveryStreamDescription
      properties:
        DeliveryStreamDescription:
          $ref: '#/components/schemas/DeliveryStreamDescription'
    DestinationDescription:
      type: object
      required:
        - DestinationId
      properties:
        DestinationId:
          $ref: '#/components/schemas/DestinationId'
        S3DestinationDescription:
          $ref: '#/components/schemas/S3DestinationDescription'
        ExtendedS3DestinationDescription:
          $ref: '#/components/schemas/ExtendedS3DestinationDescription'
        RedshiftDestinationDescription:
          $ref: '#/components/schemas/RedshiftDestinationDescription'
        ElasticsearchDestinationDescription:
          $ref: '#/components/schemas/ElasticsearchDestinationDescription'
      description: Describes the destination for a delivery stream.
    DestinationDescriptionList:
      type: array
      items:
        $ref: '#/components/schemas/DestinationDescription'
    DestinationId:
      type: string
      minLength: 1
      maxLength: 100
    ElasticsearchBufferingHints:
      type: object
      properties:
        IntervalInSeconds:
          $ref: '#/components/schemas/ElasticsearchBufferingIntervalInSeconds'
        SizeInMBs:
          $ref: '#/components/schemas/ElasticsearchBufferingSizeInMBs'
      description: Describes the buffering to perform before delivering data to the Amazon ES destination.
    ElasticsearchBufferingIntervalInSeconds:
      type: integer
      minimum: 60
      maximum: 900
    ElasticsearchBufferingSizeInMBs:
      type: integer
      minimum: 1
      maximum: 100
    ElasticsearchDestinationConfiguration:
      type: object
      required:
        - RoleARN
        - DomainARN
        - IndexName
        - TypeName
        - S3Configuration
      properties:
        RoleARN:
          $ref: '#/components/schemas/RoleARN'
        DomainARN:
          $ref: '#/components/schemas/ElasticsearchDomainARN'
        IndexName:
          $ref: '#/components/schemas/ElasticsearchIndexName'
        TypeName:
          $ref: '#/components/schemas/ElasticsearchTypeName'
        IndexRotationPeriod:
          $ref: '#/components/schemas/ElasticsearchIndexRotationPeriod'
        BufferingHints:
          $ref: '#/components/schemas/ElasticsearchBufferingHints'
        RetryOptions:
          $ref: '#/components/schemas/ElasticsearchRetryOptions'
        S3BackupMode:
          $ref: '#/components/schemas/ElasticsearchS3BackupMode'
        S3Configuration:
          $ref: '#/components/schemas/S3DestinationConfiguration'
        ProcessingConfiguration:
          $ref: '#/components/schemas/ProcessingConfiguration'
        CloudWatchLoggingOptions:
          $ref: '#/components/schemas/CloudWatchLoggingOptions'
      description: Describes the configuration of a destination in Amazon ES.
    ElasticsearchDestinationDescription:
      type: object
      properties:
        RoleARN:
          $ref: '#/components/schemas/RoleARN'
        DomainARN:
          $ref: '#/components/schemas/ElasticsearchDomainARN'
        IndexName:
          $ref: '#/components/schemas/ElasticsearchIndexName'
        TypeName:
          $ref: '#/components/schemas/ElasticsearchTypeName'
        IndexRotationPeriod:
          $ref: '#/components/schemas/ElasticsearchIndexRotationPeriod'
        BufferingHints:
          $ref: '#/components/schemas/ElasticsearchBufferingHints'
        RetryOptions:
          $ref: '#/components/schemas/ElasticsearchRetryOptions'
        S3BackupMode:
          $ref: '#/components/schemas/ElasticsearchS3BackupMode'
        S3DestinationDescription:
          $ref: '#/components/schemas/S3DestinationDescription'
        ProcessingConfiguration:
          $ref: '#/components/schemas/ProcessingConfiguration'
        CloudWatchLoggingOptions:
          $ref: '#/components/schemas/CloudWatchLoggingOptions'
      description: The destination description in Amazon ES.
    ElasticsearchDestinationUpdate:
      type: object
      properties:
        RoleARN:
          $ref: '#/components/schemas/RoleARN'
        DomainARN:
          $ref: '#/components/schemas/ElasticsearchDomainARN'
        IndexName:
          $ref: '#/components/schemas/ElasticsearchIndexName'
        TypeName:
          $ref: '#/components/schemas/ElasticsearchTypeName'
        IndexRotationPeriod:
          $ref: '#/components/schemas/ElasticsearchIndexRotationPeriod'
        BufferingHints:
          $ref: '#/components/schemas/ElasticsearchBufferingHints'
        RetryOptions:
          $ref: '#/components/schemas/ElasticsearchRetryOptions'
        S3Update:
          $ref: '#/components/schemas/S3DestinationUpdate'
        ProcessingConfiguration:
          $ref: '#/components/schemas/ProcessingConfiguration'
        CloudWatchLoggingOptions:
          $ref: '#/components/schemas/CloudWatchLoggingOptions'
      description: Describes an update for a destination in Amazon ES.
    ElasticsearchDomainARN:
      type: string
      pattern: 'arn:.*'
      minLength: 1
      maxLength: 512
    ElasticsearchIndexName:
      type: string
      minLength: 1
      maxLength: 80
    ElasticsearchIndexRotationPeriod:
      type: string
      enum:
        - NoRotation
        - OneHour
        - OneDay
        - OneWeek
        - OneMonth
    ElasticsearchRetryDurationInSeconds:
      type: integer
      minimum: 0
      maximum: 7200
    ElasticsearchRetryOptions:
      type: object
      properties:
        DurationInSeconds:
          $ref: '#/components/schemas/ElasticsearchRetryDurationInSeconds'
      description: Configures retry behavior in the event that Firehose is unable to deliver documents to Amazon ES.
    ElasticsearchS3BackupMode:
      type: string
      enum:
        - FailedDocumentsOnly
        - AllDocuments
    ElasticsearchTypeName:
      type: string
      minLength: 1
      maxLength: 100
    EncryptionConfiguration:
      type: object
      properties:
        NoEncryptionConfig:
          $ref: '#/components/schemas/NoEncryptionConfig'
        KMSEncryptionConfig:
          $ref: '#/components/schemas/KMSEncryptionConfig'
      description: Describes the encryption for a destination in Amazon S3.
    ErrorCode:
      type: string
    ErrorMessage:
      type: string
    ExtendedS3DestinationConfiguration:
      type: object
      required:
        - RoleARN
        - BucketARN
      properties:
        RoleARN:
          $ref: '#/components/schemas/RoleARN'
        BucketARN:
          $ref: '#/components/schemas/BucketARN'
        Prefix:
          $ref: '#/components/schemas/Prefix'
        BufferingHints:
          $ref: '#/components/schemas/BufferingHints'
        CompressionFormat:
          $ref: '#/components/schemas/CompressionFormat'
        EncryptionConfiguration:
          $ref: '#/components/schemas/EncryptionConfiguration'
        CloudWatchLoggingOptions:
          $ref: '#/components/schemas/CloudWatchLoggingOptions'
        ProcessingConfiguration:
          $ref: '#/components/schemas/ProcessingConfiguration'
        S3BackupMode:
          $ref: '#/components/schemas/S3BackupMode'
        S3BackupConfiguration:
          $ref: '#/components/schemas/S3DestinationConfiguration'
      description: Describes the configuration of a destination in Amazon S3.
    ExtendedS3DestinationDescription:
      type: object
      required:
        - RoleARN
        - BucketARN
        - BufferingHints
        - CompressionFormat
        - EncryptionConfiguration
      properties:
        RoleARN:
          $ref: '#/components/schemas/RoleARN'
        BucketARN:
          $ref: '#/components/schemas/BucketARN'
        Prefix:
          $ref: '#/components/schemas/Prefix'
        BufferingHints:
          $ref: '#/components/schemas/BufferingHints'
        CompressionFormat:
          $ref: '#/components/schemas/CompressionFormat'
        EncryptionConfiguration:
          $ref: '#/components/schemas/EncryptionConfiguration'
        CloudWatchLoggingOptions:
          $ref: '#/components/schemas/CloudWatchLoggingOptions'
        ProcessingConfiguration:
          $ref: '#/components/schemas/ProcessingConfiguration'
        S3BackupMode:
          $ref: '#/components/schemas/S3BackupMode'
        S3BackupDescription:
          $ref: '#/components/schemas/S3DestinationDescription'
      description: Describes a destination in Amazon S3.
    ExtendedS3DestinationUpdate:
      type: object
      properties:
        RoleARN:
          $ref: '#/components/schemas/RoleARN'
        BucketARN:
          $ref: '#/components/schemas/BucketARN'
        Prefix:
          $ref: '#/components/schemas/Prefix'
        BufferingHints:
          $ref: '#/components/schemas/BufferingHints'
        CompressionFormat:
          $ref: '#/components/schemas/CompressionFormat'
        EncryptionConfiguration:
          $ref: '#/components/schemas/EncryptionConfiguration'
        CloudWatchLoggingOptions:
          $ref: '#/components/schemas/CloudWatchLoggingOptions'
        ProcessingConfiguration:
          $ref: '#/components/schemas/ProcessingConfiguration'
        S3BackupMode:
          $ref: '#/components/schemas/S3BackupMode'
        S3BackupUpdate:
          $ref: '#/components/schemas/S3DestinationUpdate'
      description: Describes an update for a destination in Amazon S3.
    IntervalInSeconds:
      type: integer
      minimum: 60
      maximum: 900
    InvalidArgumentException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      description: The specified input parameter has an value that is not valid.
    KMSEncryptionConfig:
      type: object
      required:
        - AWSKMSKeyARN
      properties:
        AWSKMSKeyARN:
          $ref: '#/components/schemas/AWSKMSKeyARN'
      description: Describes an encryption key for a destination in Amazon S3.
    LimitExceededException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      description: You have already reached the limit for a requested resource.
    ListDeliveryStreamsInput:
      type: object
      properties:
        Limit:
          $ref: '#/components/schemas/ListDeliveryStreamsInputLimit'
        ExclusiveStartDeliveryStreamName:
          $ref: '#/components/schemas/DeliveryStreamName'
    ListDeliveryStreamsInputLimit:
      type: integer
      minimum: 1
      maximum: 10000
    ListDeliveryStreamsOutput:
      type: object
      required:
        - DeliveryStreamNames
        - HasMoreDeliveryStreams
      properties:
        DeliveryStreamNames:
          $ref: '#/components/schemas/DeliveryStreamNameList'
        HasMoreDeliveryStreams:
          $ref: '#/components/schemas/BooleanObject'
    LogGroupName:
      type: string
    LogStreamName:
      type: string
    NoEncryptionConfig:
      type: string
      enum:
        - NoEncryption
    NonNegativeIntegerObject:
      type: integer
      minimum: 0
    Password:
      type: string
      minLength: 6
      format: password
    Prefix:
      type: string
    ProcessingConfiguration:
      type: object
      properties:
        Enabled:
          $ref: '#/components/schemas/BooleanObject'
        Processors:
          $ref: '#/components/schemas/ProcessorList'
      description: Describes a data processing configuration.
    Processor:
      type: object
      required:
        - Type
      properties:
        Type:
          $ref: '#/components/schemas/ProcessorType'
        Parameters:
          $ref: '#/components/schemas/ProcessorParameterList'
      description: Describes a data processor.
    ProcessorList:
      type: array
      items:
        $ref: '#/components/schemas/Processor'
    ProcessorParameter:
      type: object
      required:
        - ParameterName
        - ParameterValue
      properties:
        ParameterName:
          $ref: '#/components/schemas/ProcessorParameterName'
        ParameterValue:
          $ref: '#/components/schemas/ProcessorParameterValue'
      description: Describes the processor parameter.
    ProcessorParameterList:
      type: array
      items:
        $ref: '#/components/schemas/ProcessorParameter'
    ProcessorParameterName:
      type: string
      enum:
        - LambdaArn
        - NumberOfRetries
    ProcessorParameterValue:
      type: string
      minLength: 1
      maxLength: 512
    ProcessorType:
      type: string
      enum:
        - Lambda
    PutRecordBatchInput:
      type: object
      required:
        - DeliveryStreamName
        - Records
      properties:
        DeliveryStreamName:
          $ref: '#/components/schemas/DeliveryStreamName'
        Records:
          $ref: '#/components/schemas/PutRecordBatchRequestEntryList'
    PutRecordBatchOutput:
      type: object
      required:
        - FailedPutCount
        - RequestResponses
      properties:
        FailedPutCount:
          $ref: '#/components/schemas/NonNegativeIntegerObject'
        RequestResponses:
          $ref: '#/components/schemas/PutRecordBatchResponseEntryList'
    PutRecordBatchRequestEntryList:
      type: array
      items:
        $ref: '#/components/schemas/Record'
      minItems: 1
      maxItems: 500
    PutRecordBatchResponseEntry:
      type: object
      properties:
        RecordId:
          $ref: '#/components/schemas/PutResponseRecordId'
        ErrorCode:
          $ref: '#/components/schemas/ErrorCode'
        ErrorMessage:
          $ref: '#/components/schemas/ErrorMessage'
      description: 'Contains the result for an individual record from a <a>PutRecordBatch</a> request. If the record is successfully added to your delivery stream, it receives a record ID. If the record fails to be added to your delivery stream, the result includes an error code and an error message.'
    PutRecordBatchResponseEntryList:
      type: array
      items:
        $ref: '#/components/schemas/PutRecordBatchResponseEntry'
      minItems: 1
      maxItems: 500
    PutRecordInput:
      type: object
      required:
        - DeliveryStreamName
        - Record
      properties:
        DeliveryStreamName:
          $ref: '#/components/schemas/DeliveryStreamName'
        Record:
          $ref: '#/components/schemas/Record'
    PutRecordOutput:
      type: object
      required:
        - RecordId
      properties:
        RecordId:
          $ref: '#/components/schemas/PutResponseRecordId'
    PutResponseRecordId:
      type: string
      minLength: 1
    Record:
      type: object
      required:
        - Data
      properties:
        Data:
          $ref: '#/components/schemas/Data'
      description: The unit of data in a delivery stream.
    RedshiftDestinationConfiguration:
      type: object
      required:
        - RoleARN
        - ClusterJDBCURL
        - CopyCommand
        - Username
        - Password
        - S3Configuration
      properties:
        RoleARN:
          $ref: '#/components/schemas/RoleARN'
        ClusterJDBCURL:
          $ref: '#/components/schemas/ClusterJDBCURL'
        CopyCommand:
          $ref: '#/components/schemas/CopyCommand'
        Username:
          $ref: '#/components/schemas/Username'
        Password:
          $ref: '#/components/schemas/Password'
        RetryOptions:
          $ref: '#/components/schemas/RedshiftRetryOptions'
        S3Configuration:
          $ref: '#/components/schemas/S3DestinationConfiguration'
        ProcessingConfiguration:
          $ref: '#/components/schemas/ProcessingConfiguration'
        S3BackupMode:
          $ref: '#/components/schemas/RedshiftS3BackupMode'
        S3BackupConfiguration:
          $ref: '#/components/schemas/S3DestinationConfiguration'
        CloudWatchLoggingOptions:
          $ref: '#/components/schemas/CloudWatchLoggingOptions'
      description: Describes the configuration of a destination in Amazon Redshift.
    RedshiftDestinationDescription:
      type: object
      required:
        - RoleARN
        - ClusterJDBCURL
        - CopyCommand
        - Username
        - S3DestinationDescription
      properties:
        RoleARN:
          $ref: '#/components/schemas/RoleARN'
        ClusterJDBCURL:
          $ref: '#/components/schemas/ClusterJDBCURL'
        CopyCommand:
          $ref: '#/components/schemas/CopyCommand'
        Username:
          $ref: '#/components/schemas/Username'
        RetryOptions:
          $ref: '#/components/schemas/RedshiftRetryOptions'
        S3DestinationDescription:
          $ref: '#/components/schemas/S3DestinationDescription'
        ProcessingConfiguration:
          $ref: '#/components/schemas/ProcessingConfiguration'
        S3BackupMode:
          $ref: '#/components/schemas/RedshiftS3BackupMode'
        S3BackupDescription:
          $ref: '#/components/schemas/S3DestinationDescription'
        CloudWatchLoggingOptions:
          $ref: '#/components/schemas/CloudWatchLoggingOptions'
      description: Describes a destination in Amazon Redshift.
    RedshiftDestinationUpdate:
      type: object
      properties:
        RoleARN:
          $ref: '#/components/schemas/RoleARN'
        ClusterJDBCURL:
          $ref: '#/components/schemas/ClusterJDBCURL'
        CopyCommand:
          $ref: '#/components/schemas/CopyCommand'
        Username:
          $ref: '#/components/schemas/Username'
        Password:
          $ref: '#/components/schemas/Password'
        RetryOptions:
          $ref: '#/components/schemas/RedshiftRetryOptions'
        S3Update:
          $ref: '#/components/schemas/S3DestinationUpdate'
        ProcessingConfiguration:
          $ref: '#/components/schemas/ProcessingConfiguration'
        S3BackupMode:
          $ref: '#/components/schemas/RedshiftS3BackupMode'
        S3BackupUpdate:
          $ref: '#/components/schemas/S3DestinationUpdate'
        CloudWatchLoggingOptions:
          $ref: '#/components/schemas/CloudWatchLoggingOptions'
      description: Describes an update for a destination in Amazon Redshift.
    RedshiftRetryDurationInSeconds:
      type: integer
      minimum: 0
      maximum: 7200
    RedshiftRetryOptions:
      type: object
      properties:
        DurationInSeconds:
          $ref: '#/components/schemas/RedshiftRetryDurationInSeconds'
      description: Configures retry behavior in the event that Firehose is unable to deliver documents to Amazon Redshift.
    RedshiftS3BackupMode:
      type: string
      enum:
        - Disabled
        - Enabled
    ResourceInUseException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      description: The resource is already in use and not available for this operation.
    ResourceNotFoundException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      description: The specified resource could not be found.
    RoleARN:
      type: string
      pattern: 'arn:.*'
      minLength: 1
      maxLength: 512
    S3BackupMode:
      type: string
      enum:
        - Disabled
        - Enabled
    S3DestinationConfiguration:
      type: object
      required:
        - RoleARN
        - BucketARN
      properties:
        RoleARN:
          $ref: '#/components/schemas/RoleARN'
        BucketARN:
          $ref: '#/components/schemas/BucketARN'
        Prefix:
          $ref: '#/components/schemas/Prefix'
        BufferingHints:
          $ref: '#/components/schemas/BufferingHints'
        CompressionFormat:
          $ref: '#/components/schemas/CompressionFormat'
        EncryptionConfiguration:
          $ref: '#/components/schemas/EncryptionConfiguration'
        CloudWatchLoggingOptions:
          $ref: '#/components/schemas/CloudWatchLoggingOptions'
      description: Describes the configuration of a destination in Amazon S3.
    S3DestinationDescription:
      type: object
      required:
        - RoleARN
        - BucketARN
        - BufferingHints
        - CompressionFormat
        - EncryptionConfiguration
      properties:
        RoleARN:
          $ref: '#/components/schemas/RoleARN'
        BucketARN:
          $ref: '#/components/schemas/BucketARN'
        Prefix:
          $ref: '#/components/schemas/Prefix'
        BufferingHints:
          $ref: '#/components/schemas/BufferingHints'
        CompressionFormat:
          $ref: '#/components/schemas/CompressionFormat'
        EncryptionConfiguration:
          $ref: '#/components/schemas/EncryptionConfiguration'
        CloudWatchLoggingOptions:
          $ref: '#/components/schemas/CloudWatchLoggingOptions'
      description: Describes a destination in Amazon S3.
    S3DestinationUpdate:
      type: object
      properties:
        RoleARN:
          $ref: '#/components/schemas/RoleARN'
        BucketARN:
          $ref: '#/components/schemas/BucketARN'
        Prefix:
          $ref: '#/components/schemas/Prefix'
        BufferingHints:
          $ref: '#/components/schemas/BufferingHints'
        CompressionFormat:
          $ref: '#/components/schemas/CompressionFormat'
        EncryptionConfiguration:
          $ref: '#/components/schemas/EncryptionConfiguration'
        CloudWatchLoggingOptions:
          $ref: '#/components/schemas/CloudWatchLoggingOptions'
      description: Describes an update for a destination in Amazon S3.
    ServiceUnavailableException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      description: 'The service is unavailable, back off and retry the operation. If you continue to see the exception, throughput limits for the delivery stream may have been exceeded. For more information about limits and how to request an increase, see <a href="http://docs.aws.amazon.com/firehose/latest/dev/limits.html">Amazon Kinesis Firehose Limits</a>.'
    SizeInMBs:
      type: integer
      minimum: 1
      maximum: 128
    Timestamp:
      type: string
      format: date-time
    UpdateDestinationInput:
      type: object
      required:
        - DeliveryStreamName
        - CurrentDeliveryStreamVersionId
        - DestinationId
      properties:
        DeliveryStreamName:
          $ref: '#/components/schemas/DeliveryStreamName'
        CurrentDeliveryStreamVersionId:
          $ref: '#/components/schemas/DeliveryStreamVersionId'
        DestinationId:
          $ref: '#/components/schemas/DestinationId'
        S3DestinationUpdate:
          $ref: '#/components/schemas/S3DestinationUpdate'
        ExtendedS3DestinationUpdate:
          $ref: '#/components/schemas/ExtendedS3DestinationUpdate'
        RedshiftDestinationUpdate:
          $ref: '#/components/schemas/RedshiftDestinationUpdate'
        ElasticsearchDestinationUpdate:
          $ref: '#/components/schemas/ElasticsearchDestinationUpdate'
    UpdateDestinationOutput:
      type: object
      properties: {}
    Username:
      type: string
      minLength: 1
      format: password
  parameters:
    Action:
      name: Action
      in: header
      required: true
      schema:
        type: string
    Version:
      name: Version
      in: header
      required: true
      schema:
        type: string
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      required: false
      schema:
        type: string
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      required: false
      schema:
        type: string
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      required: false
      schema:
        type: string
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      required: false
      schema:
        type: string
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      required: false
      schema:
        type: string
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      required: false
      schema:
        type: string
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      required: false
      schema:
        type: string
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
