openapi: 3.0.0
servers:
  - url: 'http://ssm.amazonaws.com/'
info:
  version: '2014-11-06'
  x-release: v4
  title: Amazon Simple Systems Manager (SSM)
  description: '<fullname>Amazon EC2 Systems Manager</fullname> <p>Amazon EC2 Systems Manager is a collection of capabilities that helps you automate management tasks such as collecting system inventory, applying operating system (OS) patches, automating the creation of Amazon Machine Images (AMIs), and configuring operating systems (OSs) and applications at scale. Systems Manager lets you remotely and securely manage the configuration of your managed instances. A <i>managed instance</i> is any Amazon EC2 instance or on-premises machine in your hybrid environment that has been configured for Systems Manager.</p> <p>This reference is intended to be used with the <a href="http://docs.aws.amazon.com/systems-manager/latest/userguide/">Amazon EC2 Systems Manager User Guide</a>.</p> <p>To get started, verify prerequisites and configure managed instances. For more information, see <a href="http://docs.aws.amazon.com/systems-manager/latest/userguide/systems-manager-setting-up.html">Systems Manager Prerequisites</a>.</p>'
  x-logo:
    url: 'https://media.amazonwebservices.com/blog/2007/big_pbaws_logo_300px.jpg'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: ssm
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/ssm-2014-11-06.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-direct: true
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://aws.amazon.com/ssm/'
x-hasEquivalentPaths: true
security:
  - hmac: []
paths:
  /:
    post:
      operationId: AddTagsToResource
      description: '<p>Adds or overwrites one or more tags for the specified resource. Tags are metadata that you assign to your managed instances, Maintenance Windows, or Parameter Store parameters. Tags enable you to categorize your resources in different ways, for example, by purpose, owner, or environment. Each tag consists of a key and an optional value, both of which you define. For example, you could define a set of tags for your account''s managed instances that helps you track each instance''s owner and stack level. For example: Key=Owner and Value=DbAdmin, SysAdmin, or Dev. Or Key=Stack and Value=Production, Pre-Production, or Test.</p> <p>Each resource can have a maximum of 10 tags. </p> <p>We recommend that you devise a set of tag keys that meets your needs for each resource type. Using a consistent set of tag keys makes it easier for you to manage your resources. You can search and filter the resources based on the tags you add. Tags don''t have any semantic meaning to Amazon EC2 and are interpreted strictly as a string of characters. </p> <p>For more information about tags, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html">Tagging Your Amazon EC2 Resources</a> in the <i>Amazon EC2 User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddTagsToResourceResult'
        '480':
          description: InvalidResourceType
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidResourceType'
        '481':
          description: InvalidResourceId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidResourceId'
        '482':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
        '483':
          description: TooManyTagsError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyTagsError'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddTagsToResourceRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#CancelCommand':
    post:
      operationId: CancelCommand
      description: Attempts to cancel the command specified by the Command ID. There is no guarantee that the command will be terminated and the underlying process stopped.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancelCommandResult'
        '480':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
        '481':
          description: InvalidCommandId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidCommandId'
        '482':
          description: InvalidInstanceId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInstanceId'
        '483':
          description: DuplicateInstanceId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DuplicateInstanceId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelCommandRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#CreateActivation':
    post:
      operationId: CreateActivation
      description: 'Registers your on-premises server or virtual machine with Amazon EC2 so that you can manage these resources using Run Command. An on-premises server or virtual machine that has been registered with EC2 is called a managed instance. For more information about activations, see <a href="http://docs.aws.amazon.com/systems-manager/latest/userguide/systems-manager-managedinstances.html">Setting Up Systems Manager in Hybrid Environments</a>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateActivationResult'
        '480':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateActivationRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#CreateAssociation':
    post:
      operationId: CreateAssociation
      description: '<p>Associates the specified Systems Manager document with the specified instances or targets.</p> <p>When you associate a document with one or more instances using instance IDs or tags, the SSM Agent running on the instance processes the document and configures the instance as specified.</p> <p>If you associate a document with an instance that already has an associated document, the system throws the AssociationAlreadyExists exception.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAssociationResult'
        '480':
          description: AssociationAlreadyExists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssociationAlreadyExists'
        '481':
          description: AssociationLimitExceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssociationLimitExceeded'
        '482':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
        '483':
          description: InvalidDocument
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidDocument'
        '484':
          description: InvalidDocumentVersion
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidDocumentVersion'
        '485':
          description: InvalidInstanceId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInstanceId'
        '486':
          description: UnsupportedPlatformType
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedPlatformType'
        '487':
          description: InvalidOutputLocation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidOutputLocation'
        '488':
          description: InvalidParameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameters'
        '489':
          description: InvalidTarget
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidTarget'
        '490':
          description: InvalidSchedule
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidSchedule'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAssociationRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#CreateAssociationBatch':
    post:
      operationId: CreateAssociationBatch
      description: '<p>Associates the specified Systems Manager document with the specified instances or targets.</p> <p>When you associate a document with one or more instances using instance IDs or tags, the SSM Agent running on the instance processes the document and configures the instance as specified.</p> <p>If you associate a document with an instance that already has an associated document, the system throws the AssociationAlreadyExists exception.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAssociationBatchResult'
        '480':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
        '481':
          description: InvalidDocument
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidDocument'
        '482':
          description: InvalidDocumentVersion
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidDocumentVersion'
        '483':
          description: InvalidInstanceId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInstanceId'
        '484':
          description: InvalidParameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameters'
        '485':
          description: DuplicateInstanceId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DuplicateInstanceId'
        '486':
          description: AssociationLimitExceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssociationLimitExceeded'
        '487':
          description: UnsupportedPlatformType
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedPlatformType'
        '488':
          description: InvalidOutputLocation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidOutputLocation'
        '489':
          description: InvalidTarget
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidTarget'
        '490':
          description: InvalidSchedule
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidSchedule'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAssociationBatchRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#CreateDocument':
    post:
      operationId: CreateDocument
      description: '<p>Creates a Systems Manager document.</p> <p>After you create a document, you can use CreateAssociation to associate it with one or more running instances.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDocumentResult'
        '480':
          description: DocumentAlreadyExists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentAlreadyExists'
        '481':
          description: MaxDocumentSizeExceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaxDocumentSizeExceeded'
        '482':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
        '483':
          description: InvalidDocumentContent
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidDocumentContent'
        '484':
          description: DocumentLimitExceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentLimitExceeded'
        '485':
          description: InvalidDocumentSchemaVersion
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidDocumentSchemaVersion'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDocumentRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#CreateMaintenanceWindow':
    post:
      operationId: CreateMaintenanceWindow
      description: Creates a new Maintenance Window.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateMaintenanceWindowResult'
        '480':
          description: IdempotentParameterMismatch
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdempotentParameterMismatch'
        '481':
          description: ResourceLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
        '482':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateMaintenanceWindowRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#CreatePatchBaseline':
    post:
      operationId: CreatePatchBaseline
      description: Creates a patch baseline.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatePatchBaselineResult'
        '480':
          description: IdempotentParameterMismatch
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdempotentParameterMismatch'
        '481':
          description: ResourceLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
        '482':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePatchBaselineRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#CreateResourceDataSync':
    post:
      operationId: CreateResourceDataSync
      description: '<p>Creates a resource data sync configuration to a single bucket in Amazon S3. This is an asynchronous operation that returns immediately. After a successful initial sync is completed, the system continuously syncs data to the Amazon S3 bucket. To check the status of the sync, use the <a href="API_ListResourceDataSync.html">ListResourceDataSync</a> operation.</p> <p>By default, data is not encrypted in Amazon S3. We strongly recommend that you enable encryption in Amazon S3 to ensure secure data storage. We also recommend that you secure access to the Amazon S3 bucket by creating a restrictive bucket policy. To view an example of a restrictive Amazon S3 bucket policy for Resource Data Sync, see <a href="http://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-inventory-configuring.html#sysman-inventory-datasync">Configuring Resource Data Sync for Inventory</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateResourceDataSyncResult'
        '480':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
        '481':
          description: ResourceDataSyncCountExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceDataSyncCountExceededException'
        '482':
          description: ResourceDataSyncAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceDataSyncAlreadyExistsException'
        '483':
          description: ResourceDataSyncInvalidConfigurationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceDataSyncInvalidConfigurationException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateResourceDataSyncRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DeleteActivation':
    post:
      operationId: DeleteActivation
      description: 'Deletes an activation. You are not required to delete an activation. If you delete an activation, you can no longer use it to register additional managed instances. Deleting an activation does not de-register managed instances. You must manually de-register managed instances.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteActivationResult'
        '480':
          description: InvalidActivationId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidActivationId'
        '481':
          description: InvalidActivation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidActivation'
        '482':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteActivationRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DeleteAssociation':
    post:
      operationId: DeleteAssociation
      description: '<p>Disassociates the specified Systems Manager document from the specified instance.</p> <p>When you disassociate a document from an instance, it does not change the configuration of the instance. To change the configuration state of an instance after you disassociate a document, you must create a new document with the desired configuration and associate it with the instance.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteAssociationResult'
        '480':
          description: AssociationDoesNotExist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssociationDoesNotExist'
        '481':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
        '482':
          description: InvalidDocument
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidDocument'
        '483':
          description: InvalidInstanceId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInstanceId'
        '484':
          description: TooManyUpdates
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyUpdates'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteAssociationRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DeleteDocument':
    post:
      operationId: DeleteDocument
      description: '<p>Deletes the Systems Manager document and all instance associations to the document.</p> <p>Before you delete the document, we recommend that you use <a>DeleteAssociation</a> to disassociate all instances that are associated with the document.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteDocumentResult'
        '480':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
        '481':
          description: InvalidDocument
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidDocument'
        '482':
          description: InvalidDocumentOperation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidDocumentOperation'
        '483':
          description: AssociatedInstances
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssociatedInstances'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteDocumentRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DeleteMaintenanceWindow':
    post:
      operationId: DeleteMaintenanceWindow
      description: Deletes a Maintenance Window.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteMaintenanceWindowResult'
        '480':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteMaintenanceWindowRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DeleteParameter':
    post:
      operationId: DeleteParameter
      description: Delete a parameter from the system.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteParameterResult'
        '480':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
        '481':
          description: ParameterNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParameterNotFound'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteParameterRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DeleteParameters':
    post:
      operationId: DeleteParameters
      description: Delete a list of parameters.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteParametersResult'
        '480':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteParametersRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DeletePatchBaseline':
    post:
      operationId: DeletePatchBaseline
      description: Deletes a patch baseline.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeletePatchBaselineResult'
        '480':
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
        '481':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeletePatchBaselineRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DeleteResourceDataSync':
    post:
      operationId: DeleteResourceDataSync
      description: 'Deletes a Resource Data Sync configuration. After the configuration is deleted, changes to inventory data on managed instances are no longer synced with the target Amazon S3 bucket. Deleting a sync configuration does not delete data in the target Amazon S3 bucket.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteResourceDataSyncResult'
        '480':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
        '481':
          description: ResourceDataSyncNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceDataSyncNotFoundException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteResourceDataSyncRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DeregisterManagedInstance':
    post:
      operationId: DeregisterManagedInstance
      description: 'Removes the server or virtual machine from the list of registered servers. You can reregister the instance again at any time. If you don''t plan to use Run Command on the server, we suggest uninstalling the SSM Agent first.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeregisterManagedInstanceResult'
        '480':
          description: InvalidInstanceId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInstanceId'
        '481':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeregisterManagedInstanceRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DeregisterPatchBaselineForPatchGroup':
    post:
      operationId: DeregisterPatchBaselineForPatchGroup
      description: Removes a patch group from a patch baseline.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeregisterPatchBaselineForPatchGroupResult'
        '480':
          description: InvalidResourceId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidResourceId'
        '481':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeregisterPatchBaselineForPatchGroupRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DeregisterTargetFromMaintenanceWindow':
    post:
      operationId: DeregisterTargetFromMaintenanceWindow
      description: Removes a target from a Maintenance Window.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeregisterTargetFromMaintenanceWindowResult'
        '480':
          description: DoesNotExistException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoesNotExistException'
        '481':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeregisterTargetFromMaintenanceWindowRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DeregisterTaskFromMaintenanceWindow':
    post:
      operationId: DeregisterTaskFromMaintenanceWindow
      description: Removes a task from a Maintenance Window.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeregisterTaskFromMaintenanceWindowResult'
        '480':
          description: DoesNotExistException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoesNotExistException'
        '481':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeregisterTaskFromMaintenanceWindowRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DescribeActivations':
    post:
      operationId: DescribeActivations
      description: 'Details about the activation, including: the date and time the activation was created, the expiration date, the IAM role assigned to the instances in the activation, and the number of instances activated by this registration.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeActivationsResult'
        '480':
          description: InvalidFilter
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidFilter'
        '481':
          description: InvalidNextToken
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextToken'
        '482':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeActivationsRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DescribeAssociation':
    post:
      operationId: DescribeAssociation
      description: Describes the associations for the specified Systems Manager document or instance.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeAssociationResult'
        '480':
          description: AssociationDoesNotExist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssociationDoesNotExist'
        '481':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
        '482':
          description: InvalidDocument
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidDocument'
        '483':
          description: InvalidInstanceId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInstanceId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeAssociationRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DescribeAutomationExecutions':
    post:
      operationId: DescribeAutomationExecutions
      description: Provides details about all active and terminated Automation executions.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeAutomationExecutionsResult'
        '480':
          description: InvalidNextToken
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextToken'
        '481':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeAutomationExecutionsRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DescribeAvailablePatches':
    post:
      operationId: DescribeAvailablePatches
      description: Lists all patches that could possibly be included in a patch baseline.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeAvailablePatchesResult'
        '480':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeAvailablePatchesRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DescribeDocument':
    post:
      operationId: DescribeDocument
      description: Describes the specified SSM document.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeDocumentResult'
        '480':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
        '481':
          description: InvalidDocument
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidDocument'
        '482':
          description: InvalidDocumentVersion
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidDocumentVersion'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeDocumentRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DescribeDocumentPermission':
    post:
      operationId: DescribeDocumentPermission
      description: 'Describes the permissions for a Systems Manager document. If you created the document, you are the owner. If a document is shared, it can either be shared privately (by specifying a user''s AWS account ID) or publicly (<i>All</i>). '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeDocumentPermissionResponse'
        '480':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
        '481':
          description: InvalidDocument
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidDocument'
        '482':
          description: InvalidPermissionType
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidPermissionType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeDocumentPermissionRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DescribeEffectiveInstanceAssociations':
    post:
      operationId: DescribeEffectiveInstanceAssociations
      description: All associations for the instance(s).
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeEffectiveInstanceAssociationsResult'
        '480':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
        '481':
          description: InvalidInstanceId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInstanceId'
        '482':
          description: InvalidNextToken
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextToken'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeEffectiveInstanceAssociationsRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DescribeEffectivePatchesForPatchBaseline':
    post:
      operationId: DescribeEffectivePatchesForPatchBaseline
      description: Retrieves the current effective patches (the patch and the approval state) for the specified patch baseline. Note that this API applies only to Windows patch baselines.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeEffectivePatchesForPatchBaselineResult'
        '480':
          description: InvalidResourceId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidResourceId'
        '481':
          description: DoesNotExistException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoesNotExistException'
        '482':
          description: UnsupportedOperatingSystem
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperatingSystem'
        '483':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeEffectivePatchesForPatchBaselineRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DescribeInstanceAssociationsStatus':
    post:
      operationId: DescribeInstanceAssociationsStatus
      description: The status of the associations for the instance(s).
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeInstanceAssociationsStatusResult'
        '480':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
        '481':
          description: InvalidInstanceId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInstanceId'
        '482':
          description: InvalidNextToken
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextToken'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeInstanceAssociationsStatusRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DescribeInstanceInformation':
    post:
      operationId: DescribeInstanceInformation
      description: 'Describes one or more of your instances. You can use this to get information about instances like the operating system platform, the SSM Agent version (Linux), status etc. If you specify one or more instance IDs, it returns information for those instances. If you do not specify instance IDs, it returns information for all your instances. If you specify an instance ID that is not valid or an instance that you do not own, you receive an error. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeInstanceInformationResult'
        '480':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
        '481':
          description: InvalidInstanceId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInstanceId'
        '482':
          description: InvalidNextToken
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextToken'
        '483':
          description: InvalidInstanceInformationFilterValue
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInstanceInformationFilterValue'
        '484':
          description: InvalidFilterKey
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidFilterKey'
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeInstanceInformationRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DescribeInstancePatchStates':
    post:
      operationId: DescribeInstancePatchStates
      description: Retrieves the high-level patch state of one or more instances.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeInstancePatchStatesResult'
        '480':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
        '481':
          description: InvalidNextToken
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextToken'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeInstancePatchStatesRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DescribeInstancePatchStatesForPatchGroup':
    post:
      operationId: DescribeInstancePatchStatesForPatchGroup
      description: Retrieves the high-level patch state for the instances in the specified patch group.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeInstancePatchStatesForPatchGroupResult'
        '480':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
        '481':
          description: InvalidFilter
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidFilter'
        '482':
          description: InvalidNextToken
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextToken'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeInstancePatchStatesForPatchGroupRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DescribeInstancePatches':
    post:
      operationId: DescribeInstancePatches
      description: Retrieves information about the patches on the specified instance and their state relative to the patch baseline being used for the instance.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeInstancePatchesResult'
        '480':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
        '481':
          description: InvalidInstanceId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInstanceId'
        '482':
          description: InvalidFilter
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidFilter'
        '483':
          description: InvalidNextToken
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextToken'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeInstancePatchesRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DescribeMaintenanceWindowExecutionTaskInvocations':
    post:
      operationId: DescribeMaintenanceWindowExecutionTaskInvocations
      description: Retrieves the individual task executions (one per target) for a particular task executed as part of a Maintenance Window execution.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeMaintenanceWindowExecutionTaskInvocationsResult'
        '480':
          description: DoesNotExistException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoesNotExistException'
        '481':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeMaintenanceWindowExecutionTaskInvocationsRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DescribeMaintenanceWindowExecutionTasks':
    post:
      operationId: DescribeMaintenanceWindowExecutionTasks
      description: 'For a given Maintenance Window execution, lists the tasks that were executed.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeMaintenanceWindowExecutionTasksResult'
        '480':
          description: DoesNotExistException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoesNotExistException'
        '481':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeMaintenanceWindowExecutionTasksRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DescribeMaintenanceWindowExecutions':
    post:
      operationId: DescribeMaintenanceWindowExecutions
      description: 'Lists the executions of a Maintenance Window (meaning, information about when the Maintenance Window was scheduled to be active and information about tasks registered and run with the Maintenance Window).'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeMaintenanceWindowExecutionsResult'
        '480':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeMaintenanceWindowExecutionsRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DescribeMaintenanceWindowTargets':
    post:
      operationId: DescribeMaintenanceWindowTargets
      description: Lists the targets registered with the Maintenance Window.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeMaintenanceWindowTargetsResult'
        '480':
          description: DoesNotExistException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoesNotExistException'
        '481':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeMaintenanceWindowTargetsRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DescribeMaintenanceWindowTasks':
    post:
      operationId: DescribeMaintenanceWindowTasks
      description: Lists the tasks in a Maintenance Window.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeMaintenanceWindowTasksResult'
        '480':
          description: DoesNotExistException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoesNotExistException'
        '481':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeMaintenanceWindowTasksRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DescribeMaintenanceWindows':
    post:
      operationId: DescribeMaintenanceWindows
      description: Retrieves the Maintenance Windows in an AWS account.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeMaintenanceWindowsResult'
        '480':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeMaintenanceWindowsRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DescribeParameters':
    post:
      operationId: DescribeParameters
      description: Get information about a parameter.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeParametersResult'
        '480':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
        '481':
          description: InvalidFilterKey
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidFilterKey'
        '482':
          description: InvalidFilterOption
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidFilterOption'
        '483':
          description: InvalidFilterValue
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidFilterValue'
        '484':
          description: InvalidNextToken
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextToken'
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeParametersRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DescribePatchBaselines':
    post:
      operationId: DescribePatchBaselines
      description: Lists the patch baselines in your AWS account.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribePatchBaselinesResult'
        '480':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribePatchBaselinesRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DescribePatchGroupState':
    post:
      operationId: DescribePatchGroupState
      description: Returns high-level aggregated patch compliance state for a patch group.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribePatchGroupStateResult'
        '480':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
        '481':
          description: InvalidNextToken
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextToken'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribePatchGroupStateRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DescribePatchGroups':
    post:
      operationId: DescribePatchGroups
      description: Lists all patch groups that have been registered with patch baselines.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribePatchGroupsResult'
        '480':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribePatchGroupsRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#GetAutomationExecution':
    post:
      operationId: GetAutomationExecution
      description: Get detailed information about a particular Automation execution.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAutomationExecutionResult'
        '480':
          description: AutomationExecutionNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutomationExecutionNotFoundException'
        '481':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetAutomationExecutionRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#GetCommandInvocation':
    post:
      operationId: GetCommandInvocation
      description: 'Returns detailed information about command execution for an invocation or plugin. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCommandInvocationResult'
        '480':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
        '481':
          description: InvalidCommandId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidCommandId'
        '482':
          description: InvalidInstanceId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInstanceId'
        '483':
          description: InvalidPluginName
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidPluginName'
        '484':
          description: InvocationDoesNotExist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvocationDoesNotExist'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetCommandInvocationRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#GetDefaultPatchBaseline':
    post:
      operationId: GetDefaultPatchBaseline
      description: 'Retrieves the default patch baseline. Note that Systems Manager supports creating multiple default patch baselines. For example, you can create a default patch baseline for each operating system.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDefaultPatchBaselineResult'
        '480':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetDefaultPatchBaselineRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#GetDeployablePatchSnapshotForInstance':
    post:
      operationId: GetDeployablePatchSnapshotForInstance
      description: 'Retrieves the current snapshot for the patch baseline the instance uses. This API is primarily used by the AWS-RunPatchBaseline Systems Manager document. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDeployablePatchSnapshotForInstanceResult'
        '480':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
        '481':
          description: UnsupportedOperatingSystem
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperatingSystem'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetDeployablePatchSnapshotForInstanceRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#GetDocument':
    post:
      operationId: GetDocument
      description: Gets the contents of the specified SSM document.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDocumentResult'
        '480':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
        '481':
          description: InvalidDocument
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidDocument'
        '482':
          description: InvalidDocumentVersion
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidDocumentVersion'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetDocumentRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#GetInventory':
    post:
      operationId: GetInventory
      description: Query inventory information.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetInventoryResult'
        '480':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
        '481':
          description: InvalidFilter
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidFilter'
        '482':
          description: InvalidNextToken
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextToken'
        '483':
          description: InvalidTypeNameException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidTypeNameException'
        '484':
          description: InvalidResultAttributeException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidResultAttributeException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetInventoryRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#GetInventorySchema':
    post:
      operationId: GetInventorySchema
      description: 'Return a list of inventory type names for the account, or return a list of attribute names for a specific Inventory item type. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetInventorySchemaResult'
        '480':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
        '481':
          description: InvalidTypeNameException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidTypeNameException'
        '482':
          description: InvalidNextToken
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextToken'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetInventorySchemaRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#GetMaintenanceWindow':
    post:
      operationId: GetMaintenanceWindow
      description: Retrieves a Maintenance Window.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMaintenanceWindowResult'
        '480':
          description: DoesNotExistException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoesNotExistException'
        '481':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetMaintenanceWindowRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#GetMaintenanceWindowExecution':
    post:
      operationId: GetMaintenanceWindowExecution
      description: Retrieves details about a specific task executed as part of a Maintenance Window execution.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMaintenanceWindowExecutionResult'
        '480':
          description: DoesNotExistException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoesNotExistException'
        '481':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetMaintenanceWindowExecutionRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#GetMaintenanceWindowExecutionTask':
    post:
      operationId: GetMaintenanceWindowExecutionTask
      description: Retrieves the details about a specific task executed as part of a Maintenance Window execution.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMaintenanceWindowExecutionTaskResult'
        '480':
          description: DoesNotExistException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoesNotExistException'
        '481':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetMaintenanceWindowExecutionTaskRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#GetParameter':
    post:
      operationId: GetParameter
      description: 'Get information about a parameter by using the parameter name. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetParameterResult'
        '480':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
        '481':
          description: InvalidKeyId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidKeyId'
        '482':
          description: ParameterNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParameterNotFound'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetParameterRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#GetParameterHistory':
    post:
      operationId: GetParameterHistory
      description: Query a list of all parameters used by the AWS account.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetParameterHistoryResult'
        '480':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
        '481':
          description: ParameterNotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParameterNotFound'
        '482':
          description: InvalidNextToken
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextToken'
        '483':
          description: InvalidKeyId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidKeyId'
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetParameterHistoryRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#GetParameters':
    post:
      operationId: GetParameters
      description: Get details of a parameter.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetParametersResult'
        '480':
          description: InvalidKeyId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidKeyId'
        '481':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetParametersRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#GetParametersByPath':
    post:
      operationId: GetParametersByPath
      description: 'Retrieve parameters in a specific hierarchy. For more information, see <a href="http://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-paramstore-working.html">Working with Systems Manager Parameters</a>. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetParametersByPathResult'
        '480':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
        '481':
          description: InvalidFilterKey
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidFilterKey'
        '482':
          description: InvalidFilterOption
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidFilterOption'
        '483':
          description: InvalidFilterValue
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidFilterValue'
        '484':
          description: InvalidKeyId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidKeyId'
        '485':
          description: InvalidNextToken
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextToken'
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetParametersByPathRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#GetPatchBaseline':
    post:
      operationId: GetPatchBaseline
      description: Retrieves information about a patch baseline.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPatchBaselineResult'
        '480':
          description: DoesNotExistException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoesNotExistException'
        '481':
          description: InvalidResourceId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidResourceId'
        '482':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetPatchBaselineRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#GetPatchBaselineForPatchGroup':
    post:
      operationId: GetPatchBaselineForPatchGroup
      description: Retrieves the patch baseline that should be used for the specified patch group.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPatchBaselineForPatchGroupResult'
        '480':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetPatchBaselineForPatchGroupRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#ListAssociations':
    post:
      operationId: ListAssociations
      description: Lists the associations for the specified Systems Manager document or instance.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAssociationsResult'
        '480':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
        '481':
          description: InvalidNextToken
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextToken'
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListAssociationsRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#ListCommandInvocations':
    post:
      operationId: ListCommandInvocations
      description: 'An invocation is copy of a command sent to a specific instance. A command can apply to one or more instances. A command invocation applies to one instance. For example, if a user executes SendCommand against three instances, then a command invocation is created for each requested instance ID. ListCommandInvocations provide status about command execution.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCommandInvocationsResult'
        '480':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
        '481':
          description: InvalidCommandId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidCommandId'
        '482':
          description: InvalidInstanceId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInstanceId'
        '483':
          description: InvalidFilterKey
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidFilterKey'
        '484':
          description: InvalidNextToken
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextToken'
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListCommandInvocationsRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#ListCommands':
    post:
      operationId: ListCommands
      description: Lists the commands requested by users of the AWS account.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCommandsResult'
        '480':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
        '481':
          description: InvalidCommandId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidCommandId'
        '482':
          description: InvalidInstanceId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInstanceId'
        '483':
          description: InvalidFilterKey
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidFilterKey'
        '484':
          description: InvalidNextToken
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextToken'
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListCommandsRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#ListDocumentVersions':
    post:
      operationId: ListDocumentVersions
      description: List all versions for a document.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDocumentVersionsResult'
        '480':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
        '481':
          description: InvalidNextToken
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextToken'
        '482':
          description: InvalidDocument
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidDocument'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListDocumentVersionsRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#ListDocuments':
    post:
      operationId: ListDocuments
      description: Describes one or more of your SSM documents.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDocumentsResult'
        '480':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
        '481':
          description: InvalidNextToken
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextToken'
        '482':
          description: InvalidFilterKey
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidFilterKey'
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListDocumentsRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#ListInventoryEntries':
    post:
      operationId: ListInventoryEntries
      description: A list of inventory items returned by the request.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListInventoryEntriesResult'
        '480':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
        '481':
          description: InvalidInstanceId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInstanceId'
        '482':
          description: InvalidTypeNameException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidTypeNameException'
        '483':
          description: InvalidFilter
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidFilter'
        '484':
          description: InvalidNextToken
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextToken'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListInventoryEntriesRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#ListResourceDataSync':
    post:
      operationId: ListResourceDataSync
      description: '<p>Lists your resource data sync configurations. Includes information about the last time a sync attempted to start, the last sync status, and the last time a sync successfully completed.</p> <p>The number of sync configurations might be too large to return using a single call to <code>ListResourceDataSync</code>. You can limit the number of sync configurations returned by using the <code>MaxResults</code> parameter. To determine whether there are more sync configurations to list, check the value of <code>NextToken</code> in the output. If there are more sync configurations to list, you can request them by specifying the <code>NextToken</code> returned in the call to the parameter of a subsequent call. </p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResourceDataSyncResult'
        '480':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
        '481':
          description: InvalidNextToken
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextToken'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListResourceDataSyncRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#ListTagsForResource':
    post:
      operationId: ListTagsForResource
      description: Returns a list of the tags assigned to the specified resource.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResult'
        '480':
          description: InvalidResourceType
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidResourceType'
        '481':
          description: InvalidResourceId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidResourceId'
        '482':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListTagsForResourceRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#ModifyDocumentPermission':
    post:
      operationId: ModifyDocumentPermission
      description: 'Shares a Systems Manager document publicly or privately. If you share a document privately, you must specify the AWS user account IDs for those people who can use the document. If you share a document publicly, you must specify <i>All</i> as the account ID.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModifyDocumentPermissionResponse'
        '480':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
        '481':
          description: InvalidDocument
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidDocument'
        '482':
          description: InvalidPermissionType
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidPermissionType'
        '483':
          description: DocumentPermissionLimit
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentPermissionLimit'
        '484':
          description: DocumentLimitExceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentLimitExceeded'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifyDocumentPermissionRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#PutInventory':
    post:
      operationId: PutInventory
      description: 'Bulk update custom inventory items on one more instance. The request adds an inventory item, if it doesn''t already exist, or updates an inventory item, if it does exist.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutInventoryResult'
        '480':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
        '481':
          description: InvalidInstanceId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInstanceId'
        '482':
          description: InvalidTypeNameException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidTypeNameException'
        '483':
          description: InvalidItemContentException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidItemContentException'
        '484':
          description: TotalSizeLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TotalSizeLimitExceededException'
        '485':
          description: ItemSizeLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemSizeLimitExceededException'
        '486':
          description: ItemContentMismatchException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemContentMismatchException'
        '487':
          description: CustomSchemaCountLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomSchemaCountLimitExceededException'
        '488':
          description: UnsupportedInventorySchemaVersionException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedInventorySchemaVersionException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutInventoryRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#PutParameter':
    post:
      operationId: PutParameter
      description: Add one or more parameters to the system.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutParameterResult'
        '480':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
        '481':
          description: InvalidKeyId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidKeyId'
        '482':
          description: ParameterLimitExceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParameterLimitExceeded'
        '483':
          description: TooManyUpdates
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyUpdates'
        '484':
          description: ParameterAlreadyExists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParameterAlreadyExists'
        '485':
          description: HierarchyLevelLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HierarchyLevelLimitExceededException'
        '486':
          description: HierarchyTypeMismatchException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HierarchyTypeMismatchException'
        '487':
          description: InvalidAllowedPatternException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAllowedPatternException'
        '488':
          description: ParameterPatternMismatchException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParameterPatternMismatchException'
        '489':
          description: UnsupportedParameterType
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedParameterType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutParameterRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#RegisterDefaultPatchBaseline':
    post:
      operationId: RegisterDefaultPatchBaseline
      description: Defines the default patch baseline.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterDefaultPatchBaselineResult'
        '480':
          description: InvalidResourceId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidResourceId'
        '481':
          description: DoesNotExistException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoesNotExistException'
        '482':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterDefaultPatchBaselineRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#RegisterPatchBaselineForPatchGroup':
    post:
      operationId: RegisterPatchBaselineForPatchGroup
      description: Registers a patch baseline for a patch group.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterPatchBaselineForPatchGroupResult'
        '480':
          description: AlreadyExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlreadyExistsException'
        '481':
          description: DoesNotExistException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoesNotExistException'
        '482':
          description: InvalidResourceId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidResourceId'
        '483':
          description: ResourceLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
        '484':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterPatchBaselineForPatchGroupRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#RegisterTargetWithMaintenanceWindow':
    post:
      operationId: RegisterTargetWithMaintenanceWindow
      description: Registers a target with a Maintenance Window.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterTargetWithMaintenanceWindowResult'
        '480':
          description: IdempotentParameterMismatch
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdempotentParameterMismatch'
        '481':
          description: DoesNotExistException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoesNotExistException'
        '482':
          description: ResourceLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
        '483':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterTargetWithMaintenanceWindowRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#RegisterTaskWithMaintenanceWindow':
    post:
      operationId: RegisterTaskWithMaintenanceWindow
      description: Adds a new task to a Maintenance Window.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterTaskWithMaintenanceWindowResult'
        '480':
          description: IdempotentParameterMismatch
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdempotentParameterMismatch'
        '481':
          description: DoesNotExistException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoesNotExistException'
        '482':
          description: ResourceLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
        '483':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterTaskWithMaintenanceWindowRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#RemoveTagsFromResource':
    post:
      operationId: RemoveTagsFromResource
      description: Removes all tags from the specified resource.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoveTagsFromResourceResult'
        '480':
          description: InvalidResourceType
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidResourceType'
        '481':
          description: InvalidResourceId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidResourceId'
        '482':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoveTagsFromResourceRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#SendCommand':
    post:
      operationId: SendCommand
      description: Executes commands on one or more managed instances.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendCommandResult'
        '480':
          description: DuplicateInstanceId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DuplicateInstanceId'
        '481':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
        '482':
          description: InvalidInstanceId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInstanceId'
        '483':
          description: InvalidDocument
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidDocument'
        '484':
          description: InvalidOutputFolder
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidOutputFolder'
        '485':
          description: InvalidParameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameters'
        '486':
          description: UnsupportedPlatformType
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedPlatformType'
        '487':
          description: MaxDocumentSizeExceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaxDocumentSizeExceeded'
        '488':
          description: InvalidRole
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRole'
        '489':
          description: InvalidNotificationConfig
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNotificationConfig'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendCommandRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#StartAutomationExecution':
    post:
      operationId: StartAutomationExecution
      description: Initiates execution of an Automation document.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartAutomationExecutionResult'
        '480':
          description: AutomationDefinitionNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutomationDefinitionNotFoundException'
        '481':
          description: InvalidAutomationExecutionParametersException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAutomationExecutionParametersException'
        '482':
          description: AutomationExecutionLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutomationExecutionLimitExceededException'
        '483':
          description: AutomationDefinitionVersionNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutomationDefinitionVersionNotFoundException'
        '484':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartAutomationExecutionRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#StopAutomationExecution':
    post:
      operationId: StopAutomationExecution
      description: Stop an Automation that is currently executing.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StopAutomationExecutionResult'
        '480':
          description: AutomationExecutionNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutomationExecutionNotFoundException'
        '481':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StopAutomationExecutionRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#UpdateAssociation':
    post:
      operationId: UpdateAssociation
      description: 'Updates an association. You can only update the document version, schedule, parameters, and Amazon S3 output of an association.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateAssociationResult'
        '480':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
        '481':
          description: InvalidSchedule
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidSchedule'
        '482':
          description: InvalidParameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameters'
        '483':
          description: InvalidOutputLocation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidOutputLocation'
        '484':
          description: InvalidDocumentVersion
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidDocumentVersion'
        '485':
          description: AssociationDoesNotExist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssociationDoesNotExist'
        '486':
          description: InvalidUpdate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidUpdate'
        '487':
          description: TooManyUpdates
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyUpdates'
        '488':
          description: InvalidDocument
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidDocument'
        '489':
          description: InvalidTarget
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidTarget'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAssociationRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#UpdateAssociationStatus':
    post:
      operationId: UpdateAssociationStatus
      description: Updates the status of the Systems Manager document associated with the specified instance.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateAssociationStatusResult'
        '480':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
        '481':
          description: InvalidInstanceId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInstanceId'
        '482':
          description: InvalidDocument
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidDocument'
        '483':
          description: AssociationDoesNotExist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssociationDoesNotExist'
        '484':
          description: StatusUnchanged
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusUnchanged'
        '485':
          description: TooManyUpdates
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyUpdates'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAssociationStatusRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#UpdateDocument':
    post:
      operationId: UpdateDocument
      description: The document you want to update.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateDocumentResult'
        '480':
          description: MaxDocumentSizeExceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaxDocumentSizeExceeded'
        '481':
          description: DocumentVersionLimitExceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentVersionLimitExceeded'
        '482':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
        '483':
          description: DuplicateDocumentContent
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DuplicateDocumentContent'
        '484':
          description: InvalidDocumentContent
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidDocumentContent'
        '485':
          description: InvalidDocumentVersion
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidDocumentVersion'
        '486':
          description: InvalidDocumentSchemaVersion
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidDocumentSchemaVersion'
        '487':
          description: InvalidDocument
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidDocument'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDocumentRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#UpdateDocumentDefaultVersion':
    post:
      operationId: UpdateDocumentDefaultVersion
      description: 'Set the default version of a document. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateDocumentDefaultVersionResult'
        '480':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
        '481':
          description: InvalidDocument
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidDocument'
        '482':
          description: InvalidDocumentVersion
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidDocumentVersion'
        '483':
          description: InvalidDocumentSchemaVersion
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidDocumentSchemaVersion'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDocumentDefaultVersionRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#UpdateMaintenanceWindow':
    post:
      operationId: UpdateMaintenanceWindow
      description: Updates an existing Maintenance Window. Only specified parameters are modified.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateMaintenanceWindowResult'
        '480':
          description: DoesNotExistException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoesNotExistException'
        '481':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMaintenanceWindowRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#UpdateManagedInstanceRole':
    post:
      operationId: UpdateManagedInstanceRole
      description: Assigns or changes an Amazon Identity and Access Management (IAM) role to the managed instance.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateManagedInstanceRoleResult'
        '480':
          description: InvalidInstanceId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInstanceId'
        '481':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateManagedInstanceRoleRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#UpdatePatchBaseline':
    post:
      operationId: UpdatePatchBaseline
      description: Modifies an existing patch baseline. Fields not specified in the request are left unchanged.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdatePatchBaselineResult'
        '480':
          description: DoesNotExistException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoesNotExistException'
        '481':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePatchBaselineRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
components:
  schemas:
    AccountId:
      type: string
      pattern: '\(\?i\)all\|[0-9]\{12\}'
    AccountIdList:
      type: array
      items:
        $ref: '#/components/schemas/AccountId'
      maxItems: 20
    Activation:
      type: object
      properties:
        ActivationId:
          $ref: '#/components/schemas/ActivationId'
        Description:
          $ref: '#/components/schemas/ActivationDescription'
        DefaultInstanceName:
          $ref: '#/components/schemas/DefaultInstanceName'
        IamRole:
          $ref: '#/components/schemas/IamRole'
        RegistrationLimit:
          $ref: '#/components/schemas/RegistrationLimit'
        RegistrationsCount:
          $ref: '#/components/schemas/RegistrationsCount'
        ExpirationDate:
          $ref: '#/components/schemas/ExpirationDate'
        Expired:
          $ref: '#/components/schemas/Boolean'
        CreatedDate:
          $ref: '#/components/schemas/CreatedDate'
      description: An activation registers one or more on-premises servers or virtual machines (VMs) with AWS so that you can configure those servers or VMs using Run Command. A server or VM that has been registered with AWS is called a managed instance.
    ActivationCode:
      type: string
      minLength: 20
      maxLength: 250
    ActivationDescription:
      type: string
      minLength: 0
      maxLength: 256
    ActivationId:
      type: string
      pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
    ActivationList:
      type: array
      items:
        $ref: '#/components/schemas/Activation'
    AddTagsToResourceRequest:
      type: object
      required:
        - ResourceType
        - ResourceId
        - Tags
      properties:
        ResourceType:
          $ref: '#/components/schemas/ResourceTypeForTagging'
        ResourceId:
          $ref: '#/components/schemas/ResourceId'
        Tags:
          $ref: '#/components/schemas/TagList'
    AddTagsToResourceResult:
      type: object
      properties: {}
    AgentErrorCode:
      type: string
      maxLength: 10
    AllowedPattern:
      type: string
      minLength: 0
      maxLength: 1024
    AlreadyExistsException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/String'
      description: Error returned if an attempt is made to register a patch group with a patch baseline that is already registered with a different patch baseline.
    ApproveAfterDays:
      type: integer
      minimum: 0
      maximum: 100
    AssociatedInstances:
      type: object
      properties: {}
      description: You must disassociate a document from all instances before you can delete it.
    Association:
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/DocumentName'
        InstanceId:
          $ref: '#/components/schemas/InstanceId'
        AssociationId:
          $ref: '#/components/schemas/AssociationId'
        DocumentVersion:
          $ref: '#/components/schemas/DocumentVersion'
        Targets:
          $ref: '#/components/schemas/Targets'
        LastExecutionDate:
          $ref: '#/components/schemas/DateTime'
        Overview:
          $ref: '#/components/schemas/AssociationOverview'
        ScheduleExpression:
          $ref: '#/components/schemas/ScheduleExpression'
      description: Describes an association of a Systems Manager document and an instance.
    AssociationAlreadyExists:
      type: object
      properties: {}
      description: The specified association already exists.
    AssociationDescription:
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/DocumentName'
        InstanceId:
          $ref: '#/components/schemas/InstanceId'
        Date:
          $ref: '#/components/schemas/DateTime'
        LastUpdateAssociationDate:
          $ref: '#/components/schemas/DateTime'
        Status:
          $ref: '#/components/schemas/AssociationStatus'
        Overview:
          $ref: '#/components/schemas/AssociationOverview'
        DocumentVersion:
          $ref: '#/components/schemas/DocumentVersion'
        Parameters:
          $ref: '#/components/schemas/Parameters'
        AssociationId:
          $ref: '#/components/schemas/AssociationId'
        Targets:
          $ref: '#/components/schemas/Targets'
        ScheduleExpression:
          $ref: '#/components/schemas/ScheduleExpression'
        OutputLocation:
          $ref: '#/components/schemas/InstanceAssociationOutputLocation'
        LastExecutionDate:
          $ref: '#/components/schemas/DateTime'
        LastSuccessfulExecutionDate:
          $ref: '#/components/schemas/DateTime'
      description: Describes the parameters for a document.
    AssociationDescriptionList:
      type: array
      items:
        $ref: '#/components/schemas/AssociationDescription'
    AssociationDoesNotExist:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/String'
      description: The specified association does not exist.
    AssociationFilter:
      type: object
      required:
        - key
        - value
      properties:
        key:
          $ref: '#/components/schemas/AssociationFilterKey'
        value:
          $ref: '#/components/schemas/AssociationFilterValue'
      description: Describes a filter.
    AssociationFilterKey:
      type: string
      enum:
        - InstanceId
        - Name
        - AssociationId
        - AssociationStatusName
        - LastExecutedBefore
        - LastExecutedAfter
    AssociationFilterList:
      type: array
      items:
        $ref: '#/components/schemas/AssociationFilter'
      minItems: 1
    AssociationFilterValue:
      type: string
      minLength: 1
    AssociationId:
      type: string
      pattern: '[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}'
    AssociationLimitExceeded:
      type: object
      properties: {}
      description: 'You can have at most 2,000 active associations.'
    AssociationList:
      type: array
      items:
        $ref: '#/components/schemas/Association'
    AssociationOverview:
      type: object
      properties:
        Status:
          $ref: '#/components/schemas/StatusName'
        DetailedStatus:
          $ref: '#/components/schemas/StatusName'
        AssociationStatusAggregatedCount:
          $ref: '#/components/schemas/AssociationStatusAggregatedCount'
      description: Information about the association.
    AssociationStatus:
      type: object
      required:
        - Date
        - Name
        - Message
      properties:
        Date:
          $ref: '#/components/schemas/DateTime'
        Name:
          $ref: '#/components/schemas/AssociationStatusName'
        Message:
          $ref: '#/components/schemas/StatusMessage'
        AdditionalInfo:
          $ref: '#/components/schemas/StatusAdditionalInfo'
      description: Describes an association status.
    AssociationStatusAggregatedCount:
      type: array
      items:
        type: object
        properties:
          key:
            $ref: '#/components/schemas/StatusName'
          value:
            $ref: '#/components/schemas/InstanceCount'
    AssociationStatusName:
      type: string
      enum:
        - Pending
        - Success
        - Failed
    AttributeName:
      type: string
      minLength: 1
      maxLength: 64
    AttributeValue:
      type: string
      minLength: 0
      maxLength: 1024
    AutomationActionName:
      type: string
      pattern: '^aws:[a-zA-Z]{3,25}$'
    AutomationDefinitionNotFoundException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/String'
      description: An Automation document with the specified name could not be found.
    AutomationDefinitionVersionNotFoundException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/String'
      description: An Automation document with the specified name and version could not be found.
    AutomationExecution:
      type: object
      properties:
        AutomationExecutionId:
          $ref: '#/components/schemas/AutomationExecutionId'
        DocumentName:
          $ref: '#/components/schemas/DocumentName'
        DocumentVersion:
          $ref: '#/components/schemas/DocumentVersion'
        ExecutionStartTime:
          $ref: '#/components/schemas/DateTime'
        ExecutionEndTime:
          $ref: '#/components/schemas/DateTime'
        AutomationExecutionStatus:
          $ref: '#/components/schemas/AutomationExecutionStatus'
        StepExecutions:
          $ref: '#/components/schemas/StepExecutionList'
        Parameters:
          $ref: '#/components/schemas/AutomationParameterMap'
        Outputs:
          $ref: '#/components/schemas/AutomationParameterMap'
        FailureMessage:
          $ref: '#/components/schemas/String'
      description: Detailed information about the current state of an individual Automation execution.
    AutomationExecutionFilter:
      type: object
      required:
        - Key
        - Values
      properties:
        Key:
          $ref: '#/components/schemas/AutomationExecutionFilterKey'
        Values:
          $ref: '#/components/schemas/AutomationExecutionFilterValueList'
      description: A filter used to match specific automation executions. This is used to limit the scope of Automation execution information returned.
    AutomationExecutionFilterKey:
      type: string
      enum:
        - DocumentNamePrefix
        - ExecutionStatus
    AutomationExecutionFilterList:
      type: array
      items:
        $ref: '#/components/schemas/AutomationExecutionFilter'
      minItems: 1
      maxItems: 10
    AutomationExecutionFilterValue:
      type: string
      minLength: 1
      maxLength: 150
    AutomationExecutionFilterValueList:
      type: array
      items:
        $ref: '#/components/schemas/AutomationExecutionFilterValue'
      minItems: 1
      maxItems: 10
    AutomationExecutionId:
      type: string
      minLength: 36
      maxLength: 36
    AutomationExecutionLimitExceededException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/String'
      description: The number of simultaneously running Automation executions exceeded the allowable limit.
    AutomationExecutionMetadata:
      type: object
      properties:
        AutomationExecutionId:
          $ref: '#/components/schemas/AutomationExecutionId'
        DocumentName:
          $ref: '#/components/schemas/DocumentName'
        DocumentVersion:
          $ref: '#/components/schemas/DocumentVersion'
        AutomationExecutionStatus:
          $ref: '#/components/schemas/AutomationExecutionStatus'
        ExecutionStartTime:
          $ref: '#/components/schemas/DateTime'
        ExecutionEndTime:
          $ref: '#/components/schemas/DateTime'
        ExecutedBy:
          $ref: '#/components/schemas/String'
        LogFile:
          $ref: '#/components/schemas/String'
        Outputs:
          $ref: '#/components/schemas/AutomationParameterMap'
      description: Details about a specific Automation execution.
    AutomationExecutionMetadataList:
      type: array
      items:
        $ref: '#/components/schemas/AutomationExecutionMetadata'
      minItems: 0
      maxItems: 50
    AutomationExecutionNotFoundException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/String'
      description: There is no automation execution information for the requested automation execution ID.
    AutomationExecutionStatus:
      type: string
      enum:
        - Pending
        - InProgress
        - Success
        - TimedOut
        - Cancelled
        - Failed
    AutomationParameterKey:
      type: string
      minLength: 1
      maxLength: 30
    AutomationParameterMap:
      type: array
      minItems: 1
      maxItems: 200
      items:
        type: object
        properties:
          key:
            $ref: '#/components/schemas/AutomationParameterKey'
          value:
            $ref: '#/components/schemas/AutomationParameterValueList'
    AutomationParameterValue:
      type: string
      minLength: 1
      maxLength: 512
    AutomationParameterValueList:
      type: array
      items:
        $ref: '#/components/schemas/AutomationParameterValue'
      minItems: 0
      maxItems: 10
    BaselineDescription:
      type: string
      minLength: 1
      maxLength: 1024
    BaselineId:
      type: string
      pattern: '^[a-zA-Z0-9_\-:/]{20,128}$'
      minLength: 20
      maxLength: 128
    BaselineName:
      type: string
      pattern: '^[a-zA-Z0-9_\-.]{3,128}$'
      minLength: 3
      maxLength: 128
    BatchErrorMessage:
      type: string
    Boolean:
      type: boolean
    CancelCommandRequest:
      type: object
      required:
        - CommandId
      properties:
        CommandId:
          $ref: '#/components/schemas/CommandId'
        InstanceIds:
          $ref: '#/components/schemas/InstanceIdList'
      description: <p/>
    CancelCommandResult:
      type: object
      properties: {}
      description: Whether or not the command was successfully canceled. There is no guarantee that a request can be canceled.
    ClientToken:
      type: string
      minLength: 1
      maxLength: 64
    Command:
      type: object
      properties:
        CommandId:
          $ref: '#/components/schemas/CommandId'
        DocumentName:
          $ref: '#/components/schemas/DocumentName'
        Comment:
          $ref: '#/components/schemas/Comment'
        ExpiresAfter:
          $ref: '#/components/schemas/DateTime'
        Parameters:
          $ref: '#/components/schemas/Parameters'
        InstanceIds:
          $ref: '#/components/schemas/InstanceIdList'
        Targets:
          $ref: '#/components/schemas/Targets'
        RequestedDateTime:
          $ref: '#/components/schemas/DateTime'
        Status:
          $ref: '#/components/schemas/CommandStatus'
        StatusDetails:
          $ref: '#/components/schemas/StatusDetails'
        OutputS3Region:
          $ref: '#/components/schemas/S3Region'
        OutputS3BucketName:
          $ref: '#/components/schemas/S3BucketName'
        OutputS3KeyPrefix:
          $ref: '#/components/schemas/S3KeyPrefix'
        MaxConcurrency:
          $ref: '#/components/schemas/MaxConcurrency'
        MaxErrors:
          $ref: '#/components/schemas/MaxErrors'
        TargetCount:
          $ref: '#/components/schemas/TargetCount'
        CompletedCount:
          $ref: '#/components/schemas/CompletedCount'
        ErrorCount:
          $ref: '#/components/schemas/ErrorCount'
        ServiceRole:
          $ref: '#/components/schemas/ServiceRole'
        NotificationConfig:
          $ref: '#/components/schemas/NotificationConfig'
      description: Describes a command request.
    CommandFilter:
      type: object
      required:
        - key
        - value
      properties:
        key:
          $ref: '#/components/schemas/CommandFilterKey'
        value:
          $ref: '#/components/schemas/CommandFilterValue'
      description: Describes a command filter.
    CommandFilterKey:
      type: string
      enum:
        - InvokedAfter
        - InvokedBefore
        - Status
    CommandFilterList:
      type: array
      items:
        $ref: '#/components/schemas/CommandFilter'
      minItems: 1
      maxItems: 3
    CommandFilterValue:
      type: string
      minLength: 1
    CommandId:
      type: string
      minLength: 36
      maxLength: 36
    CommandInvocation:
      type: object
      properties:
        CommandId:
          $ref: '#/components/schemas/CommandId'
        InstanceId:
          $ref: '#/components/schemas/InstanceId'
        InstanceName:
          $ref: '#/components/schemas/InstanceTagName'
        Comment:
          $ref: '#/components/schemas/Comment'
        DocumentName:
          $ref: '#/components/schemas/DocumentName'
        RequestedDateTime:
          $ref: '#/components/schemas/DateTime'
        Status:
          $ref: '#/components/schemas/CommandInvocationStatus'
        StatusDetails:
          $ref: '#/components/schemas/StatusDetails'
        TraceOutput:
          $ref: '#/components/schemas/InvocationTraceOutput'
        StandardOutputUrl:
          $ref: '#/components/schemas/Url'
        StandardErrorUrl:
          $ref: '#/components/schemas/Url'
        CommandPlugins:
          $ref: '#/components/schemas/CommandPluginList'
        ServiceRole:
          $ref: '#/components/schemas/ServiceRole'
        NotificationConfig:
          $ref: '#/components/schemas/NotificationConfig'
      description: 'An invocation is copy of a command sent to a specific instance. A command can apply to one or more instances. A command invocation applies to one instance. For example, if a user executes SendCommand against three instances, then a command invocation is created for each requested instance ID. A command invocation returns status and detail information about a command you executed. '
    CommandInvocationList:
      type: array
      items:
        $ref: '#/components/schemas/CommandInvocation'
    CommandInvocationStatus:
      type: string
      enum:
        - Pending
        - InProgress
        - Delayed
        - Success
        - Cancelled
        - TimedOut
        - Failed
        - Cancelling
    CommandList:
      type: array
      items:
        $ref: '#/components/schemas/Command'
    CommandMaxResults:
      type: integer
      minimum: 1
      maximum: 50
    CommandPlugin:
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/CommandPluginName'
        Status:
          $ref: '#/components/schemas/CommandPluginStatus'
        StatusDetails:
          $ref: '#/components/schemas/StatusDetails'
        ResponseCode:
          $ref: '#/components/schemas/ResponseCode'
        ResponseStartDateTime:
          $ref: '#/components/schemas/DateTime'
        ResponseFinishDateTime:
          $ref: '#/components/schemas/DateTime'
        Output:
          $ref: '#/components/schemas/CommandPluginOutput'
        StandardOutputUrl:
          $ref: '#/components/schemas/Url'
        StandardErrorUrl:
          $ref: '#/components/schemas/Url'
        OutputS3Region:
          $ref: '#/components/schemas/S3Region'
        OutputS3BucketName:
          $ref: '#/components/schemas/S3BucketName'
        OutputS3KeyPrefix:
          $ref: '#/components/schemas/S3KeyPrefix'
      description: Describes plugin details.
    CommandPluginList:
      type: array
      items:
        $ref: '#/components/schemas/CommandPlugin'
    CommandPluginName:
      type: string
      minLength: 4
    CommandPluginOutput:
      type: string
      maxLength: 2500
    CommandPluginStatus:
      type: string
      enum:
        - Pending
        - InProgress
        - Success
        - TimedOut
        - Cancelled
        - Failed
    CommandStatus:
      type: string
      enum:
        - Pending
        - InProgress
        - Success
        - Cancelled
        - Failed
        - TimedOut
        - Cancelling
    Comment:
      type: string
      maxLength: 100
    CompletedCount:
      type: integer
    ComputerName:
      type: string
      minLength: 1
      maxLength: 255
    CreateActivationRequest:
      type: object
      required:
        - IamRole
      properties:
        Description:
          $ref: '#/components/schemas/ActivationDescription'
        DefaultInstanceName:
          $ref: '#/components/schemas/DefaultInstanceName'
        IamRole:
          $ref: '#/components/schemas/IamRole'
        RegistrationLimit:
          $ref: '#/components/schemas/RegistrationLimit'
        ExpirationDate:
          $ref: '#/components/schemas/ExpirationDate'
    CreateActivationResult:
      type: object
      properties:
        ActivationId:
          $ref: '#/components/schemas/ActivationId'
        ActivationCode:
          $ref: '#/components/schemas/ActivationCode'
    CreateAssociationBatchRequest:
      type: object
      required:
        - Entries
      properties:
        Entries:
          $ref: '#/components/schemas/CreateAssociationBatchRequestEntries'
    CreateAssociationBatchRequestEntries:
      type: array
      items:
        $ref: '#/components/schemas/CreateAssociationBatchRequestEntry'
      minItems: 1
    CreateAssociationBatchRequestEntry:
      type: object
      required:
        - Name
      properties:
        Name:
          $ref: '#/components/schemas/DocumentName'
        InstanceId:
          $ref: '#/components/schemas/InstanceId'
        Parameters:
          $ref: '#/components/schemas/Parameters'
        DocumentVersion:
          $ref: '#/components/schemas/DocumentVersion'
        Targets:
          $ref: '#/components/schemas/Targets'
        ScheduleExpression:
          $ref: '#/components/schemas/ScheduleExpression'
        OutputLocation:
          $ref: '#/components/schemas/InstanceAssociationOutputLocation'
      description: Describes the association of a Systems Manager document and an instance.
    CreateAssociationBatchResult:
      type: object
      properties:
        Successful:
          $ref: '#/components/schemas/AssociationDescriptionList'
        Failed:
          $ref: '#/components/schemas/FailedCreateAssociationList'
    CreateAssociationRequest:
      type: object
      required:
        - Name
      properties:
        Name:
          $ref: '#/components/schemas/DocumentName'
        DocumentVersion:
          $ref: '#/components/schemas/DocumentVersion'
        InstanceId:
          $ref: '#/components/schemas/InstanceId'
        Parameters:
          $ref: '#/components/schemas/Parameters'
        Targets:
          $ref: '#/components/schemas/Targets'
        ScheduleExpression:
          $ref: '#/components/schemas/ScheduleExpression'
        OutputLocation:
          $ref: '#/components/schemas/InstanceAssociationOutputLocation'
    CreateAssociationResult:
      type: object
      properties:
        AssociationDescription:
          $ref: '#/components/schemas/AssociationDescription'
    CreateDocumentRequest:
      type: object
      required:
        - Content
        - Name
      properties:
        Content:
          $ref: '#/components/schemas/DocumentContent'
        Name:
          $ref: '#/components/schemas/DocumentName'
        DocumentType:
          $ref: '#/components/schemas/DocumentType'
    CreateDocumentResult:
      type: object
      properties:
        DocumentDescription:
          $ref: '#/components/schemas/DocumentDescription'
    CreateMaintenanceWindowRequest:
      type: object
      required:
        - Name
        - Schedule
        - Duration
        - Cutoff
        - AllowUnassociatedTargets
      properties:
        Name:
          $ref: '#/components/schemas/MaintenanceWindowName'
        Schedule:
          $ref: '#/components/schemas/MaintenanceWindowSchedule'
        Duration:
          $ref: '#/components/schemas/MaintenanceWindowDurationHours'
        Cutoff:
          $ref: '#/components/schemas/MaintenanceWindowCutoff'
        AllowUnassociatedTargets:
          $ref: '#/components/schemas/MaintenanceWindowAllowUnassociatedTargets'
        ClientToken:
          $ref: '#/components/schemas/ClientToken'
    CreateMaintenanceWindowResult:
      type: object
      properties:
        WindowId:
          $ref: '#/components/schemas/MaintenanceWindowId'
    CreatePatchBaselineRequest:
      type: object
      required:
        - Name
      properties:
        OperatingSystem:
          $ref: '#/components/schemas/OperatingSystem'
        Name:
          $ref: '#/components/schemas/BaselineName'
        GlobalFilters:
          $ref: '#/components/schemas/PatchFilterGroup'
        ApprovalRules:
          $ref: '#/components/schemas/PatchRuleGroup'
        ApprovedPatches:
          $ref: '#/components/schemas/PatchIdList'
        ApprovedPatchesComplianceLevel:
          $ref: '#/components/schemas/PatchComplianceLevel'
        RejectedPatches:
          $ref: '#/components/schemas/PatchIdList'
        Description:
          $ref: '#/components/schemas/BaselineDescription'
        ClientToken:
          $ref: '#/components/schemas/ClientToken'
    CreatePatchBaselineResult:
      type: object
      properties:
        BaselineId:
          $ref: '#/components/schemas/BaselineId'
    CreateResourceDataSyncRequest:
      type: object
      required:
        - SyncName
        - S3Destination
      properties:
        SyncName:
          $ref: '#/components/schemas/ResourceDataSyncName'
        S3Destination:
          $ref: '#/components/schemas/ResourceDataSyncS3Destination'
    CreateResourceDataSyncResult:
      type: object
      properties: {}
    CreatedDate:
      type: string
      format: date-time
    CustomSchemaCountLimitExceededException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/String'
      description: You have exceeded the limit for custom schemas. Delete one or more custom schemas and try again.
    DateTime:
      type: string
      format: date-time
    DefaultBaseline:
      type: boolean
    DefaultInstanceName:
      type: string
      pattern: '^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$'
      minLength: 0
      maxLength: 256
    DeleteActivationRequest:
      type: object
      required:
        - ActivationId
      properties:
        ActivationId:
          $ref: '#/components/schemas/ActivationId'
    DeleteActivationResult:
      type: object
      properties: {}
    DeleteAssociationRequest:
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/DocumentName'
        InstanceId:
          $ref: '#/components/schemas/InstanceId'
        AssociationId:
          $ref: '#/components/schemas/AssociationId'
    DeleteAssociationResult:
      type: object
      properties: {}
    DeleteDocumentRequest:
      type: object
      required:
        - Name
      properties:
        Name:
          $ref: '#/components/schemas/DocumentName'
    DeleteDocumentResult:
      type: object
      properties: {}
    DeleteMaintenanceWindowRequest:
      type: object
      required:
        - WindowId
      properties:
        WindowId:
          $ref: '#/components/schemas/MaintenanceWindowId'
    DeleteMaintenanceWindowResult:
      type: object
      properties:
        WindowId:
          $ref: '#/components/schemas/MaintenanceWindowId'
    DeleteParameterRequest:
      type: object
      required:
        - Name
      properties:
        Name:
          $ref: '#/components/schemas/PSParameterName'
    DeleteParameterResult:
      type: object
      properties: {}
    DeleteParametersRequest:
      type: object
      required:
        - Names
      properties:
        Names:
          $ref: '#/components/schemas/ParameterNameList'
    DeleteParametersResult:
      type: object
      properties:
        DeletedParameters:
          $ref: '#/components/schemas/ParameterNameList'
        InvalidParameters:
          $ref: '#/components/schemas/ParameterNameList'
    DeletePatchBaselineRequest:
      type: object
      required:
        - BaselineId
      properties:
        BaselineId:
          $ref: '#/components/schemas/BaselineId'
    DeletePatchBaselineResult:
      type: object
      properties:
        BaselineId:
          $ref: '#/components/schemas/BaselineId'
    DeleteResourceDataSyncRequest:
      type: object
      required:
        - SyncName
      properties:
        SyncName:
          $ref: '#/components/schemas/ResourceDataSyncName'
    DeleteResourceDataSyncResult:
      type: object
      properties: {}
    DeregisterManagedInstanceRequest:
      type: object
      required:
        - InstanceId
      properties:
        InstanceId:
          $ref: '#/components/schemas/ManagedInstanceId'
    DeregisterManagedInstanceResult:
      type: object
      properties: {}
    DeregisterPatchBaselineForPatchGroupRequest:
      type: object
      required:
        - BaselineId
        - PatchGroup
      properties:
        BaselineId:
          $ref: '#/components/schemas/BaselineId'
        PatchGroup:
          $ref: '#/components/schemas/PatchGroup'
    DeregisterPatchBaselineForPatchGroupResult:
      type: object
      properties:
        BaselineId:
          $ref: '#/components/schemas/BaselineId'
        PatchGroup:
          $ref: '#/components/schemas/PatchGroup'
    DeregisterTargetFromMaintenanceWindowRequest:
      type: object
      required:
        - WindowId
        - WindowTargetId
      properties:
        WindowId:
          $ref: '#/components/schemas/MaintenanceWindowId'
        WindowTargetId:
          $ref: '#/components/schemas/MaintenanceWindowTargetId'
    DeregisterTargetFromMaintenanceWindowResult:
      type: object
      properties:
        WindowId:
          $ref: '#/components/schemas/MaintenanceWindowId'
        WindowTargetId:
          $ref: '#/components/schemas/MaintenanceWindowTargetId'
    DeregisterTaskFromMaintenanceWindowRequest:
      type: object
      required:
        - WindowId
        - WindowTaskId
      properties:
        WindowId:
          $ref: '#/components/schemas/MaintenanceWindowId'
        WindowTaskId:
          $ref: '#/components/schemas/MaintenanceWindowTaskId'
    DeregisterTaskFromMaintenanceWindowResult:
      type: object
      properties:
        WindowId:
          $ref: '#/components/schemas/MaintenanceWindowId'
        WindowTaskId:
          $ref: '#/components/schemas/MaintenanceWindowTaskId'
    DescribeActivationsFilter:
      type: object
      properties:
        FilterKey:
          $ref: '#/components/schemas/DescribeActivationsFilterKeys'
        FilterValues:
          $ref: '#/components/schemas/StringList'
      description: Filter for the DescribeActivation API.
    DescribeActivationsFilterKeys:
      type: string
      enum:
        - ActivationIds
        - DefaultInstanceName
        - IamRole
    DescribeActivationsFilterList:
      type: array
      items:
        $ref: '#/components/schemas/DescribeActivationsFilter'
    DescribeActivationsRequest:
      type: object
      properties:
        Filters:
          $ref: '#/components/schemas/DescribeActivationsFilterList'
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
        NextToken:
          $ref: '#/components/schemas/NextToken'
    DescribeActivationsResult:
      type: object
      properties:
        ActivationList:
          $ref: '#/components/schemas/ActivationList'
        NextToken:
          $ref: '#/components/schemas/NextToken'
    DescribeAssociationRequest:
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/DocumentName'
        InstanceId:
          $ref: '#/components/schemas/InstanceId'
        AssociationId:
          $ref: '#/components/schemas/AssociationId'
    DescribeAssociationResult:
      type: object
      properties:
        AssociationDescription:
          $ref: '#/components/schemas/AssociationDescription'
    DescribeAutomationExecutionsRequest:
      type: object
      properties:
        Filters:
          $ref: '#/components/schemas/AutomationExecutionFilterList'
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
        NextToken:
          $ref: '#/components/schemas/NextToken'
    DescribeAutomationExecutionsResult:
      type: object
      properties:
        AutomationExecutionMetadataList:
          $ref: '#/components/schemas/AutomationExecutionMetadataList'
        NextToken:
          $ref: '#/components/schemas/NextToken'
    DescribeAvailablePatchesRequest:
      type: object
      properties:
        Filters:
          $ref: '#/components/schemas/PatchOrchestratorFilterList'
        MaxResults:
          $ref: '#/components/schemas/PatchBaselineMaxResults'
        NextToken:
          $ref: '#/components/schemas/NextToken'
    DescribeAvailablePatchesResult:
      type: object
      properties:
        Patches:
          $ref: '#/components/schemas/PatchList'
        NextToken:
          $ref: '#/components/schemas/NextToken'
    DescribeDocumentPermissionRequest:
      type: object
      required:
        - Name
        - PermissionType
      properties:
        Name:
          $ref: '#/components/schemas/DocumentName'
        PermissionType:
          $ref: '#/components/schemas/DocumentPermissionType'
    DescribeDocumentPermissionResponse:
      type: object
      properties:
        AccountIds:
          $ref: '#/components/schemas/AccountIdList'
    DescribeDocumentRequest:
      type: object
      required:
        - Name
      properties:
        Name:
          $ref: '#/components/schemas/DocumentARN'
        DocumentVersion:
          $ref: '#/components/schemas/DocumentVersion'
    DescribeDocumentResult:
      type: object
      properties:
        Document:
          $ref: '#/components/schemas/DocumentDescription'
    DescribeEffectiveInstanceAssociationsRequest:
      type: object
      required:
        - InstanceId
      properties:
        InstanceId:
          $ref: '#/components/schemas/InstanceId'
        MaxResults:
          $ref: '#/components/schemas/EffectiveInstanceAssociationMaxResults'
        NextToken:
          $ref: '#/components/schemas/NextToken'
    DescribeEffectiveInstanceAssociationsResult:
      type: object
      properties:
        Associations:
          $ref: '#/components/schemas/InstanceAssociationList'
        NextToken:
          $ref: '#/components/schemas/NextToken'
    DescribeEffectivePatchesForPatchBaselineRequest:
      type: object
      required:
        - BaselineId
      properties:
        BaselineId:
          $ref: '#/components/schemas/BaselineId'
        MaxResults:
          $ref: '#/components/schemas/PatchBaselineMaxResults'
        NextToken:
          $ref: '#/components/schemas/NextToken'
    DescribeEffectivePatchesForPatchBaselineResult:
      type: object
      properties:
        EffectivePatches:
          $ref: '#/components/schemas/EffectivePatchList'
        NextToken:
          $ref: '#/components/schemas/NextToken'
    DescribeInstanceAssociationsStatusRequest:
      type: object
      required:
        - InstanceId
      properties:
        InstanceId:
          $ref: '#/components/schemas/InstanceId'
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
        NextToken:
          $ref: '#/components/schemas/NextToken'
    DescribeInstanceAssociationsStatusResult:
      type: object
      properties:
        InstanceAssociationStatusInfos:
          $ref: '#/components/schemas/InstanceAssociationStatusInfos'
        NextToken:
          $ref: '#/components/schemas/NextToken'
    DescribeInstanceInformationRequest:
      type: object
      properties:
        InstanceInformationFilterList:
          $ref: '#/components/schemas/InstanceInformationFilterList'
        Filters:
          $ref: '#/components/schemas/InstanceInformationStringFilterList'
        MaxResults:
          $ref: '#/components/schemas/MaxResultsEC2Compatible'
        NextToken:
          $ref: '#/components/schemas/NextToken'
    DescribeInstanceInformationResult:
      type: object
      properties:
        InstanceInformationList:
          $ref: '#/components/schemas/InstanceInformationList'
        NextToken:
          $ref: '#/components/schemas/NextToken'
    DescribeInstancePatchStatesForPatchGroupRequest:
      type: object
      required:
        - PatchGroup
      properties:
        PatchGroup:
          $ref: '#/components/schemas/PatchGroup'
        Filters:
          $ref: '#/components/schemas/InstancePatchStateFilterList'
        NextToken:
          $ref: '#/components/schemas/NextToken'
        MaxResults:
          $ref: '#/components/schemas/PatchComplianceMaxResults'
    DescribeInstancePatchStatesForPatchGroupResult:
      type: object
      properties:
        InstancePatchStates:
          $ref: '#/components/schemas/InstancePatchStatesList'
        NextToken:
          $ref: '#/components/schemas/NextToken'
    DescribeInstancePatchStatesRequest:
      type: object
      required:
        - InstanceIds
      properties:
        InstanceIds:
          $ref: '#/components/schemas/InstanceIdList'
        NextToken:
          $ref: '#/components/schemas/NextToken'
        MaxResults:
          $ref: '#/components/schemas/PatchComplianceMaxResults'
    DescribeInstancePatchStatesResult:
      type: object
      properties:
        InstancePatchStates:
          $ref: '#/components/schemas/InstancePatchStateList'
        NextToken:
          $ref: '#/components/schemas/NextToken'
    DescribeInstancePatchesRequest:
      type: object
      required:
        - InstanceId
      properties:
        InstanceId:
          $ref: '#/components/schemas/InstanceId'
        Filters:
          $ref: '#/components/schemas/PatchOrchestratorFilterList'
        NextToken:
          $ref: '#/components/schemas/NextToken'
        MaxResults:
          $ref: '#/components/schemas/PatchComplianceMaxResults'
    DescribeInstancePatchesResult:
      type: object
      properties:
        Patches:
          $ref: '#/components/schemas/PatchComplianceDataList'
        NextToken:
          $ref: '#/components/schemas/NextToken'
    DescribeMaintenanceWindowExecutionTaskInvocationsRequest:
      type: object
      required:
        - WindowExecutionId
        - TaskId
      properties:
        WindowExecutionId:
          $ref: '#/components/schemas/MaintenanceWindowExecutionId'
        TaskId:
          $ref: '#/components/schemas/MaintenanceWindowExecutionTaskId'
        Filters:
          $ref: '#/components/schemas/MaintenanceWindowFilterList'
        MaxResults:
          $ref: '#/components/schemas/MaintenanceWindowMaxResults'
        NextToken:
          $ref: '#/components/schemas/NextToken'
    DescribeMaintenanceWindowExecutionTaskInvocationsResult:
      type: object
      properties:
        WindowExecutionTaskInvocationIdentities:
          $ref: '#/components/schemas/MaintenanceWindowExecutionTaskInvocationIdentityList'
        NextToken:
          $ref: '#/components/schemas/NextToken'
    DescribeMaintenanceWindowExecutionTasksRequest:
      type: object
      required:
        - WindowExecutionId
      properties:
        WindowExecutionId:
          $ref: '#/components/schemas/MaintenanceWindowExecutionId'
        Filters:
          $ref: '#/components/schemas/MaintenanceWindowFilterList'
        MaxResults:
          $ref: '#/components/schemas/MaintenanceWindowMaxResults'
        NextToken:
          $ref: '#/components/schemas/NextToken'
    DescribeMaintenanceWindowExecutionTasksResult:
      type: object
      properties:
        WindowExecutionTaskIdentities:
          $ref: '#/components/schemas/MaintenanceWindowExecutionTaskIdentityList'
        NextToken:
          $ref: '#/components/schemas/NextToken'
    DescribeMaintenanceWindowExecutionsRequest:
      type: object
      required:
        - WindowId
      properties:
        WindowId:
          $ref: '#/components/schemas/MaintenanceWindowId'
        Filters:
          $ref: '#/components/schemas/MaintenanceWindowFilterList'
        MaxResults:
          $ref: '#/components/schemas/MaintenanceWindowMaxResults'
        NextToken:
          $ref: '#/components/schemas/NextToken'
    DescribeMaintenanceWindowExecutionsResult:
      type: object
      properties:
        WindowExecutions:
          $ref: '#/components/schemas/MaintenanceWindowExecutionList'
        NextToken:
          $ref: '#/components/schemas/NextToken'
    DescribeMaintenanceWindowTargetsRequest:
      type: object
      required:
        - WindowId
      properties:
        WindowId:
          $ref: '#/components/schemas/MaintenanceWindowId'
        Filters:
          $ref: '#/components/schemas/MaintenanceWindowFilterList'
        MaxResults:
          $ref: '#/components/schemas/MaintenanceWindowMaxResults'
        NextToken:
          $ref: '#/components/schemas/NextToken'
    DescribeMaintenanceWindowTargetsResult:
      type: object
      properties:
        Targets:
          $ref: '#/components/schemas/MaintenanceWindowTargetList'
        NextToken:
          $ref: '#/components/schemas/NextToken'
    DescribeMaintenanceWindowTasksRequest:
      type: object
      required:
        - WindowId
      properties:
        WindowId:
          $ref: '#/components/schemas/MaintenanceWindowId'
        Filters:
          $ref: '#/components/schemas/MaintenanceWindowFilterList'
        MaxResults:
          $ref: '#/components/schemas/MaintenanceWindowMaxResults'
        NextToken:
          $ref: '#/components/schemas/NextToken'
    DescribeMaintenanceWindowTasksResult:
      type: object
      properties:
        Tasks:
          $ref: '#/components/schemas/MaintenanceWindowTaskList'
        NextToken:
          $ref: '#/components/schemas/NextToken'
    DescribeMaintenanceWindowsRequest:
      type: object
      properties:
        Filters:
          $ref: '#/components/schemas/MaintenanceWindowFilterList'
        MaxResults:
          $ref: '#/components/schemas/MaintenanceWindowMaxResults'
        NextToken:
          $ref: '#/components/schemas/NextToken'
    DescribeMaintenanceWindowsResult:
      type: object
      properties:
        WindowIdentities:
          $ref: '#/components/schemas/MaintenanceWindowIdentityList'
        NextToken:
          $ref: '#/components/schemas/NextToken'
    DescribeParametersRequest:
      type: object
      properties:
        Filters:
          $ref: '#/components/schemas/ParametersFilterList'
        ParameterFilters:
          $ref: '#/components/schemas/ParameterStringFilterList'
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
        NextToken:
          $ref: '#/components/schemas/NextToken'
    DescribeParametersResult:
      type: object
      properties:
        Parameters:
          $ref: '#/components/schemas/ParameterMetadataList'
        NextToken:
          $ref: '#/components/schemas/NextToken'
    DescribePatchBaselinesRequest:
      type: object
      properties:
        Filters:
          $ref: '#/components/schemas/PatchOrchestratorFilterList'
        MaxResults:
          $ref: '#/components/schemas/PatchBaselineMaxResults'
        NextToken:
          $ref: '#/components/schemas/NextToken'
    DescribePatchBaselinesResult:
      type: object
      properties:
        BaselineIdentities:
          $ref: '#/components/schemas/PatchBaselineIdentityList'
        NextToken:
          $ref: '#/components/schemas/NextToken'
    DescribePatchGroupStateRequest:
      type: object
      required:
        - PatchGroup
      properties:
        PatchGroup:
          $ref: '#/components/schemas/PatchGroup'
    DescribePatchGroupStateResult:
      type: object
      properties:
        Instances:
          $ref: '#/components/schemas/Integer'
        InstancesWithInstalledPatches:
          $ref: '#/components/schemas/Integer'
        InstancesWithInstalledOtherPatches:
          $ref: '#/components/schemas/Integer'
        InstancesWithMissingPatches:
          $ref: '#/components/schemas/Integer'
        InstancesWithFailedPatches:
          $ref: '#/components/schemas/Integer'
        InstancesWithNotApplicablePatches:
          $ref: '#/components/schemas/Integer'
    DescribePatchGroupsRequest:
      type: object
      properties:
        MaxResults:
          $ref: '#/components/schemas/PatchBaselineMaxResults'
        Filters:
          $ref: '#/components/schemas/PatchOrchestratorFilterList'
        NextToken:
          $ref: '#/components/schemas/NextToken'
    DescribePatchGroupsResult:
      type: object
      properties:
        Mappings:
          $ref: '#/components/schemas/PatchGroupPatchBaselineMappingList'
        NextToken:
          $ref: '#/components/schemas/NextToken'
    DescriptionInDocument:
      type: string
    DocumentARN:
      type: string
      pattern: '^[a-zA-Z0-9_\-.:/]{3,128}$'
    DocumentAlreadyExists:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/String'
      description: The specified document already exists.
    DocumentContent:
      type: string
      minLength: 1
    DocumentDefaultVersionDescription:
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/DocumentName'
        DefaultVersion:
          $ref: '#/components/schemas/DocumentVersion'
      description: A default version of a document.
    DocumentDescription:
      type: object
      properties:
        Sha1:
          $ref: '#/components/schemas/DocumentSha1'
        Hash:
          $ref: '#/components/schemas/DocumentHash'
        HashType:
          $ref: '#/components/schemas/DocumentHashType'
        Name:
          $ref: '#/components/schemas/DocumentARN'
        Owner:
          $ref: '#/components/schemas/DocumentOwner'
        CreatedDate:
          $ref: '#/components/schemas/DateTime'
        Status:
          $ref: '#/components/schemas/DocumentStatus'
        DocumentVersion:
          $ref: '#/components/schemas/DocumentVersion'
        Description:
          $ref: '#/components/schemas/DescriptionInDocument'
        Parameters:
          $ref: '#/components/schemas/DocumentParameterList'
        PlatformTypes:
          $ref: '#/components/schemas/PlatformTypeList'
        DocumentType:
          $ref: '#/components/schemas/DocumentType'
        SchemaVersion:
          $ref: '#/components/schemas/DocumentSchemaVersion'
        LatestVersion:
          $ref: '#/components/schemas/DocumentVersion'
        DefaultVersion:
          $ref: '#/components/schemas/DocumentVersion'
      description: 'Describes an SSM document. '
    DocumentFilter:
      type: object
      required:
        - key
        - value
      properties:
        key:
          $ref: '#/components/schemas/DocumentFilterKey'
        value:
          $ref: '#/components/schemas/DocumentFilterValue'
      description: Describes a filter.
    DocumentFilterKey:
      type: string
      enum:
        - Name
        - Owner
        - PlatformTypes
        - DocumentType
    DocumentFilterList:
      type: array
      items:
        $ref: '#/components/schemas/DocumentFilter'
      minItems: 1
    DocumentFilterValue:
      type: string
      minLength: 1
    DocumentHash:
      type: string
      maxLength: 256
    DocumentHashType:
      type: string
      enum:
        - Sha256
        - Sha1
    DocumentIdentifier:
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/DocumentARN'
        Owner:
          $ref: '#/components/schemas/DocumentOwner'
        PlatformTypes:
          $ref: '#/components/schemas/PlatformTypeList'
        DocumentVersion:
          $ref: '#/components/schemas/DocumentVersion'
        DocumentType:
          $ref: '#/components/schemas/DocumentType'
        SchemaVersion:
          $ref: '#/components/schemas/DocumentSchemaVersion'
      description: Describes the name of an SSM document.
    DocumentIdentifierList:
      type: array
      items:
        $ref: '#/components/schemas/DocumentIdentifier'
    DocumentLimitExceeded:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/String'
      description: You can have at most 200 active SSM documents.
    DocumentName:
      type: string
      pattern: '^[a-zA-Z0-9_\-.]{3,128}$'
    DocumentOwner:
      type: string
    DocumentParameter:
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/DocumentParameterName'
        Type:
          $ref: '#/components/schemas/DocumentParameterType'
        Description:
          $ref: '#/components/schemas/DocumentParameterDescrption'
        DefaultValue:
          $ref: '#/components/schemas/DocumentParameterDefaultValue'
      description: 'Parameters specified in a System Manager document that execute on the server when the command is run. '
    DocumentParameterDefaultValue:
      type: string
    DocumentParameterDescrption:
      type: string
    DocumentParameterList:
      type: array
      items:
        $ref: '#/components/schemas/DocumentParameter'
    DocumentParameterName:
      type: string
    DocumentParameterType:
      type: string
      enum:
        - String
        - StringList
    DocumentPermissionLimit:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/String'
      description: 'The document cannot be shared with more AWS user accounts. You can share a document with a maximum of 20 accounts. You can publicly share up to five documents. If you need to increase this limit, contact AWS Support.'
    DocumentPermissionType:
      type: string
      enum:
        - Share
    DocumentSchemaVersion:
      type: string
      pattern: '([0-9]+)\.([0-9]+)'
    DocumentSha1:
      type: string
    DocumentStatus:
      type: string
      enum:
        - Creating
        - Active
        - Updating
        - Deleting
    DocumentType:
      type: string
      enum:
        - Command
        - Policy
        - Automation
    DocumentVersion:
      type: string
      pattern: '([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)'
    DocumentVersionInfo:
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/DocumentName'
        DocumentVersion:
          $ref: '#/components/schemas/DocumentVersion'
        CreatedDate:
          $ref: '#/components/schemas/DateTime'
        IsDefaultVersion:
          $ref: '#/components/schemas/Boolean'
      description: Version information about the document.
    DocumentVersionLimitExceeded:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/String'
      description: The document has too many versions. Delete one or more document versions and try again.
    DocumentVersionList:
      type: array
      items:
        $ref: '#/components/schemas/DocumentVersionInfo'
      minItems: 1
    DocumentVersionNumber:
      type: string
      pattern: '(^[1-9][0-9]*$)'
    DoesNotExistException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/String'
      description: Error returned when the ID specified for a resource (e.g. a Maintenance Window) doesn't exist.
    DuplicateDocumentContent:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/String'
      description: The content of the association document matches another document. Change the content of the document and try again.
    DuplicateInstanceId:
      type: object
      properties: {}
      description: You cannot specify an instance ID in more than one association.
    EffectiveInstanceAssociationMaxResults:
      type: integer
      minimum: 1
      maximum: 5
    EffectivePatch:
      type: object
      properties:
        Patch:
          $ref: '#/components/schemas/Patch'
        PatchStatus:
          $ref: '#/components/schemas/PatchStatus'
      description: 'The EffectivePatch structure defines metadata about a patch along with the approval state of the patch in a particular patch baseline. The approval state includes information about whether the patch is currently approved, due to be approved by a rule, explicitly approved, or explicitly rejected and the date the patch was or will be approved.'
    EffectivePatchList:
      type: array
      items:
        $ref: '#/components/schemas/EffectivePatch'
    ErrorCount:
      type: integer
    ExpirationDate:
      type: string
      format: date-time
    FailedCreateAssociation:
      type: object
      properties:
        Entry:
          $ref: '#/components/schemas/CreateAssociationBatchRequestEntry'
        Message:
          $ref: '#/components/schemas/BatchErrorMessage'
        Fault:
          $ref: '#/components/schemas/Fault'
      description: Describes a failed association.
    FailedCreateAssociationList:
      type: array
      items:
        $ref: '#/components/schemas/FailedCreateAssociation'
    FailureDetails:
      type: object
      properties:
        FailureStage:
          $ref: '#/components/schemas/String'
        FailureType:
          $ref: '#/components/schemas/String'
        Details:
          $ref: '#/components/schemas/AutomationParameterMap'
      description: Information about an Automation failure.
    Fault:
      type: string
      enum:
        - Client
        - Server
        - Unknown
    GetAutomationExecutionRequest:
      type: object
      required:
        - AutomationExecutionId
      properties:
        AutomationExecutionId:
          $ref: '#/components/schemas/AutomationExecutionId'
    GetAutomationExecutionResult:
      type: object
      properties:
        AutomationExecution:
          $ref: '#/components/schemas/AutomationExecution'
    GetCommandInvocationRequest:
      type: object
      required:
        - CommandId
        - InstanceId
      properties:
        CommandId:
          $ref: '#/components/schemas/CommandId'
        InstanceId:
          $ref: '#/components/schemas/InstanceId'
        PluginName:
          $ref: '#/components/schemas/CommandPluginName'
    GetCommandInvocationResult:
      type: object
      properties:
        CommandId:
          $ref: '#/components/schemas/CommandId'
        InstanceId:
          $ref: '#/components/schemas/InstanceId'
        Comment:
          $ref: '#/components/schemas/Comment'
        DocumentName:
          $ref: '#/components/schemas/DocumentName'
        PluginName:
          $ref: '#/components/schemas/CommandPluginName'
        ResponseCode:
          $ref: '#/components/schemas/ResponseCode'
        ExecutionStartDateTime:
          $ref: '#/components/schemas/StringDateTime'
        ExecutionElapsedTime:
          $ref: '#/components/schemas/StringDateTime'
        ExecutionEndDateTime:
          $ref: '#/components/schemas/StringDateTime'
        Status:
          $ref: '#/components/schemas/CommandInvocationStatus'
        StatusDetails:
          $ref: '#/components/schemas/StatusDetails'
        StandardOutputContent:
          $ref: '#/components/schemas/StandardOutputContent'
        StandardOutputUrl:
          $ref: '#/components/schemas/Url'
        StandardErrorContent:
          $ref: '#/components/schemas/StandardErrorContent'
        StandardErrorUrl:
          $ref: '#/components/schemas/Url'
    GetDefaultPatchBaselineRequest:
      type: object
      properties:
        OperatingSystem:
          $ref: '#/components/schemas/OperatingSystem'
    GetDefaultPatchBaselineResult:
      type: object
      properties:
        BaselineId:
          $ref: '#/components/schemas/BaselineId'
        OperatingSystem:
          $ref: '#/components/schemas/OperatingSystem'
    GetDeployablePatchSnapshotForInstanceRequest:
      type: object
      required:
        - InstanceId
        - SnapshotId
      properties:
        InstanceId:
          $ref: '#/components/schemas/InstanceId'
        SnapshotId:
          $ref: '#/components/schemas/SnapshotId'
    GetDeployablePatchSnapshotForInstanceResult:
      type: object
      properties:
        InstanceId:
          $ref: '#/components/schemas/InstanceId'
        SnapshotId:
          $ref: '#/components/schemas/SnapshotId'
        SnapshotDownloadUrl:
          $ref: '#/components/schemas/SnapshotDownloadUrl'
        Product:
          $ref: '#/components/schemas/Product'
    GetDocumentRequest:
      type: object
      required:
        - Name
      properties:
        Name:
          $ref: '#/components/schemas/DocumentARN'
        DocumentVersion:
          $ref: '#/components/schemas/DocumentVersion'
    GetDocumentResult:
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/DocumentARN'
        DocumentVersion:
          $ref: '#/components/schemas/DocumentVersion'
        Content:
          $ref: '#/components/schemas/DocumentContent'
        DocumentType:
          $ref: '#/components/schemas/DocumentType'
    GetInventoryRequest:
      type: object
      properties:
        Filters:
          $ref: '#/components/schemas/InventoryFilterList'
        ResultAttributes:
          $ref: '#/components/schemas/ResultAttributeList'
        NextToken:
          $ref: '#/components/schemas/NextToken'
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
    GetInventoryResult:
      type: object
      properties:
        Entities:
          $ref: '#/components/schemas/InventoryResultEntityList'
        NextToken:
          $ref: '#/components/schemas/NextToken'
    GetInventorySchemaMaxResults:
      type: integer
      minimum: 50
      maximum: 200
    GetInventorySchemaRequest:
      type: object
      properties:
        TypeName:
          $ref: '#/components/schemas/InventoryItemTypeNameFilter'
        NextToken:
          $ref: '#/components/schemas/NextToken'
        MaxResults:
          $ref: '#/components/schemas/GetInventorySchemaMaxResults'
    GetInventorySchemaResult:
      type: object
      properties:
        Schemas:
          $ref: '#/components/schemas/InventoryItemSchemaResultList'
        NextToken:
          $ref: '#/components/schemas/NextToken'
    GetMaintenanceWindowExecutionRequest:
      type: object
      required:
        - WindowExecutionId
      properties:
        WindowExecutionId:
          $ref: '#/components/schemas/MaintenanceWindowExecutionId'
    GetMaintenanceWindowExecutionResult:
      type: object
      properties:
        WindowExecutionId:
          $ref: '#/components/schemas/MaintenanceWindowExecutionId'
        TaskIds:
          $ref: '#/components/schemas/MaintenanceWindowExecutionTaskIdList'
        Status:
          $ref: '#/components/schemas/MaintenanceWindowExecutionStatus'
        StatusDetails:
          $ref: '#/components/schemas/MaintenanceWindowExecutionStatusDetails'
        StartTime:
          $ref: '#/components/schemas/DateTime'
        EndTime:
          $ref: '#/components/schemas/DateTime'
    GetMaintenanceWindowExecutionTaskRequest:
      type: object
      required:
        - WindowExecutionId
        - TaskId
      properties:
        WindowExecutionId:
          $ref: '#/components/schemas/MaintenanceWindowExecutionId'
        TaskId:
          $ref: '#/components/schemas/MaintenanceWindowExecutionTaskId'
    GetMaintenanceWindowExecutionTaskResult:
      type: object
      properties:
        WindowExecutionId:
          $ref: '#/components/schemas/MaintenanceWindowExecutionId'
        TaskExecutionId:
          $ref: '#/components/schemas/MaintenanceWindowExecutionTaskId'
        TaskArn:
          $ref: '#/components/schemas/MaintenanceWindowTaskArn'
        ServiceRole:
          $ref: '#/components/schemas/ServiceRole'
        Type:
          $ref: '#/components/schemas/MaintenanceWindowTaskType'
        TaskParameters:
          $ref: '#/components/schemas/MaintenanceWindowTaskParametersList'
        Priority:
          $ref: '#/components/schemas/MaintenanceWindowTaskPriority'
        MaxConcurrency:
          $ref: '#/components/schemas/MaxConcurrency'
        MaxErrors:
          $ref: '#/components/schemas/MaxErrors'
        Status:
          $ref: '#/components/schemas/MaintenanceWindowExecutionStatus'
        StatusDetails:
          $ref: '#/components/schemas/MaintenanceWindowExecutionStatusDetails'
        StartTime:
          $ref: '#/components/schemas/DateTime'
        EndTime:
          $ref: '#/components/schemas/DateTime'
    GetMaintenanceWindowRequest:
      type: object
      required:
        - WindowId
      properties:
        WindowId:
          $ref: '#/components/schemas/MaintenanceWindowId'
    GetMaintenanceWindowResult:
      type: object
      properties:
        WindowId:
          $ref: '#/components/schemas/MaintenanceWindowId'
        Name:
          $ref: '#/components/schemas/MaintenanceWindowName'
        Schedule:
          $ref: '#/components/schemas/MaintenanceWindowSchedule'
        Duration:
          $ref: '#/components/schemas/MaintenanceWindowDurationHours'
        Cutoff:
          $ref: '#/components/schemas/MaintenanceWindowCutoff'
        AllowUnassociatedTargets:
          $ref: '#/components/schemas/MaintenanceWindowAllowUnassociatedTargets'
        Enabled:
          $ref: '#/components/schemas/MaintenanceWindowEnabled'
        CreatedDate:
          $ref: '#/components/schemas/DateTime'
        ModifiedDate:
          $ref: '#/components/schemas/DateTime'
    GetParameterHistoryRequest:
      type: object
      required:
        - Name
      properties:
        Name:
          $ref: '#/components/schemas/PSParameterName'
        WithDecryption:
          $ref: '#/components/schemas/Boolean'
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
        NextToken:
          $ref: '#/components/schemas/NextToken'
    GetParameterHistoryResult:
      type: object
      properties:
        Parameters:
          $ref: '#/components/schemas/ParameterHistoryList'
        NextToken:
          $ref: '#/components/schemas/NextToken'
    GetParameterRequest:
      type: object
      required:
        - Name
      properties:
        Name:
          $ref: '#/components/schemas/PSParameterName'
        WithDecryption:
          $ref: '#/components/schemas/Boolean'
    GetParameterResult:
      type: object
      properties:
        Parameter:
          $ref: '#/components/schemas/Parameter'
    GetParametersByPathMaxResults:
      type: integer
      minimum: 1
      maximum: 10
    GetParametersByPathRequest:
      type: object
      required:
        - Path
      properties:
        Path:
          $ref: '#/components/schemas/PSParameterName'
        Recursive:
          $ref: '#/components/schemas/Boolean'
        ParameterFilters:
          $ref: '#/components/schemas/ParameterStringFilterList'
        WithDecryption:
          $ref: '#/components/schemas/Boolean'
        MaxResults:
          $ref: '#/components/schemas/GetParametersByPathMaxResults'
        NextToken:
          $ref: '#/components/schemas/NextToken'
    GetParametersByPathResult:
      type: object
      properties:
        Parameters:
          $ref: '#/components/schemas/ParameterList'
        NextToken:
          $ref: '#/components/schemas/NextToken'
    GetParametersRequest:
      type: object
      required:
        - Names
      properties:
        Names:
          $ref: '#/components/schemas/ParameterNameList'
        WithDecryption:
          $ref: '#/components/schemas/Boolean'
    GetParametersResult:
      type: object
      properties:
        Parameters:
          $ref: '#/components/schemas/ParameterList'
        InvalidParameters:
          $ref: '#/components/schemas/ParameterNameList'
    GetPatchBaselineForPatchGroupRequest:
      type: object
      required:
        - PatchGroup
      properties:
        PatchGroup:
          $ref: '#/components/schemas/PatchGroup'
        OperatingSystem:
          $ref: '#/components/schemas/OperatingSystem'
    GetPatchBaselineForPatchGroupResult:
      type: object
      properties:
        BaselineId:
          $ref: '#/components/schemas/BaselineId'
        PatchGroup:
          $ref: '#/components/schemas/PatchGroup'
        OperatingSystem:
          $ref: '#/components/schemas/OperatingSystem'
    GetPatchBaselineRequest:
      type: object
      required:
        - BaselineId
      properties:
        BaselineId:
          $ref: '#/components/schemas/BaselineId'
    GetPatchBaselineResult:
      type: object
      properties:
        BaselineId:
          $ref: '#/components/schemas/BaselineId'
        Name:
          $ref: '#/components/schemas/BaselineName'
        OperatingSystem:
          $ref: '#/components/schemas/OperatingSystem'
        GlobalFilters:
          $ref: '#/components/schemas/PatchFilterGroup'
        ApprovalRules:
          $ref: '#/components/schemas/PatchRuleGroup'
        ApprovedPatches:
          $ref: '#/components/schemas/PatchIdList'
        ApprovedPatchesComplianceLevel:
          $ref: '#/components/schemas/PatchComplianceLevel'
        RejectedPatches:
          $ref: '#/components/schemas/PatchIdList'
        PatchGroups:
          $ref: '#/components/schemas/PatchGroupList'
        CreatedDate:
          $ref: '#/components/schemas/DateTime'
        ModifiedDate:
          $ref: '#/components/schemas/DateTime'
        Description:
          $ref: '#/components/schemas/BaselineDescription'
    HierarchyLevelLimitExceededException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      description: '<p>A hierarchy can have a maximum of five levels. For example:</p> <p>/Finance/Prod/IAD/OS/WinServ2016/license15</p> <p>For more information, see <a href="http://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-paramstore-working.html">Working with Systems Manager Parameters</a>. </p>'
    HierarchyTypeMismatchException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      description: 'Parameter Store does not support changing a parameter type in a hierarchy. For example, you can''t change a parameter from a String type to a SecureString type. You must create a new, unique parameter.'
    IPAddress:
      type: string
      minLength: 1
      maxLength: 46
    IamRole:
      type: string
      maxLength: 64
    IdempotentParameterMismatch:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/String'
      description: 'Error returned when an idempotent operation is retried and the parameters don''t match the original call to the API with the same idempotency token. '
    InstanceAggregatedAssociationOverview:
      type: object
      properties:
        DetailedStatus:
          $ref: '#/components/schemas/StatusName'
        InstanceAssociationStatusAggregatedCount:
          $ref: '#/components/schemas/InstanceAssociationStatusAggregatedCount'
      description: Status information about the aggregated associations.
    InstanceAssociation:
      type: object
      properties:
        AssociationId:
          $ref: '#/components/schemas/AssociationId'
        InstanceId:
          $ref: '#/components/schemas/InstanceId'
        Content:
          $ref: '#/components/schemas/DocumentContent'
      description: 'One or more association documents on the instance. '
    InstanceAssociationExecutionSummary:
      type: string
      minLength: 1
      maxLength: 512
    InstanceAssociationList:
      type: array
      items:
        $ref: '#/components/schemas/InstanceAssociation'
    InstanceAssociationOutputLocation:
      type: object
      properties:
        S3Location:
          $ref: '#/components/schemas/S3OutputLocation'
      description: An Amazon S3 bucket where you want to store the results of this request.
    InstanceAssociationOutputUrl:
      type: object
      properties:
        S3OutputUrl:
          $ref: '#/components/schemas/S3OutputUrl'
      description: The URL of Amazon S3 bucket where you want to store the results of this request.
    InstanceAssociationStatusAggregatedCount:
      type: array
      items:
        type: object
        properties:
          key:
            $ref: '#/components/schemas/StatusName'
          value:
            $ref: '#/components/schemas/InstanceCount'
    InstanceAssociationStatusInfo:
      type: object
      properties:
        AssociationId:
          $ref: '#/components/schemas/AssociationId'
        Name:
          $ref: '#/components/schemas/DocumentName'
        DocumentVersion:
          $ref: '#/components/schemas/DocumentVersion'
        InstanceId:
          $ref: '#/components/schemas/InstanceId'
        ExecutionDate:
          $ref: '#/components/schemas/DateTime'
        Status:
          $ref: '#/components/schemas/StatusName'
        DetailedStatus:
          $ref: '#/components/schemas/StatusName'
        ExecutionSummary:
          $ref: '#/components/schemas/InstanceAssociationExecutionSummary'
        ErrorCode:
          $ref: '#/components/schemas/AgentErrorCode'
        OutputUrl:
          $ref: '#/components/schemas/InstanceAssociationOutputUrl'
      description: Status information about the instance association.
    InstanceAssociationStatusInfos:
      type: array
      items:
        $ref: '#/components/schemas/InstanceAssociationStatusInfo'
    InstanceCount:
      type: integer
    InstanceId:
      type: string
      pattern: '(^i-(\w{8}|\w{17})$)|(^mi-\w{17}$)'
    InstanceIdList:
      type: array
      items:
        $ref: '#/components/schemas/InstanceId'
      minItems: 0
      maxItems: 50
    InstanceInformation:
      type: object
      properties:
        InstanceId:
          $ref: '#/components/schemas/InstanceId'
        PingStatus:
          $ref: '#/components/schemas/PingStatus'
        LastPingDateTime:
          $ref: '#/components/schemas/DateTime'
        AgentVersion:
          $ref: '#/components/schemas/Version'
        IsLatestVersion:
          $ref: '#/components/schemas/Boolean'
        PlatformType:
          $ref: '#/components/schemas/PlatformType'
        PlatformName:
          $ref: '#/components/schemas/String'
        PlatformVersion:
          $ref: '#/components/schemas/String'
        ActivationId:
          $ref: '#/components/schemas/ActivationId'
        IamRole:
          $ref: '#/components/schemas/IamRole'
        RegistrationDate:
          $ref: '#/components/schemas/DateTime'
        ResourceType:
          $ref: '#/components/schemas/ResourceType'
        Name:
          $ref: '#/components/schemas/String'
        IPAddress:
          $ref: '#/components/schemas/IPAddress'
        ComputerName:
          $ref: '#/components/schemas/ComputerName'
        AssociationStatus:
          $ref: '#/components/schemas/StatusName'
        LastAssociationExecutionDate:
          $ref: '#/components/schemas/DateTime'
        LastSuccessfulAssociationExecutionDate:
          $ref: '#/components/schemas/DateTime'
        AssociationOverview:
          $ref: '#/components/schemas/InstanceAggregatedAssociationOverview'
      description: 'Describes a filter for a specific list of instances. '
    InstanceInformationFilter:
      type: object
      required:
        - key
        - valueSet
      properties:
        key:
          $ref: '#/components/schemas/InstanceInformationFilterKey'
        valueSet:
          $ref: '#/components/schemas/InstanceInformationFilterValueSet'
      description: 'Describes a filter for a specific list of instances. '
    InstanceInformationFilterKey:
      type: string
      enum:
        - InstanceIds
        - AgentVersion
        - PingStatus
        - PlatformTypes
        - ActivationIds
        - IamRole
        - ResourceType
        - AssociationStatus
    InstanceInformationFilterList:
      type: array
      items:
        $ref: '#/components/schemas/InstanceInformationFilter'
      minItems: 0
    InstanceInformationFilterValue:
      type: string
      minLength: 1
    InstanceInformationFilterValueSet:
      type: array
      items:
        $ref: '#/components/schemas/InstanceInformationFilterValue'
      minItems: 1
      maxItems: 100
    InstanceInformationList:
      type: array
      items:
        $ref: '#/components/schemas/InstanceInformation'
    InstanceInformationStringFilter:
      type: object
      required:
        - Key
        - Values
      properties:
        Key:
          $ref: '#/components/schemas/InstanceInformationStringFilterKey'
        Values:
          $ref: '#/components/schemas/InstanceInformationFilterValueSet'
      description: The filters to describe or get information about your managed instances.
    InstanceInformationStringFilterKey:
      type: string
      minLength: 1
    InstanceInformationStringFilterList:
      type: array
      items:
        $ref: '#/components/schemas/InstanceInformationStringFilter'
      minItems: 0
    InstancePatchState:
      type: object
      required:
        - InstanceId
        - PatchGroup
        - BaselineId
        - OperationStartTime
        - OperationEndTime
        - Operation
      properties:
        InstanceId:
          $ref: '#/components/schemas/InstanceId'
        PatchGroup:
          $ref: '#/components/schemas/PatchGroup'
        BaselineId:
          $ref: '#/components/schemas/BaselineId'
        SnapshotId:
          $ref: '#/components/schemas/SnapshotId'
        OwnerInformation:
          $ref: '#/components/schemas/OwnerInformation'
        InstalledCount:
          $ref: '#/components/schemas/PatchInstalledCount'
        InstalledOtherCount:
          $ref: '#/components/schemas/PatchInstalledOtherCount'
        MissingCount:
          $ref: '#/components/schemas/PatchMissingCount'
        FailedCount:
          $ref: '#/components/schemas/PatchFailedCount'
        NotApplicableCount:
          $ref: '#/components/schemas/PatchNotApplicableCount'
        OperationStartTime:
          $ref: '#/components/schemas/DateTime'
        OperationEndTime:
          $ref: '#/components/schemas/DateTime'
        Operation:
          $ref: '#/components/schemas/PatchOperationType'
      description: 'Defines the high-level patch compliance state for a managed instance, providing information about the number of installed, missing, not applicable, and failed patches along with metadata about the operation when this information was gathered for the instance.'
    InstancePatchStateFilter:
      type: object
      required:
        - Key
        - Values
        - Type
      properties:
        Key:
          $ref: '#/components/schemas/InstancePatchStateFilterKey'
        Values:
          $ref: '#/components/schemas/InstancePatchStateFilterValues'
        Type:
          $ref: '#/components/schemas/InstancePatchStateOperatorType'
      description: Defines a filter used in DescribeInstancePatchStatesForPatchGroup used to scope down the information returned by the API.
    InstancePatchStateFilterKey:
      type: string
      minLength: 1
      maxLength: 200
    InstancePatchStateFilterList:
      type: array
      items:
        $ref: '#/components/schemas/InstancePatchStateFilter'
      minItems: 0
      maxItems: 4
    InstancePatchStateFilterValue:
      type: string
    InstancePatchStateFilterValues:
      type: array
      items:
        $ref: '#/components/schemas/InstancePatchStateFilterValue'
      minItems: 1
      maxItems: 1
    InstancePatchStateList:
      type: array
      items:
        $ref: '#/components/schemas/InstancePatchState'
    InstancePatchStateOperatorType:
      type: string
      enum:
        - Equal
        - NotEqual
        - LessThan
        - GreaterThan
    InstancePatchStatesList:
      type: array
      items:
        $ref: '#/components/schemas/InstancePatchState'
      minItems: 1
      maxItems: 5
    InstanceTagName:
      type: string
      maxLength: 255
    Integer:
      type: integer
    InternalServerError:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/String'
      description: An error occurred on the server side.
    InvalidActivation:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/String'
      description: 'The activation is not valid. The activation might have been deleted, or the ActivationId and the ActivationCode do not match.'
    InvalidActivationId:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/String'
      description: The activation ID is not valid. Verify the you entered the correct ActivationId or ActivationCode and try again.
    InvalidAllowedPatternException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      description: The request does not meet the regular expression requirement.
    InvalidAutomationExecutionParametersException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/String'
      description: 'The supplied parameters for invoking the specified Automation document are incorrect. For example, they may not match the set of parameters permitted for the specified Automation document.'
    InvalidCommandId:
      type: object
      properties: {}
    InvalidDocument:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/String'
      description: The specified document does not exist.
    InvalidDocumentContent:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/String'
      description: The content for the document is not valid.
    InvalidDocumentOperation:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/String'
      description: You attempted to delete a document while it is still shared. You must stop sharing the document before you can delete it.
    InvalidDocumentSchemaVersion:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/String'
      description: The version of the document schema is not supported.
    InvalidDocumentVersion:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/String'
      description: The document version is not valid or does not exist.
    InvalidFilter:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/String'
      description: The filter name is not valid. Verify the you entered the correct name and try again.
    InvalidFilterKey:
      type: object
      properties: {}
      description: The specified key is not valid.
    InvalidFilterOption:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      description: 'The specified filter option is not valid. Valid options are Equals and BeginsWith. For Path filter, valid options are Recursive and OneLevel.'
    InvalidFilterValue:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/String'
      description: The filter value is not valid. Verify the value and try again.
    InvalidInstanceId:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/String'
      description: '<p>The following problems can cause this exception:</p> <p>You do not have permission to access the instance.</p> <p>The SSM Agent is not running. On managed instances and Linux instances, verify that the SSM Agent is running. On EC2 Windows instances, verify that the EC2Config service is running.</p> <p>The SSM Agent or EC2Config service is not registered to the SSM endpoint. Try reinstalling the SSM Agent or EC2Config service.</p> <p>The instance is not in valid state. Valid states are: Running, Pending, Stopped, Stopping. Invalid states are: Shutting-down and Terminated.</p>'
    InvalidInstanceInformationFilterValue:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      description: The specified filter value is not valid.
    InvalidItemContentException:
      type: object
      properties:
        TypeName:
          $ref: '#/components/schemas/InventoryItemTypeName'
        Message:
          $ref: '#/components/schemas/String'
      description: One or more content items is not valid.
    InvalidKeyId:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      description: The query key ID is not valid.
    InvalidNextToken:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/String'
      description: The specified token is not valid.
    InvalidNotificationConfig:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/String'
      description: One or more configuration items is not valid. Verify that a valid Amazon Resource Name (ARN) was provided for an Amazon SNS topic.
    InvalidOutputFolder:
      type: object
      properties: {}
      description: The S3 bucket does not exist.
    InvalidOutputLocation:
      type: object
      properties: {}
      description: The output location is not valid or does not exist.
    InvalidParameters:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/String'
      description: You must specify values for all required parameters in the SSM document. You can only supply values to parameters defined in the SSM document.
    InvalidPermissionType:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/String'
      description: The permission type is not supported. <i>Share</i> is the only supported permission type.
    InvalidPluginName:
      type: object
      properties: {}
      description: The plugin name is not valid.
    InvalidResourceId:
      type: object
      properties: {}
      description: The resource ID is not valid. Verify that you entered the correct ID and try again.
    InvalidResourceType:
      type: object
      properties: {}
      description: 'The resource type is not valid. If you are attempting to tag an instance, the instance must be a registered, managed instance.'
    InvalidResultAttributeException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/String'
      description: The specified inventory item result attribute is not valid.
    InvalidRole:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/String'
      description: 'The role name can''t contain invalid characters. Also verify that you specified an IAM role for notifications that includes the required trust policy. For information about configuring the IAM role for Run Command notifications, see <a href="http://docs.aws.amazon.com/systems-manager/latest/userguide/rc-sns-notifications.html">Configuring Amazon SNS Notifications for Run Command</a> in the <i>Amazon EC2 Systems Manager User Guide</i>.'
    InvalidSchedule:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/String'
      description: The schedule is invalid. Verify your cron or rate expression and try again.
    InvalidTarget:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/String'
      description: The target is not valid or does not exist. It might not be configured for EC2 Systems Manager or you might not have permission to perform the operation.
    InvalidTypeNameException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/String'
      description: The parameter type name is not valid.
    InvalidUpdate:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/String'
      description: The update is not valid.
    InventoryAttributeDataType:
      type: string
      enum:
        - string
        - number
    InventoryFilter:
      type: object
      required:
        - Key
        - Values
      properties:
        Key:
          $ref: '#/components/schemas/InventoryFilterKey'
        Values:
          $ref: '#/components/schemas/InventoryFilterValueList'
        Type:
          $ref: '#/components/schemas/InventoryQueryOperatorType'
      description: One or more filters. Use a filter to return a more specific list of results.
    InventoryFilterKey:
      type: string
      minLength: 1
      maxLength: 200
    InventoryFilterList:
      type: array
      items:
        $ref: '#/components/schemas/InventoryFilter'
      minItems: 1
      maxItems: 5
    InventoryFilterValue:
      type: string
    InventoryFilterValueList:
      type: array
      items:
        $ref: '#/components/schemas/InventoryFilterValue'
      minItems: 1
      maxItems: 20
    InventoryItem:
      type: object
      required:
        - TypeName
        - SchemaVersion
        - CaptureTime
      properties:
        TypeName:
          $ref: '#/components/schemas/InventoryItemTypeName'
        SchemaVersion:
          $ref: '#/components/schemas/InventoryItemSchemaVersion'
        CaptureTime:
          $ref: '#/components/schemas/InventoryItemCaptureTime'
        ContentHash:
          $ref: '#/components/schemas/InventoryItemContentHash'
        Content:
          $ref: '#/components/schemas/InventoryItemEntryList'
      description: Information collected from managed instances based on your inventory policy document
    InventoryItemAttribute:
      type: object
      required:
        - Name
        - DataType
      properties:
        Name:
          $ref: '#/components/schemas/InventoryItemAttributeName'
        DataType:
          $ref: '#/components/schemas/InventoryAttributeDataType'
      description: Attributes are the entries within the inventory item content. It contains name and value.
    InventoryItemAttributeList:
      type: array
      items:
        $ref: '#/components/schemas/InventoryItemAttribute'
      minItems: 1
      maxItems: 50
    InventoryItemAttributeName:
      type: string
    InventoryItemCaptureTime:
      type: string
      pattern: '^(20)[0-9][0-9]-(0[1-9]|1[012])-([12][0-9]|3[01]|0[1-9])(T)(2[0-3]|[0-1][0-9])(:[0-5][0-9])(:[0-5][0-9])(Z)$'
    InventoryItemContentHash:
      type: string
      maxLength: 256
    InventoryItemEntry:
      type: array
      minItems: 0
      maxItems: 50
      items:
        type: object
        properties:
          key:
            $ref: '#/components/schemas/AttributeName'
          value:
            $ref: '#/components/schemas/AttributeValue'
    InventoryItemEntryList:
      type: array
      items:
        $ref: '#/components/schemas/InventoryItemEntry'
      minItems: 0
      maxItems: 10000
    InventoryItemList:
      type: array
      items:
        $ref: '#/components/schemas/InventoryItem'
      minItems: 1
      maxItems: 30
    InventoryItemSchema:
      type: object
      required:
        - TypeName
        - Attributes
      properties:
        TypeName:
          $ref: '#/components/schemas/InventoryItemTypeName'
        Version:
          $ref: '#/components/schemas/InventoryItemSchemaVersion'
        Attributes:
          $ref: '#/components/schemas/InventoryItemAttributeList'
      description: The inventory item schema definition. Users can use this to compose inventory query filters.
    InventoryItemSchemaResultList:
      type: array
      items:
        $ref: '#/components/schemas/InventoryItemSchema'
    InventoryItemSchemaVersion:
      type: string
      pattern: '^([0-9]{1,6})(\.[0-9]{1,6})$'
    InventoryItemTypeName:
      type: string
      pattern: '^(AWS|Custom):.*$'
      minLength: 1
      maxLength: 100
    InventoryItemTypeNameFilter:
      type: string
      minLength: 0
      maxLength: 100
    InventoryQueryOperatorType:
      type: string
      enum:
        - Equal
        - NotEqual
        - BeginWith
        - LessThan
        - GreaterThan
    InventoryResultEntity:
      type: object
      properties:
        Id:
          $ref: '#/components/schemas/InventoryResultEntityId'
        Data:
          $ref: '#/components/schemas/InventoryResultItemMap'
      description: Inventory query results.
    InventoryResultEntityId:
      type: string
    InventoryResultEntityList:
      type: array
      items:
        $ref: '#/components/schemas/InventoryResultEntity'
    InventoryResultItem:
      type: object
      required:
        - TypeName
        - SchemaVersion
        - Content
      properties:
        TypeName:
          $ref: '#/components/schemas/InventoryItemTypeName'
        SchemaVersion:
          $ref: '#/components/schemas/InventoryItemSchemaVersion'
        CaptureTime:
          $ref: '#/components/schemas/InventoryItemCaptureTime'
        ContentHash:
          $ref: '#/components/schemas/InventoryItemContentHash'
        Content:
          $ref: '#/components/schemas/InventoryItemEntryList'
      description: The inventory result item.
    InventoryResultItemKey:
      type: string
    InventoryResultItemMap:
      type: array
      items:
        type: object
        properties:
          key:
            $ref: '#/components/schemas/InventoryResultItemKey'
          value:
            $ref: '#/components/schemas/InventoryResultItem'
    InvocationDoesNotExist:
      type: object
      properties: {}
      description: 'The command ID and instance ID you specified did not match any invocations. Verify the command ID adn the instance ID and try again. '
    InvocationTraceOutput:
      type: string
      maxLength: 2500
    ItemContentMismatchException:
      type: object
      properties:
        TypeName:
          $ref: '#/components/schemas/InventoryItemTypeName'
        Message:
          $ref: '#/components/schemas/String'
      description: 'The inventory item has invalid content. '
    ItemSizeLimitExceededException:
      type: object
      properties:
        TypeName:
          $ref: '#/components/schemas/InventoryItemTypeName'
        Message:
          $ref: '#/components/schemas/String'
      description: The inventory item size has exceeded the size limit.
    KeyList:
      type: array
      items:
        $ref: '#/components/schemas/TagKey'
    LastResourceDataSyncStatus:
      type: string
      enum:
        - Successful
        - Failed
        - InProgress
    LastResourceDataSyncTime:
      type: string
      format: date-time
    LastSuccessfulResourceDataSyncTime:
      type: string
      format: date-time
    ListAssociationsRequest:
      type: object
      properties:
        AssociationFilterList:
          $ref: '#/components/schemas/AssociationFilterList'
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
        NextToken:
          $ref: '#/components/schemas/NextToken'
    ListAssociationsResult:
      type: object
      properties:
        Associations:
          $ref: '#/components/schemas/AssociationList'
        NextToken:
          $ref: '#/components/schemas/NextToken'
    ListCommandInvocationsRequest:
      type: object
      properties:
        CommandId:
          $ref: '#/components/schemas/CommandId'
        InstanceId:
          $ref: '#/components/schemas/InstanceId'
        MaxResults:
          $ref: '#/components/schemas/CommandMaxResults'
        NextToken:
          $ref: '#/components/schemas/NextToken'
        Filters:
          $ref: '#/components/schemas/CommandFilterList'
        Details:
          $ref: '#/components/schemas/Boolean'
    ListCommandInvocationsResult:
      type: object
      properties:
        CommandInvocations:
          $ref: '#/components/schemas/CommandInvocationList'
        NextToken:
          $ref: '#/components/schemas/NextToken'
    ListCommandsRequest:
      type: object
      properties:
        CommandId:
          $ref: '#/components/schemas/CommandId'
        InstanceId:
          $ref: '#/components/schemas/InstanceId'
        MaxResults:
          $ref: '#/components/schemas/CommandMaxResults'
        NextToken:
          $ref: '#/components/schemas/NextToken'
        Filters:
          $ref: '#/components/schemas/CommandFilterList'
    ListCommandsResult:
      type: object
      properties:
        Commands:
          $ref: '#/components/schemas/CommandList'
        NextToken:
          $ref: '#/components/schemas/NextToken'
    ListDocumentVersionsRequest:
      type: object
      required:
        - Name
      properties:
        Name:
          $ref: '#/components/schemas/DocumentName'
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
        NextToken:
          $ref: '#/components/schemas/NextToken'
    ListDocumentVersionsResult:
      type: object
      properties:
        DocumentVersions:
          $ref: '#/components/schemas/DocumentVersionList'
        NextToken:
          $ref: '#/components/schemas/NextToken'
    ListDocumentsRequest:
      type: object
      properties:
        DocumentFilterList:
          $ref: '#/components/schemas/DocumentFilterList'
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
        NextToken:
          $ref: '#/components/schemas/NextToken'
    ListDocumentsResult:
      type: object
      properties:
        DocumentIdentifiers:
          $ref: '#/components/schemas/DocumentIdentifierList'
        NextToken:
          $ref: '#/components/schemas/NextToken'
    ListInventoryEntriesRequest:
      type: object
      required:
        - InstanceId
        - TypeName
      properties:
        InstanceId:
          $ref: '#/components/schemas/InstanceId'
        TypeName:
          $ref: '#/components/schemas/InventoryItemTypeName'
        Filters:
          $ref: '#/components/schemas/InventoryFilterList'
        NextToken:
          $ref: '#/components/schemas/NextToken'
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
    ListInventoryEntriesResult:
      type: object
      properties:
        TypeName:
          $ref: '#/components/schemas/InventoryItemTypeName'
        InstanceId:
          $ref: '#/components/schemas/InstanceId'
        SchemaVersion:
          $ref: '#/components/schemas/InventoryItemSchemaVersion'
        CaptureTime:
          $ref: '#/components/schemas/InventoryItemCaptureTime'
        Entries:
          $ref: '#/components/schemas/InventoryItemEntryList'
        NextToken:
          $ref: '#/components/schemas/NextToken'
    ListResourceDataSyncRequest:
      type: object
      properties:
        NextToken:
          $ref: '#/components/schemas/NextToken'
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
    ListResourceDataSyncResult:
      type: object
      properties:
        ResourceDataSyncItems:
          $ref: '#/components/schemas/ResourceDataSyncItemList'
        NextToken:
          $ref: '#/components/schemas/NextToken'
    ListTagsForResourceRequest:
      type: object
      required:
        - ResourceType
        - ResourceId
      properties:
        ResourceType:
          $ref: '#/components/schemas/ResourceTypeForTagging'
        ResourceId:
          $ref: '#/components/schemas/ResourceId'
    ListTagsForResourceResult:
      type: object
      properties:
        TagList:
          $ref: '#/components/schemas/TagList'
    LoggingInfo:
      type: object
      required:
        - S3BucketName
        - S3Region
      properties:
        S3BucketName:
          $ref: '#/components/schemas/S3BucketName'
        S3KeyPrefix:
          $ref: '#/components/schemas/S3KeyPrefix'
        S3Region:
          $ref: '#/components/schemas/S3Region'
      description: Information about an Amazon S3 bucket to write instance-level logs to.
    MaintenanceWindowAllowUnassociatedTargets:
      type: boolean
    MaintenanceWindowCutoff:
      type: integer
      minimum: 0
      maximum: 23
    MaintenanceWindowDurationHours:
      type: integer
      minimum: 1
      maximum: 24
    MaintenanceWindowEnabled:
      type: boolean
    MaintenanceWindowExecution:
      type: object
      properties:
        WindowId:
          $ref: '#/components/schemas/MaintenanceWindowId'
        WindowExecutionId:
          $ref: '#/components/schemas/MaintenanceWindowExecutionId'
        Status:
          $ref: '#/components/schemas/MaintenanceWindowExecutionStatus'
        StatusDetails:
          $ref: '#/components/schemas/MaintenanceWindowExecutionStatusDetails'
        StartTime:
          $ref: '#/components/schemas/DateTime'
        EndTime:
          $ref: '#/components/schemas/DateTime'
      description: 'Describes the information about an execution of a Maintenance Window. '
    MaintenanceWindowExecutionId:
      type: string
      pattern: '^[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}$'
      minLength: 36
      maxLength: 36
    MaintenanceWindowExecutionList:
      type: array
      items:
        $ref: '#/components/schemas/MaintenanceWindowExecution'
    MaintenanceWindowExecutionStatus:
      type: string
      enum:
        - PENDING
        - IN_PROGRESS
        - SUCCESS
        - FAILED
        - TIMED_OUT
        - CANCELLING
        - CANCELLED
        - SKIPPED_OVERLAPPING
    MaintenanceWindowExecutionStatusDetails:
      type: string
      minLength: 0
      maxLength: 250
    MaintenanceWindowExecutionTaskExecutionId:
      type: string
    MaintenanceWindowExecutionTaskId:
      type: string
      pattern: '^[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}$'
      minLength: 36
      maxLength: 36
    MaintenanceWindowExecutionTaskIdList:
      type: array
      items:
        $ref: '#/components/schemas/MaintenanceWindowExecutionTaskId'
    MaintenanceWindowExecutionTaskIdentity:
      type: object
      properties:
        WindowExecutionId:
          $ref: '#/components/schemas/MaintenanceWindowExecutionId'
        TaskExecutionId:
          $ref: '#/components/schemas/MaintenanceWindowExecutionTaskId'
        Status:
          $ref: '#/components/schemas/MaintenanceWindowExecutionStatus'
        StatusDetails:
          $ref: '#/components/schemas/MaintenanceWindowExecutionStatusDetails'
        StartTime:
          $ref: '#/components/schemas/DateTime'
        EndTime:
          $ref: '#/components/schemas/DateTime'
        TaskArn:
          $ref: '#/components/schemas/MaintenanceWindowTaskArn'
        TaskType:
          $ref: '#/components/schemas/MaintenanceWindowTaskType'
      description: Information about a task execution performed as part of a Maintenance Window execution.
    MaintenanceWindowExecutionTaskIdentityList:
      type: array
      items:
        $ref: '#/components/schemas/MaintenanceWindowExecutionTaskIdentity'
    MaintenanceWindowExecutionTaskInvocationId:
      type: string
      pattern: '^[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}$'
      minLength: 36
      maxLength: 36
    MaintenanceWindowExecutionTaskInvocationIdentity:
      type: object
      properties:
        WindowExecutionId:
          $ref: '#/components/schemas/MaintenanceWindowExecutionId'
        TaskExecutionId:
          $ref: '#/components/schemas/MaintenanceWindowExecutionTaskId'
        InvocationId:
          $ref: '#/components/schemas/MaintenanceWindowExecutionTaskInvocationId'
        ExecutionId:
          $ref: '#/components/schemas/MaintenanceWindowExecutionTaskExecutionId'
        Parameters:
          $ref: '#/components/schemas/MaintenanceWindowExecutionTaskInvocationParameters'
        Status:
          $ref: '#/components/schemas/MaintenanceWindowExecutionStatus'
        StatusDetails:
          $ref: '#/components/schemas/MaintenanceWindowExecutionStatusDetails'
        StartTime:
          $ref: '#/components/schemas/DateTime'
        EndTime:
          $ref: '#/components/schemas/DateTime'
        OwnerInformation:
          $ref: '#/components/schemas/OwnerInformation'
        WindowTargetId:
          $ref: '#/components/schemas/MaintenanceWindowTaskTargetId'
      description: Describes the information about a task invocation for a particular target as part of a task execution performed as part of a Maintenance Window execution.
    MaintenanceWindowExecutionTaskInvocationIdentityList:
      type: array
      items:
        $ref: '#/components/schemas/MaintenanceWindowExecutionTaskInvocationIdentity'
    MaintenanceWindowExecutionTaskInvocationParameters:
      type: string
      format: password
    MaintenanceWindowFilter:
      type: object
      properties:
        Key:
          $ref: '#/components/schemas/MaintenanceWindowFilterKey'
        Values:
          $ref: '#/components/schemas/MaintenanceWindowFilterValues'
      description: Filter used in the request.
    MaintenanceWindowFilterKey:
      type: string
      minLength: 1
      maxLength: 128
    MaintenanceWindowFilterList:
      type: array
      items:
        $ref: '#/components/schemas/MaintenanceWindowFilter'
      minItems: 0
      maxItems: 5
    MaintenanceWindowFilterValue:
      type: string
      minLength: 1
      maxLength: 256
    MaintenanceWindowFilterValues:
      type: array
      items:
        $ref: '#/components/schemas/MaintenanceWindowFilterValue'
    MaintenanceWindowId:
      type: string
      pattern: '^mw-[0-9a-f]{17}$'
      minLength: 20
      maxLength: 20
    MaintenanceWindowIdentity:
      type: object
      properties:
        WindowId:
          $ref: '#/components/schemas/MaintenanceWindowId'
        Name:
          $ref: '#/components/schemas/MaintenanceWindowName'
        Enabled:
          $ref: '#/components/schemas/MaintenanceWindowEnabled'
        Duration:
          $ref: '#/components/schemas/MaintenanceWindowDurationHours'
        Cutoff:
          $ref: '#/components/schemas/MaintenanceWindowCutoff'
      description: Information about the Maintenance Window.
    MaintenanceWindowIdentityList:
      type: array
      items:
        $ref: '#/components/schemas/MaintenanceWindowIdentity'
    MaintenanceWindowMaxResults:
      type: integer
      minimum: 10
      maximum: 100
    MaintenanceWindowName:
      type: string
      pattern: '^[a-zA-Z0-9_\-.]{3,128}$'
      minLength: 3
      maxLength: 128
    MaintenanceWindowResourceType:
      type: string
      enum:
        - INSTANCE
    MaintenanceWindowSchedule:
      type: string
      minLength: 1
      maxLength: 256
    MaintenanceWindowTarget:
      type: object
      properties:
        WindowId:
          $ref: '#/components/schemas/MaintenanceWindowId'
        WindowTargetId:
          $ref: '#/components/schemas/MaintenanceWindowTargetId'
        ResourceType:
          $ref: '#/components/schemas/MaintenanceWindowResourceType'
        Targets:
          $ref: '#/components/schemas/Targets'
        OwnerInformation:
          $ref: '#/components/schemas/OwnerInformation'
      description: The target registered with the Maintenance Window.
    MaintenanceWindowTargetId:
      type: string
      pattern: '^[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}$'
      minLength: 36
      maxLength: 36
    MaintenanceWindowTargetList:
      type: array
      items:
        $ref: '#/components/schemas/MaintenanceWindowTarget'
    MaintenanceWindowTask:
      type: object
      properties:
        WindowId:
          $ref: '#/components/schemas/MaintenanceWindowId'
        WindowTaskId:
          $ref: '#/components/schemas/MaintenanceWindowTaskId'
        TaskArn:
          $ref: '#/components/schemas/MaintenanceWindowTaskArn'
        Type:
          $ref: '#/components/schemas/MaintenanceWindowTaskType'
        Targets:
          $ref: '#/components/schemas/Targets'
        TaskParameters:
          $ref: '#/components/schemas/MaintenanceWindowTaskParameters'
        Priority:
          $ref: '#/components/schemas/MaintenanceWindowTaskPriority'
        LoggingInfo:
          $ref: '#/components/schemas/LoggingInfo'
        ServiceRoleArn:
          $ref: '#/components/schemas/ServiceRole'
        MaxConcurrency:
          $ref: '#/components/schemas/MaxConcurrency'
        MaxErrors:
          $ref: '#/components/schemas/MaxErrors'
      description: Information about a task defined for a Maintenance Window.
    MaintenanceWindowTaskArn:
      type: string
      minLength: 1
      maxLength: 1600
    MaintenanceWindowTaskId:
      type: string
      pattern: '^[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}$'
      minLength: 36
      maxLength: 36
    MaintenanceWindowTaskList:
      type: array
      items:
        $ref: '#/components/schemas/MaintenanceWindowTask'
    MaintenanceWindowTaskParameterName:
      type: string
      minLength: 1
      maxLength: 255
    MaintenanceWindowTaskParameterValue:
      type: string
      minLength: 1
      maxLength: 255
      format: password
    MaintenanceWindowTaskParameterValueExpression:
      type: object
      properties:
        Values:
          $ref: '#/components/schemas/MaintenanceWindowTaskParameterValueList'
      description: Defines the values for a task parameter.
    MaintenanceWindowTaskParameterValueList:
      type: array
      items:
        $ref: '#/components/schemas/MaintenanceWindowTaskParameterValue'
    MaintenanceWindowTaskParameters:
      type: array
      items:
        type: object
        properties:
          key:
            $ref: '#/components/schemas/MaintenanceWindowTaskParameterName'
          value:
            $ref: '#/components/schemas/MaintenanceWindowTaskParameterValueExpression'
    MaintenanceWindowTaskParametersList:
      type: array
      items:
        $ref: '#/components/schemas/MaintenanceWindowTaskParameters'
    MaintenanceWindowTaskPriority:
      type: integer
      minimum: 0
    MaintenanceWindowTaskTargetId:
      type: string
      maxLength: 36
    MaintenanceWindowTaskType:
      type: string
      enum:
        - RUN_COMMAND
    ManagedInstanceId:
      type: string
      pattern: '^mi-[0-9a-f]{17}$'
    MaxConcurrency:
      type: string
      pattern: '^([1-9][0-9]*|[1-9][0-9]%|[1-9]%|100%)$'
      minLength: 1
      maxLength: 7
    MaxDocumentSizeExceeded:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/String'
      description: The size limit of a document is 64 KB.
    MaxErrors:
      type: string
      pattern: '^([1-9][0-9]*|[0]|[1-9][0-9]%|[0-9]%|100%)$'
      minLength: 1
      maxLength: 7
    MaxResults:
      type: integer
      minimum: 1
      maximum: 50
    MaxResultsEC2Compatible:
      type: integer
      minimum: 5
      maximum: 50
    ModifyDocumentPermissionRequest:
      type: object
      required:
        - Name
        - PermissionType
      properties:
        Name:
          $ref: '#/components/schemas/DocumentName'
        PermissionType:
          $ref: '#/components/schemas/DocumentPermissionType'
        AccountIdsToAdd:
          $ref: '#/components/schemas/AccountIdList'
        AccountIdsToRemove:
          $ref: '#/components/schemas/AccountIdList'
    ModifyDocumentPermissionResponse:
      type: object
      properties: {}
    NextToken:
      type: string
    NormalStringMap:
      type: array
      items:
        type: object
        properties:
          key:
            $ref: '#/components/schemas/String'
          value:
            $ref: '#/components/schemas/String'
    NotificationArn:
      type: string
    NotificationConfig:
      type: object
      properties:
        NotificationArn:
          $ref: '#/components/schemas/NotificationArn'
        NotificationEvents:
          $ref: '#/components/schemas/NotificationEventList'
        NotificationType:
          $ref: '#/components/schemas/NotificationType'
      description: Configurations for sending notifications.
    NotificationEvent:
      type: string
      enum:
        - All
        - InProgress
        - Success
        - TimedOut
        - Cancelled
        - Failed
    NotificationEventList:
      type: array
      items:
        $ref: '#/components/schemas/NotificationEvent'
    NotificationType:
      type: string
      enum:
        - Command
        - Invocation
    OperatingSystem:
      type: string
      enum:
        - WINDOWS
        - AMAZON_LINUX
        - UBUNTU
        - REDHAT_ENTERPRISE_LINUX
    OwnerInformation:
      type: string
      minLength: 1
      maxLength: 128
      format: password
    PSParameterName:
      type: string
      minLength: 1
      maxLength: 1024
    PSParameterValue:
      type: string
      minLength: 1
      maxLength: 4096
    Parameter:
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/PSParameterName'
        Type:
          $ref: '#/components/schemas/ParameterType'
        Value:
          $ref: '#/components/schemas/PSParameterValue'
      description: An Amazon EC2 Systems Manager parameter in Parameter Store.
    ParameterAlreadyExists:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      description: The parameter already exists. You can't create duplicate parameters.
    ParameterDescription:
      type: string
      minLength: 1
      maxLength: 1024
    ParameterHistory:
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/PSParameterName'
        Type:
          $ref: '#/components/schemas/ParameterType'
        KeyId:
          $ref: '#/components/schemas/ParameterKeyId'
        LastModifiedDate:
          $ref: '#/components/schemas/DateTime'
        LastModifiedUser:
          $ref: '#/components/schemas/String'
        Description:
          $ref: '#/components/schemas/ParameterDescription'
        Value:
          $ref: '#/components/schemas/PSParameterValue'
        AllowedPattern:
          $ref: '#/components/schemas/AllowedPattern'
      description: Information about parameter usage.
    ParameterHistoryList:
      type: array
      items:
        $ref: '#/components/schemas/ParameterHistory'
    ParameterKeyId:
      type: string
      pattern: '^([a-zA-Z0-9:/_-]+)$'
      minLength: 1
      maxLength: 256
    ParameterLimitExceeded:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      description: You have exceeded the number of parameters for this AWS account. Delete one or more parameters and try again.
    ParameterList:
      type: array
      items:
        $ref: '#/components/schemas/Parameter'
    ParameterMetadata:
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/PSParameterName'
        Type:
          $ref: '#/components/schemas/ParameterType'
        KeyId:
          $ref: '#/components/schemas/ParameterKeyId'
        LastModifiedDate:
          $ref: '#/components/schemas/DateTime'
        LastModifiedUser:
          $ref: '#/components/schemas/String'
        Description:
          $ref: '#/components/schemas/ParameterDescription'
        AllowedPattern:
          $ref: '#/components/schemas/AllowedPattern'
      description: Metada includes information like the ARN of the last user and the date/time the parameter was last used.
    ParameterMetadataList:
      type: array
      items:
        $ref: '#/components/schemas/ParameterMetadata'
    ParameterName:
      type: string
    ParameterNameList:
      type: array
      items:
        $ref: '#/components/schemas/PSParameterName'
      minItems: 1
      maxItems: 10
    ParameterNotFound:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      description: The parameter could not be found. Verify the name and try again.
    ParameterPatternMismatchException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      description: The parameter name is not valid.
    ParameterStringFilter:
      type: object
      required:
        - Key
      properties:
        Key:
          $ref: '#/components/schemas/ParameterStringFilterKey'
        Option:
          $ref: '#/components/schemas/ParameterStringQueryOption'
        Values:
          $ref: '#/components/schemas/ParameterStringFilterValueList'
      description: One or more filters. Use a filter to return a more specific list of results.
    ParameterStringFilterKey:
      type: string
      pattern: 'tag:.+|Name|Type|KeyId|Path'
      minLength: 1
      maxLength: 132
    ParameterStringFilterList:
      type: array
      items:
        $ref: '#/components/schemas/ParameterStringFilter'
    ParameterStringFilterValue:
      type: string
      minLength: 1
      maxLength: 1024
    ParameterStringFilterValueList:
      type: array
      items:
        $ref: '#/components/schemas/ParameterStringFilterValue'
      minItems: 1
      maxItems: 50
    ParameterStringQueryOption:
      type: string
      minLength: 1
      maxLength: 10
    ParameterType:
      type: string
      enum:
        - String
        - StringList
        - SecureString
    ParameterValue:
      type: string
    ParameterValueList:
      type: array
      items:
        $ref: '#/components/schemas/ParameterValue'
    Parameters:
      type: array
      items:
        type: object
        properties:
          key:
            $ref: '#/components/schemas/ParameterName'
          value:
            $ref: '#/components/schemas/ParameterValueList'
    ParametersFilter:
      type: object
      required:
        - Key
        - Values
      properties:
        Key:
          $ref: '#/components/schemas/ParametersFilterKey'
        Values:
          $ref: '#/components/schemas/ParametersFilterValueList'
      description: One or more filters. Use a filter to return a more specific list of results.
    ParametersFilterKey:
      type: string
      enum:
        - Name
        - Type
        - KeyId
    ParametersFilterList:
      type: array
      items:
        $ref: '#/components/schemas/ParametersFilter'
    ParametersFilterValue:
      type: string
      minLength: 1
      maxLength: 1024
    ParametersFilterValueList:
      type: array
      items:
        $ref: '#/components/schemas/ParametersFilterValue'
      minItems: 1
      maxItems: 50
    Patch:
      type: object
      properties:
        Id:
          $ref: '#/components/schemas/PatchId'
        ReleaseDate:
          $ref: '#/components/schemas/DateTime'
        Title:
          $ref: '#/components/schemas/PatchTitle'
        Description:
          $ref: '#/components/schemas/PatchDescription'
        ContentUrl:
          $ref: '#/components/schemas/PatchContentUrl'
        Vendor:
          $ref: '#/components/schemas/PatchVendor'
        ProductFamily:
          $ref: '#/components/schemas/PatchProductFamily'
        Product:
          $ref: '#/components/schemas/PatchProduct'
        Classification:
          $ref: '#/components/schemas/PatchClassification'
        MsrcSeverity:
          $ref: '#/components/schemas/PatchMsrcSeverity'
        KbNumber:
          $ref: '#/components/schemas/PatchKbNumber'
        MsrcNumber:
          $ref: '#/components/schemas/PatchMsrcNumber'
        Language:
          $ref: '#/components/schemas/PatchLanguage'
      description: Represents metadata about a patch.
    PatchBaselineIdentity:
      type: object
      properties:
        BaselineId:
          $ref: '#/components/schemas/BaselineId'
        BaselineName:
          $ref: '#/components/schemas/BaselineName'
        OperatingSystem:
          $ref: '#/components/schemas/OperatingSystem'
        BaselineDescription:
          $ref: '#/components/schemas/BaselineDescription'
        DefaultBaseline:
          $ref: '#/components/schemas/DefaultBaseline'
      description: Defines the basic information about a patch baseline.
    PatchBaselineIdentityList:
      type: array
      items:
        $ref: '#/components/schemas/PatchBaselineIdentity'
    PatchBaselineMaxResults:
      type: integer
      minimum: 1
      maximum: 100
    PatchClassification:
      type: string
    PatchComplianceData:
      type: object
      required:
        - Title
        - KBId
        - Classification
        - Severity
        - State
        - InstalledTime
      properties:
        Title:
          $ref: '#/components/schemas/PatchTitle'
        KBId:
          $ref: '#/components/schemas/PatchKbNumber'
        Classification:
          $ref: '#/components/schemas/PatchClassification'
        Severity:
          $ref: '#/components/schemas/PatchSeverity'
        State:
          $ref: '#/components/schemas/PatchComplianceDataState'
        InstalledTime:
          $ref: '#/components/schemas/DateTime'
      description: Information about the state of a patch on a particular instance as it relates to the patch baseline used to patch the instance.
    PatchComplianceDataList:
      type: array
      items:
        $ref: '#/components/schemas/PatchComplianceData'
    PatchComplianceDataState:
      type: string
      enum:
        - INSTALLED
        - INSTALLED_OTHER
        - MISSING
        - NOT_APPLICABLE
        - FAILED
    PatchComplianceLevel:
      type: string
      enum:
        - CRITICAL
        - HIGH
        - MEDIUM
        - LOW
        - INFORMATIONAL
        - UNSPECIFIED
    PatchComplianceMaxResults:
      type: integer
      minimum: 10
      maximum: 100
    PatchContentUrl:
      type: string
    PatchDeploymentStatus:
      type: string
      enum:
        - APPROVED
        - PENDING_APPROVAL
        - EXPLICIT_APPROVED
        - EXPLICIT_REJECTED
    PatchDescription:
      type: string
    PatchFailedCount:
      type: integer
    PatchFilter:
      type: object
      required:
        - Key
        - Values
      properties:
        Key:
          $ref: '#/components/schemas/PatchFilterKey'
        Values:
          $ref: '#/components/schemas/PatchFilterValueList'
      description: Defines a patch filter.
    PatchFilterGroup:
      type: object
      required:
        - PatchFilters
      properties:
        PatchFilters:
          $ref: '#/components/schemas/PatchFilterList'
      description: 'A set of patch filters, typically used for approval rules.'
    PatchFilterKey:
      type: string
      enum:
        - PRODUCT
        - CLASSIFICATION
        - MSRC_SEVERITY
        - PATCH_ID
        - SECTION
        - PRIORITY
        - SEVERITY
    PatchFilterList:
      type: array
      items:
        $ref: '#/components/schemas/PatchFilter'
      minItems: 0
      maxItems: 4
    PatchFilterValue:
      type: string
      minLength: 1
      maxLength: 64
    PatchFilterValueList:
      type: array
      items:
        $ref: '#/components/schemas/PatchFilterValue'
      minItems: 1
      maxItems: 20
    PatchGroup:
      type: string
      pattern: '^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$'
      minLength: 1
      maxLength: 256
    PatchGroupList:
      type: array
      items:
        $ref: '#/components/schemas/PatchGroup'
    PatchGroupPatchBaselineMapping:
      type: object
      properties:
        PatchGroup:
          $ref: '#/components/schemas/PatchGroup'
        BaselineIdentity:
          $ref: '#/components/schemas/PatchBaselineIdentity'
      description: The mapping between a patch group and the patch baseline the patch group is registered with.
    PatchGroupPatchBaselineMappingList:
      type: array
      items:
        $ref: '#/components/schemas/PatchGroupPatchBaselineMapping'
    PatchId:
      type: string
      minLength: 1
      maxLength: 100
    PatchIdList:
      type: array
      items:
        $ref: '#/components/schemas/PatchId'
      minItems: 0
      maxItems: 50
    PatchInstalledCount:
      type: integer
    PatchInstalledOtherCount:
      type: integer
    PatchKbNumber:
      type: string
    PatchLanguage:
      type: string
    PatchList:
      type: array
      items:
        $ref: '#/components/schemas/Patch'
    PatchMissingCount:
      type: integer
    PatchMsrcNumber:
      type: string
    PatchMsrcSeverity:
      type: string
    PatchNotApplicableCount:
      type: integer
    PatchOperationType:
      type: string
      enum:
        - Scan
        - Install
    PatchOrchestratorFilter:
      type: object
      properties:
        Key:
          $ref: '#/components/schemas/PatchOrchestratorFilterKey'
        Values:
          $ref: '#/components/schemas/PatchOrchestratorFilterValues'
      description: Defines a filter used in Patch Manager APIs.
    PatchOrchestratorFilterKey:
      type: string
      minLength: 1
      maxLength: 128
    PatchOrchestratorFilterList:
      type: array
      items:
        $ref: '#/components/schemas/PatchOrchestratorFilter'
      minItems: 0
      maxItems: 5
    PatchOrchestratorFilterValue:
      type: string
      minLength: 1
      maxLength: 256
    PatchOrchestratorFilterValues:
      type: array
      items:
        $ref: '#/components/schemas/PatchOrchestratorFilterValue'
    PatchProduct:
      type: string
    PatchProductFamily:
      type: string
    PatchRule:
      type: object
      required:
        - PatchFilterGroup
        - ApproveAfterDays
      properties:
        PatchFilterGroup:
          $ref: '#/components/schemas/PatchFilterGroup'
        ComplianceLevel:
          $ref: '#/components/schemas/PatchComplianceLevel'
        ApproveAfterDays:
          $ref: '#/components/schemas/ApproveAfterDays'
      description: Defines an approval rule for a patch baseline.
    PatchRuleGroup:
      type: object
      required:
        - PatchRules
      properties:
        PatchRules:
          $ref: '#/components/schemas/PatchRuleList'
      description: A set of rules defining the approval rules for a patch baseline.
    PatchRuleList:
      type: array
      items:
        $ref: '#/components/schemas/PatchRule'
      minItems: 0
      maxItems: 10
    PatchSeverity:
      type: string
    PatchStatus:
      type: object
      properties:
        DeploymentStatus:
          $ref: '#/components/schemas/PatchDeploymentStatus'
        ComplianceLevel:
          $ref: '#/components/schemas/PatchComplianceLevel'
        ApprovalDate:
          $ref: '#/components/schemas/DateTime'
      description: Information about the approval status of a patch.
    PatchTitle:
      type: string
    PatchVendor:
      type: string
    PingStatus:
      type: string
      enum:
        - Online
        - ConnectionLost
        - Inactive
    PlatformType:
      type: string
      enum:
        - Windows
        - Linux
    PlatformTypeList:
      type: array
      items:
        $ref: '#/components/schemas/PlatformType'
    Product:
      type: string
    PutInventoryRequest:
      type: object
      required:
        - InstanceId
        - Items
      properties:
        InstanceId:
          $ref: '#/components/schemas/InstanceId'
        Items:
          $ref: '#/components/schemas/InventoryItemList'
    PutInventoryResult:
      type: object
      properties: {}
    PutParameterRequest:
      type: object
      required:
        - Name
        - Value
        - Type
      properties:
        Name:
          $ref: '#/components/schemas/PSParameterName'
        Description:
          $ref: '#/components/schemas/ParameterDescription'
        Value:
          $ref: '#/components/schemas/PSParameterValue'
        Type:
          $ref: '#/components/schemas/ParameterType'
        KeyId:
          $ref: '#/components/schemas/ParameterKeyId'
        Overwrite:
          $ref: '#/components/schemas/Boolean'
        AllowedPattern:
          $ref: '#/components/schemas/AllowedPattern'
    PutParameterResult:
      type: object
      properties: {}
    RegisterDefaultPatchBaselineRequest:
      type: object
      required:
        - BaselineId
      properties:
        BaselineId:
          $ref: '#/components/schemas/BaselineId'
    RegisterDefaultPatchBaselineResult:
      type: object
      properties:
        BaselineId:
          $ref: '#/components/schemas/BaselineId'
    RegisterPatchBaselineForPatchGroupRequest:
      type: object
      required:
        - BaselineId
        - PatchGroup
      properties:
        BaselineId:
          $ref: '#/components/schemas/BaselineId'
        PatchGroup:
          $ref: '#/components/schemas/PatchGroup'
    RegisterPatchBaselineForPatchGroupResult:
      type: object
      properties:
        BaselineId:
          $ref: '#/components/schemas/BaselineId'
        PatchGroup:
          $ref: '#/components/schemas/PatchGroup'
    RegisterTargetWithMaintenanceWindowRequest:
      type: object
      required:
        - WindowId
        - ResourceType
        - Targets
      properties:
        WindowId:
          $ref: '#/components/schemas/MaintenanceWindowId'
        ResourceType:
          $ref: '#/components/schemas/MaintenanceWindowResourceType'
        Targets:
          $ref: '#/components/schemas/Targets'
        OwnerInformation:
          $ref: '#/components/schemas/OwnerInformation'
        ClientToken:
          $ref: '#/components/schemas/ClientToken'
    RegisterTargetWithMaintenanceWindowResult:
      type: object
      properties:
        WindowTargetId:
          $ref: '#/components/schemas/MaintenanceWindowTargetId'
    RegisterTaskWithMaintenanceWindowRequest:
      type: object
      required:
        - WindowId
        - Targets
        - TaskArn
        - ServiceRoleArn
        - TaskType
        - MaxConcurrency
        - MaxErrors
      properties:
        WindowId:
          $ref: '#/components/schemas/MaintenanceWindowId'
        Targets:
          $ref: '#/components/schemas/Targets'
        TaskArn:
          $ref: '#/components/schemas/MaintenanceWindowTaskArn'
        ServiceRoleArn:
          $ref: '#/components/schemas/ServiceRole'
        TaskType:
          $ref: '#/components/schemas/MaintenanceWindowTaskType'
        TaskParameters:
          $ref: '#/components/schemas/MaintenanceWindowTaskParameters'
        Priority:
          $ref: '#/components/schemas/MaintenanceWindowTaskPriority'
        MaxConcurrency:
          $ref: '#/components/schemas/MaxConcurrency'
        MaxErrors:
          $ref: '#/components/schemas/MaxErrors'
        LoggingInfo:
          $ref: '#/components/schemas/LoggingInfo'
        ClientToken:
          $ref: '#/components/schemas/ClientToken'
    RegisterTaskWithMaintenanceWindowResult:
      type: object
      properties:
        WindowTaskId:
          $ref: '#/components/schemas/MaintenanceWindowTaskId'
    RegistrationLimit:
      type: integer
      minimum: 1
      maximum: 1000
    RegistrationsCount:
      type: integer
      minimum: 1
      maximum: 1000
    RemoveTagsFromResourceRequest:
      type: object
      required:
        - ResourceType
        - ResourceId
        - TagKeys
      properties:
        ResourceType:
          $ref: '#/components/schemas/ResourceTypeForTagging'
        ResourceId:
          $ref: '#/components/schemas/ResourceId'
        TagKeys:
          $ref: '#/components/schemas/KeyList'
    RemoveTagsFromResourceResult:
      type: object
      properties: {}
    ResourceDataSyncAlreadyExistsException:
      type: object
      properties:
        SyncName:
          $ref: '#/components/schemas/ResourceDataSyncName'
      description: A sync configuration with the same name already exists.
    ResourceDataSyncCountExceededException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/String'
      description: You have exceeded the allowed maximum sync configurations.
    ResourceDataSyncCreatedTime:
      type: string
      format: date-time
    ResourceDataSyncInvalidConfigurationException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/String'
      description: The specified sync configuration is invalid.
    ResourceDataSyncItem:
      type: object
      properties:
        SyncName:
          $ref: '#/components/schemas/ResourceDataSyncName'
        S3Destination:
          $ref: '#/components/schemas/ResourceDataSyncS3Destination'
        LastSyncTime:
          $ref: '#/components/schemas/LastResourceDataSyncTime'
        LastSuccessfulSyncTime:
          $ref: '#/components/schemas/LastSuccessfulResourceDataSyncTime'
        LastStatus:
          $ref: '#/components/schemas/LastResourceDataSyncStatus'
        SyncCreatedTime:
          $ref: '#/components/schemas/ResourceDataSyncCreatedTime'
      description: 'Information about a Resource Data Sync configuration, including its current status and last successful sync.'
    ResourceDataSyncItemList:
      type: array
      items:
        $ref: '#/components/schemas/ResourceDataSyncItem'
    ResourceDataSyncName:
      type: string
      minLength: 1
      maxLength: 64
    ResourceDataSyncNotFoundException:
      type: object
      properties:
        SyncName:
          $ref: '#/components/schemas/ResourceDataSyncName'
      description: The specified sync name was not found.
    ResourceDataSyncS3BucketName:
      type: string
      minLength: 1
      maxLength: 2048
    ResourceDataSyncS3Destination:
      type: object
      required:
        - BucketName
        - SyncFormat
        - Region
      properties:
        BucketName:
          $ref: '#/components/schemas/ResourceDataSyncS3BucketName'
        Prefix:
          $ref: '#/components/schemas/ResourceDataSyncS3Prefix'
        SyncFormat:
          $ref: '#/components/schemas/ResourceDataSyncS3Format'
        Region:
          $ref: '#/components/schemas/ResourceDataSyncS3Region'
      description: Information about the target Amazon S3 bucket for the Resource Data Sync.
    ResourceDataSyncS3Format:
      type: string
      enum:
        - JsonSerDe
    ResourceDataSyncS3Prefix:
      type: string
      minLength: 1
      maxLength: 256
    ResourceDataSyncS3Region:
      type: string
      minLength: 1
      maxLength: 64
    ResourceId:
      type: string
    ResourceInUseException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/String'
      description: Error returned if an attempt is made to delete a patch baseline that is registered for a patch group.
    ResourceLimitExceededException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/String'
      description: Error returned when the caller has exceeded the default resource limits (e.g. too many Maintenance Windows have been created).
    ResourceType:
      type: string
      enum:
        - ManagedInstance
        - Document
        - EC2Instance
    ResourceTypeForTagging:
      type: string
      enum:
        - ManagedInstance
        - MaintenanceWindow
        - Parameter
    ResponseCode:
      type: integer
    ResultAttribute:
      type: object
      required:
        - TypeName
      properties:
        TypeName:
          $ref: '#/components/schemas/InventoryItemTypeName'
      description: The inventory item result attribute.
    ResultAttributeList:
      type: array
      items:
        $ref: '#/components/schemas/ResultAttribute'
      minItems: 1
      maxItems: 1
    S3BucketName:
      type: string
      minLength: 3
      maxLength: 63
    S3KeyPrefix:
      type: string
      maxLength: 500
    S3OutputLocation:
      type: object
      properties:
        OutputS3Region:
          $ref: '#/components/schemas/S3Region'
        OutputS3BucketName:
          $ref: '#/components/schemas/S3BucketName'
        OutputS3KeyPrefix:
          $ref: '#/components/schemas/S3KeyPrefix'
      description: An Amazon S3 bucket where you want to store the results of this request.
    S3OutputUrl:
      type: object
      properties:
        OutputUrl:
          $ref: '#/components/schemas/Url'
      description: A URL for the Amazon S3 bucket where you want to store the results of this request.
    S3Region:
      type: string
      minLength: 3
      maxLength: 20
    ScheduleExpression:
      type: string
      minLength: 1
      maxLength: 256
    SendCommandRequest:
      type: object
      required:
        - DocumentName
      properties:
        InstanceIds:
          $ref: '#/components/schemas/InstanceIdList'
        Targets:
          $ref: '#/components/schemas/Targets'
        DocumentName:
          $ref: '#/components/schemas/DocumentARN'
        DocumentHash:
          $ref: '#/components/schemas/DocumentHash'
        DocumentHashType:
          $ref: '#/components/schemas/DocumentHashType'
        TimeoutSeconds:
          $ref: '#/components/schemas/TimeoutSeconds'
        Comment:
          $ref: '#/components/schemas/Comment'
        Parameters:
          $ref: '#/components/schemas/Parameters'
        OutputS3Region:
          $ref: '#/components/schemas/S3Region'
        OutputS3BucketName:
          $ref: '#/components/schemas/S3BucketName'
        OutputS3KeyPrefix:
          $ref: '#/components/schemas/S3KeyPrefix'
        MaxConcurrency:
          $ref: '#/components/schemas/MaxConcurrency'
        MaxErrors:
          $ref: '#/components/schemas/MaxErrors'
        ServiceRoleArn:
          $ref: '#/components/schemas/ServiceRole'
        NotificationConfig:
          $ref: '#/components/schemas/NotificationConfig'
    SendCommandResult:
      type: object
      properties:
        Command:
          $ref: '#/components/schemas/Command'
    ServiceRole:
      type: string
    SnapshotDownloadUrl:
      type: string
    SnapshotId:
      type: string
      pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$'
      minLength: 36
      maxLength: 36
    StandardErrorContent:
      type: string
      maxLength: 8000
    StandardOutputContent:
      type: string
      maxLength: 24000
    StartAutomationExecutionRequest:
      type: object
      required:
        - DocumentName
      properties:
        DocumentName:
          $ref: '#/components/schemas/DocumentARN'
        DocumentVersion:
          $ref: '#/components/schemas/DocumentVersion'
        Parameters:
          $ref: '#/components/schemas/AutomationParameterMap'
    StartAutomationExecutionResult:
      type: object
      properties:
        AutomationExecutionId:
          $ref: '#/components/schemas/AutomationExecutionId'
    StatusAdditionalInfo:
      type: string
      maxLength: 1024
    StatusDetails:
      type: string
      minLength: 0
      maxLength: 100
    StatusMessage:
      type: string
      minLength: 1
      maxLength: 1024
    StatusName:
      type: string
    StatusUnchanged:
      type: object
      properties: {}
      description: The updated status is the same as the current status.
    StepExecution:
      type: object
      properties:
        StepName:
          $ref: '#/components/schemas/String'
        Action:
          $ref: '#/components/schemas/AutomationActionName'
        ExecutionStartTime:
          $ref: '#/components/schemas/DateTime'
        ExecutionEndTime:
          $ref: '#/components/schemas/DateTime'
        StepStatus:
          $ref: '#/components/schemas/AutomationExecutionStatus'
        ResponseCode:
          $ref: '#/components/schemas/String'
        Inputs:
          $ref: '#/components/schemas/NormalStringMap'
        Outputs:
          $ref: '#/components/schemas/AutomationParameterMap'
        Response:
          $ref: '#/components/schemas/String'
        FailureMessage:
          $ref: '#/components/schemas/String'
        FailureDetails:
          $ref: '#/components/schemas/FailureDetails'
      description: Detailed information about an the execution state of an Automation step.
    StepExecutionList:
      type: array
      items:
        $ref: '#/components/schemas/StepExecution'
      minItems: 0
      maxItems: 100
    StopAutomationExecutionRequest:
      type: object
      required:
        - AutomationExecutionId
      properties:
        AutomationExecutionId:
          $ref: '#/components/schemas/AutomationExecutionId'
    StopAutomationExecutionResult:
      type: object
      properties: {}
    String:
      type: string
    StringDateTime:
      type: string
      pattern: '^([\-]?\d{4}(?!\d{2}\b))((-?)((0[1-9]|1[0-2])(\3([12]\d|0[1-9]|3[01]))?|W([0-4]\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\d|[12]\d{2}|3([0-5]\d|6[1-6])))([T\s]((([01]\d|2[0-3])((:?)[0-5]\d)?|24\:?00)([\.,]\d(?!:))?)?(\17[0-5]\d([\.,]\d)?)?([zZ]|([\-])([01]\d|2[0-3]):?([0-5]\d)?)?)?)?$'
    StringList:
      type: array
      items:
        $ref: '#/components/schemas/String'
    Tag:
      type: object
      required:
        - Key
        - Value
      properties:
        Key:
          $ref: '#/components/schemas/TagKey'
        Value:
          $ref: '#/components/schemas/TagValue'
      description: 'Metadata that you assign to your managed instances. Tags enable you to categorize your managed instances in different ways, for example, by purpose, owner, or environment.'
    TagKey:
      type: string
      pattern: '^\(\?!^\(\?i\)aws:\)\(\?=^[\p\{L\}\p\{Z\}\p\{N\}_.:/=\+\-@]*$\).*$'
      minLength: 1
      maxLength: 128
    TagList:
      type: array
      items:
        $ref: '#/components/schemas/Tag'
    TagValue:
      type: string
      pattern: '^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$'
      minLength: 1
      maxLength: 256
    Target:
      type: object
      properties:
        Key:
          $ref: '#/components/schemas/TargetKey'
        Values:
          $ref: '#/components/schemas/TargetValues'
      description: '<p>An array of search criteria that targets instances using a Key,Value combination that you specify. <code>Targets</code> is required if you don''t provide one or more instance IDs in the call.</p> <p/>'
    TargetCount:
      type: integer
    TargetKey:
      type: string
      pattern: '^[\p{L}\p{Z}\p{N}_.:/=\-@]*$'
      minLength: 1
      maxLength: 128
    TargetValue:
      type: string
    TargetValues:
      type: array
      items:
        $ref: '#/components/schemas/TargetValue'
      minItems: 0
      maxItems: 50
    Targets:
      type: array
      items:
        $ref: '#/components/schemas/Target'
      minItems: 0
      maxItems: 5
    TimeoutSeconds:
      type: integer
      minimum: 30
      maximum: 2592000
    TooManyTagsError:
      type: object
      properties: {}
      description: The Targets parameter includes too many tags. Remove one or more tags and try the command again.
    TooManyUpdates:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/String'
      description: There are concurrent updates for a resource that supports one update at a time.
    TotalSizeLimitExceededException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/String'
      description: The size of inventory data has exceeded the total size limit for the resource.
    UnsupportedInventorySchemaVersionException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/String'
      description: Inventory item type schema version has to match supported versions in the service. Check output of GetInventorySchema to see the available schema version for each type.
    UnsupportedOperatingSystem:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/String'
      description: 'The operating systems you specified is not supported, or the operation is not supported for the operating system. Valid operating systems include: Windows, AmazonLinux, RedhatEnterpriseLinux, and Ubuntu.'
    UnsupportedParameterType:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      description: The parameter type is not supported.
    UnsupportedPlatformType:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/String'
      description: 'The document does not support the platform type of the given instance ID(s). For example, you sent an document for a Windows instance to a Linux instance.'
    UpdateAssociationRequest:
      type: object
      required:
        - AssociationId
      properties:
        AssociationId:
          $ref: '#/components/schemas/AssociationId'
        Parameters:
          $ref: '#/components/schemas/Parameters'
        DocumentVersion:
          $ref: '#/components/schemas/DocumentVersion'
        ScheduleExpression:
          $ref: '#/components/schemas/ScheduleExpression'
        OutputLocation:
          $ref: '#/components/schemas/InstanceAssociationOutputLocation'
        Name:
          $ref: '#/components/schemas/DocumentName'
        Targets:
          $ref: '#/components/schemas/Targets'
    UpdateAssociationResult:
      type: object
      properties:
        AssociationDescription:
          $ref: '#/components/schemas/AssociationDescription'
    UpdateAssociationStatusRequest:
      type: object
      required:
        - Name
        - InstanceId
        - AssociationStatus
      properties:
        Name:
          $ref: '#/components/schemas/DocumentName'
        InstanceId:
          $ref: '#/components/schemas/InstanceId'
        AssociationStatus:
          $ref: '#/components/schemas/AssociationStatus'
    UpdateAssociationStatusResult:
      type: object
      properties:
        AssociationDescription:
          $ref: '#/components/schemas/AssociationDescription'
    UpdateDocumentDefaultVersionRequest:
      type: object
      required:
        - Name
        - DocumentVersion
      properties:
        Name:
          $ref: '#/components/schemas/DocumentName'
        DocumentVersion:
          $ref: '#/components/schemas/DocumentVersionNumber'
    UpdateDocumentDefaultVersionResult:
      type: object
      properties:
        Description:
          $ref: '#/components/schemas/DocumentDefaultVersionDescription'
    UpdateDocumentRequest:
      type: object
      required:
        - Content
        - Name
      properties:
        Content:
          $ref: '#/components/schemas/DocumentContent'
        Name:
          $ref: '#/components/schemas/DocumentName'
        DocumentVersion:
          $ref: '#/components/schemas/DocumentVersion'
    UpdateDocumentResult:
      type: object
      properties:
        DocumentDescription:
          $ref: '#/components/schemas/DocumentDescription'
    UpdateMaintenanceWindowRequest:
      type: object
      required:
        - WindowId
      properties:
        WindowId:
          $ref: '#/components/schemas/MaintenanceWindowId'
        Name:
          $ref: '#/components/schemas/MaintenanceWindowName'
        Schedule:
          $ref: '#/components/schemas/MaintenanceWindowSchedule'
        Duration:
          $ref: '#/components/schemas/MaintenanceWindowDurationHours'
        Cutoff:
          $ref: '#/components/schemas/MaintenanceWindowCutoff'
        AllowUnassociatedTargets:
          $ref: '#/components/schemas/MaintenanceWindowAllowUnassociatedTargets'
        Enabled:
          $ref: '#/components/schemas/MaintenanceWindowEnabled'
    UpdateMaintenanceWindowResult:
      type: object
      properties:
        WindowId:
          $ref: '#/components/schemas/MaintenanceWindowId'
        Name:
          $ref: '#/components/schemas/MaintenanceWindowName'
        Schedule:
          $ref: '#/components/schemas/MaintenanceWindowSchedule'
        Duration:
          $ref: '#/components/schemas/MaintenanceWindowDurationHours'
        Cutoff:
          $ref: '#/components/schemas/MaintenanceWindowCutoff'
        AllowUnassociatedTargets:
          $ref: '#/components/schemas/MaintenanceWindowAllowUnassociatedTargets'
        Enabled:
          $ref: '#/components/schemas/MaintenanceWindowEnabled'
    UpdateManagedInstanceRoleRequest:
      type: object
      required:
        - InstanceId
        - IamRole
      properties:
        InstanceId:
          $ref: '#/components/schemas/ManagedInstanceId'
        IamRole:
          $ref: '#/components/schemas/IamRole'
    UpdateManagedInstanceRoleResult:
      type: object
      properties: {}
    UpdatePatchBaselineRequest:
      type: object
      required:
        - BaselineId
      properties:
        BaselineId:
          $ref: '#/components/schemas/BaselineId'
        Name:
          $ref: '#/components/schemas/BaselineName'
        GlobalFilters:
          $ref: '#/components/schemas/PatchFilterGroup'
        ApprovalRules:
          $ref: '#/components/schemas/PatchRuleGroup'
        ApprovedPatches:
          $ref: '#/components/schemas/PatchIdList'
        ApprovedPatchesComplianceLevel:
          $ref: '#/components/schemas/PatchComplianceLevel'
        RejectedPatches:
          $ref: '#/components/schemas/PatchIdList'
        Description:
          $ref: '#/components/schemas/BaselineDescription'
    UpdatePatchBaselineResult:
      type: object
      properties:
        BaselineId:
          $ref: '#/components/schemas/BaselineId'
        Name:
          $ref: '#/components/schemas/BaselineName'
        OperatingSystem:
          $ref: '#/components/schemas/OperatingSystem'
        GlobalFilters:
          $ref: '#/components/schemas/PatchFilterGroup'
        ApprovalRules:
          $ref: '#/components/schemas/PatchRuleGroup'
        ApprovedPatches:
          $ref: '#/components/schemas/PatchIdList'
        ApprovedPatchesComplianceLevel:
          $ref: '#/components/schemas/PatchComplianceLevel'
        RejectedPatches:
          $ref: '#/components/schemas/PatchIdList'
        CreatedDate:
          $ref: '#/components/schemas/DateTime'
        ModifiedDate:
          $ref: '#/components/schemas/DateTime'
        Description:
          $ref: '#/components/schemas/BaselineDescription'
    Url:
      type: string
    Version:
      type: string
      pattern: '^[0-9]{1,6}(\.[0-9]{1,6}){2,3}$'
  parameters:
    Action:
      name: Action
      in: header
      required: true
      schema:
        type: string
    Version:
      name: Version
      in: header
      required: true
      schema:
        type: string
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      required: false
      schema:
        type: string
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      required: false
      schema:
        type: string
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      required: false
      schema:
        type: string
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      required: false
      schema:
        type: string
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      required: false
      schema:
        type: string
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      required: false
      schema:
        type: string
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      required: false
      schema:
        type: string
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
