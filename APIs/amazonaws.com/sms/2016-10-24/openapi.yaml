openapi: 3.0.0
servers:
  - url: 'http://sms.amazonaws.com/'
info:
  version: '2016-10-24'
  x-release: v4
  title: AWS Server Migration Service
  description: Amazon Server Migration Service automates the process of migrating servers to EC2.
  x-logo:
    url: 'https://media.amazonwebservices.com/blog/2007/big_pbaws_logo_300px.jpg'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: sms
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/sms-2016-10-24.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-direct: true
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://aws.amazon.com/sms/'
x-hasEquivalentPaths: true
security:
  - hmac: []
paths:
  /:
    post:
      operationId: CreateReplicationJob
      description: 'The CreateReplicationJob API is used to create a ReplicationJob to replicate a server on AWS. Call this API to first create a ReplicationJob, which will then schedule periodic ReplicationRuns to replicate your server to AWS. Each ReplicationRun will result in the creation of an AWS AMI.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateReplicationJobResponse'
        '480':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '481':
          description: MissingRequiredParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingRequiredParameterException'
        '482':
          description: UnauthorizedOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperationException'
        '483':
          description: OperationNotPermittedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
        '484':
          description: ServerCannotBeReplicatedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerCannotBeReplicatedException'
        '485':
          description: ReplicationJobAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReplicationJobAlreadyExistsException'
        '486':
          description: NoConnectorsAvailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoConnectorsAvailableException'
        '487':
          description: InternalError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateReplicationJobRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DeleteReplicationJob':
    post:
      operationId: DeleteReplicationJob
      description: 'The DeleteReplicationJob API is used to delete a ReplicationJob, resulting in no further ReplicationRuns. This will delete the contents of the S3 bucket used to store SMS artifacts, but will not delete any AMIs created by the SMS service.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteReplicationJobResponse'
        '480':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '481':
          description: MissingRequiredParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingRequiredParameterException'
        '482':
          description: UnauthorizedOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperationException'
        '483':
          description: OperationNotPermittedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
        '484':
          description: ReplicationJobNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReplicationJobNotFoundException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteReplicationJobRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DeleteServerCatalog':
    post:
      operationId: DeleteServerCatalog
      description: The DeleteServerCatalog API clears all servers from your server catalog. This means that these servers will no longer be accessible to the Server Migration Service.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteServerCatalogResponse'
        '480':
          description: UnauthorizedOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperationException'
        '481':
          description: OperationNotPermittedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
        '482':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '483':
          description: MissingRequiredParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingRequiredParameterException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteServerCatalogRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DisassociateConnector':
    post:
      operationId: DisassociateConnector
      description: 'The DisassociateConnector API will disassociate a connector from the Server Migration Service, rendering it unavailable to support replication jobs.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisassociateConnectorResponse'
        '480':
          description: MissingRequiredParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingRequiredParameterException'
        '481':
          description: UnauthorizedOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperationException'
        '482':
          description: OperationNotPermittedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
        '483':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisassociateConnectorRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#GetConnectors':
    post:
      operationId: GetConnectors
      description: The GetConnectors API returns a list of connectors that are registered with the Server Migration Service.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetConnectorsResponse'
        '480':
          description: UnauthorizedOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperationException'
      parameters:
        - name: maxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: nextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetConnectorsRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#GetReplicationJobs':
    post:
      operationId: GetReplicationJobs
      description: 'The GetReplicationJobs API will return all of your ReplicationJobs and their details. This API returns a paginated list, that may be consecutively called with nextToken to retrieve all ReplicationJobs.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetReplicationJobsResponse'
        '480':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '481':
          description: MissingRequiredParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingRequiredParameterException'
        '482':
          description: UnauthorizedOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperationException'
      parameters:
        - name: maxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: nextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetReplicationJobsRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#GetReplicationRuns':
    post:
      operationId: GetReplicationRuns
      description: 'The GetReplicationRuns API will return all ReplicationRuns for a given ReplicationJob. This API returns a paginated list, that may be consecutively called with nextToken to retrieve all ReplicationRuns for a ReplicationJob.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetReplicationRunsResponse'
        '480':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '481':
          description: MissingRequiredParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingRequiredParameterException'
        '482':
          description: UnauthorizedOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperationException'
      parameters:
        - name: maxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: nextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetReplicationRunsRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#GetServers':
    post:
      operationId: GetServers
      description: 'The GetServers API returns a list of all servers in your server catalog. For this call to succeed, you must previously have called ImportServerCatalog.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetServersResponse'
        '480':
          description: UnauthorizedOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperationException'
      parameters:
        - name: maxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: nextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetServersRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#ImportServerCatalog':
    post:
      operationId: ImportServerCatalog
      description: 'The ImportServerCatalog API is used to gather the complete list of on-premises servers on your premises. This API call requires connectors to be installed and monitoring all servers you would like imported. This API call returns immediately, but may take some time to retrieve all of the servers.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportServerCatalogResponse'
        '480':
          description: UnauthorizedOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperationException'
        '481':
          description: OperationNotPermittedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
        '482':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '483':
          description: MissingRequiredParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingRequiredParameterException'
        '484':
          description: NoConnectorsAvailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoConnectorsAvailableException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportServerCatalogRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#StartOnDemandReplicationRun':
    post:
      operationId: StartOnDemandReplicationRun
      description: The StartOnDemandReplicationRun API is used to start a ReplicationRun on demand (in addition to those that are scheduled based on your frequency). This ReplicationRun will start immediately. StartOnDemandReplicationRun is subject to limits on how many on demand ReplicationRuns you may call per 24-hour period.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartOnDemandReplicationRunResponse'
        '480':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '481':
          description: MissingRequiredParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingRequiredParameterException'
        '482':
          description: UnauthorizedOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperationException'
        '483':
          description: OperationNotPermittedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
        '484':
          description: ReplicationRunLimitExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReplicationRunLimitExceededException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartOnDemandReplicationRunRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#UpdateReplicationJob':
    post:
      operationId: UpdateReplicationJob
      description: The UpdateReplicationJob API is used to change the settings of your existing ReplicationJob created using CreateReplicationJob. Calling this API will affect the next scheduled ReplicationRun.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateReplicationJobResponse'
        '480':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '481':
          description: MissingRequiredParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingRequiredParameterException'
        '482':
          description: OperationNotPermittedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
        '483':
          description: UnauthorizedOperationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperationException'
        '484':
          description: ServerCannotBeReplicatedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerCannotBeReplicatedException'
        '485':
          description: ReplicationJobNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReplicationJobNotFoundException'
        '486':
          description: InternalError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateReplicationJobRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
components:
  schemas:
    AmiId:
      type: string
      description: The AMI id for the image resulting from a Replication Run.
    Connector:
      type: object
      properties:
        connectorId:
          $ref: '#/components/schemas/ConnectorId'
        version:
          $ref: '#/components/schemas/ConnectorVersion'
        status:
          $ref: '#/components/schemas/ConnectorStatus'
        capabilityList:
          $ref: '#/components/schemas/ConnectorCapabilityList'
        vmManagerName:
          $ref: '#/components/schemas/VmManagerName'
        vmManagerType:
          $ref: '#/components/schemas/VmManagerType'
        vmManagerId:
          $ref: '#/components/schemas/VmManagerId'
        ipAddress:
          $ref: '#/components/schemas/IpAddress'
        macAddress:
          $ref: '#/components/schemas/MacAddress'
        associatedOn:
          $ref: '#/components/schemas/Timestamp'
      description: Object representing a Connector
    ConnectorCapability:
      type: string
      enum:
        - VSPHERE
      description: Capabilities for a Connector
    ConnectorCapabilityList:
      type: array
      description: List of Connector Capabilities
      items:
        $ref: '#/components/schemas/ConnectorCapability'
    ConnectorId:
      type: string
      description: Unique Identifier for Connector
    ConnectorList:
      type: array
      description: List of connectors
      items:
        $ref: '#/components/schemas/Connector'
    ConnectorStatus:
      type: string
      enum:
        - HEALTHY
        - UNHEALTHY
      description: Status of on-premise Connector
    ConnectorVersion:
      type: string
      description: Connector version string
    CreateReplicationJobRequest:
      type: object
      required:
        - serverId
        - seedReplicationTime
        - frequency
      properties:
        serverId:
          $ref: '#/components/schemas/ServerId'
        seedReplicationTime:
          $ref: '#/components/schemas/Timestamp'
        frequency:
          $ref: '#/components/schemas/Frequency'
        licenseType:
          $ref: '#/components/schemas/LicenseType'
        roleName:
          $ref: '#/components/schemas/RoleName'
        description:
          $ref: '#/components/schemas/Description'
    CreateReplicationJobResponse:
      type: object
      properties:
        replicationJobId:
          $ref: '#/components/schemas/ReplicationJobId'
    DeleteReplicationJobRequest:
      type: object
      required:
        - replicationJobId
      properties:
        replicationJobId:
          $ref: '#/components/schemas/ReplicationJobId'
    DeleteReplicationJobResponse:
      type: object
      properties: {}
    DeleteServerCatalogRequest:
      type: object
      properties: {}
    DeleteServerCatalogResponse:
      type: object
      properties: {}
    Description:
      type: string
      description: The description for a Replication Job/Run.
    DisassociateConnectorRequest:
      type: object
      required:
        - connectorId
      properties:
        connectorId:
          $ref: '#/components/schemas/ConnectorId'
    DisassociateConnectorResponse:
      type: object
      properties: {}
    ErrorMessage:
      type: string
      description: Error Message string
    Frequency:
      type: integer
      description: 'Interval between Replication Runs. This value is specified in hours, and represents the time between consecutive Replication Runs.'
    GetConnectorsRequest:
      type: object
      properties:
        nextToken:
          $ref: '#/components/schemas/NextToken'
        maxResults:
          $ref: '#/components/schemas/MaxResults'
    GetConnectorsResponse:
      type: object
      properties:
        connectorList:
          $ref: '#/components/schemas/ConnectorList'
        nextToken:
          $ref: '#/components/schemas/NextToken'
    GetReplicationJobsRequest:
      type: object
      properties:
        replicationJobId:
          $ref: '#/components/schemas/ReplicationJobId'
        nextToken:
          $ref: '#/components/schemas/NextToken'
        maxResults:
          $ref: '#/components/schemas/MaxResults'
    GetReplicationJobsResponse:
      type: object
      properties:
        replicationJobList:
          $ref: '#/components/schemas/ReplicationJobList'
        nextToken:
          $ref: '#/components/schemas/NextToken'
    GetReplicationRunsRequest:
      type: object
      required:
        - replicationJobId
      properties:
        replicationJobId:
          $ref: '#/components/schemas/ReplicationJobId'
        nextToken:
          $ref: '#/components/schemas/NextToken'
        maxResults:
          $ref: '#/components/schemas/MaxResults'
    GetReplicationRunsResponse:
      type: object
      properties:
        replicationJob:
          $ref: '#/components/schemas/ReplicationJob'
        replicationRunList:
          $ref: '#/components/schemas/ReplicationRunList'
        nextToken:
          $ref: '#/components/schemas/NextToken'
    GetServersRequest:
      type: object
      properties:
        nextToken:
          $ref: '#/components/schemas/NextToken'
        maxResults:
          $ref: '#/components/schemas/MaxResults'
    GetServersResponse:
      type: object
      properties:
        lastModifiedOn:
          $ref: '#/components/schemas/Timestamp'
        serverCatalogStatus:
          $ref: '#/components/schemas/ServerCatalogStatus'
        serverList:
          $ref: '#/components/schemas/ServerList'
        nextToken:
          $ref: '#/components/schemas/NextToken'
    ImportServerCatalogRequest:
      type: object
      properties: {}
    ImportServerCatalogResponse:
      type: object
      properties: {}
    InternalError:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      description: An internal error has occured.
    InvalidParameterException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      description: 'A parameter specified in the request is not valid, is unsupported, or cannot be used.'
    IpAddress:
      type: string
      description: Internet Protocol (IP) Address
    LicenseType:
      type: string
      enum:
        - AWS
        - BYOL
      description: The license type to be used for the Amazon Machine Image (AMI) created after a successful ReplicationRun.
    MacAddress:
      type: string
      description: Hardware (MAC) address
    MaxResults:
      type: integer
      description: 'The maximum number of results to return in one API call. If left empty, this will default to 50.'
    MissingRequiredParameterException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      description: The request is missing a required parameter. Ensure that you have supplied all the required parameters for the request.
    NextToken:
      type: string
      description: Pagination token to pass as input to API call
    NoConnectorsAvailableException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      description: No connectors are available to handle this request. Please associate connector(s) and verify any existing connectors are healthy and can respond to requests.
    OperationNotPermittedException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      description: 'The specified operation is not allowed. This error can occur for a number of reasons; for example, you might be trying to start a Replication Run before seed Replication Run.'
    ReplicationJob:
      type: object
      properties:
        replicationJobId:
          $ref: '#/components/schemas/ReplicationJobId'
        serverId:
          $ref: '#/components/schemas/ServerId'
        serverType:
          $ref: '#/components/schemas/ServerType'
        vmServer:
          $ref: '#/components/schemas/VmServer'
        seedReplicationTime:
          $ref: '#/components/schemas/Timestamp'
        frequency:
          $ref: '#/components/schemas/Frequency'
        nextReplicationRunStartTime:
          $ref: '#/components/schemas/Timestamp'
        licenseType:
          $ref: '#/components/schemas/LicenseType'
        roleName:
          $ref: '#/components/schemas/RoleName'
        latestAmiId:
          $ref: '#/components/schemas/AmiId'
        state:
          $ref: '#/components/schemas/ReplicationJobState'
        statusMessage:
          $ref: '#/components/schemas/ReplicationJobStatusMessage'
        description:
          $ref: '#/components/schemas/Description'
        replicationRunList:
          $ref: '#/components/schemas/ReplicationRunList'
      description: Object representing a Replication Job
    ReplicationJobAlreadyExistsException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      description: An active Replication Job already exists for the specified server.
    ReplicationJobId:
      type: string
      description: The unique identifier for a Replication Job.
    ReplicationJobList:
      type: array
      description: List of Replication Jobs
      items:
        $ref: '#/components/schemas/ReplicationJob'
    ReplicationJobNotFoundException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      description: The specified Replication Job cannot be found.
    ReplicationJobState:
      type: string
      enum:
        - PENDING
        - ACTIVE
        - FAILED
        - DELETING
        - DELETED
      description: Current state of Replication Job
    ReplicationJobStatusMessage:
      type: string
      description: String describing current status of Replication Job
    ReplicationJobTerminated:
      type: boolean
      description: An indicator of the Replication Job being deleted or failed.
    ReplicationRun:
      type: object
      properties:
        replicationRunId:
          $ref: '#/components/schemas/ReplicationRunId'
        state:
          $ref: '#/components/schemas/ReplicationRunState'
        type:
          $ref: '#/components/schemas/ReplicationRunType'
        statusMessage:
          $ref: '#/components/schemas/ReplicationRunStatusMessage'
        amiId:
          $ref: '#/components/schemas/AmiId'
        scheduledStartTime:
          $ref: '#/components/schemas/Timestamp'
        completedTime:
          $ref: '#/components/schemas/Timestamp'
        description:
          $ref: '#/components/schemas/Description'
      description: Object representing a Replication Run
    ReplicationRunId:
      type: string
      description: The unique identifier for a Replication Run.
    ReplicationRunLimitExceededException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      description: This user has exceeded the maximum allowed Replication Run limit.
    ReplicationRunList:
      type: array
      description: List of Replication Runs
      items:
        $ref: '#/components/schemas/ReplicationRun'
    ReplicationRunState:
      type: string
      enum:
        - PENDING
        - MISSED
        - ACTIVE
        - FAILED
        - COMPLETED
        - DELETING
        - DELETED
      description: Current state of Replication Run
    ReplicationRunStatusMessage:
      type: string
      description: String describing current status of Replication Run
    ReplicationRunType:
      type: string
      enum:
        - ON_DEMAND
        - AUTOMATIC
      description: Type of Replication Run
    RoleName:
      type: string
      description: Name of service role in customer's account to be used by SMS service.
    Server:
      type: object
      properties:
        serverId:
          $ref: '#/components/schemas/ServerId'
        serverType:
          $ref: '#/components/schemas/ServerType'
        vmServer:
          $ref: '#/components/schemas/VmServer'
        replicationJobId:
          $ref: '#/components/schemas/ReplicationJobId'
        replicationJobTerminated:
          $ref: '#/components/schemas/ReplicationJobTerminated'
      description: Object representing a server
    ServerCannotBeReplicatedException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      description: The provided server cannot be replicated.
    ServerCatalogStatus:
      type: string
      enum:
        - NOT_IMPORTED
        - IMPORTING
        - AVAILABLE
        - DELETED
        - EXPIRED
      description: Status of Server catalog
    ServerId:
      type: string
      description: Unique Identifier for a server
    ServerList:
      type: array
      description: List of servers from catalog
      items:
        $ref: '#/components/schemas/Server'
    ServerType:
      type: string
      enum:
        - VIRTUAL_MACHINE
      description: Type of server.
    StartOnDemandReplicationRunRequest:
      type: object
      required:
        - replicationJobId
      properties:
        replicationJobId:
          $ref: '#/components/schemas/ReplicationJobId'
        description:
          $ref: '#/components/schemas/Description'
    StartOnDemandReplicationRunResponse:
      type: object
      properties:
        replicationRunId:
          $ref: '#/components/schemas/ReplicationRunId'
    Timestamp:
      type: string
      description: Timestamp of an operation
      format: date-time
    UnauthorizedOperationException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      description: This user does not have permissions to perform this operation.
    UpdateReplicationJobRequest:
      type: object
      required:
        - replicationJobId
      properties:
        replicationJobId:
          $ref: '#/components/schemas/ReplicationJobId'
        frequency:
          $ref: '#/components/schemas/Frequency'
        nextReplicationRunStartTime:
          $ref: '#/components/schemas/Timestamp'
        licenseType:
          $ref: '#/components/schemas/LicenseType'
        roleName:
          $ref: '#/components/schemas/RoleName'
        description:
          $ref: '#/components/schemas/Description'
    UpdateReplicationJobResponse:
      type: object
      properties: {}
    VmId:
      type: string
      description: Unique Identifier for a VM
    VmManagerId:
      type: string
      description: Unique Identifier for VM Manager
    VmManagerName:
      type: string
      description: VM Manager Name
    VmManagerType:
      type: string
      enum:
        - VSPHERE
      description: VM Management Product
    VmName:
      type: string
      description: Name of Virtual Machine
    VmPath:
      type: string
      description: Path to VM
    VmServer:
      type: object
      properties:
        vmServerAddress:
          $ref: '#/components/schemas/VmServerAddress'
        vmName:
          $ref: '#/components/schemas/VmName'
        vmManagerName:
          $ref: '#/components/schemas/VmManagerName'
        vmManagerType:
          $ref: '#/components/schemas/VmManagerType'
        vmPath:
          $ref: '#/components/schemas/VmPath'
      description: Object representing a VM server
    VmServerAddress:
      type: object
      properties:
        vmManagerId:
          $ref: '#/components/schemas/VmManagerId'
        vmId:
          $ref: '#/components/schemas/VmId'
      description: Object representing a server's location
  parameters:
    Action:
      name: Action
      in: header
      required: true
      schema:
        type: string
    Version:
      name: Version
      in: header
      required: true
      schema:
        type: string
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      required: false
      schema:
        type: string
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      required: false
      schema:
        type: string
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      required: false
      schema:
        type: string
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      required: false
      schema:
        type: string
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      required: false
      schema:
        type: string
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      required: false
      schema:
        type: string
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      required: false
      schema:
        type: string
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
