openapi: 3.0.0
servers:
  - url: 'http://tagging.amazonaws.com/'
info:
  version: '2017-01-26'
  x-release: v4
  title: AWS Resource Groups Tagging API
  description: '<fullname>Resource Groups Tagging API</fullname> <p>This guide describes the API operations for the resource groups tagging.</p> <p>A tag is a label that you assign to an AWS resource. A tag consists of a key and a value, both of which you define. For example, if you have two Amazon EC2 instances, you might assign both a tag key of "Stack." But the value of "Stack" might be "Testing" for one and "Production" for the other.</p> <p>Tagging can help you organize your resources and enables you to simplify resource management, access management and cost allocation. For more information about tagging, see <a href="http://docs.aws.amazon.com/awsconsolehelpdocs/latest/gsg/tag-editor.html">Working with Tag Editor</a> and <a href="http://docs.aws.amazon.com/awsconsolehelpdocs/latest/gsg/resource-groups.html">Working with Resource Groups</a>. For more information about permissions you need to use the resource groups tagging APIs, see <a href="http://docs.aws.amazon.com/awsconsolehelpdocs/latest/gsg/obtaining-permissions-for-resource-groups.html">Obtaining Permissions for Resource Groups </a> and <a href="http://docs.aws.amazon.com/awsconsolehelpdocs/latest/gsg/obtaining-permissions-for-tagging.html">Obtaining Permissions for Tagging </a>.</p> <p>You can use the resource groups tagging APIs to complete the following tasks:</p> <ul> <li> <p>Tag and untag supported resources located in the specified region for the AWS account</p> </li> <li> <p>Use tag-based filters to search for resources located in the specified region for the AWS account</p> </li> <li> <p>List all existing tag keys in the specified region for the AWS account</p> </li> <li> <p>List all existing values for the specified key in the specified region for the AWS account</p> </li> </ul> <p>Not all resources can have tags. For a lists of resources that you can tag, see <a href="http://docs.aws.amazon.com/awsconsolehelpdocs/latest/gsg/supported-resources.html">Supported Resources</a> in the <i>AWS Resource Groups and Tag Editor User Guide</i>.</p> <p>To make full use of the resource groups tagging APIs, you might need additional IAM permissions, including permission to access the resources of individual services as well as permission to view and apply tags to those resources. For more information, see <a href="http://docs.aws.amazon.com/awsconsolehelpdocs/latest/gsg/obtaining-permissions-for-tagging.html">Obtaining Permissions for Tagging</a> in the <i>AWS Resource Groups and Tag Editor User Guide</i>.</p>'
  x-logo:
    url: 'https://media.amazonwebservices.com/blog/2007/big_pbaws_logo_300px.jpg'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: tagging
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/resourcegroupstaggingapi-2017-01-26.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-direct: true
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://aws.amazon.com/tagging/'
x-hasEquivalentPaths: true
security:
  - hmac: []
paths:
  /:
    post:
      operationId: GetResources
      description: 'Returns all the tagged resources that are associated with the specified tags (keys and values) located in the specified region for the AWS account. The tags and the resource types that you specify in the request are known as <i>filters</i>. The response includes all tags that are associated with the requested resources. If no filter is provided, this action returns a paginated resource list with the associated tags.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetResourcesOutput'
        '480':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '481':
          description: ThrottledException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledException'
        '482':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '483':
          description: PaginationTokenExpiredException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationTokenExpiredException'
      parameters:
        - name: ResourcesPerPage
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: PaginationToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetResourcesInput'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#GetTagKeys':
    post:
      operationId: GetTagKeys
      description: Returns all tag keys in the specified region for the AWS account.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTagKeysOutput'
        '480':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '481':
          description: ThrottledException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledException'
        '482':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '483':
          description: PaginationTokenExpiredException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationTokenExpiredException'
      parameters:
        - name: PaginationToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetTagKeysInput'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#GetTagValues':
    post:
      operationId: GetTagValues
      description: Returns all tag values for the specified key in the specified region for the AWS account.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTagValuesOutput'
        '480':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '481':
          description: ThrottledException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledException'
        '482':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '483':
          description: PaginationTokenExpiredException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationTokenExpiredException'
      parameters:
        - name: PaginationToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetTagValuesInput'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#TagResources':
    post:
      operationId: TagResources
      description: '<p>Applies one or more tags to the specified resources. Note the following:</p> <ul> <li> <p>Not all resources can have tags. For a list of resources that support tagging, see <a href="http://docs.aws.amazon.com/awsconsolehelpdocs/latest/gsg/supported-resources.html">Supported Resources</a> in the <i>AWS Resource Groups and Tag Editor User Guide</i>.</p> </li> <li> <p>Each resource can have up to 50 tags. For other limits, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html#tag-restrictions">Tag Restrictions</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.</p> </li> <li> <p>You can only tag resources that are located in the specified region for the AWS account.</p> </li> <li> <p>To add tags to a resource, you need the necessary permissions for the service that the resource belongs to as well as permissions for adding tags. For more information, see <a href="http://docs.aws.amazon.com/awsconsolehelpdocs/latest/gsg/obtaining-permissions-for-tagging.html">Obtaining Permissions for Tagging</a> in the <i>AWS Resource Groups and Tag Editor User Guide</i>.</p> </li> </ul>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResourcesOutput'
        '480':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '481':
          description: ThrottledException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledException'
        '482':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagResourcesInput'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#UntagResources':
    post:
      operationId: UntagResources
      description: '<p>Removes the specified tags from the specified resources. When you specify a tag key, the action removes both that key and its associated value. The operation succeeds even if you attempt to remove tags from a resource that were already removed. Note the following:</p> <ul> <li> <p>To remove tags from a resource, you need the necessary permissions for the service that the resource belongs to as well as permissions for removing tags. For more information, see <a href="http://docs.aws.amazon.com/awsconsolehelpdocs/latest/gsg/obtaining-permissions-for-tagging.html">Obtaining Permissions for Tagging</a> in the <i>AWS Resource Groups and Tag Editor User Guide</i>.</p> </li> <li> <p>You can only tag resources that are located in the specified region for the AWS account.</p> </li> </ul>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UntagResourcesOutput'
        '480':
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '481':
          description: ThrottledException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledException'
        '482':
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UntagResourcesInput'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
components:
  schemas:
    AmazonResourceType:
      type: string
      minLength: 0
      maxLength: 256
    ErrorCode:
      type: string
      enum:
        - InternalServiceException
        - InvalidParameterException
    ErrorMessage:
      type: string
    ExceptionMessage:
      type: string
      minLength: 0
      maxLength: 2048
    FailedResourcesMap:
      type: array
      items:
        type: object
        properties:
          key:
            $ref: '#/components/schemas/ResourceARN'
          value:
            $ref: '#/components/schemas/FailureInfo'
    FailureInfo:
      type: object
      properties:
        StatusCode:
          $ref: '#/components/schemas/StatusCode'
        ErrorCode:
          $ref: '#/components/schemas/ErrorCode'
        ErrorMessage:
          $ref: '#/components/schemas/ErrorMessage'
      description: Details of the common errors that all actions return.
    GetResourcesInput:
      type: object
      properties:
        PaginationToken:
          $ref: '#/components/schemas/PaginationToken'
        TagFilters:
          $ref: '#/components/schemas/TagFilterList'
        ResourcesPerPage:
          $ref: '#/components/schemas/ResourcesPerPage'
        TagsPerPage:
          $ref: '#/components/schemas/TagsPerPage'
        ResourceTypeFilters:
          $ref: '#/components/schemas/ResourceTypeFilterList'
    GetResourcesOutput:
      type: object
      properties:
        PaginationToken:
          $ref: '#/components/schemas/PaginationToken'
        ResourceTagMappingList:
          $ref: '#/components/schemas/ResourceTagMappingList'
    GetTagKeysInput:
      type: object
      properties:
        PaginationToken:
          $ref: '#/components/schemas/PaginationToken'
    GetTagKeysOutput:
      type: object
      properties:
        PaginationToken:
          $ref: '#/components/schemas/PaginationToken'
        TagKeys:
          $ref: '#/components/schemas/TagKeyList'
    GetTagValuesInput:
      type: object
      required:
        - Key
      properties:
        PaginationToken:
          $ref: '#/components/schemas/PaginationToken'
        Key:
          $ref: '#/components/schemas/TagKey'
    GetTagValuesOutput:
      type: object
      properties:
        PaginationToken:
          $ref: '#/components/schemas/PaginationToken'
        TagValues:
          $ref: '#/components/schemas/TagValuesOutputList'
    InternalServiceException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: 'The request processing failed because of an unknown error, exception, or failure. You can retry the request.'
    InvalidParameterException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: A parameter is missing or a malformed string or invalid or out-of-range value was supplied for the request parameter.
    PaginationToken:
      type: string
      minLength: 0
      maxLength: 2048
    PaginationTokenExpiredException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: A <code>PaginationToken</code> is valid for a maximum of 15 minutes. Your request was denied because the specified <code>PaginationToken</code> has expired.
    ResourceARN:
      type: string
      minLength: 1
      maxLength: 1600
    ResourceARNList:
      type: array
      items:
        $ref: '#/components/schemas/ResourceARN'
      minItems: 1
      maxItems: 20
    ResourceTagMapping:
      type: object
      properties:
        ResourceARN:
          $ref: '#/components/schemas/ResourceARN'
        Tags:
          $ref: '#/components/schemas/TagList'
      description: A list of resource ARNs and the tags (keys and values) that are associated with each.
    ResourceTagMappingList:
      type: array
      items:
        $ref: '#/components/schemas/ResourceTagMapping'
    ResourceTypeFilterList:
      type: array
      items:
        $ref: '#/components/schemas/AmazonResourceType'
    ResourcesPerPage:
      type: integer
    StatusCode:
      type: integer
    Tag:
      type: object
      required:
        - Key
        - Value
      properties:
        Key:
          $ref: '#/components/schemas/TagKey'
        Value:
          $ref: '#/components/schemas/TagValue'
      description: 'The metadata that you apply to AWS resources to help you categorize and organize them. Each tag consists of a key and an optional value, both of which you define. For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html#tag-basics">Tag Basics</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.'
    TagFilter:
      type: object
      properties:
        Key:
          $ref: '#/components/schemas/TagKey'
        Values:
          $ref: '#/components/schemas/TagValueList'
      description: A list of tags (keys and values) that are used to specify the associated resources.
    TagFilterList:
      type: array
      items:
        $ref: '#/components/schemas/TagFilter'
      minItems: 0
      maxItems: 50
    TagKey:
      type: string
      minLength: 1
      maxLength: 128
    TagKeyList:
      type: array
      items:
        $ref: '#/components/schemas/TagKey'
    TagKeyListForUntag:
      type: array
      items:
        $ref: '#/components/schemas/TagKey'
      minItems: 1
      maxItems: 50
    TagList:
      type: array
      items:
        $ref: '#/components/schemas/Tag'
    TagMap:
      type: array
      minItems: 1
      maxItems: 50
      items:
        type: object
        properties:
          key:
            $ref: '#/components/schemas/TagKey'
          value:
            $ref: '#/components/schemas/TagValue'
    TagResourcesInput:
      type: object
      required:
        - ResourceARNList
        - Tags
      properties:
        ResourceARNList:
          $ref: '#/components/schemas/ResourceARNList'
        Tags:
          $ref: '#/components/schemas/TagMap'
    TagResourcesOutput:
      type: object
      properties:
        FailedResourcesMap:
          $ref: '#/components/schemas/FailedResourcesMap'
    TagValue:
      type: string
      minLength: 0
      maxLength: 256
    TagValueList:
      type: array
      items:
        $ref: '#/components/schemas/TagValue'
      minItems: 0
      maxItems: 20
    TagValuesOutputList:
      type: array
      items:
        $ref: '#/components/schemas/TagValue'
    TagsPerPage:
      type: integer
    ThrottledException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: The request was denied to limit the frequency of submitted requests.
    UntagResourcesInput:
      type: object
      required:
        - ResourceARNList
        - TagKeys
      properties:
        ResourceARNList:
          $ref: '#/components/schemas/ResourceARNList'
        TagKeys:
          $ref: '#/components/schemas/TagKeyListForUntag'
    UntagResourcesOutput:
      type: object
      properties:
        FailedResourcesMap:
          $ref: '#/components/schemas/FailedResourcesMap'
  parameters:
    Action:
      name: Action
      in: header
      required: true
      schema:
        type: string
    Version:
      name: Version
      in: header
      required: true
      schema:
        type: string
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      required: false
      schema:
        type: string
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      required: false
      schema:
        type: string
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      required: false
      schema:
        type: string
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      required: false
      schema:
        type: string
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      required: false
      schema:
        type: string
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      required: false
      schema:
        type: string
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      required: false
      schema:
        type: string
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
