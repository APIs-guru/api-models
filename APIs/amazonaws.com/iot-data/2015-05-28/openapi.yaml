openapi: 3.0.0
servers:
  - url: 'http://data.iot.amazonaws.com/'
info:
  version: '2015-05-28'
  x-release: v4
  title: AWS IoT Data Plane
  description: '<fullname>AWS IoT</fullname> <p>AWS IoT-Data enables secure, bi-directional communication between Internet-connected things (such as sensors, actuators, embedded devices, or smart appliances) and the AWS cloud. It implements a broker for applications and things to publish messages over HTTP (Publish) and retrieve, update, and delete thing shadows. A thing shadow is a persistent representation of your things and their state in the AWS cloud.</p>'
  x-logo:
    url: 'https://media.amazonwebservices.com/blog/2007/big_pbaws_logo_300px.jpg'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: data.iot
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/iot-data-2015-05-28.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-direct: true
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://aws.amazon.com/iot/'
x-hasEquivalentPaths: true
security:
  - hmac: []
paths:
  '/things/{thingName}/shadow':
    post:
      operationId: UpdateThingShadow
      description: '<p>Updates the thing shadow for the specified thing.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/iot/latest/developerguide/API_UpdateThingShadow.html">UpdateThingShadow</a> in the <i>AWS IoT Developer Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateThingShadowResponse'
        '480':
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '481':
          description: RequestEntityTooLargeException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestEntityTooLargeException'
        '482':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '483':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '484':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '485':
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '486':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '487':
          description: MethodNotAllowedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '488':
          description: UnsupportedDocumentEncodingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedDocumentEncodingException'
      parameters:
        - name: thingName
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateThingShadowRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/topics/{topic}':
    post:
      operationId: Publish
      description: '<p>Publishes state information.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/iot/latest/developerguide/protocols.html#http">HTTP Protocol</a> in the <i>AWS IoT Developer Guide</i>.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '481':
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '482':
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '483':
          description: MethodNotAllowedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
      parameters:
        - name: topic
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PublishRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
components:
  schemas:
    ConflictException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      description: The specified version does not match the version of the document.
    DeleteThingShadowRequest:
      type: object
      properties: {}
      description: The input for the DeleteThingShadow operation.
    DeleteThingShadowResponse:
      type: object
      required:
        - payload
      properties:
        payload:
          $ref: '#/components/schemas/JsonDocument'
      description: The output from the DeleteThingShadow operation.
    ErrorMessage:
      type: string
    GetThingShadowRequest:
      type: object
      properties: {}
      description: The input for the GetThingShadow operation.
    GetThingShadowResponse:
      type: object
      properties:
        payload:
          $ref: '#/components/schemas/JsonDocument'
      description: The output from the GetThingShadow operation.
    InternalFailureException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/errorMessage'
      description: An unexpected error has occurred.
    InvalidRequestException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/errorMessage'
      description: The request is not valid.
    JsonDocument:
      type: string
    MethodNotAllowedException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      description: The specified combination of HTTP verb and URI is not supported.
    Payload:
      type: string
    PublishRequest:
      type: object
      properties:
        payload:
          $ref: '#/components/schemas/Payload'
      description: The input for the Publish operation.
    Qos:
      type: integer
      minimum: 0
      maximum: 1
    RequestEntityTooLargeException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      description: The payload exceeds the maximum size allowed.
    ResourceNotFoundException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/errorMessage'
      description: The specified resource does not exist.
    ServiceUnavailableException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/errorMessage'
      description: The service is temporarily unavailable.
    ThingName:
      type: string
      pattern: '[a-zA-Z0-9_-]+'
      minLength: 1
      maxLength: 128
    ThrottlingException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/errorMessage'
      description: The rate exceeds the limit.
    Topic:
      type: string
    UnauthorizedException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/errorMessage'
      description: You are not authorized to perform this operation.
    UnsupportedDocumentEncodingException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/errorMessage'
      description: The document encoding is not supported.
    UpdateThingShadowRequest:
      type: object
      required:
        - payload
      properties:
        payload:
          $ref: '#/components/schemas/JsonDocument'
      description: The input for the UpdateThingShadow operation.
    UpdateThingShadowResponse:
      type: object
      properties:
        payload:
          $ref: '#/components/schemas/JsonDocument'
      description: The output from the UpdateThingShadow operation.
    errorMessage:
      type: string
  parameters:
    Action:
      name: Action
      in: header
      required: true
      schema:
        type: string
    Version:
      name: Version
      in: header
      required: true
      schema:
        type: string
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      required: false
      schema:
        type: string
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      required: false
      schema:
        type: string
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      required: false
      schema:
        type: string
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      required: false
      schema:
        type: string
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      required: false
      schema:
        type: string
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      required: false
      schema:
        type: string
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      required: false
      schema:
        type: string
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
