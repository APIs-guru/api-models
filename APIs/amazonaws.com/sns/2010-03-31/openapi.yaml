openapi: 3.0.0
servers:
  - url: 'http://sns.amazonaws.com/'
info:
  version: '2010-03-31'
  x-release: v4
  title: Amazon Simple Notification Service
  description: '<fullname>Amazon Simple Notification Service</fullname> <p>Amazon Simple Notification Service (Amazon SNS) is a web service that enables you to build distributed web-enabled applications. Applications can use Amazon SNS to easily push real-time notification messages to interested subscribers over multiple delivery protocols. For more information about this product see <a href="http://aws.amazon.com/sns/">http://aws.amazon.com/sns</a>. For detailed information about Amazon SNS features and their associated API calls, see the <a href="http://docs.aws.amazon.com/sns/latest/dg/">Amazon SNS Developer Guide</a>. </p> <p>We also provide SDKs that enable you to access Amazon SNS from your preferred programming language. The SDKs contain functionality that automatically takes care of tasks such as: cryptographically signing your service requests, retrying requests, and handling error responses. For a list of available SDKs, go to <a href="http://aws.amazon.com/tools/">Tools for Amazon Web Services</a>. </p>'
  x-logo:
    url: 'https://media.amazonwebservices.com/blog/2007/big_pbaws_logo_300px.jpg'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: sns
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/sns-2010-03-31.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-direct: true
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://aws.amazon.com/sns/'
x-hasEquivalentPaths: true
security:
  - hmac: []
paths:
  /:
    post:
      operationId: AddPermission
      description: 'Adds a statement to a topic''s access control policy, granting access for the specified AWS accounts to the specified actions.'
      responses:
        '200':
          description: Success
        '480':
          description: InvalidParameterException
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '481':
          description: InternalErrorException
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InternalErrorException'
        '482':
          description: AuthorizationErrorException
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AuthorizationErrorException'
        '483':
          description: NotFoundException
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/NotFoundException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddPermissionInput'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#CheckIfPhoneNumberIsOptedOut':
    post:
      operationId: CheckIfPhoneNumberIsOptedOut
      description: '<p>Accepts a phone number and indicates whether the phone holder has opted out of receiving SMS messages from your account. You cannot send SMS messages to a number that is opted out.</p> <p>To resume sending messages, you can opt in the number by using the <code>OptInPhoneNumber</code> action.</p>'
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CheckIfPhoneNumberIsOptedOutResponse'
        '480':
          description: ThrottledException
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ThrottledException'
        '481':
          description: InternalErrorException
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InternalErrorException'
        '482':
          description: AuthorizationErrorException
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AuthorizationErrorException'
        '483':
          description: InvalidParameterException
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckIfPhoneNumberIsOptedOutInput'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#ConfirmSubscription':
    post:
      operationId: ConfirmSubscription
      description: 'Verifies an endpoint owner''s intent to receive messages by validating the token sent to the endpoint by an earlier <code>Subscribe</code> action. If the token is valid, the action creates a new subscription and returns its Amazon Resource Name (ARN). This call requires an AWS signature only when the <code>AuthenticateOnUnsubscribe</code> flag is set to "true".'
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ConfirmSubscriptionResponse'
        '480':
          description: SubscriptionLimitExceededException
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SubscriptionLimitExceededException'
        '481':
          description: InvalidParameterException
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: NotFoundException
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: InternalErrorException
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InternalErrorException'
        '484':
          description: AuthorizationErrorException
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AuthorizationErrorException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfirmSubscriptionInput'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#CreatePlatformApplication':
    post:
      operationId: CreatePlatformApplication
      description: '<p>Creates a platform application object for one of the supported push notification services, such as APNS and GCM, to which devices and mobile apps may register. You must specify PlatformPrincipal and PlatformCredential attributes when using the <code>CreatePlatformApplication</code> action. The PlatformPrincipal is received from the notification service. For APNS/APNS_SANDBOX, PlatformPrincipal is "SSL certificate". For GCM, PlatformPrincipal is not applicable. For ADM, PlatformPrincipal is "client id". The PlatformCredential is also received from the notification service. For WNS, PlatformPrincipal is "Package Security Identifier". For MPNS, PlatformPrincipal is "TLS certificate". For Baidu, PlatformPrincipal is "API key".</p> <p>For APNS/APNS_SANDBOX, PlatformCredential is "private key". For GCM, PlatformCredential is "API key". For ADM, PlatformCredential is "client secret". For WNS, PlatformCredential is "secret key". For MPNS, PlatformCredential is "private key". For Baidu, PlatformCredential is "secret key". The PlatformApplicationArn that is returned when using <code>CreatePlatformApplication</code> is then used as an attribute for the <code>CreatePlatformEndpoint</code> action. For more information, see <a href="http://docs.aws.amazon.com/sns/latest/dg/SNSMobilePush.html">Using Amazon SNS Mobile Push Notifications</a>. For more information about obtaining the PlatformPrincipal and PlatformCredential for each of the supported push notification services, see <a href="http://docs.aws.amazon.com/sns/latest/dg/mobile-push-apns.html">Getting Started with Apple Push Notification Service</a>, <a href="http://docs.aws.amazon.com/sns/latest/dg/mobile-push-adm.html">Getting Started with Amazon Device Messaging</a>, <a href="http://docs.aws.amazon.com/sns/latest/dg/mobile-push-baidu.html">Getting Started with Baidu Cloud Push</a>, <a href="http://docs.aws.amazon.com/sns/latest/dg/mobile-push-gcm.html">Getting Started with Google Cloud Messaging for Android</a>, <a href="http://docs.aws.amazon.com/sns/latest/dg/mobile-push-mpns.html">Getting Started with MPNS</a>, or <a href="http://docs.aws.amazon.com/sns/latest/dg/mobile-push-wns.html">Getting Started with WNS</a>. </p>'
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CreatePlatformApplicationResponse'
        '480':
          description: InvalidParameterException
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '481':
          description: InternalErrorException
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InternalErrorException'
        '482':
          description: AuthorizationErrorException
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AuthorizationErrorException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePlatformApplicationInput'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#CreatePlatformEndpoint':
    post:
      operationId: CreatePlatformEndpoint
      description: '<p>Creates an endpoint for a device and mobile app on one of the supported push notification services, such as GCM and APNS. <code>CreatePlatformEndpoint</code> requires the PlatformApplicationArn that is returned from <code>CreatePlatformApplication</code>. The EndpointArn that is returned when using <code>CreatePlatformEndpoint</code> can then be used by the <code>Publish</code> action to send a message to a mobile app or by the <code>Subscribe</code> action for subscription to a topic. The <code>CreatePlatformEndpoint</code> action is idempotent, so if the requester already owns an endpoint with the same device token and attributes, that endpoint''s ARN is returned without creating a new endpoint. For more information, see <a href="http://docs.aws.amazon.com/sns/latest/dg/SNSMobilePush.html">Using Amazon SNS Mobile Push Notifications</a>. </p> <p>When using <code>CreatePlatformEndpoint</code> with Baidu, two attributes must be provided: ChannelId and UserId. The token field must also contain the ChannelId. For more information, see <a href="http://docs.aws.amazon.com/sns/latest/dg/SNSMobilePushBaiduEndpoint.html">Creating an Amazon SNS Endpoint for Baidu</a>. </p>'
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CreateEndpointResponse'
        '480':
          description: InvalidParameterException
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '481':
          description: InternalErrorException
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InternalErrorException'
        '482':
          description: AuthorizationErrorException
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AuthorizationErrorException'
        '483':
          description: NotFoundException
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/NotFoundException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePlatformEndpointInput'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#CreateTopic':
    post:
      operationId: CreateTopic
      description: 'Creates a topic to which notifications can be published. Users can create at most 100,000 topics. For more information, see <a href="http://aws.amazon.com/sns/">http://aws.amazon.com/sns</a>. This action is idempotent, so if the requester already owns a topic with the specified name, that topic''s ARN is returned without creating a new topic.'
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CreateTopicResponse'
        '480':
          description: InvalidParameterException
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '481':
          description: TopicLimitExceededException
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TopicLimitExceededException'
        '482':
          description: InternalErrorException
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InternalErrorException'
        '483':
          description: AuthorizationErrorException
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AuthorizationErrorException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTopicInput'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DeleteEndpoint':
    post:
      operationId: DeleteEndpoint
      description: '<p>Deletes the endpoint for a device and mobile app from Amazon SNS. This action is idempotent. For more information, see <a href="http://docs.aws.amazon.com/sns/latest/dg/SNSMobilePush.html">Using Amazon SNS Mobile Push Notifications</a>. </p> <p>When you delete an endpoint that is also subscribed to a topic, then you must also unsubscribe the endpoint from the topic.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: InvalidParameterException
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '481':
          description: InternalErrorException
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InternalErrorException'
        '482':
          description: AuthorizationErrorException
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AuthorizationErrorException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteEndpointInput'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DeletePlatformApplication':
    post:
      operationId: DeletePlatformApplication
      description: 'Deletes a platform application object for one of the supported push notification services, such as APNS and GCM. For more information, see <a href="http://docs.aws.amazon.com/sns/latest/dg/SNSMobilePush.html">Using Amazon SNS Mobile Push Notifications</a>. '
      responses:
        '200':
          description: Success
        '480':
          description: InvalidParameterException
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '481':
          description: InternalErrorException
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InternalErrorException'
        '482':
          description: AuthorizationErrorException
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AuthorizationErrorException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeletePlatformApplicationInput'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DeleteTopic':
    post:
      operationId: DeleteTopic
      description: 'Deletes a topic and all its subscriptions. Deleting a topic might prevent some messages previously sent to the topic from being delivered to subscribers. This action is idempotent, so deleting a topic that does not exist does not result in an error.'
      responses:
        '200':
          description: Success
        '480':
          description: InvalidParameterException
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '481':
          description: InternalErrorException
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InternalErrorException'
        '482':
          description: AuthorizationErrorException
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AuthorizationErrorException'
        '483':
          description: NotFoundException
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/NotFoundException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteTopicInput'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#GetEndpointAttributes':
    post:
      operationId: GetEndpointAttributes
      description: 'Retrieves the endpoint attributes for a device on one of the supported push notification services, such as GCM and APNS. For more information, see <a href="http://docs.aws.amazon.com/sns/latest/dg/SNSMobilePush.html">Using Amazon SNS Mobile Push Notifications</a>. '
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GetEndpointAttributesResponse'
        '480':
          description: InvalidParameterException
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '481':
          description: InternalErrorException
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InternalErrorException'
        '482':
          description: AuthorizationErrorException
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AuthorizationErrorException'
        '483':
          description: NotFoundException
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/NotFoundException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetEndpointAttributesInput'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#GetPlatformApplicationAttributes':
    post:
      operationId: GetPlatformApplicationAttributes
      description: 'Retrieves the attributes of the platform application object for the supported push notification services, such as APNS and GCM. For more information, see <a href="http://docs.aws.amazon.com/sns/latest/dg/SNSMobilePush.html">Using Amazon SNS Mobile Push Notifications</a>. '
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GetPlatformApplicationAttributesResponse'
        '480':
          description: InvalidParameterException
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '481':
          description: InternalErrorException
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InternalErrorException'
        '482':
          description: AuthorizationErrorException
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AuthorizationErrorException'
        '483':
          description: NotFoundException
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/NotFoundException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetPlatformApplicationAttributesInput'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#GetSMSAttributes':
    post:
      operationId: GetSMSAttributes
      description: <p>Returns the settings for sending SMS messages from your account.</p> <p>These settings are set with the <code>SetSMSAttributes</code> action.</p>
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GetSMSAttributesResponse'
        '480':
          description: ThrottledException
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ThrottledException'
        '481':
          description: InternalErrorException
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InternalErrorException'
        '482':
          description: AuthorizationErrorException
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AuthorizationErrorException'
        '483':
          description: InvalidParameterException
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetSMSAttributesInput'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#GetSubscriptionAttributes':
    post:
      operationId: GetSubscriptionAttributes
      description: Returns all of the properties of a subscription.
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GetSubscriptionAttributesResponse'
        '480':
          description: InvalidParameterException
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '481':
          description: InternalErrorException
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InternalErrorException'
        '482':
          description: NotFoundException
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: AuthorizationErrorException
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AuthorizationErrorException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetSubscriptionAttributesInput'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#GetTopicAttributes':
    post:
      operationId: GetTopicAttributes
      description: Returns all of the properties of a topic. Topic properties returned might differ based on the authorization of the user.
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GetTopicAttributesResponse'
        '480':
          description: InvalidParameterException
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '481':
          description: InternalErrorException
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InternalErrorException'
        '482':
          description: NotFoundException
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: AuthorizationErrorException
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AuthorizationErrorException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetTopicAttributesInput'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#ListEndpointsByPlatformApplication':
    post:
      operationId: ListEndpointsByPlatformApplication
      description: 'Lists the endpoints and endpoint attributes for devices in a supported push notification service, such as GCM and APNS. The results for <code>ListEndpointsByPlatformApplication</code> are paginated and return a limited list of endpoints, up to 100. If additional records are available after the first page results, then a NextToken string will be returned. To receive the next page, you call <code>ListEndpointsByPlatformApplication</code> again using the NextToken string received from the previous call. When there are no more records to return, NextToken will be null. For more information, see <a href="http://docs.aws.amazon.com/sns/latest/dg/SNSMobilePush.html">Using Amazon SNS Mobile Push Notifications</a>. '
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ListEndpointsByPlatformApplicationResponse'
        '480':
          description: InvalidParameterException
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '481':
          description: InternalErrorException
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InternalErrorException'
        '482':
          description: AuthorizationErrorException
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AuthorizationErrorException'
        '483':
          description: NotFoundException
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/NotFoundException'
      parameters:
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListEndpointsByPlatformApplicationInput'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#ListPhoneNumbersOptedOut':
    post:
      operationId: ListPhoneNumbersOptedOut
      description: '<p>Returns a list of phone numbers that are opted out, meaning you cannot send SMS messages to them.</p> <p>The results for <code>ListPhoneNumbersOptedOut</code> are paginated, and each page returns up to 100 phone numbers. If additional phone numbers are available after the first page of results, then a <code>NextToken</code> string will be returned. To receive the next page, you call <code>ListPhoneNumbersOptedOut</code> again using the <code>NextToken</code> string received from the previous call. When there are no more records to return, <code>NextToken</code> will be null.</p>'
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ListPhoneNumbersOptedOutResponse'
        '480':
          description: ThrottledException
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ThrottledException'
        '481':
          description: InternalErrorException
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InternalErrorException'
        '482':
          description: AuthorizationErrorException
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AuthorizationErrorException'
        '483':
          description: InvalidParameterException
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListPhoneNumbersOptedOutInput'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#ListPlatformApplications':
    post:
      operationId: ListPlatformApplications
      description: 'Lists the platform application objects for the supported push notification services, such as APNS and GCM. The results for <code>ListPlatformApplications</code> are paginated and return a limited list of applications, up to 100. If additional records are available after the first page results, then a NextToken string will be returned. To receive the next page, you call <code>ListPlatformApplications</code> using the NextToken string received from the previous call. When there are no more records to return, NextToken will be null. For more information, see <a href="http://docs.aws.amazon.com/sns/latest/dg/SNSMobilePush.html">Using Amazon SNS Mobile Push Notifications</a>. '
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ListPlatformApplicationsResponse'
        '480':
          description: InvalidParameterException
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '481':
          description: InternalErrorException
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InternalErrorException'
        '482':
          description: AuthorizationErrorException
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AuthorizationErrorException'
      parameters:
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListPlatformApplicationsInput'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#ListSubscriptions':
    post:
      operationId: ListSubscriptions
      description: 'Returns a list of the requester''s subscriptions. Each call returns a limited list of subscriptions, up to 100. If there are more subscriptions, a <code>NextToken</code> is also returned. Use the <code>NextToken</code> parameter in a new <code>ListSubscriptions</code> call to get further results.'
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ListSubscriptionsResponse'
        '480':
          description: InvalidParameterException
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '481':
          description: InternalErrorException
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InternalErrorException'
        '482':
          description: AuthorizationErrorException
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AuthorizationErrorException'
      parameters:
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListSubscriptionsInput'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#ListSubscriptionsByTopic':
    post:
      operationId: ListSubscriptionsByTopic
      description: 'Returns a list of the subscriptions to a specific topic. Each call returns a limited list of subscriptions, up to 100. If there are more subscriptions, a <code>NextToken</code> is also returned. Use the <code>NextToken</code> parameter in a new <code>ListSubscriptionsByTopic</code> call to get further results.'
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ListSubscriptionsByTopicResponse'
        '480':
          description: InvalidParameterException
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '481':
          description: InternalErrorException
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InternalErrorException'
        '482':
          description: NotFoundException
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: AuthorizationErrorException
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AuthorizationErrorException'
      parameters:
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListSubscriptionsByTopicInput'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#ListTopics':
    post:
      operationId: ListTopics
      description: 'Returns a list of the requester''s topics. Each call returns a limited list of topics, up to 100. If there are more topics, a <code>NextToken</code> is also returned. Use the <code>NextToken</code> parameter in a new <code>ListTopics</code> call to get further results.'
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ListTopicsResponse'
        '480':
          description: InvalidParameterException
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '481':
          description: InternalErrorException
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InternalErrorException'
        '482':
          description: AuthorizationErrorException
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AuthorizationErrorException'
      parameters:
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListTopicsInput'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#OptInPhoneNumber':
    post:
      operationId: OptInPhoneNumber
      description: '<p>Use this request to opt in a phone number that is opted out, which enables you to resume sending SMS messages to the number.</p> <p>You can opt in a phone number only once every 30 days.</p>'
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OptInPhoneNumberResponse'
        '480':
          description: ThrottledException
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ThrottledException'
        '481':
          description: InternalErrorException
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InternalErrorException'
        '482':
          description: AuthorizationErrorException
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AuthorizationErrorException'
        '483':
          description: InvalidParameterException
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OptInPhoneNumberInput'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#Publish':
    post:
      operationId: Publish
      description: '<p>Sends a message to all of a topic''s subscribed endpoints. When a <code>messageId</code> is returned, the message has been saved and Amazon SNS will attempt to deliver it to the topic''s subscribers shortly. The format of the outgoing message to each subscribed endpoint depends on the notification protocol.</p> <p>To use the <code>Publish</code> action for sending a message to a mobile endpoint, such as an app on a Kindle device or mobile phone, you must specify the EndpointArn for the TargetArn parameter. The EndpointArn is returned when making a call with the <code>CreatePlatformEndpoint</code> action. </p> <p>For more information about formatting messages, see <a href="http://docs.aws.amazon.com/sns/latest/dg/mobile-push-send-custommessage.html">Send Custom Platform-Specific Payloads in Messages to Mobile Devices</a>. </p>'
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PublishResponse'
        '480':
          description: InvalidParameterException
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '481':
          description: InvalidParameterValueException
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: InternalErrorException
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InternalErrorException'
        '483':
          description: NotFoundException
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '484':
          description: EndpointDisabledException
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EndpointDisabledException'
        '485':
          description: PlatformApplicationDisabledException
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PlatformApplicationDisabledException'
        '486':
          description: AuthorizationErrorException
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AuthorizationErrorException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PublishInput'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#RemovePermission':
    post:
      operationId: RemovePermission
      description: Removes a statement from a topic's access control policy.
      responses:
        '200':
          description: Success
        '480':
          description: InvalidParameterException
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '481':
          description: InternalErrorException
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InternalErrorException'
        '482':
          description: AuthorizationErrorException
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AuthorizationErrorException'
        '483':
          description: NotFoundException
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/NotFoundException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemovePermissionInput'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#SetEndpointAttributes':
    post:
      operationId: SetEndpointAttributes
      description: 'Sets the attributes for an endpoint for a device on one of the supported push notification services, such as GCM and APNS. For more information, see <a href="http://docs.aws.amazon.com/sns/latest/dg/SNSMobilePush.html">Using Amazon SNS Mobile Push Notifications</a>. '
      responses:
        '200':
          description: Success
        '480':
          description: InvalidParameterException
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '481':
          description: InternalErrorException
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InternalErrorException'
        '482':
          description: AuthorizationErrorException
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AuthorizationErrorException'
        '483':
          description: NotFoundException
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/NotFoundException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetEndpointAttributesInput'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#SetPlatformApplicationAttributes':
    post:
      operationId: SetPlatformApplicationAttributes
      description: 'Sets the attributes of the platform application object for the supported push notification services, such as APNS and GCM. For more information, see <a href="http://docs.aws.amazon.com/sns/latest/dg/SNSMobilePush.html">Using Amazon SNS Mobile Push Notifications</a>. For information on configuring attributes for message delivery status, see <a href="http://docs.aws.amazon.com/sns/latest/dg/sns-msg-status.html">Using Amazon SNS Application Attributes for Message Delivery Status</a>. '
      responses:
        '200':
          description: Success
        '480':
          description: InvalidParameterException
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '481':
          description: InternalErrorException
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InternalErrorException'
        '482':
          description: AuthorizationErrorException
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AuthorizationErrorException'
        '483':
          description: NotFoundException
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/NotFoundException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetPlatformApplicationAttributesInput'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#SetSMSAttributes':
    post:
      operationId: SetSMSAttributes
      description: '<p>Use this request to set the default settings for sending SMS messages and receiving daily SMS usage reports.</p> <p>You can override some of these settings for a single message when you use the <code>Publish</code> action with the <code>MessageAttributes.entry.N</code> parameter. For more information, see <a href="http://docs.aws.amazon.com/sns/latest/dg/sms_publish-to-phone.html">Sending an SMS Message</a> in the <i>Amazon SNS Developer Guide</i>.</p>'
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SetSMSAttributesResponse'
        '480':
          description: InvalidParameterException
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '481':
          description: ThrottledException
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ThrottledException'
        '482':
          description: InternalErrorException
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InternalErrorException'
        '483':
          description: AuthorizationErrorException
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AuthorizationErrorException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetSMSAttributesInput'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#SetSubscriptionAttributes':
    post:
      operationId: SetSubscriptionAttributes
      description: Allows a subscription owner to set an attribute of the topic to a new value.
      responses:
        '200':
          description: Success
        '480':
          description: InvalidParameterException
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '481':
          description: InternalErrorException
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InternalErrorException'
        '482':
          description: NotFoundException
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: AuthorizationErrorException
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AuthorizationErrorException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetSubscriptionAttributesInput'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#SetTopicAttributes':
    post:
      operationId: SetTopicAttributes
      description: Allows a topic owner to set an attribute of the topic to a new value.
      responses:
        '200':
          description: Success
        '480':
          description: InvalidParameterException
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '481':
          description: InternalErrorException
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InternalErrorException'
        '482':
          description: NotFoundException
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '483':
          description: AuthorizationErrorException
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AuthorizationErrorException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetTopicAttributesInput'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#Subscribe':
    post:
      operationId: Subscribe
      description: 'Prepares to subscribe an endpoint by sending the endpoint a confirmation message. To actually create a subscription, the endpoint owner must call the <code>ConfirmSubscription</code> action with the token from the confirmation message. Confirmation tokens are valid for three days.'
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SubscribeResponse'
        '480':
          description: SubscriptionLimitExceededException
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SubscriptionLimitExceededException'
        '481':
          description: InvalidParameterException
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '482':
          description: InternalErrorException
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InternalErrorException'
        '483':
          description: NotFoundException
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '484':
          description: AuthorizationErrorException
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AuthorizationErrorException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscribeInput'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#Unsubscribe':
    post:
      operationId: Unsubscribe
      description: 'Deletes a subscription. If the subscription requires authentication for deletion, only the owner of the subscription or the topic''s owner can unsubscribe, and an AWS signature is required. If the <code>Unsubscribe</code> call does not require authentication and the requester is not the subscription owner, a final cancellation message is delivered to the endpoint, so that the endpoint owner can easily resubscribe to the topic if the <code>Unsubscribe</code> request was unintended.'
      responses:
        '200':
          description: Success
        '480':
          description: InvalidParameterException
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '481':
          description: InternalErrorException
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InternalErrorException'
        '482':
          description: AuthorizationErrorException
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AuthorizationErrorException'
        '483':
          description: NotFoundException
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/NotFoundException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnsubscribeInput'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
components:
  schemas:
    ActionsList:
      type: array
      items:
        $ref: '#/components/schemas/action'
    AddPermissionInput:
      type: object
      required:
        - TopicArn
        - Label
        - AWSAccountId
        - ActionName
      properties:
        TopicArn:
          $ref: '#/components/schemas/topicARN'
        Label:
          $ref: '#/components/schemas/label'
        AWSAccountId:
          $ref: '#/components/schemas/DelegatesList'
        ActionName:
          $ref: '#/components/schemas/ActionsList'
    AuthorizationErrorException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/string'
      description: Indicates that the user has been denied access to the requested resource.
    Binary:
      type: string
    CheckIfPhoneNumberIsOptedOutInput:
      type: object
      required:
        - phoneNumber
      properties:
        phoneNumber:
          $ref: '#/components/schemas/PhoneNumber'
      description: The input for the <code>CheckIfPhoneNumberIsOptedOut</code> action.
    CheckIfPhoneNumberIsOptedOutResponse:
      type: object
      properties:
        isOptedOut:
          $ref: '#/components/schemas/boolean'
      description: The response from the <code>CheckIfPhoneNumberIsOptedOut</code> action.
    ConfirmSubscriptionInput:
      type: object
      required:
        - TopicArn
        - Token
      properties:
        TopicArn:
          $ref: '#/components/schemas/topicARN'
        Token:
          $ref: '#/components/schemas/token'
        AuthenticateOnUnsubscribe:
          $ref: '#/components/schemas/authenticateOnUnsubscribe'
      description: Input for ConfirmSubscription action.
    ConfirmSubscriptionResponse:
      type: object
      properties:
        SubscriptionArn:
          $ref: '#/components/schemas/subscriptionARN'
      description: Response for ConfirmSubscriptions action.
    CreateEndpointResponse:
      type: object
      properties:
        EndpointArn:
          $ref: '#/components/schemas/String'
      description: Response from CreateEndpoint action.
    CreatePlatformApplicationInput:
      type: object
      required:
        - Name
        - Platform
        - Attributes
      properties:
        Name:
          $ref: '#/components/schemas/String'
        Platform:
          $ref: '#/components/schemas/String'
        Attributes:
          $ref: '#/components/schemas/MapStringToString'
      description: Input for CreatePlatformApplication action.
    CreatePlatformApplicationResponse:
      type: object
      properties:
        PlatformApplicationArn:
          $ref: '#/components/schemas/String'
      description: Response from CreatePlatformApplication action.
    CreatePlatformEndpointInput:
      type: object
      required:
        - PlatformApplicationArn
        - Token
      properties:
        PlatformApplicationArn:
          $ref: '#/components/schemas/String'
        Token:
          $ref: '#/components/schemas/String'
        CustomUserData:
          $ref: '#/components/schemas/String'
        Attributes:
          $ref: '#/components/schemas/MapStringToString'
      description: Input for CreatePlatformEndpoint action.
    CreateTopicInput:
      type: object
      required:
        - Name
      properties:
        Name:
          $ref: '#/components/schemas/topicName'
      description: Input for CreateTopic action.
    CreateTopicResponse:
      type: object
      properties:
        TopicArn:
          $ref: '#/components/schemas/topicARN'
      description: Response from CreateTopic action.
    DelegatesList:
      type: array
      items:
        $ref: '#/components/schemas/delegate'
    DeleteEndpointInput:
      type: object
      required:
        - EndpointArn
      properties:
        EndpointArn:
          $ref: '#/components/schemas/String'
      description: Input for DeleteEndpoint action.
    DeletePlatformApplicationInput:
      type: object
      required:
        - PlatformApplicationArn
      properties:
        PlatformApplicationArn:
          $ref: '#/components/schemas/String'
      description: Input for DeletePlatformApplication action.
    DeleteTopicInput:
      type: object
      required:
        - TopicArn
      properties:
        TopicArn:
          $ref: '#/components/schemas/topicARN'
    Endpoint:
      type: object
      properties:
        EndpointArn:
          $ref: '#/components/schemas/String'
        Attributes:
          $ref: '#/components/schemas/MapStringToString'
      description: Endpoint for mobile app and device.
    EndpointDisabledException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/string'
      description: Exception error indicating endpoint disabled.
    GetEndpointAttributesInput:
      type: object
      required:
        - EndpointArn
      properties:
        EndpointArn:
          $ref: '#/components/schemas/String'
      description: Input for GetEndpointAttributes action.
    GetEndpointAttributesResponse:
      type: object
      properties:
        Attributes:
          $ref: '#/components/schemas/MapStringToString'
      description: Response from GetEndpointAttributes of the EndpointArn.
    GetPlatformApplicationAttributesInput:
      type: object
      required:
        - PlatformApplicationArn
      properties:
        PlatformApplicationArn:
          $ref: '#/components/schemas/String'
      description: Input for GetPlatformApplicationAttributes action.
    GetPlatformApplicationAttributesResponse:
      type: object
      properties:
        Attributes:
          $ref: '#/components/schemas/MapStringToString'
      description: Response for GetPlatformApplicationAttributes action.
    GetSMSAttributesInput:
      type: object
      properties:
        attributes:
          $ref: '#/components/schemas/ListString'
      description: The input for the <code>GetSMSAttributes</code> request.
    GetSMSAttributesResponse:
      type: object
      properties:
        attributes:
          $ref: '#/components/schemas/MapStringToString'
      description: The response from the <code>GetSMSAttributes</code> request.
    GetSubscriptionAttributesInput:
      type: object
      required:
        - SubscriptionArn
      properties:
        SubscriptionArn:
          $ref: '#/components/schemas/subscriptionARN'
      description: Input for GetSubscriptionAttributes.
    GetSubscriptionAttributesResponse:
      type: object
      properties:
        Attributes:
          $ref: '#/components/schemas/SubscriptionAttributesMap'
      description: Response for GetSubscriptionAttributes action.
    GetTopicAttributesInput:
      type: object
      required:
        - TopicArn
      properties:
        TopicArn:
          $ref: '#/components/schemas/topicARN'
      description: Input for GetTopicAttributes action.
    GetTopicAttributesResponse:
      type: object
      properties:
        Attributes:
          $ref: '#/components/schemas/TopicAttributesMap'
      description: Response for GetTopicAttributes action.
    InternalErrorException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/string'
      description: Indicates an internal service error.
    InvalidParameterException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/string'
      description: Indicates that a request parameter does not comply with the associated constraints.
    InvalidParameterValueException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/string'
      description: Indicates that a request parameter does not comply with the associated constraints.
    ListEndpointsByPlatformApplicationInput:
      type: object
      required:
        - PlatformApplicationArn
      properties:
        PlatformApplicationArn:
          $ref: '#/components/schemas/String'
        NextToken:
          $ref: '#/components/schemas/String'
      description: Input for ListEndpointsByPlatformApplication action.
    ListEndpointsByPlatformApplicationResponse:
      type: object
      properties:
        Endpoints:
          $ref: '#/components/schemas/ListOfEndpoints'
        NextToken:
          $ref: '#/components/schemas/String'
      description: Response for ListEndpointsByPlatformApplication action.
    ListOfEndpoints:
      type: array
      items:
        $ref: '#/components/schemas/Endpoint'
    ListOfPlatformApplications:
      type: array
      items:
        $ref: '#/components/schemas/PlatformApplication'
    ListPhoneNumbersOptedOutInput:
      type: object
      properties:
        nextToken:
          $ref: '#/components/schemas/string'
      description: The input for the <code>ListPhoneNumbersOptedOut</code> action.
    ListPhoneNumbersOptedOutResponse:
      type: object
      properties:
        phoneNumbers:
          $ref: '#/components/schemas/PhoneNumberList'
        nextToken:
          $ref: '#/components/schemas/string'
      description: The response from the <code>ListPhoneNumbersOptedOut</code> action.
    ListPlatformApplicationsInput:
      type: object
      properties:
        NextToken:
          $ref: '#/components/schemas/String'
      description: Input for ListPlatformApplications action.
    ListPlatformApplicationsResponse:
      type: object
      properties:
        PlatformApplications:
          $ref: '#/components/schemas/ListOfPlatformApplications'
        NextToken:
          $ref: '#/components/schemas/String'
      description: Response for ListPlatformApplications action.
    ListString:
      type: array
      items:
        $ref: '#/components/schemas/String'
    ListSubscriptionsByTopicInput:
      type: object
      required:
        - TopicArn
      properties:
        TopicArn:
          $ref: '#/components/schemas/topicARN'
        NextToken:
          $ref: '#/components/schemas/nextToken'
      description: Input for ListSubscriptionsByTopic action.
    ListSubscriptionsByTopicResponse:
      type: object
      properties:
        Subscriptions:
          $ref: '#/components/schemas/SubscriptionsList'
        NextToken:
          $ref: '#/components/schemas/nextToken'
      description: Response for ListSubscriptionsByTopic action.
    ListSubscriptionsInput:
      type: object
      properties:
        NextToken:
          $ref: '#/components/schemas/nextToken'
      description: Input for ListSubscriptions action.
    ListSubscriptionsResponse:
      type: object
      properties:
        Subscriptions:
          $ref: '#/components/schemas/SubscriptionsList'
        NextToken:
          $ref: '#/components/schemas/nextToken'
      description: Response for ListSubscriptions action
    ListTopicsInput:
      type: object
      properties:
        NextToken:
          $ref: '#/components/schemas/nextToken'
    ListTopicsResponse:
      type: object
      properties:
        Topics:
          $ref: '#/components/schemas/TopicsList'
        NextToken:
          $ref: '#/components/schemas/nextToken'
      description: Response for ListTopics action.
    MapStringToString:
      type: array
      items:
        type: object
        properties:
          key:
            $ref: '#/components/schemas/String'
          value:
            $ref: '#/components/schemas/String'
    MessageAttributeMap:
      type: array
      items:
        type: object
        properties:
          key:
            $ref: '#/components/schemas/String'
          value:
            $ref: '#/components/schemas/MessageAttributeValue'
    MessageAttributeValue:
      type: object
      required:
        - DataType
      properties:
        DataType:
          $ref: '#/components/schemas/String'
        StringValue:
          $ref: '#/components/schemas/String'
        BinaryValue:
          $ref: '#/components/schemas/Binary'
      description: '<p>The user-specified message attribute value. For string data types, the value attribute has the same restrictions on the content as the message body. For more information, see <a href="http://docs.aws.amazon.com/sns/latest/api/API_Publish.html">Publish</a>.</p> <p>Name, type, and value must not be empty or null. In addition, the message body should not be empty or null. All parts of the message attribute, including name, type, and value, are included in the message size restriction, which is currently 256 KB (262,144 bytes). For more information, see <a href="http://docs.aws.amazon.com/sns/latest/dg/SNSMessageAttributes.html">Using Amazon SNS Message Attributes</a>.</p>'
    NotFoundException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/string'
      description: Indicates that the requested resource does not exist.
    OptInPhoneNumberInput:
      type: object
      required:
        - phoneNumber
      properties:
        phoneNumber:
          $ref: '#/components/schemas/PhoneNumber'
      description: Input for the OptInPhoneNumber action.
    OptInPhoneNumberResponse:
      type: object
      properties: {}
      description: The response for the OptInPhoneNumber action.
    PhoneNumber:
      type: string
    PhoneNumberList:
      type: array
      items:
        $ref: '#/components/schemas/PhoneNumber'
    PlatformApplication:
      type: object
      properties:
        PlatformApplicationArn:
          $ref: '#/components/schemas/String'
        Attributes:
          $ref: '#/components/schemas/MapStringToString'
      description: Platform application object.
    PlatformApplicationDisabledException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/string'
      description: Exception error indicating platform application disabled.
    PublishInput:
      type: object
      required:
        - Message
      properties:
        TopicArn:
          $ref: '#/components/schemas/topicARN'
        TargetArn:
          $ref: '#/components/schemas/String'
        PhoneNumber:
          $ref: '#/components/schemas/String'
        Message:
          $ref: '#/components/schemas/message'
        Subject:
          $ref: '#/components/schemas/subject'
        MessageStructure:
          $ref: '#/components/schemas/messageStructure'
        MessageAttributes:
          $ref: '#/components/schemas/MessageAttributeMap'
      description: Input for Publish action.
    PublishResponse:
      type: object
      properties:
        MessageId:
          $ref: '#/components/schemas/messageId'
      description: Response for Publish action.
    RemovePermissionInput:
      type: object
      required:
        - TopicArn
        - Label
      properties:
        TopicArn:
          $ref: '#/components/schemas/topicARN'
        Label:
          $ref: '#/components/schemas/label'
      description: Input for RemovePermission action.
    SetEndpointAttributesInput:
      type: object
      required:
        - EndpointArn
        - Attributes
      properties:
        EndpointArn:
          $ref: '#/components/schemas/String'
        Attributes:
          $ref: '#/components/schemas/MapStringToString'
      description: Input for SetEndpointAttributes action.
    SetPlatformApplicationAttributesInput:
      type: object
      required:
        - PlatformApplicationArn
        - Attributes
      properties:
        PlatformApplicationArn:
          $ref: '#/components/schemas/String'
        Attributes:
          $ref: '#/components/schemas/MapStringToString'
      description: Input for SetPlatformApplicationAttributes action.
    SetSMSAttributesInput:
      type: object
      required:
        - attributes
      properties:
        attributes:
          $ref: '#/components/schemas/MapStringToString'
      description: The input for the SetSMSAttributes action.
    SetSMSAttributesResponse:
      type: object
      properties: {}
      description: The response for the SetSMSAttributes action.
    SetSubscriptionAttributesInput:
      type: object
      required:
        - SubscriptionArn
        - AttributeName
      properties:
        SubscriptionArn:
          $ref: '#/components/schemas/subscriptionARN'
        AttributeName:
          $ref: '#/components/schemas/attributeName'
        AttributeValue:
          $ref: '#/components/schemas/attributeValue'
      description: Input for SetSubscriptionAttributes action.
    SetTopicAttributesInput:
      type: object
      required:
        - TopicArn
        - AttributeName
      properties:
        TopicArn:
          $ref: '#/components/schemas/topicARN'
        AttributeName:
          $ref: '#/components/schemas/attributeName'
        AttributeValue:
          $ref: '#/components/schemas/attributeValue'
      description: Input for SetTopicAttributes action.
    String:
      type: string
    SubscribeInput:
      type: object
      required:
        - TopicArn
        - Protocol
      properties:
        TopicArn:
          $ref: '#/components/schemas/topicARN'
        Protocol:
          $ref: '#/components/schemas/protocol'
        Endpoint:
          $ref: '#/components/schemas/endpoint'
      description: Input for Subscribe action.
    SubscribeResponse:
      type: object
      properties:
        SubscriptionArn:
          $ref: '#/components/schemas/subscriptionARN'
      description: Response for Subscribe action.
    Subscription:
      type: object
      properties:
        SubscriptionArn:
          $ref: '#/components/schemas/subscriptionARN'
        Owner:
          $ref: '#/components/schemas/account'
        Protocol:
          $ref: '#/components/schemas/protocol'
        Endpoint:
          $ref: '#/components/schemas/endpoint'
        TopicArn:
          $ref: '#/components/schemas/topicARN'
      description: A wrapper type for the attributes of an Amazon SNS subscription.
    SubscriptionAttributesMap:
      type: array
      items:
        type: object
        properties:
          key:
            $ref: '#/components/schemas/attributeName'
          value:
            $ref: '#/components/schemas/attributeValue'
    SubscriptionLimitExceededException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/string'
      description: Indicates that the customer already owns the maximum allowed number of subscriptions.
    SubscriptionsList:
      type: array
      items:
        $ref: '#/components/schemas/Subscription'
    ThrottledException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/string'
      description: Indicates that the rate at which requests have been submitted for this action exceeds the limit for your account.
    Topic:
      type: object
      properties:
        TopicArn:
          $ref: '#/components/schemas/topicARN'
      description: 'A wrapper type for the topic''s Amazon Resource Name (ARN). To retrieve a topic''s attributes, use <code>GetTopicAttributes</code>.'
    TopicAttributesMap:
      type: array
      items:
        type: object
        properties:
          key:
            $ref: '#/components/schemas/attributeName'
          value:
            $ref: '#/components/schemas/attributeValue'
    TopicLimitExceededException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/string'
      description: Indicates that the customer already owns the maximum allowed number of topics.
    TopicsList:
      type: array
      items:
        $ref: '#/components/schemas/Topic'
    UnsubscribeInput:
      type: object
      required:
        - SubscriptionArn
      properties:
        SubscriptionArn:
          $ref: '#/components/schemas/subscriptionARN'
      description: Input for Unsubscribe action.
    account:
      type: string
    action:
      type: string
    attributeName:
      type: string
    attributeValue:
      type: string
    authenticateOnUnsubscribe:
      type: string
    boolean:
      type: boolean
    delegate:
      type: string
    endpoint:
      type: string
    label:
      type: string
    message:
      type: string
    messageId:
      type: string
    messageStructure:
      type: string
    nextToken:
      type: string
    protocol:
      type: string
    string:
      type: string
    subject:
      type: string
    subscriptionARN:
      type: string
    token:
      type: string
    topicARN:
      type: string
    topicName:
      type: string
  parameters:
    Action:
      name: Action
      in: header
      required: true
      schema:
        type: string
    Version:
      name: Version
      in: header
      required: true
      schema:
        type: string
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      required: false
      schema:
        type: string
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      required: false
      schema:
        type: string
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      required: false
      schema:
        type: string
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      required: false
      schema:
        type: string
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      required: false
      schema:
        type: string
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      required: false
      schema:
        type: string
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      required: false
      schema:
        type: string
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
