openapi: 3.0.0
servers:
  - url: 'http://dax.amazonaws.com/'
info:
  version: '2017-04-19'
  x-release: v4
  title: Amazon DynamoDB Accelerator (DAX)
  description: 'DAX is a managed caching service engineered for Amazon DynamoDB. DAX dramatically speeds up database reads by caching frequently-accessed data from DynamoDB, so applications can access that data with sub-millisecond latency. You can create a DAX cluster easily, using the AWS Management Console. With a few simple modifications to your code, your application can begin taking advantage of the DAX cluster and realize significant improvements in read performance.'
  x-logo:
    url: 'https://media.amazonwebservices.com/blog/2007/big_pbaws_logo_300px.jpg'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: dax
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/dax-2017-04-19.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-direct: true
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://aws.amazon.com/dax/'
x-hasEquivalentPaths: true
security:
  - hmac: []
paths:
  /:
    post:
      operationId: CreateCluster
      description: Creates a DAX cluster. All nodes in the cluster run the same DAX caching software.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateClusterResponse'
        '480':
          description: ClusterAlreadyExistsFault
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterAlreadyExistsFault'
        '481':
          description: InvalidClusterStateFault
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidClusterStateFault'
        '482':
          description: InsufficientClusterCapacityFault
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsufficientClusterCapacityFault'
        '483':
          description: SubnetGroupNotFoundFault
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubnetGroupNotFoundFault'
        '484':
          description: InvalidParameterGroupStateFault
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterGroupStateFault'
        '485':
          description: ParameterGroupNotFoundFault
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParameterGroupNotFoundFault'
        '486':
          description: ClusterQuotaForCustomerExceededFault
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterQuotaForCustomerExceededFault'
        '487':
          description: NodeQuotaForClusterExceededFault
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodeQuotaForClusterExceededFault'
        '488':
          description: NodeQuotaForCustomerExceededFault
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodeQuotaForCustomerExceededFault'
        '489':
          description: InvalidVPCNetworkStateFault
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidVPCNetworkStateFault'
        '490':
          description: TagQuotaPerResourceExceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagQuotaPerResourceExceeded'
        '491':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '492':
          description: InvalidParameterCombinationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateClusterRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#CreateParameterGroup':
    post:
      operationId: CreateParameterGroup
      description: Creates a new parameter group. A parameter group is a collection of parameters that you apply to all of the nodes in a DAX cluster.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateParameterGroupResponse'
        '480':
          description: ParameterGroupQuotaExceededFault
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParameterGroupQuotaExceededFault'
        '481':
          description: ParameterGroupAlreadyExistsFault
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParameterGroupAlreadyExistsFault'
        '482':
          description: InvalidParameterGroupStateFault
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterGroupStateFault'
        '483':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '484':
          description: InvalidParameterCombinationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateParameterGroupRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#CreateSubnetGroup':
    post:
      operationId: CreateSubnetGroup
      description: Creates a new subnet group.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateSubnetGroupResponse'
        '480':
          description: SubnetGroupAlreadyExistsFault
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubnetGroupAlreadyExistsFault'
        '481':
          description: SubnetGroupQuotaExceededFault
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubnetGroupQuotaExceededFault'
        '482':
          description: SubnetQuotaExceededFault
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubnetQuotaExceededFault'
        '483':
          description: InvalidSubnet
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidSubnet'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSubnetGroupRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DecreaseReplicationFactor':
    post:
      operationId: DecreaseReplicationFactor
      description: '<p>Removes one or more nodes from a DAX cluster.</p> <note> <p>You cannot use <code>DecreaseReplicationFactor</code> to remove the last node in a DAX cluster. If you need to do this, use <code>DeleteCluster</code> instead.</p> </note>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DecreaseReplicationFactorResponse'
        '480':
          description: ClusterNotFoundFault
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterNotFoundFault'
        '481':
          description: NodeNotFoundFault
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodeNotFoundFault'
        '482':
          description: InvalidClusterStateFault
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidClusterStateFault'
        '483':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '484':
          description: InvalidParameterCombinationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DecreaseReplicationFactorRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DeleteCluster':
    post:
      operationId: DeleteCluster
      description: 'Deletes a previously provisioned DAX cluster. <i>DeleteCluster</i> deletes all associated nodes, node endpoints and the DAX cluster itself. When you receive a successful response from this action, DAX immediately begins deleting the cluster; you cannot cancel or revert this action.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteClusterResponse'
        '480':
          description: ClusterNotFoundFault
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterNotFoundFault'
        '481':
          description: InvalidClusterStateFault
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidClusterStateFault'
        '482':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '483':
          description: InvalidParameterCombinationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteClusterRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DeleteParameterGroup':
    post:
      operationId: DeleteParameterGroup
      description: Deletes the specified parameter group. You cannot delete a parameter group if it is associated with any DAX clusters.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteParameterGroupResponse'
        '480':
          description: InvalidParameterGroupStateFault
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterGroupStateFault'
        '481':
          description: ParameterGroupNotFoundFault
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParameterGroupNotFoundFault'
        '482':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '483':
          description: InvalidParameterCombinationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteParameterGroupRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DeleteSubnetGroup':
    post:
      operationId: DeleteSubnetGroup
      description: <p>Deletes a subnet group.</p> <note> <p>You cannot delete a subnet group if it is associated with any DAX clusters.</p> </note>
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteSubnetGroupResponse'
        '480':
          description: SubnetGroupInUseFault
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubnetGroupInUseFault'
        '481':
          description: SubnetGroupNotFoundFault
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubnetGroupNotFoundFault'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteSubnetGroupRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DescribeClusters':
    post:
      operationId: DescribeClusters
      description: '<p>Returns information about all provisioned DAX clusters if no cluster identifier is specified, or about a specific DAX cluster if a cluster identifier is supplied.</p> <p>If the cluster is in the CREATING state, only cluster level information will be displayed until all of the nodes are successfully provisioned.</p> <p>If the cluster is in the DELETING state, only cluster level information will be displayed.</p> <p>If nodes are currently being added to the DAX cluster, node endpoint information and creation time for the additional nodes will not be displayed until they are completely provisioned. When the DAX cluster state is <i>available</i>, the cluster is ready for use.</p> <p>If nodes are currently being removed from the DAX cluster, no endpoint information for the removed nodes is displayed.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeClustersResponse'
        '480':
          description: ClusterNotFoundFault
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterNotFoundFault'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: InvalidParameterCombinationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeClustersRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DescribeDefaultParameters':
    post:
      operationId: DescribeDefaultParameters
      description: Returns the default system parameter information for the DAX caching software.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeDefaultParametersResponse'
        '480':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '481':
          description: InvalidParameterCombinationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeDefaultParametersRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DescribeEvents':
    post:
      operationId: DescribeEvents
      description: '<p>Returns events related to DAX clusters and parameter groups. You can obtain events specific to a particular DAX cluster or parameter group by providing the name as a parameter.</p> <p>By default, only the events occurring within the last hour are returned; however, you can retrieve up to 14 days'' worth of events if necessary.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeEventsResponse'
        '480':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '481':
          description: InvalidParameterCombinationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeEventsRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DescribeParameterGroups':
    post:
      operationId: DescribeParameterGroups
      description: 'Returns a list of parameter group descriptions. If a parameter group name is specified, the list will contain only the descriptions for that group.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeParameterGroupsResponse'
        '480':
          description: ParameterGroupNotFoundFault
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParameterGroupNotFoundFault'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: InvalidParameterCombinationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeParameterGroupsRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DescribeParameters':
    post:
      operationId: DescribeParameters
      description: Returns the detailed parameter list for a particular parameter group.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeParametersResponse'
        '480':
          description: ParameterGroupNotFoundFault
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParameterGroupNotFoundFault'
        '481':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '482':
          description: InvalidParameterCombinationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeParametersRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DescribeSubnetGroups':
    post:
      operationId: DescribeSubnetGroups
      description: 'Returns a list of subnet group descriptions. If a subnet group name is specified, the list will contain only the description of that group.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeSubnetGroupsResponse'
        '480':
          description: SubnetGroupNotFoundFault
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubnetGroupNotFoundFault'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeSubnetGroupsRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#IncreaseReplicationFactor':
    post:
      operationId: IncreaseReplicationFactor
      description: Adds one or more nodes to a DAX cluster.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncreaseReplicationFactorResponse'
        '480':
          description: ClusterNotFoundFault
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterNotFoundFault'
        '481':
          description: InvalidClusterStateFault
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidClusterStateFault'
        '482':
          description: InsufficientClusterCapacityFault
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsufficientClusterCapacityFault'
        '483':
          description: InvalidVPCNetworkStateFault
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidVPCNetworkStateFault'
        '484':
          description: NodeQuotaForClusterExceededFault
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodeQuotaForClusterExceededFault'
        '485':
          description: NodeQuotaForCustomerExceededFault
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodeQuotaForCustomerExceededFault'
        '486':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '487':
          description: InvalidParameterCombinationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IncreaseReplicationFactorRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#ListTags':
    post:
      operationId: ListTags
      description: 'List all of the tags for a DAX cluster. You can call <code>ListTags</code> up to 10 times per second, per account.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsResponse'
        '480':
          description: ClusterNotFoundFault
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterNotFoundFault'
        '481':
          description: InvalidARNFault
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidARNFault'
        '482':
          description: InvalidClusterStateFault
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidClusterStateFault'
        '483':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '484':
          description: InvalidParameterCombinationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListTagsRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#RebootNode':
    post:
      operationId: RebootNode
      description: 'Reboots a single node of a DAX cluster. The reboot action takes place as soon as possible. During the reboot, the node status is set to REBOOTING.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RebootNodeResponse'
        '480':
          description: ClusterNotFoundFault
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterNotFoundFault'
        '481':
          description: NodeNotFoundFault
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodeNotFoundFault'
        '482':
          description: InvalidClusterStateFault
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidClusterStateFault'
        '483':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '484':
          description: InvalidParameterCombinationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RebootNodeRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#TagResource':
    post:
      operationId: TagResource
      description: 'Associates a set of tags with a DAX resource. You can call <code>TagResource</code> up to 5 times per second, per account. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResourceResponse'
        '480':
          description: ClusterNotFoundFault
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterNotFoundFault'
        '481':
          description: TagQuotaPerResourceExceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagQuotaPerResourceExceeded'
        '482':
          description: InvalidARNFault
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidARNFault'
        '483':
          description: InvalidClusterStateFault
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidClusterStateFault'
        '484':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '485':
          description: InvalidParameterCombinationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagResourceRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#UntagResource':
    post:
      operationId: UntagResource
      description: 'Removes the association of tags from a DAX resource. You can call <code>UntagResource</code> up to 5 times per second, per account. '
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UntagResourceResponse'
        '480':
          description: ClusterNotFoundFault
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterNotFoundFault'
        '481':
          description: InvalidARNFault
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidARNFault'
        '482':
          description: TagNotFoundFault
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagNotFoundFault'
        '483':
          description: InvalidClusterStateFault
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidClusterStateFault'
        '484':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '485':
          description: InvalidParameterCombinationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UntagResourceRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#UpdateCluster':
    post:
      operationId: UpdateCluster
      description: Modifies the settings for a DAX cluster. You can use this action to change one or more cluster configuration parameters by specifying the parameters and the new values.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateClusterResponse'
        '480':
          description: InvalidClusterStateFault
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidClusterStateFault'
        '481':
          description: ClusterNotFoundFault
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterNotFoundFault'
        '482':
          description: InvalidParameterGroupStateFault
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterGroupStateFault'
        '483':
          description: ParameterGroupNotFoundFault
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParameterGroupNotFoundFault'
        '484':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '485':
          description: InvalidParameterCombinationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateClusterRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#UpdateParameterGroup':
    post:
      operationId: UpdateParameterGroup
      description: Modifies the parameters of a parameter group. You can modify up to 20 parameters in a single request by submitting a list parameter name and value pairs.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateParameterGroupResponse'
        '480':
          description: InvalidParameterGroupStateFault
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterGroupStateFault'
        '481':
          description: ParameterGroupNotFoundFault
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParameterGroupNotFoundFault'
        '482':
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
        '483':
          description: InvalidParameterCombinationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterCombinationException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateParameterGroupRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#UpdateSubnetGroup':
    post:
      operationId: UpdateSubnetGroup
      description: Modifies an existing subnet group.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateSubnetGroupResponse'
        '480':
          description: SubnetGroupNotFoundFault
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubnetGroupNotFoundFault'
        '481':
          description: SubnetQuotaExceededFault
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubnetQuotaExceededFault'
        '482':
          description: SubnetInUse
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubnetInUse'
        '483':
          description: InvalidSubnet
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidSubnet'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSubnetGroupRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
components:
  schemas:
    AvailabilityZoneList:
      type: array
      items:
        $ref: '#/components/schemas/String'
    AwsQueryErrorMessage:
      type: string
    ChangeType:
      type: string
      enum:
        - IMMEDIATE
        - REQUIRES_REBOOT
    Cluster:
      type: object
      properties:
        ClusterName:
          $ref: '#/components/schemas/String'
        Description:
          $ref: '#/components/schemas/String'
        ClusterArn:
          $ref: '#/components/schemas/String'
        TotalNodes:
          $ref: '#/components/schemas/IntegerOptional'
        ActiveNodes:
          $ref: '#/components/schemas/IntegerOptional'
        NodeType:
          $ref: '#/components/schemas/String'
        Status:
          $ref: '#/components/schemas/String'
        ClusterDiscoveryEndpoint:
          $ref: '#/components/schemas/Endpoint'
        NodeIdsToRemove:
          $ref: '#/components/schemas/NodeIdentifierList'
        Nodes:
          $ref: '#/components/schemas/NodeList'
        PreferredMaintenanceWindow:
          $ref: '#/components/schemas/String'
        NotificationConfiguration:
          $ref: '#/components/schemas/NotificationConfiguration'
        SubnetGroup:
          $ref: '#/components/schemas/String'
        SecurityGroups:
          $ref: '#/components/schemas/SecurityGroupMembershipList'
        IamRoleArn:
          $ref: '#/components/schemas/String'
        ParameterGroup:
          $ref: '#/components/schemas/ParameterGroupStatus'
      description: Contains all of the attributes of a specific DAX cluster.
    ClusterAlreadyExistsFault:
      type: object
      properties: {}
      description: You already have a DAX cluster with the given identifier.
    ClusterList:
      type: array
      items:
        $ref: '#/components/schemas/Cluster'
    ClusterNameList:
      type: array
      items:
        $ref: '#/components/schemas/String'
    ClusterNotFoundFault:
      type: object
      properties: {}
      description: The requested cluster ID does not refer to an existing DAX cluster.
    ClusterQuotaForCustomerExceededFault:
      type: object
      properties: {}
      description: You have attempted to exceed the maximum number of DAX clusters for your AWS account.
    CreateClusterRequest:
      type: object
      required:
        - ClusterName
        - NodeType
        - ReplicationFactor
        - IamRoleArn
      properties:
        ClusterName:
          $ref: '#/components/schemas/String'
        NodeType:
          $ref: '#/components/schemas/String'
        Description:
          $ref: '#/components/schemas/String'
        ReplicationFactor:
          $ref: '#/components/schemas/Integer'
        AvailabilityZones:
          $ref: '#/components/schemas/AvailabilityZoneList'
        SubnetGroupName:
          $ref: '#/components/schemas/String'
        SecurityGroupIds:
          $ref: '#/components/schemas/SecurityGroupIdentifierList'
        PreferredMaintenanceWindow:
          $ref: '#/components/schemas/String'
        NotificationTopicArn:
          $ref: '#/components/schemas/String'
        IamRoleArn:
          $ref: '#/components/schemas/String'
        ParameterGroupName:
          $ref: '#/components/schemas/String'
        Tags:
          $ref: '#/components/schemas/TagList'
    CreateClusterResponse:
      type: object
      properties:
        Cluster:
          $ref: '#/components/schemas/Cluster'
    CreateParameterGroupRequest:
      type: object
      required:
        - ParameterGroupName
      properties:
        ParameterGroupName:
          $ref: '#/components/schemas/String'
        Description:
          $ref: '#/components/schemas/String'
    CreateParameterGroupResponse:
      type: object
      properties:
        ParameterGroup:
          $ref: '#/components/schemas/ParameterGroup'
    CreateSubnetGroupRequest:
      type: object
      required:
        - SubnetGroupName
        - SubnetIds
      properties:
        SubnetGroupName:
          $ref: '#/components/schemas/String'
        Description:
          $ref: '#/components/schemas/String'
        SubnetIds:
          $ref: '#/components/schemas/SubnetIdentifierList'
    CreateSubnetGroupResponse:
      type: object
      properties:
        SubnetGroup:
          $ref: '#/components/schemas/SubnetGroup'
    DecreaseReplicationFactorRequest:
      type: object
      required:
        - ClusterName
        - NewReplicationFactor
      properties:
        ClusterName:
          $ref: '#/components/schemas/String'
        NewReplicationFactor:
          $ref: '#/components/schemas/Integer'
        AvailabilityZones:
          $ref: '#/components/schemas/AvailabilityZoneList'
        NodeIdsToRemove:
          $ref: '#/components/schemas/NodeIdentifierList'
    DecreaseReplicationFactorResponse:
      type: object
      properties:
        Cluster:
          $ref: '#/components/schemas/Cluster'
    DeleteClusterRequest:
      type: object
      required:
        - ClusterName
      properties:
        ClusterName:
          $ref: '#/components/schemas/String'
    DeleteClusterResponse:
      type: object
      properties:
        Cluster:
          $ref: '#/components/schemas/Cluster'
    DeleteParameterGroupRequest:
      type: object
      required:
        - ParameterGroupName
      properties:
        ParameterGroupName:
          $ref: '#/components/schemas/String'
    DeleteParameterGroupResponse:
      type: object
      properties:
        DeletionMessage:
          $ref: '#/components/schemas/String'
    DeleteSubnetGroupRequest:
      type: object
      required:
        - SubnetGroupName
      properties:
        SubnetGroupName:
          $ref: '#/components/schemas/String'
    DeleteSubnetGroupResponse:
      type: object
      properties:
        DeletionMessage:
          $ref: '#/components/schemas/String'
    DescribeClustersRequest:
      type: object
      properties:
        ClusterNames:
          $ref: '#/components/schemas/ClusterNameList'
        MaxResults:
          $ref: '#/components/schemas/IntegerOptional'
        NextToken:
          $ref: '#/components/schemas/String'
    DescribeClustersResponse:
      type: object
      properties:
        NextToken:
          $ref: '#/components/schemas/String'
        Clusters:
          $ref: '#/components/schemas/ClusterList'
    DescribeDefaultParametersRequest:
      type: object
      properties:
        MaxResults:
          $ref: '#/components/schemas/IntegerOptional'
        NextToken:
          $ref: '#/components/schemas/String'
    DescribeDefaultParametersResponse:
      type: object
      properties:
        NextToken:
          $ref: '#/components/schemas/String'
        Parameters:
          $ref: '#/components/schemas/ParameterList'
    DescribeEventsRequest:
      type: object
      properties:
        SourceName:
          $ref: '#/components/schemas/String'
        SourceType:
          $ref: '#/components/schemas/SourceType'
        StartTime:
          $ref: '#/components/schemas/TStamp'
        EndTime:
          $ref: '#/components/schemas/TStamp'
        Duration:
          $ref: '#/components/schemas/IntegerOptional'
        MaxResults:
          $ref: '#/components/schemas/IntegerOptional'
        NextToken:
          $ref: '#/components/schemas/String'
    DescribeEventsResponse:
      type: object
      properties:
        NextToken:
          $ref: '#/components/schemas/String'
        Events:
          $ref: '#/components/schemas/EventList'
    DescribeParameterGroupsRequest:
      type: object
      properties:
        ParameterGroupNames:
          $ref: '#/components/schemas/ParameterGroupNameList'
        MaxResults:
          $ref: '#/components/schemas/IntegerOptional'
        NextToken:
          $ref: '#/components/schemas/String'
    DescribeParameterGroupsResponse:
      type: object
      properties:
        NextToken:
          $ref: '#/components/schemas/String'
        ParameterGroups:
          $ref: '#/components/schemas/ParameterGroupList'
    DescribeParametersRequest:
      type: object
      required:
        - ParameterGroupName
      properties:
        ParameterGroupName:
          $ref: '#/components/schemas/String'
        Source:
          $ref: '#/components/schemas/String'
        MaxResults:
          $ref: '#/components/schemas/IntegerOptional'
        NextToken:
          $ref: '#/components/schemas/String'
    DescribeParametersResponse:
      type: object
      properties:
        NextToken:
          $ref: '#/components/schemas/String'
        Parameters:
          $ref: '#/components/schemas/ParameterList'
    DescribeSubnetGroupsRequest:
      type: object
      properties:
        SubnetGroupNames:
          $ref: '#/components/schemas/SubnetGroupNameList'
        MaxResults:
          $ref: '#/components/schemas/IntegerOptional'
        NextToken:
          $ref: '#/components/schemas/String'
    DescribeSubnetGroupsResponse:
      type: object
      properties:
        NextToken:
          $ref: '#/components/schemas/String'
        SubnetGroups:
          $ref: '#/components/schemas/SubnetGroupList'
    Endpoint:
      type: object
      properties:
        Address:
          $ref: '#/components/schemas/String'
        Port:
          $ref: '#/components/schemas/Integer'
      description: 'Represents the information required for client programs to connect to the configuration endpoint for a DAX cluster, or to an individual node within the cluster.'
    Event:
      type: object
      properties:
        SourceName:
          $ref: '#/components/schemas/String'
        SourceType:
          $ref: '#/components/schemas/SourceType'
        Message:
          $ref: '#/components/schemas/String'
        Date:
          $ref: '#/components/schemas/TStamp'
      description: 'Represents a single occurrence of something interesting within the system. Some examples of events are creating a DAX cluster, adding or removing a node, or rebooting a node.'
    EventList:
      type: array
      items:
        $ref: '#/components/schemas/Event'
    IncreaseReplicationFactorRequest:
      type: object
      required:
        - ClusterName
        - NewReplicationFactor
      properties:
        ClusterName:
          $ref: '#/components/schemas/String'
        NewReplicationFactor:
          $ref: '#/components/schemas/Integer'
        AvailabilityZones:
          $ref: '#/components/schemas/AvailabilityZoneList'
    IncreaseReplicationFactorResponse:
      type: object
      properties:
        Cluster:
          $ref: '#/components/schemas/Cluster'
    InsufficientClusterCapacityFault:
      type: object
      properties: {}
      description: 'There are not enough system resources to create the cluster you requested (or to resize an already-existing cluster). '
    Integer:
      type: integer
    IntegerOptional:
      type: integer
    InvalidARNFault:
      type: object
      properties: {}
      description: The Amazon Resource Name (ARN) supplied in the request is not valid.
    InvalidClusterStateFault:
      type: object
      properties: {}
      description: The requested DAX cluster is not in the <i>available</i> state.
    InvalidParameterCombinationException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/AwsQueryErrorMessage'
      description: Two or more incompatible parameters were specified.
    InvalidParameterGroupStateFault:
      type: object
      properties: {}
      description: One or more parameters in a parameter group are in an invalid state.
    InvalidParameterValueException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/AwsQueryErrorMessage'
      description: The value for a parameter is invalid.
    InvalidSubnet:
      type: object
      properties: {}
      description: An invalid subnet identifier was specified.
    InvalidVPCNetworkStateFault:
      type: object
      properties: {}
      description: The VPC network is in an invalid state.
    IsModifiable:
      type: string
      enum:
        - 'TRUE'
        - 'FALSE'
        - CONDITIONAL
    KeyList:
      type: array
      items:
        $ref: '#/components/schemas/String'
    ListTagsRequest:
      type: object
      required:
        - ResourceName
      properties:
        ResourceName:
          $ref: '#/components/schemas/String'
        NextToken:
          $ref: '#/components/schemas/String'
    ListTagsResponse:
      type: object
      properties:
        Tags:
          $ref: '#/components/schemas/TagList'
        NextToken:
          $ref: '#/components/schemas/String'
    Node:
      type: object
      properties:
        NodeId:
          $ref: '#/components/schemas/String'
        Endpoint:
          $ref: '#/components/schemas/Endpoint'
        NodeCreateTime:
          $ref: '#/components/schemas/TStamp'
        AvailabilityZone:
          $ref: '#/components/schemas/String'
        NodeStatus:
          $ref: '#/components/schemas/String'
        ParameterGroupStatus:
          $ref: '#/components/schemas/String'
      description: Represents an individual node within a DAX cluster.
    NodeIdentifierList:
      type: array
      items:
        $ref: '#/components/schemas/String'
    NodeList:
      type: array
      items:
        $ref: '#/components/schemas/Node'
    NodeNotFoundFault:
      type: object
      properties: {}
      description: None of the nodes in the cluster have the given node ID.
    NodeQuotaForClusterExceededFault:
      type: object
      properties: {}
      description: You have attempted to exceed the maximum number of nodes for a DAX cluster.
    NodeQuotaForCustomerExceededFault:
      type: object
      properties: {}
      description: You have attempted to exceed the maximum number of nodes for your AWS account.
    NodeTypeSpecificValue:
      type: object
      properties:
        NodeType:
          $ref: '#/components/schemas/String'
        Value:
          $ref: '#/components/schemas/String'
      description: Represents a parameter value that is applicable to a particular node type.
    NodeTypeSpecificValueList:
      type: array
      items:
        $ref: '#/components/schemas/NodeTypeSpecificValue'
    NotificationConfiguration:
      type: object
      properties:
        TopicArn:
          $ref: '#/components/schemas/String'
        TopicStatus:
          $ref: '#/components/schemas/String'
      description: Describes a notification topic and its status. Notification topics are used for publishing DAX events to subscribers using Amazon Simple Notification Service (SNS).
    Parameter:
      type: object
      properties:
        ParameterName:
          $ref: '#/components/schemas/String'
        ParameterType:
          $ref: '#/components/schemas/ParameterType'
        ParameterValue:
          $ref: '#/components/schemas/String'
        NodeTypeSpecificValues:
          $ref: '#/components/schemas/NodeTypeSpecificValueList'
        Description:
          $ref: '#/components/schemas/String'
        Source:
          $ref: '#/components/schemas/String'
        DataType:
          $ref: '#/components/schemas/String'
        AllowedValues:
          $ref: '#/components/schemas/String'
        IsModifiable:
          $ref: '#/components/schemas/IsModifiable'
        ChangeType:
          $ref: '#/components/schemas/ChangeType'
      description: Describes an individual setting that controls some aspect of DAX behavior.
    ParameterGroup:
      type: object
      properties:
        ParameterGroupName:
          $ref: '#/components/schemas/String'
        Description:
          $ref: '#/components/schemas/String'
      description: A named set of parameters that are applied to all of the nodes in a DAX cluster.
    ParameterGroupAlreadyExistsFault:
      type: object
      properties: {}
      description: The specified parameter group already exists.
    ParameterGroupList:
      type: array
      items:
        $ref: '#/components/schemas/ParameterGroup'
    ParameterGroupNameList:
      type: array
      items:
        $ref: '#/components/schemas/String'
    ParameterGroupNotFoundFault:
      type: object
      properties: {}
      description: The specified parameter group does not exist.
    ParameterGroupQuotaExceededFault:
      type: object
      properties: {}
      description: You have attempted to exceed the maximum number of parameter groups.
    ParameterGroupStatus:
      type: object
      properties:
        ParameterGroupName:
          $ref: '#/components/schemas/String'
        ParameterApplyStatus:
          $ref: '#/components/schemas/String'
        NodeIdsToReboot:
          $ref: '#/components/schemas/NodeIdentifierList'
      description: The status of a parameter group.
    ParameterList:
      type: array
      items:
        $ref: '#/components/schemas/Parameter'
    ParameterNameValue:
      type: object
      properties:
        ParameterName:
          $ref: '#/components/schemas/String'
        ParameterValue:
          $ref: '#/components/schemas/String'
      description: An individual DAX parameter.
    ParameterNameValueList:
      type: array
      items:
        $ref: '#/components/schemas/ParameterNameValue'
    ParameterType:
      type: string
      enum:
        - DEFAULT
        - NODE_TYPE_SPECIFIC
    RebootNodeRequest:
      type: object
      required:
        - ClusterName
        - NodeId
      properties:
        ClusterName:
          $ref: '#/components/schemas/String'
        NodeId:
          $ref: '#/components/schemas/String'
    RebootNodeResponse:
      type: object
      properties:
        Cluster:
          $ref: '#/components/schemas/Cluster'
    SecurityGroupIdentifierList:
      type: array
      items:
        $ref: '#/components/schemas/String'
    SecurityGroupMembership:
      type: object
      properties:
        SecurityGroupIdentifier:
          $ref: '#/components/schemas/String'
        Status:
          $ref: '#/components/schemas/String'
      description: An individual VPC security group and its status.
    SecurityGroupMembershipList:
      type: array
      items:
        $ref: '#/components/schemas/SecurityGroupMembership'
    SourceType:
      type: string
      enum:
        - CLUSTER
        - PARAMETER_GROUP
        - SUBNET_GROUP
    String:
      type: string
    Subnet:
      type: object
      properties:
        SubnetIdentifier:
          $ref: '#/components/schemas/String'
        SubnetAvailabilityZone:
          $ref: '#/components/schemas/String'
      description: Represents the subnet associated with a DAX cluster. This parameter refers to subnets defined in Amazon Virtual Private Cloud (Amazon VPC) and used with DAX.
    SubnetGroup:
      type: object
      properties:
        SubnetGroupName:
          $ref: '#/components/schemas/String'
        Description:
          $ref: '#/components/schemas/String'
        VpcId:
          $ref: '#/components/schemas/String'
        Subnets:
          $ref: '#/components/schemas/SubnetList'
      description: '<p>Represents the output of one of the following actions:</p> <ul> <li> <p> <i>CreateSubnetGroup</i> </p> </li> <li> <p> <i>ModifySubnetGroup</i> </p> </li> </ul>'
    SubnetGroupAlreadyExistsFault:
      type: object
      properties: {}
      description: The specified subnet group already exists.
    SubnetGroupInUseFault:
      type: object
      properties: {}
      description: The specified subnet group is currently in use.
    SubnetGroupList:
      type: array
      items:
        $ref: '#/components/schemas/SubnetGroup'
    SubnetGroupNameList:
      type: array
      items:
        $ref: '#/components/schemas/String'
    SubnetGroupNotFoundFault:
      type: object
      properties: {}
      description: The requested subnet group name does not refer to an existing subnet group.
    SubnetGroupQuotaExceededFault:
      type: object
      properties: {}
      description: The request cannot be processed because it would exceed the allowed number of subnets in a subnet group.
    SubnetIdentifierList:
      type: array
      items:
        $ref: '#/components/schemas/String'
    SubnetInUse:
      type: object
      properties: {}
      description: The requested subnet is being used by another subnet group.
    SubnetList:
      type: array
      items:
        $ref: '#/components/schemas/Subnet'
    SubnetQuotaExceededFault:
      type: object
      properties: {}
      description: The request cannot be processed because it would exceed the allowed number of subnets in a subnet group.
    TStamp:
      type: string
      format: date-time
    Tag:
      type: object
      properties:
        Key:
          $ref: '#/components/schemas/String'
        Value:
          $ref: '#/components/schemas/String'
      description: '<p>A description of a tag. Every tag is a key-value pair. You can add up to 50 tags to a single DAX cluster.</p> <p>AWS-assigned tag names and values are automatically assigned the <code>aws:</code> prefix, which the user cannot assign. AWS-assigned tag names do not count towards the tag limit of 50. User-assigned tag names have the prefix <code>user:</code>.</p> <p>You cannot backdate the application of a tag.</p>'
    TagList:
      type: array
      items:
        $ref: '#/components/schemas/Tag'
    TagNotFoundFault:
      type: object
      properties: {}
      description: The tag does not exist.
    TagQuotaPerResourceExceeded:
      type: object
      properties: {}
      description: You have exceeded the maximum number of tags for this DAX cluster.
    TagResourceRequest:
      type: object
      required:
        - ResourceName
        - Tags
      properties:
        ResourceName:
          $ref: '#/components/schemas/String'
        Tags:
          $ref: '#/components/schemas/TagList'
    TagResourceResponse:
      type: object
      properties:
        Tags:
          $ref: '#/components/schemas/TagList'
    UntagResourceRequest:
      type: object
      required:
        - ResourceName
        - TagKeys
      properties:
        ResourceName:
          $ref: '#/components/schemas/String'
        TagKeys:
          $ref: '#/components/schemas/KeyList'
    UntagResourceResponse:
      type: object
      properties:
        Tags:
          $ref: '#/components/schemas/TagList'
    UpdateClusterRequest:
      type: object
      required:
        - ClusterName
      properties:
        ClusterName:
          $ref: '#/components/schemas/String'
        Description:
          $ref: '#/components/schemas/String'
        PreferredMaintenanceWindow:
          $ref: '#/components/schemas/String'
        NotificationTopicArn:
          $ref: '#/components/schemas/String'
        NotificationTopicStatus:
          $ref: '#/components/schemas/String'
        ParameterGroupName:
          $ref: '#/components/schemas/String'
        SecurityGroupIds:
          $ref: '#/components/schemas/SecurityGroupIdentifierList'
    UpdateClusterResponse:
      type: object
      properties:
        Cluster:
          $ref: '#/components/schemas/Cluster'
    UpdateParameterGroupRequest:
      type: object
      required:
        - ParameterGroupName
        - ParameterNameValues
      properties:
        ParameterGroupName:
          $ref: '#/components/schemas/String'
        ParameterNameValues:
          $ref: '#/components/schemas/ParameterNameValueList'
    UpdateParameterGroupResponse:
      type: object
      properties:
        ParameterGroup:
          $ref: '#/components/schemas/ParameterGroup'
    UpdateSubnetGroupRequest:
      type: object
      required:
        - SubnetGroupName
      properties:
        SubnetGroupName:
          $ref: '#/components/schemas/String'
        Description:
          $ref: '#/components/schemas/String'
        SubnetIds:
          $ref: '#/components/schemas/SubnetIdentifierList'
    UpdateSubnetGroupResponse:
      type: object
      properties:
        SubnetGroup:
          $ref: '#/components/schemas/SubnetGroup'
  parameters:
    Action:
      name: Action
      in: header
      required: true
      schema:
        type: string
    Version:
      name: Version
      in: header
      required: true
      schema:
        type: string
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      required: false
      schema:
        type: string
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      required: false
      schema:
        type: string
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      required: false
      schema:
        type: string
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      required: false
      schema:
        type: string
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      required: false
      schema:
        type: string
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      required: false
      schema:
        type: string
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      required: false
      schema:
        type: string
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
