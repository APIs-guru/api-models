openapi: 3.0.0
servers:
  - url: 'http://rds.amazonaws.com/'
info:
  version: '2014-10-31'
  x-release: v4
  title: Amazon Relational Database Service
  description: '<fullname>Amazon Relational Database Service</fullname> <p> </p> <p>Amazon Relational Database Service (Amazon RDS) is a web service that makes it easier to set up, operate, and scale a relational database in the cloud. It provides cost-efficient, resizable capacity for an industry-standard relational database and manages common database administration tasks, freeing up developers to focus on what makes their applications and businesses unique.</p> <p>Amazon RDS gives you access to the capabilities of a MySQL, MariaDB, PostgreSQL, Microsoft SQL Server, Oracle, or Amazon Aurora database server. These capabilities mean that the code, applications, and tools you already use today with your existing databases work with Amazon RDS without modification. Amazon RDS automatically backs up your database and maintains the database software that powers your DB instance. Amazon RDS is flexible: you can scale your database instance''s compute resources and storage capacity to meet your application''s demand. As with all Amazon Web Services, there are no up-front investments, and you pay only for the resources you use.</p> <p>This interface reference for Amazon RDS contains documentation for a programming or command line interface you can use to manage Amazon RDS. Note that Amazon RDS is asynchronous, which means that some interfaces might require techniques such as polling or callback functions to determine when a command has been applied. In this reference, the parameter descriptions indicate whether a command is applied immediately, on the next instance reboot, or during the maintenance window. The reference structure is as follows, and we list following some related topics from the user guide.</p> <p> <b>Amazon RDS API Reference</b> </p> <ul> <li> <p>For the alphabetical list of API actions, see <a href="http://docs.aws.amazon.com/AmazonRDS/latest/APIReference/API_Operations.html">API Actions</a>.</p> </li> <li> <p>For the alphabetical list of data types, see <a href="http://docs.aws.amazon.com/AmazonRDS/latest/APIReference/API_Types.html">Data Types</a>.</p> </li> <li> <p>For a list of common query parameters, see <a href="http://docs.aws.amazon.com/AmazonRDS/latest/APIReference/CommonParameters.html">Common Parameters</a>.</p> </li> <li> <p>For descriptions of the error codes, see <a href="http://docs.aws.amazon.com/AmazonRDS/latest/APIReference/CommonErrors.html">Common Errors</a>.</p> </li> </ul> <p> <b>Amazon RDS User Guide</b> </p> <ul> <li> <p>For a summary of the Amazon RDS interfaces, see <a href="http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Welcome.html#Welcome.Interfaces">Available RDS Interfaces</a>.</p> </li> <li> <p>For more information about how to use the Query API, see <a href="http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Using_the_Query_API.html">Using the Query API</a>.</p> </li> </ul>'
  x-logo:
    url: 'https://media.amazonwebservices.com/blog/2007/big_pbaws_logo_300px.jpg'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: rds
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/rds-2014-10-31.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-direct: true
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://aws.amazon.com/rds/'
x-hasEquivalentPaths: true
security:
  - hmac: []
paths:
  /:
    post:
      operationId: AddRoleToDBCluster
      description: 'Associates an Identity and Access Management (IAM) role from an Aurora DB cluster. For more information, see <a href="http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Aurora.Authorizing.AWSServices.html">Authorizing Amazon Aurora to Access Other AWS Services On Your Behalf</a>.'
      responses:
        '200':
          description: Success
        '480':
          description: DBClusterNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBClusterNotFoundFault'
        '481':
          description: DBClusterRoleAlreadyExistsFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBClusterRoleAlreadyExistsFault'
        '482':
          description: InvalidDBClusterStateFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidDBClusterStateFault'
        '483':
          description: DBClusterRoleQuotaExceededFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBClusterRoleQuotaExceededFault'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddRoleToDBClusterMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#AddSourceIdentifierToSubscription':
    post:
      operationId: AddSourceIdentifierToSubscription
      description: Adds a source identifier to an existing RDS event notification subscription.
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AddSourceIdentifierToSubscriptionResult'
        '480':
          description: SubscriptionNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SubscriptionNotFoundFault'
        '481':
          description: SourceNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SourceNotFoundFault'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddSourceIdentifierToSubscriptionMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#AddTagsToResource':
    post:
      operationId: AddTagsToResource
      description: '<p>Adds metadata tags to an Amazon RDS resource. These tags can also be used with cost allocation reporting to track cost associated with Amazon RDS resources, or used in a Condition statement in an IAM policy for Amazon RDS.</p> <p>For an overview on tagging Amazon RDS resources, see <a href="http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Overview.Tagging.html">Tagging Amazon RDS Resources</a>.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: DBInstanceNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBInstanceNotFoundFault'
        '481':
          description: DBSnapshotNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBSnapshotNotFoundFault'
        '482':
          description: DBClusterNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBClusterNotFoundFault'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddTagsToResourceMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#ApplyPendingMaintenanceAction':
    post:
      operationId: ApplyPendingMaintenanceAction
      description: 'Applies a pending maintenance action to a resource (for example, to a DB instance).'
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApplyPendingMaintenanceActionResult'
        '480':
          description: ResourceNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResourceNotFoundFault'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplyPendingMaintenanceActionMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#AuthorizeDBSecurityGroupIngress':
    post:
      operationId: AuthorizeDBSecurityGroupIngress
      description: '<p>Enables ingress to a DBSecurityGroup using one of two forms of authorization. First, EC2 or VPC security groups can be added to the DBSecurityGroup if the application using the database is running on EC2 or VPC instances. Second, IP ranges are available if the application accessing your database is running on the Internet. Required parameters for this API are one of CIDR range, EC2SecurityGroupId for VPC, or (EC2SecurityGroupOwnerId and either EC2SecurityGroupName or EC2SecurityGroupId for non-VPC).</p> <note> <p>You cannot authorize ingress from an EC2 security group in one region to an Amazon RDS DB instance in another. You cannot authorize ingress from a VPC security group in one VPC to an Amazon RDS DB instance in another.</p> </note> <p>For an overview of CIDR ranges, go to the <a href="http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing">Wikipedia Tutorial</a>. </p>'
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AuthorizeDBSecurityGroupIngressResult'
        '480':
          description: DBSecurityGroupNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBSecurityGroupNotFoundFault'
        '481':
          description: InvalidDBSecurityGroupStateFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidDBSecurityGroupStateFault'
        '482':
          description: AuthorizationAlreadyExistsFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AuthorizationAlreadyExistsFault'
        '483':
          description: AuthorizationQuotaExceededFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AuthorizationQuotaExceededFault'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthorizeDBSecurityGroupIngressMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#CopyDBClusterParameterGroup':
    post:
      operationId: CopyDBClusterParameterGroup
      description: Copies the specified DB cluster parameter group.
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CopyDBClusterParameterGroupResult'
        '480':
          description: DBParameterGroupNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBParameterGroupNotFoundFault'
        '481':
          description: DBParameterGroupQuotaExceededFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBParameterGroupQuotaExceededFault'
        '482':
          description: DBParameterGroupAlreadyExistsFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBParameterGroupAlreadyExistsFault'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CopyDBClusterParameterGroupMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#CopyDBClusterSnapshot':
    post:
      operationId: CopyDBClusterSnapshot
      description: '<p>Copies a snapshot of a DB cluster.</p> <p>To copy a DB cluster snapshot from a shared manual DB cluster snapshot, <code>SourceDBClusterSnapshotIdentifier</code> must be the Amazon Resource Name (ARN) of the shared DB cluster snapshot.</p> <p>You can copy an encrypted DB cluster snapshot from another AWS region. In that case, the region where you call the <code>CopyDBClusterSnapshot</code> action is the destination region for the encrypted DB cluster snapshot to be copied to. To copy an encrypted DB cluster snapshot from another region, you must provide the following values:</p> <ul> <li> <p> <code>KmsKeyId</code> - The AWS Key Management System (KMS) key identifier for the key to use to encrypt the copy of the DB cluster snapshot in the destination region.</p> </li> <li> <p> <code>PreSignedUrl</code> - A URL that contains a Signature Version 4 signed request for the <code>CopyDBClusterSnapshot</code> action to be called in the source region where the DB cluster snapshot will be copied from. The pre-signed URL must be a valid request for the <code>CopyDBClusterSnapshot</code> API action that can be executed in the source region that contains the encrypted DB cluster snapshot to be copied.</p> <p>The pre-signed URL request must contain the following parameter values:</p> <ul> <li> <p> <code>KmsKeyId</code> - The KMS key identifier for the key to use to encrypt the copy of the DB cluster snapshot in the destination region. This is the same identifier for both the <code>CopyDBClusterSnapshot</code> action that is called in the destination region, and the action contained in the pre-signed URL.</p> </li> <li> <p> <code>DestinationRegion</code> - The name of the region that the DB cluster snapshot will be created in.</p> </li> <li> <p> <code>SourceDBClusterSnapshotIdentifier</code> - The DB cluster snapshot identifier for the encrypted DB cluster snapshot to be copied. This identifier must be in the Amazon Resource Name (ARN) format for the source region. For example, if you are copying an encrypted DB cluster snapshot from the us-west-2 region, then your <code>SourceDBClusterSnapshotIdentifier</code> looks like the following example: <code>arn:aws:rds:us-west-2:123456789012:cluster-snapshot:aurora-cluster1-snapshot-20161115</code>.</p> </li> </ul> <p>To learn how to generate a Signature Version 4 signed request, see <a href="http://docs.aws.amazon.com/AmazonS3/latest/API/sigv4-query-string-auth.html"> Authenticating Requests: Using Query Parameters (AWS Signature Version 4)</a> and <a href="http://docs.aws.amazon.com/general/latest/gr/signature-version-4.html"> Signature Version 4 Signing Process</a>.</p> </li> <li> <p> <code>TargetDBClusterSnapshotIdentifier</code> - The identifier for the new copy of the DB cluster snapshot in the destination region.</p> </li> <li> <p> <code>SourceDBClusterSnapshotIdentifier</code> - The DB cluster snapshot identifier for the encrypted DB cluster snapshot to be copied. This identifier must be in the ARN format for the source region and is the same value as the <code>SourceDBClusterSnapshotIdentifier</code> in the pre-signed URL. </p> </li> </ul> <p>To cancel the copy operation once it is in progress, delete the target DB cluster snapshot identified by <code>TargetDBClusterSnapshotIdentifier</code> while that DB cluster snapshot is in "copying" status.</p> <p>For more information on copying encrypted DB cluster snapshots from one region to another, see <a href="http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_CopySnapshot.html#USER_CopyDBClusterSnapshot.CrossRegion"> Copying a DB Cluster Snapshot in the Same Account, Either in the Same Region or Across Regions</a> in the Amazon RDS User Guide.</p> <p>For more information on Amazon Aurora, see <a href="http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Aurora.html">Aurora on Amazon RDS</a> in the <i>Amazon RDS User Guide.</i> </p>'
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CopyDBClusterSnapshotResult'
        '480':
          description: DBClusterSnapshotAlreadyExistsFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBClusterSnapshotAlreadyExistsFault'
        '481':
          description: DBClusterSnapshotNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBClusterSnapshotNotFoundFault'
        '482':
          description: InvalidDBClusterStateFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidDBClusterStateFault'
        '483':
          description: InvalidDBClusterSnapshotStateFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidDBClusterSnapshotStateFault'
        '484':
          description: SnapshotQuotaExceededFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SnapshotQuotaExceededFault'
        '485':
          description: KMSKeyNotAccessibleFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/KMSKeyNotAccessibleFault'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CopyDBClusterSnapshotMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#CopyDBParameterGroup':
    post:
      operationId: CopyDBParameterGroup
      description: Copies the specified DB parameter group.
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CopyDBParameterGroupResult'
        '480':
          description: DBParameterGroupNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBParameterGroupNotFoundFault'
        '481':
          description: DBParameterGroupAlreadyExistsFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBParameterGroupAlreadyExistsFault'
        '482':
          description: DBParameterGroupQuotaExceededFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBParameterGroupQuotaExceededFault'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CopyDBParameterGroupMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#CopyDBSnapshot':
    post:
      operationId: CopyDBSnapshot
      description: '<p>Copies the specified DB snapshot. The source DB snapshot must be in the "available" state.</p> <p>You can copy a snapshot from one AWS region to another. In that case, the region where you call the <code>CopyDBSnapshot</code> action is the destination region for the DB snapshot copy. </p> <p>You cannot copy an encrypted, shared DB snapshot from one AWS region to another.</p> <p>For more information about copying snapshots, see <a href="http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_CopyDBSnapshot.html">Copying a DB Snapshot</a> in the Amazon RDS User Guide. </p>'
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CopyDBSnapshotResult'
        '480':
          description: DBSnapshotAlreadyExistsFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBSnapshotAlreadyExistsFault'
        '481':
          description: DBSnapshotNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBSnapshotNotFoundFault'
        '482':
          description: InvalidDBSnapshotStateFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidDBSnapshotStateFault'
        '483':
          description: SnapshotQuotaExceededFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SnapshotQuotaExceededFault'
        '484':
          description: KMSKeyNotAccessibleFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/KMSKeyNotAccessibleFault'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CopyDBSnapshotMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#CopyOptionGroup':
    post:
      operationId: CopyOptionGroup
      description: Copies the specified option group.
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CopyOptionGroupResult'
        '480':
          description: OptionGroupAlreadyExistsFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OptionGroupAlreadyExistsFault'
        '481':
          description: OptionGroupNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OptionGroupNotFoundFault'
        '482':
          description: OptionGroupQuotaExceededFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OptionGroupQuotaExceededFault'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CopyOptionGroupMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#CreateDBCluster':
    post:
      operationId: CreateDBCluster
      description: '<p>Creates a new Amazon Aurora DB cluster.</p> <p>You can use the <code>ReplicationSourceIdentifier</code> parameter to create the DB cluster as a Read Replica of another DB cluster or Amazon RDS MySQL DB instance. For cross-region replication where the DB cluster identified by <code>ReplicationSourceIdentifier</code> is encrypted, you must also specify the <code>PreSignedUrl</code> parameter.</p> <p>For more information on Amazon Aurora, see <a href="http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Aurora.html">Aurora on Amazon RDS</a> in the <i>Amazon RDS User Guide.</i> </p>'
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CreateDBClusterResult'
        '480':
          description: DBClusterAlreadyExistsFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBClusterAlreadyExistsFault'
        '481':
          description: InsufficientStorageClusterCapacityFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InsufficientStorageClusterCapacityFault'
        '482':
          description: DBClusterQuotaExceededFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBClusterQuotaExceededFault'
        '483':
          description: StorageQuotaExceededFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StorageQuotaExceededFault'
        '484':
          description: DBSubnetGroupNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBSubnetGroupNotFoundFault'
        '485':
          description: InvalidVPCNetworkStateFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidVPCNetworkStateFault'
        '486':
          description: InvalidDBClusterStateFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidDBClusterStateFault'
        '487':
          description: InvalidDBSubnetGroupStateFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidDBSubnetGroupStateFault'
        '488':
          description: InvalidSubnet
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidSubnet'
        '489':
          description: InvalidDBInstanceStateFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidDBInstanceStateFault'
        '490':
          description: DBClusterParameterGroupNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBClusterParameterGroupNotFoundFault'
        '491':
          description: KMSKeyNotAccessibleFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/KMSKeyNotAccessibleFault'
        '492':
          description: DBClusterNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBClusterNotFoundFault'
        '493':
          description: DBInstanceNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBInstanceNotFoundFault'
        '494':
          description: DBSubnetGroupDoesNotCoverEnoughAZs
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBSubnetGroupDoesNotCoverEnoughAZs'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDBClusterMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#CreateDBClusterParameterGroup':
    post:
      operationId: CreateDBClusterParameterGroup
      description: '<p>Creates a new DB cluster parameter group.</p> <p>Parameters in a DB cluster parameter group apply to all of the instances in a DB cluster.</p> <p> A DB cluster parameter group is initially created with the default parameters for the database engine used by instances in the DB cluster. To provide custom values for any of the parameters, you must modify the group after creating it using <a>ModifyDBClusterParameterGroup</a>. Once you''ve created a DB cluster parameter group, you need to associate it with your DB cluster using <a>ModifyDBCluster</a>. When you associate a new DB cluster parameter group with a running DB cluster, you need to reboot the DB instances in the DB cluster without failover for the new DB cluster parameter group and associated settings to take effect. </p> <important> <p>After you create a DB cluster parameter group, you should wait at least 5 minutes before creating your first DB cluster that uses that DB cluster parameter group as the default parameter group. This allows Amazon RDS to fully complete the create action before the DB cluster parameter group is used as the default for a new DB cluster. This is especially important for parameters that are critical when creating the default database for a DB cluster, such as the character set for the default database defined by the <code>character_set_database</code> parameter. You can use the <i>Parameter Groups</i> option of the <a href="https://console.aws.amazon.com/rds/">Amazon RDS console</a> or the <a>DescribeDBClusterParameters</a> command to verify that your DB cluster parameter group has been created or modified.</p> </important> <p>For more information on Amazon Aurora, see <a href="http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Aurora.html">Aurora on Amazon RDS</a> in the <i>Amazon RDS User Guide.</i> </p>'
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CreateDBClusterParameterGroupResult'
        '480':
          description: DBParameterGroupQuotaExceededFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBParameterGroupQuotaExceededFault'
        '481':
          description: DBParameterGroupAlreadyExistsFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBParameterGroupAlreadyExistsFault'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDBClusterParameterGroupMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#CreateDBClusterSnapshot':
    post:
      operationId: CreateDBClusterSnapshot
      description: 'Creates a snapshot of a DB cluster. For more information on Amazon Aurora, see <a href="http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Aurora.html">Aurora on Amazon RDS</a> in the <i>Amazon RDS User Guide.</i> '
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CreateDBClusterSnapshotResult'
        '480':
          description: DBClusterSnapshotAlreadyExistsFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBClusterSnapshotAlreadyExistsFault'
        '481':
          description: InvalidDBClusterStateFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidDBClusterStateFault'
        '482':
          description: DBClusterNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBClusterNotFoundFault'
        '483':
          description: SnapshotQuotaExceededFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SnapshotQuotaExceededFault'
        '484':
          description: InvalidDBClusterSnapshotStateFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidDBClusterSnapshotStateFault'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDBClusterSnapshotMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#CreateDBInstance':
    post:
      operationId: CreateDBInstance
      description: Creates a new DB instance.
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CreateDBInstanceResult'
        '480':
          description: DBInstanceAlreadyExistsFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBInstanceAlreadyExistsFault'
        '481':
          description: InsufficientDBInstanceCapacityFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InsufficientDBInstanceCapacityFault'
        '482':
          description: DBParameterGroupNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBParameterGroupNotFoundFault'
        '483':
          description: DBSecurityGroupNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBSecurityGroupNotFoundFault'
        '484':
          description: InstanceQuotaExceededFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InstanceQuotaExceededFault'
        '485':
          description: StorageQuotaExceededFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StorageQuotaExceededFault'
        '486':
          description: DBSubnetGroupNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBSubnetGroupNotFoundFault'
        '487':
          description: DBSubnetGroupDoesNotCoverEnoughAZs
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBSubnetGroupDoesNotCoverEnoughAZs'
        '488':
          description: InvalidDBClusterStateFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidDBClusterStateFault'
        '489':
          description: InvalidSubnet
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidSubnet'
        '490':
          description: InvalidVPCNetworkStateFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidVPCNetworkStateFault'
        '491':
          description: ProvisionedIopsNotAvailableInAZFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProvisionedIopsNotAvailableInAZFault'
        '492':
          description: OptionGroupNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OptionGroupNotFoundFault'
        '493':
          description: DBClusterNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBClusterNotFoundFault'
        '494':
          description: StorageTypeNotSupportedFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StorageTypeNotSupportedFault'
        '495':
          description: AuthorizationNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AuthorizationNotFoundFault'
        '496':
          description: KMSKeyNotAccessibleFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/KMSKeyNotAccessibleFault'
        '497':
          description: DomainNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DomainNotFoundFault'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDBInstanceMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#CreateDBInstanceReadReplica':
    post:
      operationId: CreateDBInstanceReadReplica
      description: '<p>Creates a DB instance for a DB instance running MySQL, MariaDB, or PostgreSQL that acts as a Read Replica of a source DB instance.</p> <note> <p>Amazon Aurora does not support this action. You must call the <code>CreateDBInstance</code> action to create a DB instance for an Aurora DB cluster.</p> </note> <p>All Read Replica DB instances are created as Single-AZ deployments with backups disabled. All other DB instance attributes (including DB security groups and DB parameter groups) are inherited from the source DB instance, except as specified below.</p> <important> <p>The source DB instance must have backup retention enabled.</p> </important> <p>You can create an encrypted Read Replica in a different AWS Region than the source DB instance. In that case, the region where you call the <code>CreateDBInstanceReadReplica</code> action is the destination region of the encrypted Read Replica. The source DB instance must be encrypted.</p> <p>To create an encrypted Read Replica in another AWS Region, you must provide the following values:</p> <ul> <li> <p> <code>KmsKeyId</code> - The AWS Key Management System (KMS) key identifier for the key to use to encrypt the Read Replica in the destination region.</p> </li> <li> <p> <code>PreSignedUrl</code> - A URL that contains a Signature Version 4 signed request for the <code> CreateDBInstanceReadReplica</code> API action in the AWS region that contains the source DB instance. The <code>PreSignedUrl</code> parameter must be used when encrypting a Read Replica from another AWS region.</p> <p>The presigned URL must be a valid request for the <code>CreateDBInstanceReadReplica</code> API action that can be executed in the source region that contains the encrypted DB instance. The presigned URL request must contain the following parameter values:</p> <ul> <li> <p> <code>DestinationRegion</code> - The AWS Region that the Read Replica is created in. This region is the same one where the <code>CreateDBInstanceReadReplica</code> action is called that contains this presigned URL. </p> <p> For example, if you create an encrypted Read Replica in the us-east-1 region, and the source DB instance is in the west-2 region, then you call the <code>CreateDBInstanceReadReplica</code> action in the us-east-1 region and provide a presigned URL that contains a call to the <code>CreateDBInstanceReadReplica</code> action in the us-west-2 region. For this example, the <code>DestinationRegion</code> in the presigned URL must be set to the us-east-1 region.</p> </li> <li> <p> <code>KmsKeyId</code> - The KMS key identifier for the key to use to encrypt the Read Replica in the destination region. This is the same identifier for both the <code>CreateDBInstanceReadReplica</code> action that is called in the destination region, and the action contained in the presigned URL.</p> </li> <li> <p> <code>SourceDBInstanceIdentifier</code> - The DB instance identifier for the encrypted Read Replica to be created. This identifier must be in the Amazon Resource Name (ARN) format for the source region. For example, if you create an encrypted Read Replica from a DB instance in the us-west-2 region, then your <code>SourceDBInstanceIdentifier</code> would look like this example: <code> arn:aws:rds:us-west-2:123456789012:instance:mysql-instance1-instance-20161115</code>.</p> </li> </ul> <p>To learn how to generate a Signature Version 4 signed request, see <a href="http://docs.aws.amazon.com/AmazonS3/latest/API/sigv4-query-string-auth.html"> Authenticating Requests: Using Query Parameters (AWS Signature Version 4)</a> and <a href="http://docs.aws.amazon.com/general/latest/gr/signature-version-4.html"> Signature Version 4 Signing Process</a>.</p> </li> <li> <p> <code>DBInstanceIdentifier</code> - The identifier for the encrypted Read Replica in the destination region.</p> </li> <li> <p> <code>SourceDBInstanceIdentifier</code> - The DB instance identifier for the encrypted Read Replica. This identifier must be in the ARN format for the source region and is the same value as the <code>SourceDBInstanceIdentifier</code> in the presigned URL. </p> </li> </ul>'
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CreateDBInstanceReadReplicaResult'
        '480':
          description: DBInstanceAlreadyExistsFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBInstanceAlreadyExistsFault'
        '481':
          description: InsufficientDBInstanceCapacityFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InsufficientDBInstanceCapacityFault'
        '482':
          description: DBParameterGroupNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBParameterGroupNotFoundFault'
        '483':
          description: DBSecurityGroupNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBSecurityGroupNotFoundFault'
        '484':
          description: InstanceQuotaExceededFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InstanceQuotaExceededFault'
        '485':
          description: StorageQuotaExceededFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StorageQuotaExceededFault'
        '486':
          description: DBInstanceNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBInstanceNotFoundFault'
        '487':
          description: InvalidDBInstanceStateFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidDBInstanceStateFault'
        '488':
          description: DBSubnetGroupNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBSubnetGroupNotFoundFault'
        '489':
          description: DBSubnetGroupDoesNotCoverEnoughAZs
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBSubnetGroupDoesNotCoverEnoughAZs'
        '490':
          description: InvalidSubnet
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidSubnet'
        '491':
          description: InvalidVPCNetworkStateFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidVPCNetworkStateFault'
        '492':
          description: ProvisionedIopsNotAvailableInAZFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProvisionedIopsNotAvailableInAZFault'
        '493':
          description: OptionGroupNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OptionGroupNotFoundFault'
        '494':
          description: DBSubnetGroupNotAllowedFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBSubnetGroupNotAllowedFault'
        '495':
          description: InvalidDBSubnetGroupFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidDBSubnetGroupFault'
        '496':
          description: StorageTypeNotSupportedFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StorageTypeNotSupportedFault'
        '497':
          description: KMSKeyNotAccessibleFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/KMSKeyNotAccessibleFault'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDBInstanceReadReplicaMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#CreateDBParameterGroup':
    post:
      operationId: CreateDBParameterGroup
      description: '<p>Creates a new DB parameter group.</p> <p> A DB parameter group is initially created with the default parameters for the database engine used by the DB instance. To provide custom values for any of the parameters, you must modify the group after creating it using <i>ModifyDBParameterGroup</i>. Once you''ve created a DB parameter group, you need to associate it with your DB instance using <i>ModifyDBInstance</i>. When you associate a new DB parameter group with a running DB instance, you need to reboot the DB instance without failover for the new DB parameter group and associated settings to take effect. </p> <important> <p>After you create a DB parameter group, you should wait at least 5 minutes before creating your first DB instance that uses that DB parameter group as the default parameter group. This allows Amazon RDS to fully complete the create action before the parameter group is used as the default for a new DB instance. This is especially important for parameters that are critical when creating the default database for a DB instance, such as the character set for the default database defined by the <code>character_set_database</code> parameter. You can use the <i>Parameter Groups</i> option of the <a href="https://console.aws.amazon.com/rds/">Amazon RDS console</a> or the <i>DescribeDBParameters</i> command to verify that your DB parameter group has been created or modified.</p> </important>'
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CreateDBParameterGroupResult'
        '480':
          description: DBParameterGroupQuotaExceededFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBParameterGroupQuotaExceededFault'
        '481':
          description: DBParameterGroupAlreadyExistsFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBParameterGroupAlreadyExistsFault'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDBParameterGroupMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#CreateDBSecurityGroup':
    post:
      operationId: CreateDBSecurityGroup
      description: Creates a new DB security group. DB security groups control access to a DB instance.
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CreateDBSecurityGroupResult'
        '480':
          description: DBSecurityGroupAlreadyExistsFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBSecurityGroupAlreadyExistsFault'
        '481':
          description: DBSecurityGroupQuotaExceededFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBSecurityGroupQuotaExceededFault'
        '482':
          description: DBSecurityGroupNotSupportedFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBSecurityGroupNotSupportedFault'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDBSecurityGroupMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#CreateDBSnapshot':
    post:
      operationId: CreateDBSnapshot
      description: Creates a DBSnapshot. The source DBInstance must be in "available" state.
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CreateDBSnapshotResult'
        '480':
          description: DBSnapshotAlreadyExistsFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBSnapshotAlreadyExistsFault'
        '481':
          description: InvalidDBInstanceStateFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidDBInstanceStateFault'
        '482':
          description: DBInstanceNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBInstanceNotFoundFault'
        '483':
          description: SnapshotQuotaExceededFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SnapshotQuotaExceededFault'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDBSnapshotMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#CreateDBSubnetGroup':
    post:
      operationId: CreateDBSubnetGroup
      description: Creates a new DB subnet group. DB subnet groups must contain at least one subnet in at least two AZs in the region.
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CreateDBSubnetGroupResult'
        '480':
          description: DBSubnetGroupAlreadyExistsFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBSubnetGroupAlreadyExistsFault'
        '481':
          description: DBSubnetGroupQuotaExceededFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBSubnetGroupQuotaExceededFault'
        '482':
          description: DBSubnetQuotaExceededFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBSubnetQuotaExceededFault'
        '483':
          description: DBSubnetGroupDoesNotCoverEnoughAZs
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBSubnetGroupDoesNotCoverEnoughAZs'
        '484':
          description: InvalidSubnet
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidSubnet'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDBSubnetGroupMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#CreateEventSubscription':
    post:
      operationId: CreateEventSubscription
      description: '<p>Creates an RDS event notification subscription. This action requires a topic ARN (Amazon Resource Name) created by either the RDS console, the SNS console, or the SNS API. To obtain an ARN with SNS, you must create a topic in Amazon SNS and subscribe to the topic. The ARN is displayed in the SNS console.</p> <p>You can specify the type of source (SourceType) you want to be notified of, provide a list of RDS sources (SourceIds) that triggers the events, and provide a list of event categories (EventCategories) for events you want to be notified of. For example, you can specify SourceType = db-instance, SourceIds = mydbinstance1, mydbinstance2 and EventCategories = Availability, Backup.</p> <p>If you specify both the SourceType and SourceIds, such as SourceType = db-instance and SourceIdentifier = myDBInstance1, you will be notified of all the db-instance events for the specified source. If you specify a SourceType but do not specify a SourceIdentifier, you will receive notice of the events for that source type for all your RDS sources. If you do not specify either the SourceType nor the SourceIdentifier, you will be notified of events generated from all RDS sources belonging to your customer account.</p>'
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CreateEventSubscriptionResult'
        '480':
          description: EventSubscriptionQuotaExceededFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EventSubscriptionQuotaExceededFault'
        '481':
          description: SubscriptionAlreadyExistFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SubscriptionAlreadyExistFault'
        '482':
          description: SNSInvalidTopicFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SNSInvalidTopicFault'
        '483':
          description: SNSNoAuthorizationFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SNSNoAuthorizationFault'
        '484':
          description: SNSTopicArnNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SNSTopicArnNotFoundFault'
        '485':
          description: SubscriptionCategoryNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SubscriptionCategoryNotFoundFault'
        '486':
          description: SourceNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SourceNotFoundFault'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEventSubscriptionMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#CreateOptionGroup':
    post:
      operationId: CreateOptionGroup
      description: Creates a new option group. You can create up to 20 option groups.
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CreateOptionGroupResult'
        '480':
          description: OptionGroupAlreadyExistsFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OptionGroupAlreadyExistsFault'
        '481':
          description: OptionGroupQuotaExceededFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OptionGroupQuotaExceededFault'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOptionGroupMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DeleteDBCluster':
    post:
      operationId: DeleteDBCluster
      description: '<p>The DeleteDBCluster action deletes a previously provisioned DB cluster. When you delete a DB cluster, all automated backups for that DB cluster are deleted and cannot be recovered. Manual DB cluster snapshots of the specified DB cluster are not deleted.</p> <p/> <p>For more information on Amazon Aurora, see <a href="http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Aurora.html">Aurora on Amazon RDS</a> in the <i>Amazon RDS User Guide.</i> </p>'
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DeleteDBClusterResult'
        '480':
          description: DBClusterNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBClusterNotFoundFault'
        '481':
          description: InvalidDBClusterStateFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidDBClusterStateFault'
        '482':
          description: DBClusterSnapshotAlreadyExistsFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBClusterSnapshotAlreadyExistsFault'
        '483':
          description: SnapshotQuotaExceededFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SnapshotQuotaExceededFault'
        '484':
          description: InvalidDBClusterSnapshotStateFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidDBClusterSnapshotStateFault'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteDBClusterMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DeleteDBClusterParameterGroup':
    post:
      operationId: DeleteDBClusterParameterGroup
      description: '<p>Deletes a specified DB cluster parameter group. The DB cluster parameter group to be deleted cannot be associated with any DB clusters.</p> <p>For more information on Amazon Aurora, see <a href="http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Aurora.html">Aurora on Amazon RDS</a> in the <i>Amazon RDS User Guide.</i> </p>'
      responses:
        '200':
          description: Success
        '480':
          description: InvalidDBParameterGroupStateFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidDBParameterGroupStateFault'
        '481':
          description: DBParameterGroupNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBParameterGroupNotFoundFault'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteDBClusterParameterGroupMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DeleteDBClusterSnapshot':
    post:
      operationId: DeleteDBClusterSnapshot
      description: '<p>Deletes a DB cluster snapshot. If the snapshot is being copied, the copy operation is terminated.</p> <note> <p>The DB cluster snapshot must be in the <code>available</code> state to be deleted.</p> </note> <p>For more information on Amazon Aurora, see <a href="http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Aurora.html">Aurora on Amazon RDS</a> in the <i>Amazon RDS User Guide.</i> </p>'
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DeleteDBClusterSnapshotResult'
        '480':
          description: InvalidDBClusterSnapshotStateFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidDBClusterSnapshotStateFault'
        '481':
          description: DBClusterSnapshotNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBClusterSnapshotNotFoundFault'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteDBClusterSnapshotMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DeleteDBInstance':
    post:
      operationId: DeleteDBInstance
      description: '<p>The DeleteDBInstance action deletes a previously provisioned DB instance. When you delete a DB instance, all automated backups for that instance are deleted and cannot be recovered. Manual DB snapshots of the DB instance to be deleted by <code>DeleteDBInstance</code> are not deleted.</p> <p> If you request a final DB snapshot the status of the Amazon RDS DB instance is <code>deleting</code> until the DB snapshot is created. The API action <code>DescribeDBInstance</code> is used to monitor the status of this operation. The action cannot be canceled or reverted once submitted. </p> <p>Note that when a DB instance is in a failure state and has a status of <code>failed</code>, <code>incompatible-restore</code>, or <code>incompatible-network</code>, you can only delete it when the <code>SkipFinalSnapshot</code> parameter is set to <code>true</code>.</p> <p>If the specified DB instance is part of an Amazon Aurora DB cluster, you cannot delete the DB instance if the following are true:</p> <ul> <li> <p>The DB cluster is a Read Replica of another Amazon Aurora DB cluster.</p> </li> <li> <p>The DB instance is the only instance in the DB cluster.</p> </li> </ul> <p>To delete a DB instance in this case, first call the <a>PromoteReadReplicaDBCluster</a> API action to promote the DB cluster so it''s no longer a Read Replica. After the promotion completes, then call the <code>DeleteDBInstance</code> API action to delete the final instance in the DB cluster.</p>'
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DeleteDBInstanceResult'
        '480':
          description: DBInstanceNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBInstanceNotFoundFault'
        '481':
          description: InvalidDBInstanceStateFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidDBInstanceStateFault'
        '482':
          description: DBSnapshotAlreadyExistsFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBSnapshotAlreadyExistsFault'
        '483':
          description: SnapshotQuotaExceededFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SnapshotQuotaExceededFault'
        '484':
          description: InvalidDBClusterStateFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidDBClusterStateFault'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteDBInstanceMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DeleteDBParameterGroup':
    post:
      operationId: DeleteDBParameterGroup
      description: Deletes a specified DBParameterGroup. The DBParameterGroup to be deleted cannot be associated with any DB instances.
      responses:
        '200':
          description: Success
        '480':
          description: InvalidDBParameterGroupStateFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidDBParameterGroupStateFault'
        '481':
          description: DBParameterGroupNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBParameterGroupNotFoundFault'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteDBParameterGroupMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DeleteDBSecurityGroup':
    post:
      operationId: DeleteDBSecurityGroup
      description: <p>Deletes a DB security group.</p> <note> <p>The specified DB security group must not be associated with any DB instances.</p> </note>
      responses:
        '200':
          description: Success
        '480':
          description: InvalidDBSecurityGroupStateFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidDBSecurityGroupStateFault'
        '481':
          description: DBSecurityGroupNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBSecurityGroupNotFoundFault'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteDBSecurityGroupMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DeleteDBSnapshot':
    post:
      operationId: DeleteDBSnapshot
      description: '<p>Deletes a DBSnapshot. If the snapshot is being copied, the copy operation is terminated.</p> <note> <p>The DBSnapshot must be in the <code>available</code> state to be deleted.</p> </note>'
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DeleteDBSnapshotResult'
        '480':
          description: InvalidDBSnapshotStateFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidDBSnapshotStateFault'
        '481':
          description: DBSnapshotNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBSnapshotNotFoundFault'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteDBSnapshotMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DeleteDBSubnetGroup':
    post:
      operationId: DeleteDBSubnetGroup
      description: <p>Deletes a DB subnet group.</p> <note> <p>The specified database subnet group must not be associated with any DB instances.</p> </note>
      responses:
        '200':
          description: Success
        '480':
          description: InvalidDBSubnetGroupStateFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidDBSubnetGroupStateFault'
        '481':
          description: InvalidDBSubnetStateFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidDBSubnetStateFault'
        '482':
          description: DBSubnetGroupNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBSubnetGroupNotFoundFault'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteDBSubnetGroupMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DeleteEventSubscription':
    post:
      operationId: DeleteEventSubscription
      description: Deletes an RDS event notification subscription.
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DeleteEventSubscriptionResult'
        '480':
          description: SubscriptionNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SubscriptionNotFoundFault'
        '481':
          description: InvalidEventSubscriptionStateFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidEventSubscriptionStateFault'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteEventSubscriptionMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DeleteOptionGroup':
    post:
      operationId: DeleteOptionGroup
      description: Deletes an existing option group.
      responses:
        '200':
          description: Success
        '480':
          description: OptionGroupNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OptionGroupNotFoundFault'
        '481':
          description: InvalidOptionGroupStateFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidOptionGroupStateFault'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteOptionGroupMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DescribeAccountAttributes':
    post:
      operationId: DescribeAccountAttributes
      description: '<p>Lists all of the attributes for a customer account. The attributes include Amazon RDS quotas for the account, such as the number of DB instances allowed. The description for a quota includes the quota name, current usage toward that quota, and the quota''s maximum value.</p> <p>This command does not take any parameters.</p>'
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AccountAttributesMessage'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeAccountAttributesMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DescribeCertificates':
    post:
      operationId: DescribeCertificates
      description: Lists the set of CA certificates provided by Amazon RDS for this AWS account.
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CertificateMessage'
        '480':
          description: CertificateNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CertificateNotFoundFault'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeCertificatesMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DescribeDBClusterParameterGroups':
    post:
      operationId: DescribeDBClusterParameterGroups
      description: '<p> Returns a list of <code>DBClusterParameterGroup</code> descriptions. If a <code>DBClusterParameterGroupName</code> parameter is specified, the list will contain only the description of the specified DB cluster parameter group. </p> <p>For more information on Amazon Aurora, see <a href="http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Aurora.html">Aurora on Amazon RDS</a> in the <i>Amazon RDS User Guide.</i> </p>'
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBClusterParameterGroupsMessage'
        '480':
          description: DBParameterGroupNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBParameterGroupNotFoundFault'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeDBClusterParameterGroupsMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DescribeDBClusterParameters':
    post:
      operationId: DescribeDBClusterParameters
      description: '<p>Returns the detailed parameter list for a particular DB cluster parameter group.</p> <p>For more information on Amazon Aurora, see <a href="http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Aurora.html">Aurora on Amazon RDS</a> in the <i>Amazon RDS User Guide.</i> </p>'
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBClusterParameterGroupDetails'
        '480':
          description: DBParameterGroupNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBParameterGroupNotFoundFault'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeDBClusterParametersMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DescribeDBClusterSnapshotAttributes':
    post:
      operationId: DescribeDBClusterSnapshotAttributes
      description: '<p>Returns a list of DB cluster snapshot attribute names and values for a manual DB cluster snapshot.</p> <p>When sharing snapshots with other AWS accounts, <code>DescribeDBClusterSnapshotAttributes</code> returns the <code>restore</code> attribute and a list of IDs for the AWS accounts that are authorized to copy or restore the manual DB cluster snapshot. If <code>all</code> is included in the list of values for the <code>restore</code> attribute, then the manual DB cluster snapshot is public and can be copied or restored by all AWS accounts.</p> <p>To add or remove access for an AWS account to copy or restore a manual DB cluster snapshot, or to make the manual DB cluster snapshot public or private, use the <a>ModifyDBClusterSnapshotAttribute</a> API action.</p>'
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DescribeDBClusterSnapshotAttributesResult'
        '480':
          description: DBClusterSnapshotNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBClusterSnapshotNotFoundFault'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeDBClusterSnapshotAttributesMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DescribeDBClusterSnapshots':
    post:
      operationId: DescribeDBClusterSnapshots
      description: '<p>Returns information about DB cluster snapshots. This API action supports pagination.</p> <p>For more information on Amazon Aurora, see <a href="http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Aurora.html">Aurora on Amazon RDS</a> in the <i>Amazon RDS User Guide.</i> </p>'
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBClusterSnapshotMessage'
        '480':
          description: DBClusterSnapshotNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBClusterSnapshotNotFoundFault'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeDBClusterSnapshotsMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DescribeDBClusters':
    post:
      operationId: DescribeDBClusters
      description: '<p>Returns information about provisioned Aurora DB clusters. This API supports pagination.</p> <p>For more information on Amazon Aurora, see <a href="http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Aurora.html">Aurora on Amazon RDS</a> in the <i>Amazon RDS User Guide.</i> </p>'
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBClusterMessage'
        '480':
          description: DBClusterNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBClusterNotFoundFault'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeDBClustersMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DescribeDBEngineVersions':
    post:
      operationId: DescribeDBEngineVersions
      description: Returns a list of the available DB engines.
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBEngineVersionMessage'
      parameters:
        - name: MaxRecords
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: Marker
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeDBEngineVersionsMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DescribeDBInstances':
    post:
      operationId: DescribeDBInstances
      description: Returns information about provisioned RDS instances. This API supports pagination.
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBInstanceMessage'
        '480':
          description: DBInstanceNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBInstanceNotFoundFault'
      parameters:
        - name: MaxRecords
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: Marker
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
      x-waiters:
        - delay: 30
          operation: DescribeDBInstances
          maxAttempts: 60
          acceptors:
            - expected: available
              matcher: pathAll
              state: success
              argument: 'DBInstances[].DBInstanceStatus'
            - expected: deleted
              matcher: pathAny
              state: failure
              argument: 'DBInstances[].DBInstanceStatus'
            - expected: deleting
              matcher: pathAny
              state: failure
              argument: 'DBInstances[].DBInstanceStatus'
            - expected: failed
              matcher: pathAny
              state: failure
              argument: 'DBInstances[].DBInstanceStatus'
            - expected: incompatible-restore
              matcher: pathAny
              state: failure
              argument: 'DBInstances[].DBInstanceStatus'
            - expected: incompatible-parameters
              matcher: pathAny
              state: failure
              argument: 'DBInstances[].DBInstanceStatus'
        - delay: 30
          operation: DescribeDBInstances
          maxAttempts: 60
          acceptors:
            - expected: deleted
              matcher: pathAll
              state: success
              argument: 'DBInstances[].DBInstanceStatus'
            - expected: DBInstanceNotFound
              matcher: error
              state: success
            - expected: creating
              matcher: pathAny
              state: failure
              argument: 'DBInstances[].DBInstanceStatus'
            - expected: modifying
              matcher: pathAny
              state: failure
              argument: 'DBInstances[].DBInstanceStatus'
            - expected: rebooting
              matcher: pathAny
              state: failure
              argument: 'DBInstances[].DBInstanceStatus'
            - expected: resetting-master-credentials
              matcher: pathAny
              state: failure
              argument: 'DBInstances[].DBInstanceStatus'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeDBInstancesMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DescribeDBLogFiles':
    post:
      operationId: DescribeDBLogFiles
      description: Returns a list of DB log files for the DB instance.
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DescribeDBLogFilesResponse'
        '480':
          description: DBInstanceNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBInstanceNotFoundFault'
      parameters:
        - name: MaxRecords
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: Marker
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeDBLogFilesMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DescribeDBParameterGroups':
    post:
      operationId: DescribeDBParameterGroups
      description: ' Returns a list of <code>DBParameterGroup</code> descriptions. If a <code>DBParameterGroupName</code> is specified, the list will contain only the description of the specified DB parameter group. '
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBParameterGroupsMessage'
        '480':
          description: DBParameterGroupNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBParameterGroupNotFoundFault'
      parameters:
        - name: MaxRecords
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: Marker
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeDBParameterGroupsMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DescribeDBParameters':
    post:
      operationId: DescribeDBParameters
      description: Returns the detailed parameter list for a particular DB parameter group.
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBParameterGroupDetails'
        '480':
          description: DBParameterGroupNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBParameterGroupNotFoundFault'
      parameters:
        - name: MaxRecords
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: Marker
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeDBParametersMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DescribeDBSecurityGroups':
    post:
      operationId: DescribeDBSecurityGroups
      description: ' Returns a list of <code>DBSecurityGroup</code> descriptions. If a <code>DBSecurityGroupName</code> is specified, the list will contain only the descriptions of the specified DB security group. '
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBSecurityGroupMessage'
        '480':
          description: DBSecurityGroupNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBSecurityGroupNotFoundFault'
      parameters:
        - name: MaxRecords
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: Marker
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeDBSecurityGroupsMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DescribeDBSnapshotAttributes':
    post:
      operationId: DescribeDBSnapshotAttributes
      description: '<p>Returns a list of DB snapshot attribute names and values for a manual DB snapshot.</p> <p>When sharing snapshots with other AWS accounts, <code>DescribeDBSnapshotAttributes</code> returns the <code>restore</code> attribute and a list of IDs for the AWS accounts that are authorized to copy or restore the manual DB snapshot. If <code>all</code> is included in the list of values for the <code>restore</code> attribute, then the manual DB snapshot is public and can be copied or restored by all AWS accounts.</p> <p>To add or remove access for an AWS account to copy or restore a manual DB snapshot, or to make the manual DB snapshot public or private, use the <a>ModifyDBSnapshotAttribute</a> API action.</p>'
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DescribeDBSnapshotAttributesResult'
        '480':
          description: DBSnapshotNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBSnapshotNotFoundFault'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeDBSnapshotAttributesMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DescribeDBSnapshots':
    post:
      operationId: DescribeDBSnapshots
      description: Returns information about DB snapshots. This API action supports pagination.
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBSnapshotMessage'
        '480':
          description: DBSnapshotNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBSnapshotNotFoundFault'
      parameters:
        - name: MaxRecords
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: Marker
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeDBSnapshotsMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DescribeDBSubnetGroups':
    post:
      operationId: DescribeDBSubnetGroups
      description: '<p>Returns a list of DBSubnetGroup descriptions. If a DBSubnetGroupName is specified, the list will contain only the descriptions of the specified DBSubnetGroup.</p> <p>For an overview of CIDR ranges, go to the <a href="http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing">Wikipedia Tutorial</a>. </p>'
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBSubnetGroupMessage'
        '480':
          description: DBSubnetGroupNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBSubnetGroupNotFoundFault'
      parameters:
        - name: MaxRecords
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: Marker
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeDBSubnetGroupsMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DescribeEngineDefaultClusterParameters':
    post:
      operationId: DescribeEngineDefaultClusterParameters
      description: '<p>Returns the default engine and system parameter information for the cluster database engine.</p> <p>For more information on Amazon Aurora, see <a href="http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Aurora.html">Aurora on Amazon RDS</a> in the <i>Amazon RDS User Guide.</i> </p>'
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DescribeEngineDefaultClusterParametersResult'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeEngineDefaultClusterParametersMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DescribeEngineDefaultParameters':
    post:
      operationId: DescribeEngineDefaultParameters
      description: Returns the default engine and system parameter information for the specified database engine.
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DescribeEngineDefaultParametersResult'
      parameters:
        - name: MaxRecords
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: Marker
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeEngineDefaultParametersMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DescribeEventCategories':
    post:
      operationId: DescribeEventCategories
      description: 'Displays a list of categories for all event source types, or, if specified, for a specified source type. You can see a list of the event categories and source types in the <a href="http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Events.html"> Events</a> topic in the <i>Amazon RDS User Guide.</i> '
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EventCategoriesMessage'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeEventCategoriesMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DescribeEventSubscriptions':
    post:
      operationId: DescribeEventSubscriptions
      description: '<p>Lists all the subscription descriptions for a customer account. The description for a subscription includes SubscriptionName, SNSTopicARN, CustomerID, SourceType, SourceID, CreationTime, and Status.</p> <p>If you specify a SubscriptionName, lists the description for that subscription.</p>'
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EventSubscriptionsMessage'
        '480':
          description: SubscriptionNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SubscriptionNotFoundFault'
      parameters:
        - name: MaxRecords
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: Marker
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeEventSubscriptionsMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DescribeEvents':
    post:
      operationId: DescribeEvents
      description: 'Returns events related to DB instances, DB security groups, DB snapshots, and DB parameter groups for the past 14 days. Events specific to a particular DB instance, DB security group, database snapshot, or DB parameter group can be obtained by providing the name as a parameter. By default, the past hour of events are returned.'
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EventsMessage'
      parameters:
        - name: MaxRecords
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: Marker
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeEventsMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DescribeOptionGroupOptions':
    post:
      operationId: DescribeOptionGroupOptions
      description: Describes all available options.
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OptionGroupOptionsMessage'
      parameters:
        - name: MaxRecords
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: Marker
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeOptionGroupOptionsMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DescribeOptionGroups':
    post:
      operationId: DescribeOptionGroups
      description: Describes the available option groups.
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OptionGroups'
        '480':
          description: OptionGroupNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OptionGroupNotFoundFault'
      parameters:
        - name: MaxRecords
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: Marker
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeOptionGroupsMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DescribeOrderableDBInstanceOptions':
    post:
      operationId: DescribeOrderableDBInstanceOptions
      description: Returns a list of orderable DB instance options for the specified engine.
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OrderableDBInstanceOptionsMessage'
      parameters:
        - name: MaxRecords
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: Marker
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeOrderableDBInstanceOptionsMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DescribePendingMaintenanceActions':
    post:
      operationId: DescribePendingMaintenanceActions
      description: 'Returns a list of resources (for example, DB instances) that have at least one pending maintenance action.'
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PendingMaintenanceActionsMessage'
        '480':
          description: ResourceNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResourceNotFoundFault'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribePendingMaintenanceActionsMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DescribeReservedDBInstances':
    post:
      operationId: DescribeReservedDBInstances
      description: 'Returns information about reserved DB instances for this account, or about a specified reserved DB instance.'
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ReservedDBInstanceMessage'
        '480':
          description: ReservedDBInstanceNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ReservedDBInstanceNotFoundFault'
      parameters:
        - name: MaxRecords
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: Marker
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeReservedDBInstancesMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DescribeReservedDBInstancesOfferings':
    post:
      operationId: DescribeReservedDBInstancesOfferings
      description: Lists available reserved DB instance offerings.
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ReservedDBInstancesOfferingMessage'
        '480':
          description: ReservedDBInstancesOfferingNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ReservedDBInstancesOfferingNotFoundFault'
      parameters:
        - name: MaxRecords
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: Marker
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeReservedDBInstancesOfferingsMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DescribeSourceRegions':
    post:
      operationId: DescribeSourceRegions
      description: Returns a list of the source AWS regions where the current AWS region can create a Read Replica or copy a DB snapshot from. This API action supports pagination.
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SourceRegionMessage'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeSourceRegionsMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DownloadDBLogFilePortion':
    post:
      operationId: DownloadDBLogFilePortion
      description: 'Downloads all or a portion of the specified log file, up to 1 MB in size.'
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DownloadDBLogFilePortionDetails'
        '480':
          description: DBInstanceNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBInstanceNotFoundFault'
        '481':
          description: DBLogFileNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBLogFileNotFoundFault'
      parameters:
        - name: NumberOfLines
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: Marker
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DownloadDBLogFilePortionMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#FailoverDBCluster':
    post:
      operationId: FailoverDBCluster
      description: '<p>Forces a failover for a DB cluster.</p> <p>A failover for a DB cluster promotes one of the Aurora Replicas (read-only instances) in the DB cluster to be the primary instance (the cluster writer).</p> <p>Amazon Aurora will automatically fail over to an Aurora Replica, if one exists, when the primary instance fails. You can force a failover when you want to simulate a failure of a primary instance for testing. Because each instance in a DB cluster has its own endpoint address, you will need to clean up and re-establish any existing connections that use those endpoint addresses when the failover is complete.</p> <p>For more information on Amazon Aurora, see <a href="http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Aurora.html">Aurora on Amazon RDS</a> in the <i>Amazon RDS User Guide.</i> </p>'
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/FailoverDBClusterResult'
        '480':
          description: DBClusterNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBClusterNotFoundFault'
        '481':
          description: InvalidDBClusterStateFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidDBClusterStateFault'
        '482':
          description: InvalidDBInstanceStateFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidDBInstanceStateFault'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FailoverDBClusterMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#ListTagsForResource':
    post:
      operationId: ListTagsForResource
      description: '<p>Lists all tags on an Amazon RDS resource.</p> <p>For an overview on tagging an Amazon RDS resource, see <a href="http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Overview.Tagging.html">Tagging Amazon RDS Resources</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TagListMessage'
        '480':
          description: DBInstanceNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBInstanceNotFoundFault'
        '481':
          description: DBSnapshotNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBSnapshotNotFoundFault'
        '482':
          description: DBClusterNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBClusterNotFoundFault'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListTagsForResourceMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#ModifyDBCluster':
    post:
      operationId: ModifyDBCluster
      description: 'Modify a setting for an Amazon Aurora DB cluster. You can change one or more database configuration parameters by specifying these parameters and the new values in the request. For more information on Amazon Aurora, see <a href="http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Aurora.html">Aurora on Amazon RDS</a> in the <i>Amazon RDS User Guide.</i> '
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ModifyDBClusterResult'
        '480':
          description: DBClusterNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBClusterNotFoundFault'
        '481':
          description: InvalidDBClusterStateFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidDBClusterStateFault'
        '482':
          description: StorageQuotaExceededFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StorageQuotaExceededFault'
        '483':
          description: DBSubnetGroupNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBSubnetGroupNotFoundFault'
        '484':
          description: InvalidVPCNetworkStateFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidVPCNetworkStateFault'
        '485':
          description: InvalidDBSubnetGroupStateFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidDBSubnetGroupStateFault'
        '486':
          description: InvalidSubnet
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidSubnet'
        '487':
          description: DBClusterParameterGroupNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBClusterParameterGroupNotFoundFault'
        '488':
          description: InvalidDBSecurityGroupStateFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidDBSecurityGroupStateFault'
        '489':
          description: InvalidDBInstanceStateFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidDBInstanceStateFault'
        '490':
          description: DBClusterAlreadyExistsFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBClusterAlreadyExistsFault'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifyDBClusterMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#ModifyDBClusterParameterGroup':
    post:
      operationId: ModifyDBClusterParameterGroup
      description: '<p> Modifies the parameters of a DB cluster parameter group. To modify more than one parameter, submit a list of the following: <code>ParameterName</code>, <code>ParameterValue</code>, and <code>ApplyMethod</code>. A maximum of 20 parameters can be modified in a single request. </p> <p>For more information on Amazon Aurora, see <a href="http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Aurora.html">Aurora on Amazon RDS</a> in the <i>Amazon RDS User Guide.</i> </p> <note> <p>Changes to dynamic parameters are applied immediately. Changes to static parameters require a reboot without failover to the DB cluster associated with the parameter group before the change can take effect.</p> </note> <important> <p>After you create a DB cluster parameter group, you should wait at least 5 minutes before creating your first DB cluster that uses that DB cluster parameter group as the default parameter group. This allows Amazon RDS to fully complete the create action before the parameter group is used as the default for a new DB cluster. This is especially important for parameters that are critical when creating the default database for a DB cluster, such as the character set for the default database defined by the <code>character_set_database</code> parameter. You can use the <i>Parameter Groups</i> option of the <a href="https://console.aws.amazon.com/rds/">Amazon RDS console</a> or the <a>DescribeDBClusterParameters</a> command to verify that your DB cluster parameter group has been created or modified.</p> </important>'
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBClusterParameterGroupNameMessage'
        '480':
          description: DBParameterGroupNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBParameterGroupNotFoundFault'
        '481':
          description: InvalidDBParameterGroupStateFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidDBParameterGroupStateFault'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifyDBClusterParameterGroupMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#ModifyDBClusterSnapshotAttribute':
    post:
      operationId: ModifyDBClusterSnapshotAttribute
      description: '<p>Adds an attribute and values to, or removes an attribute and values from, a manual DB cluster snapshot.</p> <p>To share a manual DB cluster snapshot with other AWS accounts, specify <code>restore</code> as the <code>AttributeName</code> and use the <code>ValuesToAdd</code> parameter to add a list of IDs of the AWS accounts that are authorized to restore the manual DB cluster snapshot. Use the value <code>all</code> to make the manual DB cluster snapshot public, which means that it can be copied or restored by all AWS accounts. Do not add the <code>all</code> value for any manual DB cluster snapshots that contain private information that you don''t want available to all AWS accounts. If a manual DB cluster snapshot is encrypted, it can be shared, but only by specifying a list of authorized AWS account IDs for the <code>ValuesToAdd</code> parameter. You can''t use <code>all</code> as a value for that parameter in this case.</p> <p>To view which AWS accounts have access to copy or restore a manual DB cluster snapshot, or whether a manual DB cluster snapshot public or private, use the <a>DescribeDBClusterSnapshotAttributes</a> API action.</p>'
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ModifyDBClusterSnapshotAttributeResult'
        '480':
          description: DBClusterSnapshotNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBClusterSnapshotNotFoundFault'
        '481':
          description: InvalidDBClusterSnapshotStateFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidDBClusterSnapshotStateFault'
        '482':
          description: SharedSnapshotQuotaExceededFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SharedSnapshotQuotaExceededFault'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifyDBClusterSnapshotAttributeMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#ModifyDBInstance':
    post:
      operationId: ModifyDBInstance
      description: Modifies settings for a DB instance. You can change one or more database configuration parameters by specifying these parameters and the new values in the request.
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ModifyDBInstanceResult'
        '480':
          description: InvalidDBInstanceStateFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidDBInstanceStateFault'
        '481':
          description: InvalidDBSecurityGroupStateFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidDBSecurityGroupStateFault'
        '482':
          description: DBInstanceAlreadyExistsFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBInstanceAlreadyExistsFault'
        '483':
          description: DBInstanceNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBInstanceNotFoundFault'
        '484':
          description: DBSecurityGroupNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBSecurityGroupNotFoundFault'
        '485':
          description: DBParameterGroupNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBParameterGroupNotFoundFault'
        '486':
          description: InsufficientDBInstanceCapacityFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InsufficientDBInstanceCapacityFault'
        '487':
          description: StorageQuotaExceededFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StorageQuotaExceededFault'
        '488':
          description: InvalidVPCNetworkStateFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidVPCNetworkStateFault'
        '489':
          description: ProvisionedIopsNotAvailableInAZFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProvisionedIopsNotAvailableInAZFault'
        '490':
          description: OptionGroupNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OptionGroupNotFoundFault'
        '491':
          description: DBUpgradeDependencyFailureFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBUpgradeDependencyFailureFault'
        '492':
          description: StorageTypeNotSupportedFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StorageTypeNotSupportedFault'
        '493':
          description: AuthorizationNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AuthorizationNotFoundFault'
        '494':
          description: CertificateNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CertificateNotFoundFault'
        '495':
          description: DomainNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DomainNotFoundFault'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifyDBInstanceMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#ModifyDBParameterGroup':
    post:
      operationId: ModifyDBParameterGroup
      description: '<p> Modifies the parameters of a DB parameter group. To modify more than one parameter, submit a list of the following: <code>ParameterName</code>, <code>ParameterValue</code>, and <code>ApplyMethod</code>. A maximum of 20 parameters can be modified in a single request. </p> <note> <p>Changes to dynamic parameters are applied immediately. Changes to static parameters require a reboot without failover to the DB instance associated with the parameter group before the change can take effect.</p> </note> <important> <p>After you modify a DB parameter group, you should wait at least 5 minutes before creating your first DB instance that uses that DB parameter group as the default parameter group. This allows Amazon RDS to fully complete the modify action before the parameter group is used as the default for a new DB instance. This is especially important for parameters that are critical when creating the default database for a DB instance, such as the character set for the default database defined by the <code>character_set_database</code> parameter. You can use the <i>Parameter Groups</i> option of the <a href="https://console.aws.amazon.com/rds/">Amazon RDS console</a> or the <i>DescribeDBParameters</i> command to verify that your DB parameter group has been created or modified.</p> </important>'
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBParameterGroupNameMessage'
        '480':
          description: DBParameterGroupNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBParameterGroupNotFoundFault'
        '481':
          description: InvalidDBParameterGroupStateFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidDBParameterGroupStateFault'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifyDBParameterGroupMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#ModifyDBSnapshot':
    post:
      operationId: ModifyDBSnapshot
      description: '<p>Updates a manual DB snapshot, which can be encrypted or not encrypted, with a new engine version. You can update the engine version to either a new major or minor engine version. </p> <p>Amazon RDS supports upgrading a MySQL DB snapshot from MySQL 5.1 to MySQL 5.5.</p>'
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ModifyDBSnapshotResult'
        '480':
          description: DBSnapshotNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBSnapshotNotFoundFault'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifyDBSnapshotMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#ModifyDBSnapshotAttribute':
    post:
      operationId: ModifyDBSnapshotAttribute
      description: '<p>Adds an attribute and values to, or removes an attribute and values from, a manual DB snapshot.</p> <p>To share a manual DB snapshot with other AWS accounts, specify <code>restore</code> as the <code>AttributeName</code> and use the <code>ValuesToAdd</code> parameter to add a list of IDs of the AWS accounts that are authorized to restore the manual DB snapshot. Uses the value <code>all</code> to make the manual DB snapshot public, which means it can be copied or restored by all AWS accounts. Do not add the <code>all</code> value for any manual DB snapshots that contain private information that you don''t want available to all AWS accounts. If the manual DB snapshot is encrypted, it can be shared, but only by specifying a list of authorized AWS account IDs for the <code>ValuesToAdd</code> parameter. You can''t use <code>all</code> as a value for that parameter in this case.</p> <p>To view which AWS accounts have access to copy or restore a manual DB snapshot, or whether a manual DB snapshot public or private, use the <a>DescribeDBSnapshotAttributes</a> API action.</p>'
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ModifyDBSnapshotAttributeResult'
        '480':
          description: DBSnapshotNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBSnapshotNotFoundFault'
        '481':
          description: InvalidDBSnapshotStateFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidDBSnapshotStateFault'
        '482':
          description: SharedSnapshotQuotaExceededFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SharedSnapshotQuotaExceededFault'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifyDBSnapshotAttributeMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#ModifyDBSubnetGroup':
    post:
      operationId: ModifyDBSubnetGroup
      description: Modifies an existing DB subnet group. DB subnet groups must contain at least one subnet in at least two AZs in the region.
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ModifyDBSubnetGroupResult'
        '480':
          description: DBSubnetGroupNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBSubnetGroupNotFoundFault'
        '481':
          description: DBSubnetQuotaExceededFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBSubnetQuotaExceededFault'
        '482':
          description: SubnetAlreadyInUse
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SubnetAlreadyInUse'
        '483':
          description: DBSubnetGroupDoesNotCoverEnoughAZs
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBSubnetGroupDoesNotCoverEnoughAZs'
        '484':
          description: InvalidSubnet
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidSubnet'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifyDBSubnetGroupMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#ModifyEventSubscription':
    post:
      operationId: ModifyEventSubscription
      description: '<p>Modifies an existing RDS event notification subscription. Note that you cannot modify the source identifiers using this call; to change source identifiers for a subscription, use the <a>AddSourceIdentifierToSubscription</a> and <a>RemoveSourceIdentifierFromSubscription</a> calls.</p> <p>You can see a list of the event categories for a given SourceType in the <a href="http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Events.html">Events</a> topic in the Amazon RDS User Guide or by using the <b>DescribeEventCategories</b> action.</p>'
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ModifyEventSubscriptionResult'
        '480':
          description: EventSubscriptionQuotaExceededFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EventSubscriptionQuotaExceededFault'
        '481':
          description: SubscriptionNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SubscriptionNotFoundFault'
        '482':
          description: SNSInvalidTopicFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SNSInvalidTopicFault'
        '483':
          description: SNSNoAuthorizationFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SNSNoAuthorizationFault'
        '484':
          description: SNSTopicArnNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SNSTopicArnNotFoundFault'
        '485':
          description: SubscriptionCategoryNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SubscriptionCategoryNotFoundFault'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifyEventSubscriptionMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#ModifyOptionGroup':
    post:
      operationId: ModifyOptionGroup
      description: Modifies an existing option group.
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ModifyOptionGroupResult'
        '480':
          description: InvalidOptionGroupStateFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidOptionGroupStateFault'
        '481':
          description: OptionGroupNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OptionGroupNotFoundFault'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifyOptionGroupMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#PromoteReadReplica':
    post:
      operationId: PromoteReadReplica
      description: '<p>Promotes a Read Replica DB instance to a standalone DB instance.</p> <note> <p>We recommend that you enable automated backups on your Read Replica before promoting the Read Replica. This ensures that no backup is taken during the promotion process. Once the instance is promoted to a primary instance, backups are taken based on your backup settings.</p> </note>'
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PromoteReadReplicaResult'
        '480':
          description: InvalidDBInstanceStateFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidDBInstanceStateFault'
        '481':
          description: DBInstanceNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBInstanceNotFoundFault'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PromoteReadReplicaMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#PromoteReadReplicaDBCluster':
    post:
      operationId: PromoteReadReplicaDBCluster
      description: Promotes a Read Replica DB cluster to a standalone DB cluster.
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PromoteReadReplicaDBClusterResult'
        '480':
          description: DBClusterNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBClusterNotFoundFault'
        '481':
          description: InvalidDBClusterStateFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidDBClusterStateFault'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PromoteReadReplicaDBClusterMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#PurchaseReservedDBInstancesOffering':
    post:
      operationId: PurchaseReservedDBInstancesOffering
      description: Purchases a reserved DB instance offering.
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PurchaseReservedDBInstancesOfferingResult'
        '480':
          description: ReservedDBInstancesOfferingNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ReservedDBInstancesOfferingNotFoundFault'
        '481':
          description: ReservedDBInstanceAlreadyExistsFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ReservedDBInstanceAlreadyExistsFault'
        '482':
          description: ReservedDBInstanceQuotaExceededFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ReservedDBInstanceQuotaExceededFault'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurchaseReservedDBInstancesOfferingMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#RebootDBInstance':
    post:
      operationId: RebootDBInstance
      description: '<p>Rebooting a DB instance restarts the database engine service. A reboot also applies to the DB instance any modifications to the associated DB parameter group that were pending. Rebooting a DB instance results in a momentary outage of the instance, during which the DB instance status is set to rebooting. If the RDS instance is configured for MultiAZ, it is possible that the reboot will be conducted through a failover. An Amazon RDS event is created when the reboot is completed.</p> <p>If your DB instance is deployed in multiple Availability Zones, you can force a failover from one AZ to the other during the reboot. You might force a failover to test the availability of your DB instance deployment or to restore operations to the original AZ after a failover occurs.</p> <p>The time required to reboot is a function of the specific database engine''s crash recovery process. To improve the reboot time, we recommend that you reduce database activities as much as possible during the reboot process to reduce rollback activity for in-transit transactions.</p>'
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RebootDBInstanceResult'
        '480':
          description: InvalidDBInstanceStateFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidDBInstanceStateFault'
        '481':
          description: DBInstanceNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBInstanceNotFoundFault'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RebootDBInstanceMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#RemoveRoleFromDBCluster':
    post:
      operationId: RemoveRoleFromDBCluster
      description: 'Disassociates an Identity and Access Management (IAM) role from an Aurora DB cluster. For more information, see <a href="http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Aurora.Authorizing.AWSServices.html">Authorizing Amazon Aurora to Access Other AWS Services On Your Behalf</a>.'
      responses:
        '200':
          description: Success
        '480':
          description: DBClusterNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBClusterNotFoundFault'
        '481':
          description: DBClusterRoleNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBClusterRoleNotFoundFault'
        '482':
          description: InvalidDBClusterStateFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidDBClusterStateFault'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoveRoleFromDBClusterMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#RemoveSourceIdentifierFromSubscription':
    post:
      operationId: RemoveSourceIdentifierFromSubscription
      description: Removes a source identifier from an existing RDS event notification subscription.
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RemoveSourceIdentifierFromSubscriptionResult'
        '480':
          description: SubscriptionNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SubscriptionNotFoundFault'
        '481':
          description: SourceNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SourceNotFoundFault'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoveSourceIdentifierFromSubscriptionMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#RemoveTagsFromResource':
    post:
      operationId: RemoveTagsFromResource
      description: '<p>Removes metadata tags from an Amazon RDS resource.</p> <p>For an overview on tagging an Amazon RDS resource, see <a href="http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Overview.Tagging.html">Tagging Amazon RDS Resources</a>.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: DBInstanceNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBInstanceNotFoundFault'
        '481':
          description: DBSnapshotNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBSnapshotNotFoundFault'
        '482':
          description: DBClusterNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBClusterNotFoundFault'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoveTagsFromResourceMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#ResetDBClusterParameterGroup':
    post:
      operationId: ResetDBClusterParameterGroup
      description: '<p> Modifies the parameters of a DB cluster parameter group to the default value. To reset specific parameters submit a list of the following: <code>ParameterName</code> and <code>ApplyMethod</code>. To reset the entire DB cluster parameter group, specify the <code>DBClusterParameterGroupName</code> and <code>ResetAllParameters</code> parameters. </p> <p> When resetting the entire group, dynamic parameters are updated immediately and static parameters are set to <code>pending-reboot</code> to take effect on the next DB instance restart or <a>RebootDBInstance</a> request. You must call <a>RebootDBInstance</a> for every DB instance in your DB cluster that you want the updated static parameter to apply to.</p> <p>For more information on Amazon Aurora, see <a href="http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Aurora.html">Aurora on Amazon RDS</a> in the <i>Amazon RDS User Guide.</i> </p>'
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBClusterParameterGroupNameMessage'
        '480':
          description: InvalidDBParameterGroupStateFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidDBParameterGroupStateFault'
        '481':
          description: DBParameterGroupNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBParameterGroupNotFoundFault'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetDBClusterParameterGroupMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#ResetDBParameterGroup':
    post:
      operationId: ResetDBParameterGroup
      description: ' Modifies the parameters of a DB parameter group to the engine/system default value. To reset specific parameters, provide a list of the following: <code>ParameterName</code> and <code>ApplyMethod</code>. To reset the entire DB parameter group, specify the <code>DBParameterGroup</code> name and <code>ResetAllParameters</code> parameters. When resetting the entire group, dynamic parameters are updated immediately and static parameters are set to <code>pending-reboot</code> to take effect on the next DB instance restart or <code>RebootDBInstance</code> request. '
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBParameterGroupNameMessage'
        '480':
          description: InvalidDBParameterGroupStateFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidDBParameterGroupStateFault'
        '481':
          description: DBParameterGroupNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBParameterGroupNotFoundFault'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetDBParameterGroupMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#RestoreDBClusterFromS3':
    post:
      operationId: RestoreDBClusterFromS3
      description: 'Creates an Amazon Aurora DB cluster from data stored in an Amazon S3 bucket. Amazon RDS must be authorized to access the Amazon S3 bucket and the data must be created using the Percona XtraBackup utility as described in <a href="http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Aurora.Migrate.MySQL.html#Aurora.Migrate.MySQL.S3">Migrating Data from MySQL by Using an Amazon S3 Bucket</a>.'
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestoreDBClusterFromS3Result'
        '480':
          description: DBClusterAlreadyExistsFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBClusterAlreadyExistsFault'
        '481':
          description: DBClusterQuotaExceededFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBClusterQuotaExceededFault'
        '482':
          description: StorageQuotaExceededFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StorageQuotaExceededFault'
        '483':
          description: DBSubnetGroupNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBSubnetGroupNotFoundFault'
        '484':
          description: InvalidVPCNetworkStateFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidVPCNetworkStateFault'
        '485':
          description: InvalidDBClusterStateFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidDBClusterStateFault'
        '486':
          description: InvalidDBSubnetGroupStateFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidDBSubnetGroupStateFault'
        '487':
          description: InvalidSubnet
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidSubnet'
        '488':
          description: InvalidS3BucketFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidS3BucketFault'
        '489':
          description: DBClusterParameterGroupNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBClusterParameterGroupNotFoundFault'
        '490':
          description: KMSKeyNotAccessibleFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/KMSKeyNotAccessibleFault'
        '491':
          description: DBClusterNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBClusterNotFoundFault'
        '492':
          description: InsufficientStorageClusterCapacityFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InsufficientStorageClusterCapacityFault'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestoreDBClusterFromS3Message'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#RestoreDBClusterFromSnapshot':
    post:
      operationId: RestoreDBClusterFromSnapshot
      description: '<p>Creates a new DB cluster from a DB cluster snapshot. The target DB cluster is created from the source DB cluster restore point with the same configuration as the original source DB cluster, except that the new DB cluster is created with the default security group.</p> <p>For more information on Amazon Aurora, see <a href="http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Aurora.html">Aurora on Amazon RDS</a> in the <i>Amazon RDS User Guide.</i> </p>'
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestoreDBClusterFromSnapshotResult'
        '480':
          description: DBClusterAlreadyExistsFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBClusterAlreadyExistsFault'
        '481':
          description: DBClusterQuotaExceededFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBClusterQuotaExceededFault'
        '482':
          description: StorageQuotaExceededFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StorageQuotaExceededFault'
        '483':
          description: DBSubnetGroupNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBSubnetGroupNotFoundFault'
        '484':
          description: DBSnapshotNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBSnapshotNotFoundFault'
        '485':
          description: DBClusterSnapshotNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBClusterSnapshotNotFoundFault'
        '486':
          description: InsufficientDBClusterCapacityFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InsufficientDBClusterCapacityFault'
        '487':
          description: InsufficientStorageClusterCapacityFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InsufficientStorageClusterCapacityFault'
        '488':
          description: InvalidDBSnapshotStateFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidDBSnapshotStateFault'
        '489':
          description: InvalidDBClusterSnapshotStateFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidDBClusterSnapshotStateFault'
        '490':
          description: StorageQuotaExceededFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StorageQuotaExceededFault'
        '491':
          description: InvalidVPCNetworkStateFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidVPCNetworkStateFault'
        '492':
          description: InvalidRestoreFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidRestoreFault'
        '493':
          description: DBSubnetGroupNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBSubnetGroupNotFoundFault'
        '494':
          description: InvalidSubnet
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidSubnet'
        '495':
          description: OptionGroupNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OptionGroupNotFoundFault'
        '496':
          description: KMSKeyNotAccessibleFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/KMSKeyNotAccessibleFault'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestoreDBClusterFromSnapshotMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#RestoreDBClusterToPointInTime':
    post:
      operationId: RestoreDBClusterToPointInTime
      description: '<p>Restores a DB cluster to an arbitrary point in time. Users can restore to any point in time before <code>LatestRestorableTime</code> for up to <code>BackupRetentionPeriod</code> days. The target DB cluster is created from the source DB cluster with the same configuration as the original DB cluster, except that the new DB cluster is created with the default DB security group. </p> <p>For more information on Amazon Aurora, see <a href="http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Aurora.html">Aurora on Amazon RDS</a> in the <i>Amazon RDS User Guide.</i> </p>'
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestoreDBClusterToPointInTimeResult'
        '480':
          description: DBClusterAlreadyExistsFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBClusterAlreadyExistsFault'
        '481':
          description: DBClusterNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBClusterNotFoundFault'
        '482':
          description: DBClusterQuotaExceededFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBClusterQuotaExceededFault'
        '483':
          description: DBClusterSnapshotNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBClusterSnapshotNotFoundFault'
        '484':
          description: DBSubnetGroupNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBSubnetGroupNotFoundFault'
        '485':
          description: InsufficientDBClusterCapacityFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InsufficientDBClusterCapacityFault'
        '486':
          description: InsufficientStorageClusterCapacityFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InsufficientStorageClusterCapacityFault'
        '487':
          description: InvalidDBClusterSnapshotStateFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidDBClusterSnapshotStateFault'
        '488':
          description: InvalidDBClusterStateFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidDBClusterStateFault'
        '489':
          description: InvalidDBSnapshotStateFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidDBSnapshotStateFault'
        '490':
          description: InvalidRestoreFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidRestoreFault'
        '491':
          description: InvalidSubnet
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidSubnet'
        '492':
          description: InvalidVPCNetworkStateFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidVPCNetworkStateFault'
        '493':
          description: KMSKeyNotAccessibleFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/KMSKeyNotAccessibleFault'
        '494':
          description: OptionGroupNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OptionGroupNotFoundFault'
        '495':
          description: StorageQuotaExceededFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StorageQuotaExceededFault'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestoreDBClusterToPointInTimeMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#RestoreDBInstanceFromDBSnapshot':
    post:
      operationId: RestoreDBInstanceFromDBSnapshot
      description: '<p>Creates a new DB instance from a DB snapshot. The target database is created from the source database restore point with the most of original configuration with the default security group and the default DB parameter group. By default, the new DB instance is created as a single-AZ deployment except when the instance is a SQL Server instance that has an option group that is associated with mirroring; in this case, the instance becomes a mirrored AZ deployment and not a single-AZ deployment.</p> <p>If your intent is to replace your original DB instance with the new, restored DB instance, then rename your original DB instance before you call the RestoreDBInstanceFromDBSnapshot action. RDS does not allow two DB instances with the same name. Once you have renamed your original DB instance with a different identifier, then you can pass the original name of the DB instance as the DBInstanceIdentifier in the call to the RestoreDBInstanceFromDBSnapshot action. The result is that you will replace the original DB instance with the DB instance created from the snapshot.</p> <p>If you are restoring from a shared manual DB snapshot, the <code>DBSnapshotIdentifier</code> must be the ARN of the shared DB snapshot.</p>'
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestoreDBInstanceFromDBSnapshotResult'
        '480':
          description: DBInstanceAlreadyExistsFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBInstanceAlreadyExistsFault'
        '481':
          description: DBSnapshotNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBSnapshotNotFoundFault'
        '482':
          description: InstanceQuotaExceededFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InstanceQuotaExceededFault'
        '483':
          description: InsufficientDBInstanceCapacityFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InsufficientDBInstanceCapacityFault'
        '484':
          description: InvalidDBSnapshotStateFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidDBSnapshotStateFault'
        '485':
          description: StorageQuotaExceededFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StorageQuotaExceededFault'
        '486':
          description: InvalidVPCNetworkStateFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidVPCNetworkStateFault'
        '487':
          description: InvalidRestoreFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidRestoreFault'
        '488':
          description: DBSubnetGroupNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBSubnetGroupNotFoundFault'
        '489':
          description: DBSubnetGroupDoesNotCoverEnoughAZs
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBSubnetGroupDoesNotCoverEnoughAZs'
        '490':
          description: InvalidSubnet
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidSubnet'
        '491':
          description: ProvisionedIopsNotAvailableInAZFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProvisionedIopsNotAvailableInAZFault'
        '492':
          description: OptionGroupNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OptionGroupNotFoundFault'
        '493':
          description: StorageTypeNotSupportedFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StorageTypeNotSupportedFault'
        '494':
          description: AuthorizationNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AuthorizationNotFoundFault'
        '495':
          description: KMSKeyNotAccessibleFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/KMSKeyNotAccessibleFault'
        '496':
          description: DBSecurityGroupNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBSecurityGroupNotFoundFault'
        '497':
          description: DomainNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DomainNotFoundFault'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestoreDBInstanceFromDBSnapshotMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#RestoreDBInstanceToPointInTime':
    post:
      operationId: RestoreDBInstanceToPointInTime
      description: '<p>Restores a DB instance to an arbitrary point in time. You can restore to any point in time before the time identified by the LatestRestorableTime property. You can restore to a point up to the number of days specified by the BackupRetentionPeriod property.</p> <p>The target database is created with most of the original configuration, but in a system-selected availability zone, with the default security group, the default subnet group, and the default DB parameter group. By default, the new DB instance is created as a single-AZ deployment except when the instance is a SQL Server instance that has an option group that is associated with mirroring; in this case, the instance becomes a mirrored deployment and not a single-AZ deployment.</p>'
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestoreDBInstanceToPointInTimeResult'
        '480':
          description: DBInstanceAlreadyExistsFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBInstanceAlreadyExistsFault'
        '481':
          description: DBInstanceNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBInstanceNotFoundFault'
        '482':
          description: InstanceQuotaExceededFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InstanceQuotaExceededFault'
        '483':
          description: InsufficientDBInstanceCapacityFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InsufficientDBInstanceCapacityFault'
        '484':
          description: InvalidDBInstanceStateFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidDBInstanceStateFault'
        '485':
          description: PointInTimeRestoreNotEnabledFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PointInTimeRestoreNotEnabledFault'
        '486':
          description: StorageQuotaExceededFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StorageQuotaExceededFault'
        '487':
          description: InvalidVPCNetworkStateFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidVPCNetworkStateFault'
        '488':
          description: InvalidRestoreFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidRestoreFault'
        '489':
          description: DBSubnetGroupNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBSubnetGroupNotFoundFault'
        '490':
          description: DBSubnetGroupDoesNotCoverEnoughAZs
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBSubnetGroupDoesNotCoverEnoughAZs'
        '491':
          description: InvalidSubnet
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidSubnet'
        '492':
          description: ProvisionedIopsNotAvailableInAZFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProvisionedIopsNotAvailableInAZFault'
        '493':
          description: OptionGroupNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OptionGroupNotFoundFault'
        '494':
          description: StorageTypeNotSupportedFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StorageTypeNotSupportedFault'
        '495':
          description: AuthorizationNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AuthorizationNotFoundFault'
        '496':
          description: KMSKeyNotAccessibleFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/KMSKeyNotAccessibleFault'
        '497':
          description: DBSecurityGroupNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBSecurityGroupNotFoundFault'
        '498':
          description: DomainNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DomainNotFoundFault'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestoreDBInstanceToPointInTimeMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#RevokeDBSecurityGroupIngress':
    post:
      operationId: RevokeDBSecurityGroupIngress
      description: 'Revokes ingress from a DBSecurityGroup for previously authorized IP ranges or EC2 or VPC Security Groups. Required parameters for this API are one of CIDRIP, EC2SecurityGroupId for VPC, or (EC2SecurityGroupOwnerId and either EC2SecurityGroupName or EC2SecurityGroupId).'
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RevokeDBSecurityGroupIngressResult'
        '480':
          description: DBSecurityGroupNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBSecurityGroupNotFoundFault'
        '481':
          description: AuthorizationNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AuthorizationNotFoundFault'
        '482':
          description: InvalidDBSecurityGroupStateFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidDBSecurityGroupStateFault'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RevokeDBSecurityGroupIngressMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#StartDBInstance':
    post:
      operationId: StartDBInstance
      description: ' Starts a DB instance that was stopped using the AWS console, the stop-db-instance AWS CLI command, or the StopDBInstance action. For more information, see Stopping and Starting a DB instance in the AWS RDS user guide. '
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StartDBInstanceResult'
        '480':
          description: DBInstanceNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBInstanceNotFoundFault'
        '481':
          description: InvalidDBInstanceStateFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidDBInstanceStateFault'
        '482':
          description: InsufficientDBInstanceCapacityFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InsufficientDBInstanceCapacityFault'
        '483':
          description: DBSubnetGroupNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBSubnetGroupNotFoundFault'
        '484':
          description: DBSubnetGroupDoesNotCoverEnoughAZs
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBSubnetGroupDoesNotCoverEnoughAZs'
        '485':
          description: InvalidDBClusterStateFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidDBClusterStateFault'
        '486':
          description: InvalidSubnet
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidSubnet'
        '487':
          description: InvalidVPCNetworkStateFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidVPCNetworkStateFault'
        '488':
          description: DBClusterNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBClusterNotFoundFault'
        '489':
          description: AuthorizationNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AuthorizationNotFoundFault'
        '490':
          description: KMSKeyNotAccessibleFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/KMSKeyNotAccessibleFault'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartDBInstanceMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#StopDBInstance':
    post:
      operationId: StopDBInstance
      description: ' Stops a DB instance. When you stop a DB instance, Amazon RDS retains the DB instance''s metadata, including its endpoint, DB parameter group, and option group membership. Amazon RDS also retains the transaction logs so you can do a point-in-time restore if necessary. For more information, see Stopping and Starting a DB instance in the AWS RDS user guide. '
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StopDBInstanceResult'
        '480':
          description: DBInstanceNotFoundFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBInstanceNotFoundFault'
        '481':
          description: InvalidDBInstanceStateFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidDBInstanceStateFault'
        '482':
          description: DBSnapshotAlreadyExistsFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DBSnapshotAlreadyExistsFault'
        '483':
          description: SnapshotQuotaExceededFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SnapshotQuotaExceededFault'
        '484':
          description: InvalidDBClusterStateFault
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvalidDBClusterStateFault'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StopDBInstanceMessage'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
components:
  schemas:
    AccountAttributesMessage:
      type: object
      properties:
        AccountQuotas:
          $ref: '#/components/schemas/AccountQuotaList'
      description: Data returned by the <b>DescribeAccountAttributes</b> action.
    AccountQuota:
      type: object
      properties:
        AccountQuotaName:
          $ref: '#/components/schemas/String'
        Used:
          $ref: '#/components/schemas/Long'
        Max:
          $ref: '#/components/schemas/Long'
      description: 'Describes a quota for an AWS account, for example, the number of DB instances allowed.'
    AccountQuotaList:
      type: array
      items:
        $ref: '#/components/schemas/AccountQuota'
    AddRoleToDBClusterMessage:
      type: object
      required:
        - DBClusterIdentifier
        - RoleArn
      properties:
        DBClusterIdentifier:
          $ref: '#/components/schemas/String'
        RoleArn:
          $ref: '#/components/schemas/String'
    AddSourceIdentifierToSubscriptionMessage:
      type: object
      required:
        - SubscriptionName
        - SourceIdentifier
      properties:
        SubscriptionName:
          $ref: '#/components/schemas/String'
        SourceIdentifier:
          $ref: '#/components/schemas/String'
      description: <p/>
    AddSourceIdentifierToSubscriptionResult:
      type: object
      properties:
        EventSubscription:
          $ref: '#/components/schemas/EventSubscription'
    AddTagsToResourceMessage:
      type: object
      required:
        - ResourceName
        - Tags
      properties:
        ResourceName:
          $ref: '#/components/schemas/String'
        Tags:
          $ref: '#/components/schemas/TagList'
      description: <p/>
    ApplyMethod:
      type: string
      enum:
        - immediate
        - pending-reboot
    ApplyPendingMaintenanceActionMessage:
      type: object
      required:
        - ResourceIdentifier
        - ApplyAction
        - OptInType
      properties:
        ResourceIdentifier:
          $ref: '#/components/schemas/String'
        ApplyAction:
          $ref: '#/components/schemas/String'
        OptInType:
          $ref: '#/components/schemas/String'
      description: <p/>
    ApplyPendingMaintenanceActionResult:
      type: object
      properties:
        ResourcePendingMaintenanceActions:
          $ref: '#/components/schemas/ResourcePendingMaintenanceActions'
    AttributeValueList:
      type: array
      items:
        $ref: '#/components/schemas/String'
    AuthorizationAlreadyExistsFault:
      type: object
      properties: {}
      description: The specified CIDRIP or EC2 security group is already authorized for the specified DB security group.
    AuthorizationNotFoundFault:
      type: object
      properties: {}
      description: <p>Specified CIDRIP or EC2 security group is not authorized for the specified DB security group.</p> <p>RDS may not also be authorized via IAM to perform necessary actions on your behalf.</p>
    AuthorizationQuotaExceededFault:
      type: object
      properties: {}
      description: DB security group authorization quota has been reached.
    AuthorizeDBSecurityGroupIngressMessage:
      type: object
      required:
        - DBSecurityGroupName
      properties:
        DBSecurityGroupName:
          $ref: '#/components/schemas/String'
        CIDRIP:
          $ref: '#/components/schemas/String'
        EC2SecurityGroupName:
          $ref: '#/components/schemas/String'
        EC2SecurityGroupId:
          $ref: '#/components/schemas/String'
        EC2SecurityGroupOwnerId:
          $ref: '#/components/schemas/String'
      description: <p/>
    AuthorizeDBSecurityGroupIngressResult:
      type: object
      properties:
        DBSecurityGroup:
          $ref: '#/components/schemas/DBSecurityGroup'
    AvailabilityZone:
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/String'
      description: '<p>Contains Availability Zone information.</p> <p> This data type is used as an element in the following data type:</p> <ul> <li> <p> <a>OrderableDBInstanceOption</a> </p> </li> </ul>'
    AvailabilityZoneList:
      type: array
      items:
        $ref: '#/components/schemas/AvailabilityZone'
    AvailabilityZones:
      type: array
      items:
        $ref: '#/components/schemas/String'
    Boolean:
      type: boolean
    BooleanOptional:
      type: boolean
    Certificate:
      type: object
      properties:
        CertificateIdentifier:
          $ref: '#/components/schemas/String'
        CertificateType:
          $ref: '#/components/schemas/String'
        Thumbprint:
          $ref: '#/components/schemas/String'
        ValidFrom:
          $ref: '#/components/schemas/TStamp'
        ValidTill:
          $ref: '#/components/schemas/TStamp'
        CertificateArn:
          $ref: '#/components/schemas/String'
      description: A CA certificate for an AWS account.
    CertificateList:
      type: array
      items:
        $ref: '#/components/schemas/Certificate'
    CertificateMessage:
      type: object
      properties:
        Certificates:
          $ref: '#/components/schemas/CertificateList'
        Marker:
          $ref: '#/components/schemas/String'
      description: Data returned by the <b>DescribeCertificates</b> action.
    CertificateNotFoundFault:
      type: object
      properties: {}
      description: ' <i>CertificateIdentifier</i> does not refer to an existing certificate. '
    CharacterSet:
      type: object
      properties:
        CharacterSetName:
          $ref: '#/components/schemas/String'
        CharacterSetDescription:
          $ref: '#/components/schemas/String'
      description: ' This data type is used as a response element in the action <a>DescribeDBEngineVersions</a>. '
    CopyDBClusterParameterGroupMessage:
      type: object
      required:
        - SourceDBClusterParameterGroupIdentifier
        - TargetDBClusterParameterGroupIdentifier
        - TargetDBClusterParameterGroupDescription
      properties:
        SourceDBClusterParameterGroupIdentifier:
          $ref: '#/components/schemas/String'
        TargetDBClusterParameterGroupIdentifier:
          $ref: '#/components/schemas/String'
        TargetDBClusterParameterGroupDescription:
          $ref: '#/components/schemas/String'
        Tags:
          $ref: '#/components/schemas/TagList'
    CopyDBClusterParameterGroupResult:
      type: object
      properties:
        DBClusterParameterGroup:
          $ref: '#/components/schemas/DBClusterParameterGroup'
    CopyDBClusterSnapshotMessage:
      type: object
      required:
        - SourceDBClusterSnapshotIdentifier
        - TargetDBClusterSnapshotIdentifier
      properties:
        SourceDBClusterSnapshotIdentifier:
          $ref: '#/components/schemas/String'
        TargetDBClusterSnapshotIdentifier:
          $ref: '#/components/schemas/String'
        KmsKeyId:
          $ref: '#/components/schemas/String'
        PreSignedUrl:
          $ref: '#/components/schemas/String'
        CopyTags:
          $ref: '#/components/schemas/BooleanOptional'
        Tags:
          $ref: '#/components/schemas/TagList'
        SourceRegion:
          $ref: '#/components/schemas/String'
      description: <p/>
    CopyDBClusterSnapshotResult:
      type: object
      properties:
        DBClusterSnapshot:
          $ref: '#/components/schemas/DBClusterSnapshot'
    CopyDBParameterGroupMessage:
      type: object
      required:
        - SourceDBParameterGroupIdentifier
        - TargetDBParameterGroupIdentifier
        - TargetDBParameterGroupDescription
      properties:
        SourceDBParameterGroupIdentifier:
          $ref: '#/components/schemas/String'
        TargetDBParameterGroupIdentifier:
          $ref: '#/components/schemas/String'
        TargetDBParameterGroupDescription:
          $ref: '#/components/schemas/String'
        Tags:
          $ref: '#/components/schemas/TagList'
      description: <p/>
    CopyDBParameterGroupResult:
      type: object
      properties:
        DBParameterGroup:
          $ref: '#/components/schemas/DBParameterGroup'
    CopyDBSnapshotMessage:
      type: object
      required:
        - SourceDBSnapshotIdentifier
        - TargetDBSnapshotIdentifier
      properties:
        SourceDBSnapshotIdentifier:
          $ref: '#/components/schemas/String'
        TargetDBSnapshotIdentifier:
          $ref: '#/components/schemas/String'
        KmsKeyId:
          $ref: '#/components/schemas/String'
        Tags:
          $ref: '#/components/schemas/TagList'
        CopyTags:
          $ref: '#/components/schemas/BooleanOptional'
        PreSignedUrl:
          $ref: '#/components/schemas/String'
        OptionGroupName:
          $ref: '#/components/schemas/String'
        SourceRegion:
          $ref: '#/components/schemas/String'
      description: <p/>
    CopyDBSnapshotResult:
      type: object
      properties:
        DBSnapshot:
          $ref: '#/components/schemas/DBSnapshot'
    CopyOptionGroupMessage:
      type: object
      required:
        - SourceOptionGroupIdentifier
        - TargetOptionGroupIdentifier
        - TargetOptionGroupDescription
      properties:
        SourceOptionGroupIdentifier:
          $ref: '#/components/schemas/String'
        TargetOptionGroupIdentifier:
          $ref: '#/components/schemas/String'
        TargetOptionGroupDescription:
          $ref: '#/components/schemas/String'
        Tags:
          $ref: '#/components/schemas/TagList'
      description: <p/>
    CopyOptionGroupResult:
      type: object
      properties:
        OptionGroup:
          $ref: '#/components/schemas/OptionGroup'
    CreateDBClusterMessage:
      type: object
      required:
        - DBClusterIdentifier
        - Engine
      properties:
        AvailabilityZones:
          $ref: '#/components/schemas/AvailabilityZones'
        BackupRetentionPeriod:
          $ref: '#/components/schemas/IntegerOptional'
        CharacterSetName:
          $ref: '#/components/schemas/String'
        DatabaseName:
          $ref: '#/components/schemas/String'
        DBClusterIdentifier:
          $ref: '#/components/schemas/String'
        DBClusterParameterGroupName:
          $ref: '#/components/schemas/String'
        VpcSecurityGroupIds:
          $ref: '#/components/schemas/VpcSecurityGroupIdList'
        DBSubnetGroupName:
          $ref: '#/components/schemas/String'
        Engine:
          $ref: '#/components/schemas/String'
        EngineVersion:
          $ref: '#/components/schemas/String'
        Port:
          $ref: '#/components/schemas/IntegerOptional'
        MasterUsername:
          $ref: '#/components/schemas/String'
        MasterUserPassword:
          $ref: '#/components/schemas/String'
        OptionGroupName:
          $ref: '#/components/schemas/String'
        PreferredBackupWindow:
          $ref: '#/components/schemas/String'
        PreferredMaintenanceWindow:
          $ref: '#/components/schemas/String'
        ReplicationSourceIdentifier:
          $ref: '#/components/schemas/String'
        Tags:
          $ref: '#/components/schemas/TagList'
        StorageEncrypted:
          $ref: '#/components/schemas/BooleanOptional'
        KmsKeyId:
          $ref: '#/components/schemas/String'
        PreSignedUrl:
          $ref: '#/components/schemas/String'
        EnableIAMDatabaseAuthentication:
          $ref: '#/components/schemas/BooleanOptional'
        SourceRegion:
          $ref: '#/components/schemas/String'
      description: <p/>
    CreateDBClusterParameterGroupMessage:
      type: object
      required:
        - DBClusterParameterGroupName
        - DBParameterGroupFamily
        - Description
      properties:
        DBClusterParameterGroupName:
          $ref: '#/components/schemas/String'
        DBParameterGroupFamily:
          $ref: '#/components/schemas/String'
        Description:
          $ref: '#/components/schemas/String'
        Tags:
          $ref: '#/components/schemas/TagList'
      description: <p/>
    CreateDBClusterParameterGroupResult:
      type: object
      properties:
        DBClusterParameterGroup:
          $ref: '#/components/schemas/DBClusterParameterGroup'
    CreateDBClusterResult:
      type: object
      properties:
        DBCluster:
          $ref: '#/components/schemas/DBCluster'
    CreateDBClusterSnapshotMessage:
      type: object
      required:
        - DBClusterSnapshotIdentifier
        - DBClusterIdentifier
      properties:
        DBClusterSnapshotIdentifier:
          $ref: '#/components/schemas/String'
        DBClusterIdentifier:
          $ref: '#/components/schemas/String'
        Tags:
          $ref: '#/components/schemas/TagList'
      description: <p/>
    CreateDBClusterSnapshotResult:
      type: object
      properties:
        DBClusterSnapshot:
          $ref: '#/components/schemas/DBClusterSnapshot'
    CreateDBInstanceMessage:
      type: object
      required:
        - DBInstanceIdentifier
        - DBInstanceClass
        - Engine
      properties:
        DBName:
          $ref: '#/components/schemas/String'
        DBInstanceIdentifier:
          $ref: '#/components/schemas/String'
        AllocatedStorage:
          $ref: '#/components/schemas/IntegerOptional'
        DBInstanceClass:
          $ref: '#/components/schemas/String'
        Engine:
          $ref: '#/components/schemas/String'
        MasterUsername:
          $ref: '#/components/schemas/String'
        MasterUserPassword:
          $ref: '#/components/schemas/String'
        DBSecurityGroups:
          $ref: '#/components/schemas/DBSecurityGroupNameList'
        VpcSecurityGroupIds:
          $ref: '#/components/schemas/VpcSecurityGroupIdList'
        AvailabilityZone:
          $ref: '#/components/schemas/String'
        DBSubnetGroupName:
          $ref: '#/components/schemas/String'
        PreferredMaintenanceWindow:
          $ref: '#/components/schemas/String'
        DBParameterGroupName:
          $ref: '#/components/schemas/String'
        BackupRetentionPeriod:
          $ref: '#/components/schemas/IntegerOptional'
        PreferredBackupWindow:
          $ref: '#/components/schemas/String'
        Port:
          $ref: '#/components/schemas/IntegerOptional'
        MultiAZ:
          $ref: '#/components/schemas/BooleanOptional'
        EngineVersion:
          $ref: '#/components/schemas/String'
        AutoMinorVersionUpgrade:
          $ref: '#/components/schemas/BooleanOptional'
        LicenseModel:
          $ref: '#/components/schemas/String'
        Iops:
          $ref: '#/components/schemas/IntegerOptional'
        OptionGroupName:
          $ref: '#/components/schemas/String'
        CharacterSetName:
          $ref: '#/components/schemas/String'
        PubliclyAccessible:
          $ref: '#/components/schemas/BooleanOptional'
        Tags:
          $ref: '#/components/schemas/TagList'
        DBClusterIdentifier:
          $ref: '#/components/schemas/String'
        StorageType:
          $ref: '#/components/schemas/String'
        TdeCredentialArn:
          $ref: '#/components/schemas/String'
        TdeCredentialPassword:
          $ref: '#/components/schemas/String'
        StorageEncrypted:
          $ref: '#/components/schemas/BooleanOptional'
        KmsKeyId:
          $ref: '#/components/schemas/String'
        Domain:
          $ref: '#/components/schemas/String'
        CopyTagsToSnapshot:
          $ref: '#/components/schemas/BooleanOptional'
        MonitoringInterval:
          $ref: '#/components/schemas/IntegerOptional'
        MonitoringRoleArn:
          $ref: '#/components/schemas/String'
        DomainIAMRoleName:
          $ref: '#/components/schemas/String'
        PromotionTier:
          $ref: '#/components/schemas/IntegerOptional'
        Timezone:
          $ref: '#/components/schemas/String'
        EnableIAMDatabaseAuthentication:
          $ref: '#/components/schemas/BooleanOptional'
      description: <p/>
    CreateDBInstanceReadReplicaMessage:
      type: object
      required:
        - DBInstanceIdentifier
        - SourceDBInstanceIdentifier
      properties:
        DBInstanceIdentifier:
          $ref: '#/components/schemas/String'
        SourceDBInstanceIdentifier:
          $ref: '#/components/schemas/String'
        DBInstanceClass:
          $ref: '#/components/schemas/String'
        AvailabilityZone:
          $ref: '#/components/schemas/String'
        Port:
          $ref: '#/components/schemas/IntegerOptional'
        AutoMinorVersionUpgrade:
          $ref: '#/components/schemas/BooleanOptional'
        Iops:
          $ref: '#/components/schemas/IntegerOptional'
        OptionGroupName:
          $ref: '#/components/schemas/String'
        PubliclyAccessible:
          $ref: '#/components/schemas/BooleanOptional'
        Tags:
          $ref: '#/components/schemas/TagList'
        DBSubnetGroupName:
          $ref: '#/components/schemas/String'
        StorageType:
          $ref: '#/components/schemas/String'
        CopyTagsToSnapshot:
          $ref: '#/components/schemas/BooleanOptional'
        MonitoringInterval:
          $ref: '#/components/schemas/IntegerOptional'
        MonitoringRoleArn:
          $ref: '#/components/schemas/String'
        KmsKeyId:
          $ref: '#/components/schemas/String'
        PreSignedUrl:
          $ref: '#/components/schemas/String'
        EnableIAMDatabaseAuthentication:
          $ref: '#/components/schemas/BooleanOptional'
        SourceRegion:
          $ref: '#/components/schemas/String'
    CreateDBInstanceReadReplicaResult:
      type: object
      properties:
        DBInstance:
          $ref: '#/components/schemas/DBInstance'
    CreateDBInstanceResult:
      type: object
      properties:
        DBInstance:
          $ref: '#/components/schemas/DBInstance'
    CreateDBParameterGroupMessage:
      type: object
      required:
        - DBParameterGroupName
        - DBParameterGroupFamily
        - Description
      properties:
        DBParameterGroupName:
          $ref: '#/components/schemas/String'
        DBParameterGroupFamily:
          $ref: '#/components/schemas/String'
        Description:
          $ref: '#/components/schemas/String'
        Tags:
          $ref: '#/components/schemas/TagList'
      description: <p/>
    CreateDBParameterGroupResult:
      type: object
      properties:
        DBParameterGroup:
          $ref: '#/components/schemas/DBParameterGroup'
    CreateDBSecurityGroupMessage:
      type: object
      required:
        - DBSecurityGroupName
        - DBSecurityGroupDescription
      properties:
        DBSecurityGroupName:
          $ref: '#/components/schemas/String'
        DBSecurityGroupDescription:
          $ref: '#/components/schemas/String'
        Tags:
          $ref: '#/components/schemas/TagList'
      description: <p/>
    CreateDBSecurityGroupResult:
      type: object
      properties:
        DBSecurityGroup:
          $ref: '#/components/schemas/DBSecurityGroup'
    CreateDBSnapshotMessage:
      type: object
      required:
        - DBSnapshotIdentifier
        - DBInstanceIdentifier
      properties:
        DBSnapshotIdentifier:
          $ref: '#/components/schemas/String'
        DBInstanceIdentifier:
          $ref: '#/components/schemas/String'
        Tags:
          $ref: '#/components/schemas/TagList'
      description: <p/>
    CreateDBSnapshotResult:
      type: object
      properties:
        DBSnapshot:
          $ref: '#/components/schemas/DBSnapshot'
    CreateDBSubnetGroupMessage:
      type: object
      required:
        - DBSubnetGroupName
        - DBSubnetGroupDescription
        - SubnetIds
      properties:
        DBSubnetGroupName:
          $ref: '#/components/schemas/String'
        DBSubnetGroupDescription:
          $ref: '#/components/schemas/String'
        SubnetIds:
          $ref: '#/components/schemas/SubnetIdentifierList'
        Tags:
          $ref: '#/components/schemas/TagList'
      description: <p/>
    CreateDBSubnetGroupResult:
      type: object
      properties:
        DBSubnetGroup:
          $ref: '#/components/schemas/DBSubnetGroup'
    CreateEventSubscriptionMessage:
      type: object
      required:
        - SubscriptionName
        - SnsTopicArn
      properties:
        SubscriptionName:
          $ref: '#/components/schemas/String'
        SnsTopicArn:
          $ref: '#/components/schemas/String'
        SourceType:
          $ref: '#/components/schemas/String'
        EventCategories:
          $ref: '#/components/schemas/EventCategoriesList'
        SourceIds:
          $ref: '#/components/schemas/SourceIdsList'
        Enabled:
          $ref: '#/components/schemas/BooleanOptional'
        Tags:
          $ref: '#/components/schemas/TagList'
      description: <p/>
    CreateEventSubscriptionResult:
      type: object
      properties:
        EventSubscription:
          $ref: '#/components/schemas/EventSubscription'
    CreateOptionGroupMessage:
      type: object
      required:
        - OptionGroupName
        - EngineName
        - MajorEngineVersion
        - OptionGroupDescription
      properties:
        OptionGroupName:
          $ref: '#/components/schemas/String'
        EngineName:
          $ref: '#/components/schemas/String'
        MajorEngineVersion:
          $ref: '#/components/schemas/String'
        OptionGroupDescription:
          $ref: '#/components/schemas/String'
        Tags:
          $ref: '#/components/schemas/TagList'
      description: <p/>
    CreateOptionGroupResult:
      type: object
      properties:
        OptionGroup:
          $ref: '#/components/schemas/OptionGroup'
    DBCluster:
      type: object
      properties:
        AllocatedStorage:
          $ref: '#/components/schemas/IntegerOptional'
        AvailabilityZones:
          $ref: '#/components/schemas/AvailabilityZones'
        BackupRetentionPeriod:
          $ref: '#/components/schemas/IntegerOptional'
        CharacterSetName:
          $ref: '#/components/schemas/String'
        DatabaseName:
          $ref: '#/components/schemas/String'
        DBClusterIdentifier:
          $ref: '#/components/schemas/String'
        DBClusterParameterGroup:
          $ref: '#/components/schemas/String'
        DBSubnetGroup:
          $ref: '#/components/schemas/String'
        Status:
          $ref: '#/components/schemas/String'
        PercentProgress:
          $ref: '#/components/schemas/String'
        EarliestRestorableTime:
          $ref: '#/components/schemas/TStamp'
        Endpoint:
          $ref: '#/components/schemas/String'
        ReaderEndpoint:
          $ref: '#/components/schemas/String'
        MultiAZ:
          $ref: '#/components/schemas/Boolean'
        Engine:
          $ref: '#/components/schemas/String'
        EngineVersion:
          $ref: '#/components/schemas/String'
        LatestRestorableTime:
          $ref: '#/components/schemas/TStamp'
        Port:
          $ref: '#/components/schemas/IntegerOptional'
        MasterUsername:
          $ref: '#/components/schemas/String'
        DBClusterOptionGroupMemberships:
          $ref: '#/components/schemas/DBClusterOptionGroupMemberships'
        PreferredBackupWindow:
          $ref: '#/components/schemas/String'
        PreferredMaintenanceWindow:
          $ref: '#/components/schemas/String'
        ReplicationSourceIdentifier:
          $ref: '#/components/schemas/String'
        ReadReplicaIdentifiers:
          $ref: '#/components/schemas/ReadReplicaIdentifierList'
        DBClusterMembers:
          $ref: '#/components/schemas/DBClusterMemberList'
        VpcSecurityGroups:
          $ref: '#/components/schemas/VpcSecurityGroupMembershipList'
        HostedZoneId:
          $ref: '#/components/schemas/String'
        StorageEncrypted:
          $ref: '#/components/schemas/Boolean'
        KmsKeyId:
          $ref: '#/components/schemas/String'
        DbClusterResourceId:
          $ref: '#/components/schemas/String'
        DBClusterArn:
          $ref: '#/components/schemas/String'
        AssociatedRoles:
          $ref: '#/components/schemas/DBClusterRoles'
        IAMDatabaseAuthenticationEnabled:
          $ref: '#/components/schemas/Boolean'
        CloneGroupId:
          $ref: '#/components/schemas/String'
        ClusterCreateTime:
          $ref: '#/components/schemas/TStamp'
      description: '<p>Contains the result of a successful invocation of the following actions:</p> <ul> <li> <p> <a>CreateDBCluster</a> </p> </li> <li> <p> <a>DeleteDBCluster</a> </p> </li> <li> <p> <a>FailoverDBCluster</a> </p> </li> <li> <p> <a>ModifyDBCluster</a> </p> </li> <li> <p> <a>RestoreDBClusterFromSnapshot</a> </p> </li> <li> <p> <a>RestoreDBClusterToPointInTime</a> </p> </li> </ul> <p>This data type is used as a response element in the <a>DescribeDBClusters</a> action.</p>'
    DBClusterAlreadyExistsFault:
      type: object
      properties: {}
      description: User already has a DB cluster with the given identifier.
    DBClusterList:
      type: array
      items:
        $ref: '#/components/schemas/DBCluster'
    DBClusterMember:
      type: object
      properties:
        DBInstanceIdentifier:
          $ref: '#/components/schemas/String'
        IsClusterWriter:
          $ref: '#/components/schemas/Boolean'
        DBClusterParameterGroupStatus:
          $ref: '#/components/schemas/String'
        PromotionTier:
          $ref: '#/components/schemas/IntegerOptional'
      description: Contains information about an instance that is part of a DB cluster.
    DBClusterMemberList:
      type: array
      items:
        $ref: '#/components/schemas/DBClusterMember'
    DBClusterMessage:
      type: object
      properties:
        Marker:
          $ref: '#/components/schemas/String'
        DBClusters:
          $ref: '#/components/schemas/DBClusterList'
      description: Contains the result of a successful invocation of the <a>DescribeDBClusters</a> action.
    DBClusterNotFoundFault:
      type: object
      properties: {}
      description: ' <i>DBClusterIdentifier</i> does not refer to an existing DB cluster. '
    DBClusterOptionGroupMemberships:
      type: array
      items:
        $ref: '#/components/schemas/DBClusterOptionGroupStatus'
    DBClusterOptionGroupStatus:
      type: object
      properties:
        DBClusterOptionGroupName:
          $ref: '#/components/schemas/String'
        Status:
          $ref: '#/components/schemas/String'
      description: Contains status information for a DB cluster option group.
    DBClusterParameterGroup:
      type: object
      properties:
        DBClusterParameterGroupName:
          $ref: '#/components/schemas/String'
        DBParameterGroupFamily:
          $ref: '#/components/schemas/String'
        Description:
          $ref: '#/components/schemas/String'
        DBClusterParameterGroupArn:
          $ref: '#/components/schemas/String'
      description: '<p>Contains the result of a successful invocation of the <a>CreateDBClusterParameterGroup</a> or <a>CopyDBClusterParameterGroup</a> action. </p> <p>This data type is used as a request parameter in the <a>DeleteDBClusterParameterGroup</a> action, and as a response element in the <a>DescribeDBClusterParameterGroups</a> action. </p>'
    DBClusterParameterGroupDetails:
      type: object
      properties:
        Parameters:
          $ref: '#/components/schemas/ParametersList'
        Marker:
          $ref: '#/components/schemas/String'
      description: Provides details about a DB cluster parameter group including the parameters in the DB cluster parameter group.
    DBClusterParameterGroupList:
      type: array
      items:
        $ref: '#/components/schemas/DBClusterParameterGroup'
    DBClusterParameterGroupNameMessage:
      type: object
      properties:
        DBClusterParameterGroupName:
          $ref: '#/components/schemas/String'
      description: <p/>
    DBClusterParameterGroupNotFoundFault:
      type: object
      properties: {}
      description: ' <i>DBClusterParameterGroupName</i> does not refer to an existing DB Cluster parameter group. '
    DBClusterParameterGroupsMessage:
      type: object
      properties:
        Marker:
          $ref: '#/components/schemas/String'
        DBClusterParameterGroups:
          $ref: '#/components/schemas/DBClusterParameterGroupList'
      description: <p/>
    DBClusterQuotaExceededFault:
      type: object
      properties: {}
      description: User attempted to create a new DB cluster and the user has already reached the maximum allowed DB cluster quota.
    DBClusterRole:
      type: object
      properties:
        RoleArn:
          $ref: '#/components/schemas/String'
        Status:
          $ref: '#/components/schemas/String'
      description: Describes an AWS Identity and Access Management (IAM) role that is associated with a DB cluster.
    DBClusterRoleAlreadyExistsFault:
      type: object
      properties: {}
      description: The specified IAM role Amazon Resource Name (ARN) is already associated with the specified DB cluster.
    DBClusterRoleNotFoundFault:
      type: object
      properties: {}
      description: The specified IAM role Amazon Resource Name (ARN) is not associated with the specified DB cluster.
    DBClusterRoleQuotaExceededFault:
      type: object
      properties: {}
      description: You have exceeded the maximum number of IAM roles that can be associated with the specified DB cluster.
    DBClusterRoles:
      type: array
      items:
        $ref: '#/components/schemas/DBClusterRole'
    DBClusterSnapshot:
      type: object
      properties:
        AvailabilityZones:
          $ref: '#/components/schemas/AvailabilityZones'
        DBClusterSnapshotIdentifier:
          $ref: '#/components/schemas/String'
        DBClusterIdentifier:
          $ref: '#/components/schemas/String'
        SnapshotCreateTime:
          $ref: '#/components/schemas/TStamp'
        Engine:
          $ref: '#/components/schemas/String'
        AllocatedStorage:
          $ref: '#/components/schemas/Integer'
        Status:
          $ref: '#/components/schemas/String'
        Port:
          $ref: '#/components/schemas/Integer'
        VpcId:
          $ref: '#/components/schemas/String'
        ClusterCreateTime:
          $ref: '#/components/schemas/TStamp'
        MasterUsername:
          $ref: '#/components/schemas/String'
        EngineVersion:
          $ref: '#/components/schemas/String'
        LicenseModel:
          $ref: '#/components/schemas/String'
        SnapshotType:
          $ref: '#/components/schemas/String'
        PercentProgress:
          $ref: '#/components/schemas/Integer'
        StorageEncrypted:
          $ref: '#/components/schemas/Boolean'
        KmsKeyId:
          $ref: '#/components/schemas/String'
        DBClusterSnapshotArn:
          $ref: '#/components/schemas/String'
        SourceDBClusterSnapshotArn:
          $ref: '#/components/schemas/String'
        IAMDatabaseAuthenticationEnabled:
          $ref: '#/components/schemas/Boolean'
      description: '<p>Contains the result of a successful invocation of the following actions:</p> <ul> <li> <p> <a>CreateDBClusterSnapshot</a> </p> </li> <li> <p> <a>DeleteDBClusterSnapshot</a> </p> </li> </ul> <p>This data type is used as a response element in the <a>DescribeDBClusterSnapshots</a> action.</p>'
    DBClusterSnapshotAlreadyExistsFault:
      type: object
      properties: {}
      description: User already has a DB cluster snapshot with the given identifier.
    DBClusterSnapshotAttribute:
      type: object
      properties:
        AttributeName:
          $ref: '#/components/schemas/String'
        AttributeValues:
          $ref: '#/components/schemas/AttributeValueList'
      description: '<p>Contains the name and values of a manual DB cluster snapshot attribute.</p> <p>Manual DB cluster snapshot attributes are used to authorize other AWS accounts to restore a manual DB cluster snapshot. For more information, see the <a>ModifyDBClusterSnapshotAttribute</a> API action.</p>'
    DBClusterSnapshotAttributeList:
      type: array
      items:
        $ref: '#/components/schemas/DBClusterSnapshotAttribute'
    DBClusterSnapshotAttributesResult:
      type: object
      properties:
        DBClusterSnapshotIdentifier:
          $ref: '#/components/schemas/String'
        DBClusterSnapshotAttributes:
          $ref: '#/components/schemas/DBClusterSnapshotAttributeList'
      description: '<p>Contains the results of a successful call to the <a>DescribeDBClusterSnapshotAttributes</a> API action.</p> <p>Manual DB cluster snapshot attributes are used to authorize other AWS accounts to copy or restore a manual DB cluster snapshot. For more information, see the <a>ModifyDBClusterSnapshotAttribute</a> API action.</p>'
    DBClusterSnapshotList:
      type: array
      items:
        $ref: '#/components/schemas/DBClusterSnapshot'
    DBClusterSnapshotMessage:
      type: object
      properties:
        Marker:
          $ref: '#/components/schemas/String'
        DBClusterSnapshots:
          $ref: '#/components/schemas/DBClusterSnapshotList'
      description: ' Provides a list of DB cluster snapshots for the user as the result of a call to the <a>DescribeDBClusterSnapshots</a> action. '
    DBClusterSnapshotNotFoundFault:
      type: object
      properties: {}
      description: ' <i>DBClusterSnapshotIdentifier</i> does not refer to an existing DB cluster snapshot. '
    DBEngineVersion:
      type: object
      properties:
        Engine:
          $ref: '#/components/schemas/String'
        EngineVersion:
          $ref: '#/components/schemas/String'
        DBParameterGroupFamily:
          $ref: '#/components/schemas/String'
        DBEngineDescription:
          $ref: '#/components/schemas/String'
        DBEngineVersionDescription:
          $ref: '#/components/schemas/String'
        DefaultCharacterSet:
          $ref: '#/components/schemas/CharacterSet'
        SupportedCharacterSets:
          $ref: '#/components/schemas/SupportedCharacterSetsList'
        ValidUpgradeTarget:
          $ref: '#/components/schemas/ValidUpgradeTargetList'
        SupportedTimezones:
          $ref: '#/components/schemas/SupportedTimezonesList'
      description: ' This data type is used as a response element in the action <a>DescribeDBEngineVersions</a>. '
    DBEngineVersionList:
      type: array
      items:
        $ref: '#/components/schemas/DBEngineVersion'
    DBEngineVersionMessage:
      type: object
      properties:
        Marker:
          $ref: '#/components/schemas/String'
        DBEngineVersions:
          $ref: '#/components/schemas/DBEngineVersionList'
      description: ' Contains the result of a successful invocation of the <a>DescribeDBEngineVersions</a> action. '
    DBInstance:
      type: object
      properties:
        DBInstanceIdentifier:
          $ref: '#/components/schemas/String'
        DBInstanceClass:
          $ref: '#/components/schemas/String'
        Engine:
          $ref: '#/components/schemas/String'
        DBInstanceStatus:
          $ref: '#/components/schemas/String'
        MasterUsername:
          $ref: '#/components/schemas/String'
        DBName:
          $ref: '#/components/schemas/String'
        Endpoint:
          $ref: '#/components/schemas/Endpoint'
        AllocatedStorage:
          $ref: '#/components/schemas/Integer'
        InstanceCreateTime:
          $ref: '#/components/schemas/TStamp'
        PreferredBackupWindow:
          $ref: '#/components/schemas/String'
        BackupRetentionPeriod:
          $ref: '#/components/schemas/Integer'
        DBSecurityGroups:
          $ref: '#/components/schemas/DBSecurityGroupMembershipList'
        VpcSecurityGroups:
          $ref: '#/components/schemas/VpcSecurityGroupMembershipList'
        DBParameterGroups:
          $ref: '#/components/schemas/DBParameterGroupStatusList'
        AvailabilityZone:
          $ref: '#/components/schemas/String'
        DBSubnetGroup:
          $ref: '#/components/schemas/DBSubnetGroup'
        PreferredMaintenanceWindow:
          $ref: '#/components/schemas/String'
        PendingModifiedValues:
          $ref: '#/components/schemas/PendingModifiedValues'
        LatestRestorableTime:
          $ref: '#/components/schemas/TStamp'
        MultiAZ:
          $ref: '#/components/schemas/Boolean'
        EngineVersion:
          $ref: '#/components/schemas/String'
        AutoMinorVersionUpgrade:
          $ref: '#/components/schemas/Boolean'
        ReadReplicaSourceDBInstanceIdentifier:
          $ref: '#/components/schemas/String'
        ReadReplicaDBInstanceIdentifiers:
          $ref: '#/components/schemas/ReadReplicaDBInstanceIdentifierList'
        ReadReplicaDBClusterIdentifiers:
          $ref: '#/components/schemas/ReadReplicaDBClusterIdentifierList'
        LicenseModel:
          $ref: '#/components/schemas/String'
        Iops:
          $ref: '#/components/schemas/IntegerOptional'
        OptionGroupMemberships:
          $ref: '#/components/schemas/OptionGroupMembershipList'
        CharacterSetName:
          $ref: '#/components/schemas/String'
        SecondaryAvailabilityZone:
          $ref: '#/components/schemas/String'
        PubliclyAccessible:
          $ref: '#/components/schemas/Boolean'
        StatusInfos:
          $ref: '#/components/schemas/DBInstanceStatusInfoList'
        StorageType:
          $ref: '#/components/schemas/String'
        TdeCredentialArn:
          $ref: '#/components/schemas/String'
        DbInstancePort:
          $ref: '#/components/schemas/Integer'
        DBClusterIdentifier:
          $ref: '#/components/schemas/String'
        StorageEncrypted:
          $ref: '#/components/schemas/Boolean'
        KmsKeyId:
          $ref: '#/components/schemas/String'
        DbiResourceId:
          $ref: '#/components/schemas/String'
        CACertificateIdentifier:
          $ref: '#/components/schemas/String'
        DomainMemberships:
          $ref: '#/components/schemas/DomainMembershipList'
        CopyTagsToSnapshot:
          $ref: '#/components/schemas/Boolean'
        MonitoringInterval:
          $ref: '#/components/schemas/IntegerOptional'
        EnhancedMonitoringResourceArn:
          $ref: '#/components/schemas/String'
        MonitoringRoleArn:
          $ref: '#/components/schemas/String'
        PromotionTier:
          $ref: '#/components/schemas/IntegerOptional'
        DBInstanceArn:
          $ref: '#/components/schemas/String'
        Timezone:
          $ref: '#/components/schemas/String'
        IAMDatabaseAuthenticationEnabled:
          $ref: '#/components/schemas/Boolean'
      description: '<p>Contains the result of a successful invocation of the following actions:</p> <ul> <li> <p> <a>CreateDBInstance</a> </p> </li> <li> <p> <a>DeleteDBInstance</a> </p> </li> <li> <p> <a>ModifyDBInstance</a> </p> </li> <li> <p> <a>StopDBInstance</a> </p> </li> <li> <p> <a>StartDBInstance</a> </p> </li> </ul> <p>This data type is used as a response element in the <a>DescribeDBInstances</a> action.</p>'
    DBInstanceAlreadyExistsFault:
      type: object
      properties: {}
      description: User already has a DB instance with the given identifier.
    DBInstanceList:
      type: array
      items:
        $ref: '#/components/schemas/DBInstance'
    DBInstanceMessage:
      type: object
      properties:
        Marker:
          $ref: '#/components/schemas/String'
        DBInstances:
          $ref: '#/components/schemas/DBInstanceList'
      description: ' Contains the result of a successful invocation of the <a>DescribeDBInstances</a> action. '
    DBInstanceNotFoundFault:
      type: object
      properties: {}
      description: ' <i>DBInstanceIdentifier</i> does not refer to an existing DB instance. '
    DBInstanceStatusInfo:
      type: object
      properties:
        StatusType:
          $ref: '#/components/schemas/String'
        Normal:
          $ref: '#/components/schemas/Boolean'
        Status:
          $ref: '#/components/schemas/String'
        Message:
          $ref: '#/components/schemas/String'
      description: Provides a list of status information for a DB instance.
    DBInstanceStatusInfoList:
      type: array
      items:
        $ref: '#/components/schemas/DBInstanceStatusInfo'
    DBLogFileNotFoundFault:
      type: object
      properties: {}
      description: ' <i>LogFileName</i> does not refer to an existing DB log file.'
    DBParameterGroup:
      type: object
      properties:
        DBParameterGroupName:
          $ref: '#/components/schemas/String'
        DBParameterGroupFamily:
          $ref: '#/components/schemas/String'
        Description:
          $ref: '#/components/schemas/String'
        DBParameterGroupArn:
          $ref: '#/components/schemas/String'
      description: '<p>Contains the result of a successful invocation of the <a>CreateDBParameterGroup</a> action. </p> <p>This data type is used as a request parameter in the <a>DeleteDBParameterGroup</a> action, and as a response element in the <a>DescribeDBParameterGroups</a> action. </p>'
    DBParameterGroupAlreadyExistsFault:
      type: object
      properties: {}
      description: A DB parameter group with the same name exists.
    DBParameterGroupDetails:
      type: object
      properties:
        Parameters:
          $ref: '#/components/schemas/ParametersList'
        Marker:
          $ref: '#/components/schemas/String'
      description: ' Contains the result of a successful invocation of the <a>DescribeDBParameters</a> action. '
    DBParameterGroupList:
      type: array
      items:
        $ref: '#/components/schemas/DBParameterGroup'
    DBParameterGroupNameMessage:
      type: object
      properties:
        DBParameterGroupName:
          $ref: '#/components/schemas/String'
      description: ' Contains the result of a successful invocation of the <a>ModifyDBParameterGroup</a> or <a>ResetDBParameterGroup</a> action. '
    DBParameterGroupNotFoundFault:
      type: object
      properties: {}
      description: ' <i>DBParameterGroupName</i> does not refer to an existing DB parameter group. '
    DBParameterGroupQuotaExceededFault:
      type: object
      properties: {}
      description: Request would result in user exceeding the allowed number of DB parameter groups.
    DBParameterGroupStatus:
      type: object
      properties:
        DBParameterGroupName:
          $ref: '#/components/schemas/String'
        ParameterApplyStatus:
          $ref: '#/components/schemas/String'
      description: '<p>The status of the DB parameter group.</p> <p>This data type is used as a response element in the following actions:</p> <ul> <li> <p> <a>CreateDBInstance</a> </p> </li> <li> <p> <a>CreateDBInstanceReadReplica</a> </p> </li> <li> <p> <a>DeleteDBInstance</a> </p> </li> <li> <p> <a>ModifyDBInstance</a> </p> </li> <li> <p> <a>RebootDBInstance</a> </p> </li> <li> <p> <a>RestoreDBInstanceFromDBSnapshot</a> </p> </li> </ul>'
    DBParameterGroupStatusList:
      type: array
      items:
        $ref: '#/components/schemas/DBParameterGroupStatus'
    DBParameterGroupsMessage:
      type: object
      properties:
        Marker:
          $ref: '#/components/schemas/String'
        DBParameterGroups:
          $ref: '#/components/schemas/DBParameterGroupList'
      description: ' Contains the result of a successful invocation of the <a>DescribeDBParameterGroups</a> action. '
    DBSecurityGroup:
      type: object
      properties:
        OwnerId:
          $ref: '#/components/schemas/String'
        DBSecurityGroupName:
          $ref: '#/components/schemas/String'
        DBSecurityGroupDescription:
          $ref: '#/components/schemas/String'
        VpcId:
          $ref: '#/components/schemas/String'
        EC2SecurityGroups:
          $ref: '#/components/schemas/EC2SecurityGroupList'
        IPRanges:
          $ref: '#/components/schemas/IPRangeList'
        DBSecurityGroupArn:
          $ref: '#/components/schemas/String'
      description: '<p>Contains the result of a successful invocation of the following actions:</p> <ul> <li> <p> <a>DescribeDBSecurityGroups</a> </p> </li> <li> <p> <a>AuthorizeDBSecurityGroupIngress</a> </p> </li> <li> <p> <a>CreateDBSecurityGroup</a> </p> </li> <li> <p> <a>RevokeDBSecurityGroupIngress</a> </p> </li> </ul> <p>This data type is used as a response element in the <a>DescribeDBSecurityGroups</a> action.</p>'
    DBSecurityGroupAlreadyExistsFault:
      type: object
      properties: {}
      description: ' A DB security group with the name specified in <i>DBSecurityGroupName</i> already exists. '
    DBSecurityGroupMembership:
      type: object
      properties:
        DBSecurityGroupName:
          $ref: '#/components/schemas/String'
        Status:
          $ref: '#/components/schemas/String'
      description: '<p>This data type is used as a response element in the following actions:</p> <ul> <li> <p> <a>ModifyDBInstance</a> </p> </li> <li> <p> <a>RebootDBInstance</a> </p> </li> <li> <p> <a>RestoreDBInstanceFromDBSnapshot</a> </p> </li> <li> <p> <a>RestoreDBInstanceToPointInTime</a> </p> </li> </ul>'
    DBSecurityGroupMembershipList:
      type: array
      items:
        $ref: '#/components/schemas/DBSecurityGroupMembership'
    DBSecurityGroupMessage:
      type: object
      properties:
        Marker:
          $ref: '#/components/schemas/String'
        DBSecurityGroups:
          $ref: '#/components/schemas/DBSecurityGroups'
      description: ' Contains the result of a successful invocation of the <a>DescribeDBSecurityGroups</a> action. '
    DBSecurityGroupNameList:
      type: array
      items:
        $ref: '#/components/schemas/String'
    DBSecurityGroupNotFoundFault:
      type: object
      properties: {}
      description: ' <i>DBSecurityGroupName</i> does not refer to an existing DB security group. '
    DBSecurityGroupNotSupportedFault:
      type: object
      properties: {}
      description: A DB security group is not allowed for this action.
    DBSecurityGroupQuotaExceededFault:
      type: object
      properties: {}
      description: Request would result in user exceeding the allowed number of DB security groups.
    DBSecurityGroups:
      type: array
      items:
        $ref: '#/components/schemas/DBSecurityGroup'
    DBSnapshot:
      type: object
      properties:
        DBSnapshotIdentifier:
          $ref: '#/components/schemas/String'
        DBInstanceIdentifier:
          $ref: '#/components/schemas/String'
        SnapshotCreateTime:
          $ref: '#/components/schemas/TStamp'
        Engine:
          $ref: '#/components/schemas/String'
        AllocatedStorage:
          $ref: '#/components/schemas/Integer'
        Status:
          $ref: '#/components/schemas/String'
        Port:
          $ref: '#/components/schemas/Integer'
        AvailabilityZone:
          $ref: '#/components/schemas/String'
        VpcId:
          $ref: '#/components/schemas/String'
        InstanceCreateTime:
          $ref: '#/components/schemas/TStamp'
        MasterUsername:
          $ref: '#/components/schemas/String'
        EngineVersion:
          $ref: '#/components/schemas/String'
        LicenseModel:
          $ref: '#/components/schemas/String'
        SnapshotType:
          $ref: '#/components/schemas/String'
        Iops:
          $ref: '#/components/schemas/IntegerOptional'
        OptionGroupName:
          $ref: '#/components/schemas/String'
        PercentProgress:
          $ref: '#/components/schemas/Integer'
        SourceRegion:
          $ref: '#/components/schemas/String'
        SourceDBSnapshotIdentifier:
          $ref: '#/components/schemas/String'
        StorageType:
          $ref: '#/components/schemas/String'
        TdeCredentialArn:
          $ref: '#/components/schemas/String'
        Encrypted:
          $ref: '#/components/schemas/Boolean'
        KmsKeyId:
          $ref: '#/components/schemas/String'
        DBSnapshotArn:
          $ref: '#/components/schemas/String'
        Timezone:
          $ref: '#/components/schemas/String'
        IAMDatabaseAuthenticationEnabled:
          $ref: '#/components/schemas/Boolean'
      description: '<p>Contains the result of a successful invocation of the following actions:</p> <ul> <li> <p> <a>CreateDBSnapshot</a> </p> </li> <li> <p> <a>DeleteDBSnapshot</a> </p> </li> </ul> <p>This data type is used as a response element in the <a>DescribeDBSnapshots</a> action.</p>'
    DBSnapshotAlreadyExistsFault:
      type: object
      properties: {}
      description: ' <i>DBSnapshotIdentifier</i> is already used by an existing snapshot. '
    DBSnapshotAttribute:
      type: object
      properties:
        AttributeName:
          $ref: '#/components/schemas/String'
        AttributeValues:
          $ref: '#/components/schemas/AttributeValueList'
      description: '<p>Contains the name and values of a manual DB snapshot attribute</p> <p>Manual DB snapshot attributes are used to authorize other AWS accounts to restore a manual DB snapshot. For more information, see the <a>ModifyDBSnapshotAttribute</a> API.</p>'
    DBSnapshotAttributeList:
      type: array
      items:
        $ref: '#/components/schemas/DBSnapshotAttribute'
    DBSnapshotAttributesResult:
      type: object
      properties:
        DBSnapshotIdentifier:
          $ref: '#/components/schemas/String'
        DBSnapshotAttributes:
          $ref: '#/components/schemas/DBSnapshotAttributeList'
      description: '<p>Contains the results of a successful call to the <a>DescribeDBSnapshotAttributes</a> API action.</p> <p>Manual DB snapshot attributes are used to authorize other AWS accounts to copy or restore a manual DB snapshot. For more information, see the <a>ModifyDBSnapshotAttribute</a> API action.</p>'
    DBSnapshotList:
      type: array
      items:
        $ref: '#/components/schemas/DBSnapshot'
    DBSnapshotMessage:
      type: object
      properties:
        Marker:
          $ref: '#/components/schemas/String'
        DBSnapshots:
          $ref: '#/components/schemas/DBSnapshotList'
      description: ' Contains the result of a successful invocation of the <a>DescribeDBSnapshots</a> action. '
    DBSnapshotNotFoundFault:
      type: object
      properties: {}
      description: ' <i>DBSnapshotIdentifier</i> does not refer to an existing DB snapshot. '
    DBSubnetGroup:
      type: object
      properties:
        DBSubnetGroupName:
          $ref: '#/components/schemas/String'
        DBSubnetGroupDescription:
          $ref: '#/components/schemas/String'
        VpcId:
          $ref: '#/components/schemas/String'
        SubnetGroupStatus:
          $ref: '#/components/schemas/String'
        Subnets:
          $ref: '#/components/schemas/SubnetList'
        DBSubnetGroupArn:
          $ref: '#/components/schemas/String'
      description: '<p>Contains the result of a successful invocation of the following actions:</p> <ul> <li> <p> <a>CreateDBSubnetGroup</a> </p> </li> <li> <p> <a>ModifyDBSubnetGroup</a> </p> </li> <li> <p> <a>DescribeDBSubnetGroups</a> </p> </li> <li> <p> <a>DeleteDBSubnetGroup</a> </p> </li> </ul> <p>This data type is used as a response element in the <a>DescribeDBSubnetGroups</a> action.</p>'
    DBSubnetGroupAlreadyExistsFault:
      type: object
      properties: {}
      description: ' <i>DBSubnetGroupName</i> is already used by an existing DB subnet group. '
    DBSubnetGroupDoesNotCoverEnoughAZs:
      type: object
      properties: {}
      description: Subnets in the DB subnet group should cover at least two Availability Zones unless there is only one Availability Zone.
    DBSubnetGroupMessage:
      type: object
      properties:
        Marker:
          $ref: '#/components/schemas/String'
        DBSubnetGroups:
          $ref: '#/components/schemas/DBSubnetGroups'
      description: ' Contains the result of a successful invocation of the <a>DescribeDBSubnetGroups</a> action. '
    DBSubnetGroupNotAllowedFault:
      type: object
      properties: {}
      description: Indicates that the DBSubnetGroup should not be specified while creating read replicas that lie in the same region as the source instance.
    DBSubnetGroupNotFoundFault:
      type: object
      properties: {}
      description: ' <i>DBSubnetGroupName</i> does not refer to an existing DB subnet group. '
    DBSubnetGroupQuotaExceededFault:
      type: object
      properties: {}
      description: Request would result in user exceeding the allowed number of DB subnet groups.
    DBSubnetGroups:
      type: array
      items:
        $ref: '#/components/schemas/DBSubnetGroup'
    DBSubnetQuotaExceededFault:
      type: object
      properties: {}
      description: Request would result in user exceeding the allowed number of subnets in a DB subnet groups.
    DBUpgradeDependencyFailureFault:
      type: object
      properties: {}
      description: The DB upgrade failed because a resource the DB depends on could not be modified.
    DeleteDBClusterMessage:
      type: object
      required:
        - DBClusterIdentifier
      properties:
        DBClusterIdentifier:
          $ref: '#/components/schemas/String'
        SkipFinalSnapshot:
          $ref: '#/components/schemas/Boolean'
        FinalDBSnapshotIdentifier:
          $ref: '#/components/schemas/String'
      description: <p/>
    DeleteDBClusterParameterGroupMessage:
      type: object
      required:
        - DBClusterParameterGroupName
      properties:
        DBClusterParameterGroupName:
          $ref: '#/components/schemas/String'
      description: <p/>
    DeleteDBClusterResult:
      type: object
      properties:
        DBCluster:
          $ref: '#/components/schemas/DBCluster'
    DeleteDBClusterSnapshotMessage:
      type: object
      required:
        - DBClusterSnapshotIdentifier
      properties:
        DBClusterSnapshotIdentifier:
          $ref: '#/components/schemas/String'
      description: <p/>
    DeleteDBClusterSnapshotResult:
      type: object
      properties:
        DBClusterSnapshot:
          $ref: '#/components/schemas/DBClusterSnapshot'
    DeleteDBInstanceMessage:
      type: object
      required:
        - DBInstanceIdentifier
      properties:
        DBInstanceIdentifier:
          $ref: '#/components/schemas/String'
        SkipFinalSnapshot:
          $ref: '#/components/schemas/Boolean'
        FinalDBSnapshotIdentifier:
          $ref: '#/components/schemas/String'
      description: <p/>
    DeleteDBInstanceResult:
      type: object
      properties:
        DBInstance:
          $ref: '#/components/schemas/DBInstance'
    DeleteDBParameterGroupMessage:
      type: object
      required:
        - DBParameterGroupName
      properties:
        DBParameterGroupName:
          $ref: '#/components/schemas/String'
      description: <p/>
    DeleteDBSecurityGroupMessage:
      type: object
      required:
        - DBSecurityGroupName
      properties:
        DBSecurityGroupName:
          $ref: '#/components/schemas/String'
      description: <p/>
    DeleteDBSnapshotMessage:
      type: object
      required:
        - DBSnapshotIdentifier
      properties:
        DBSnapshotIdentifier:
          $ref: '#/components/schemas/String'
      description: <p/>
    DeleteDBSnapshotResult:
      type: object
      properties:
        DBSnapshot:
          $ref: '#/components/schemas/DBSnapshot'
    DeleteDBSubnetGroupMessage:
      type: object
      required:
        - DBSubnetGroupName
      properties:
        DBSubnetGroupName:
          $ref: '#/components/schemas/String'
      description: <p/>
    DeleteEventSubscriptionMessage:
      type: object
      required:
        - SubscriptionName
      properties:
        SubscriptionName:
          $ref: '#/components/schemas/String'
      description: <p/>
    DeleteEventSubscriptionResult:
      type: object
      properties:
        EventSubscription:
          $ref: '#/components/schemas/EventSubscription'
    DeleteOptionGroupMessage:
      type: object
      required:
        - OptionGroupName
      properties:
        OptionGroupName:
          $ref: '#/components/schemas/String'
      description: <p/>
    DescribeAccountAttributesMessage:
      type: object
      properties: {}
      description: <p/>
    DescribeCertificatesMessage:
      type: object
      properties:
        CertificateIdentifier:
          $ref: '#/components/schemas/String'
        Filters:
          $ref: '#/components/schemas/FilterList'
        MaxRecords:
          $ref: '#/components/schemas/IntegerOptional'
        Marker:
          $ref: '#/components/schemas/String'
      description: <p/>
    DescribeDBClusterParameterGroupsMessage:
      type: object
      properties:
        DBClusterParameterGroupName:
          $ref: '#/components/schemas/String'
        Filters:
          $ref: '#/components/schemas/FilterList'
        MaxRecords:
          $ref: '#/components/schemas/IntegerOptional'
        Marker:
          $ref: '#/components/schemas/String'
      description: <p/>
    DescribeDBClusterParametersMessage:
      type: object
      required:
        - DBClusterParameterGroupName
      properties:
        DBClusterParameterGroupName:
          $ref: '#/components/schemas/String'
        Source:
          $ref: '#/components/schemas/String'
        Filters:
          $ref: '#/components/schemas/FilterList'
        MaxRecords:
          $ref: '#/components/schemas/IntegerOptional'
        Marker:
          $ref: '#/components/schemas/String'
      description: <p/>
    DescribeDBClusterSnapshotAttributesMessage:
      type: object
      required:
        - DBClusterSnapshotIdentifier
      properties:
        DBClusterSnapshotIdentifier:
          $ref: '#/components/schemas/String'
      description: <p/>
    DescribeDBClusterSnapshotAttributesResult:
      type: object
      properties:
        DBClusterSnapshotAttributesResult:
          $ref: '#/components/schemas/DBClusterSnapshotAttributesResult'
    DescribeDBClusterSnapshotsMessage:
      type: object
      properties:
        DBClusterIdentifier:
          $ref: '#/components/schemas/String'
        DBClusterSnapshotIdentifier:
          $ref: '#/components/schemas/String'
        SnapshotType:
          $ref: '#/components/schemas/String'
        Filters:
          $ref: '#/components/schemas/FilterList'
        MaxRecords:
          $ref: '#/components/schemas/IntegerOptional'
        Marker:
          $ref: '#/components/schemas/String'
        IncludeShared:
          $ref: '#/components/schemas/Boolean'
        IncludePublic:
          $ref: '#/components/schemas/Boolean'
      description: <p/>
    DescribeDBClustersMessage:
      type: object
      properties:
        DBClusterIdentifier:
          $ref: '#/components/schemas/String'
        Filters:
          $ref: '#/components/schemas/FilterList'
        MaxRecords:
          $ref: '#/components/schemas/IntegerOptional'
        Marker:
          $ref: '#/components/schemas/String'
      description: <p/>
    DescribeDBEngineVersionsMessage:
      type: object
      properties:
        Engine:
          $ref: '#/components/schemas/String'
        EngineVersion:
          $ref: '#/components/schemas/String'
        DBParameterGroupFamily:
          $ref: '#/components/schemas/String'
        Filters:
          $ref: '#/components/schemas/FilterList'
        MaxRecords:
          $ref: '#/components/schemas/IntegerOptional'
        Marker:
          $ref: '#/components/schemas/String'
        DefaultOnly:
          $ref: '#/components/schemas/Boolean'
        ListSupportedCharacterSets:
          $ref: '#/components/schemas/BooleanOptional'
        ListSupportedTimezones:
          $ref: '#/components/schemas/BooleanOptional'
    DescribeDBInstancesMessage:
      type: object
      properties:
        DBInstanceIdentifier:
          $ref: '#/components/schemas/String'
        Filters:
          $ref: '#/components/schemas/FilterList'
        MaxRecords:
          $ref: '#/components/schemas/IntegerOptional'
        Marker:
          $ref: '#/components/schemas/String'
      description: <p/>
    DescribeDBLogFilesDetails:
      type: object
      properties:
        LogFileName:
          $ref: '#/components/schemas/String'
        LastWritten:
          $ref: '#/components/schemas/Long'
        Size:
          $ref: '#/components/schemas/Long'
      description: This data type is used as a response element to <a>DescribeDBLogFiles</a>.
    DescribeDBLogFilesList:
      type: array
      items:
        $ref: '#/components/schemas/DescribeDBLogFilesDetails'
    DescribeDBLogFilesMessage:
      type: object
      required:
        - DBInstanceIdentifier
      properties:
        DBInstanceIdentifier:
          $ref: '#/components/schemas/String'
        FilenameContains:
          $ref: '#/components/schemas/String'
        FileLastWritten:
          $ref: '#/components/schemas/Long'
        FileSize:
          $ref: '#/components/schemas/Long'
        Filters:
          $ref: '#/components/schemas/FilterList'
        MaxRecords:
          $ref: '#/components/schemas/IntegerOptional'
        Marker:
          $ref: '#/components/schemas/String'
      description: <p/>
    DescribeDBLogFilesResponse:
      type: object
      properties:
        DescribeDBLogFiles:
          $ref: '#/components/schemas/DescribeDBLogFilesList'
        Marker:
          $ref: '#/components/schemas/String'
      description: ' The response from a call to <a>DescribeDBLogFiles</a>. '
    DescribeDBParameterGroupsMessage:
      type: object
      properties:
        DBParameterGroupName:
          $ref: '#/components/schemas/String'
        Filters:
          $ref: '#/components/schemas/FilterList'
        MaxRecords:
          $ref: '#/components/schemas/IntegerOptional'
        Marker:
          $ref: '#/components/schemas/String'
      description: <p/>
    DescribeDBParametersMessage:
      type: object
      required:
        - DBParameterGroupName
      properties:
        DBParameterGroupName:
          $ref: '#/components/schemas/String'
        Source:
          $ref: '#/components/schemas/String'
        Filters:
          $ref: '#/components/schemas/FilterList'
        MaxRecords:
          $ref: '#/components/schemas/IntegerOptional'
        Marker:
          $ref: '#/components/schemas/String'
    DescribeDBSecurityGroupsMessage:
      type: object
      properties:
        DBSecurityGroupName:
          $ref: '#/components/schemas/String'
        Filters:
          $ref: '#/components/schemas/FilterList'
        MaxRecords:
          $ref: '#/components/schemas/IntegerOptional'
        Marker:
          $ref: '#/components/schemas/String'
      description: <p/>
    DescribeDBSnapshotAttributesMessage:
      type: object
      required:
        - DBSnapshotIdentifier
      properties:
        DBSnapshotIdentifier:
          $ref: '#/components/schemas/String'
      description: <p/>
    DescribeDBSnapshotAttributesResult:
      type: object
      properties:
        DBSnapshotAttributesResult:
          $ref: '#/components/schemas/DBSnapshotAttributesResult'
    DescribeDBSnapshotsMessage:
      type: object
      properties:
        DBInstanceIdentifier:
          $ref: '#/components/schemas/String'
        DBSnapshotIdentifier:
          $ref: '#/components/schemas/String'
        SnapshotType:
          $ref: '#/components/schemas/String'
        Filters:
          $ref: '#/components/schemas/FilterList'
        MaxRecords:
          $ref: '#/components/schemas/IntegerOptional'
        Marker:
          $ref: '#/components/schemas/String'
        IncludeShared:
          $ref: '#/components/schemas/Boolean'
        IncludePublic:
          $ref: '#/components/schemas/Boolean'
      description: <p/>
    DescribeDBSubnetGroupsMessage:
      type: object
      properties:
        DBSubnetGroupName:
          $ref: '#/components/schemas/String'
        Filters:
          $ref: '#/components/schemas/FilterList'
        MaxRecords:
          $ref: '#/components/schemas/IntegerOptional'
        Marker:
          $ref: '#/components/schemas/String'
      description: <p/>
    DescribeEngineDefaultClusterParametersMessage:
      type: object
      required:
        - DBParameterGroupFamily
      properties:
        DBParameterGroupFamily:
          $ref: '#/components/schemas/String'
        Filters:
          $ref: '#/components/schemas/FilterList'
        MaxRecords:
          $ref: '#/components/schemas/IntegerOptional'
        Marker:
          $ref: '#/components/schemas/String'
      description: <p/>
    DescribeEngineDefaultClusterParametersResult:
      type: object
      properties:
        EngineDefaults:
          $ref: '#/components/schemas/EngineDefaults'
    DescribeEngineDefaultParametersMessage:
      type: object
      required:
        - DBParameterGroupFamily
      properties:
        DBParameterGroupFamily:
          $ref: '#/components/schemas/String'
        Filters:
          $ref: '#/components/schemas/FilterList'
        MaxRecords:
          $ref: '#/components/schemas/IntegerOptional'
        Marker:
          $ref: '#/components/schemas/String'
      description: <p/>
    DescribeEngineDefaultParametersResult:
      type: object
      properties:
        EngineDefaults:
          $ref: '#/components/schemas/EngineDefaults'
    DescribeEventCategoriesMessage:
      type: object
      properties:
        SourceType:
          $ref: '#/components/schemas/String'
        Filters:
          $ref: '#/components/schemas/FilterList'
      description: <p/>
    DescribeEventSubscriptionsMessage:
      type: object
      properties:
        SubscriptionName:
          $ref: '#/components/schemas/String'
        Filters:
          $ref: '#/components/schemas/FilterList'
        MaxRecords:
          $ref: '#/components/schemas/IntegerOptional'
        Marker:
          $ref: '#/components/schemas/String'
      description: <p/>
    DescribeEventsMessage:
      type: object
      properties:
        SourceIdentifier:
          $ref: '#/components/schemas/String'
        SourceType:
          $ref: '#/components/schemas/SourceType'
        StartTime:
          $ref: '#/components/schemas/TStamp'
        EndTime:
          $ref: '#/components/schemas/TStamp'
        Duration:
          $ref: '#/components/schemas/IntegerOptional'
        EventCategories:
          $ref: '#/components/schemas/EventCategoriesList'
        Filters:
          $ref: '#/components/schemas/FilterList'
        MaxRecords:
          $ref: '#/components/schemas/IntegerOptional'
        Marker:
          $ref: '#/components/schemas/String'
      description: <p/>
    DescribeOptionGroupOptionsMessage:
      type: object
      required:
        - EngineName
      properties:
        EngineName:
          $ref: '#/components/schemas/String'
        MajorEngineVersion:
          $ref: '#/components/schemas/String'
        Filters:
          $ref: '#/components/schemas/FilterList'
        MaxRecords:
          $ref: '#/components/schemas/IntegerOptional'
        Marker:
          $ref: '#/components/schemas/String'
      description: <p/>
    DescribeOptionGroupsMessage:
      type: object
      properties:
        OptionGroupName:
          $ref: '#/components/schemas/String'
        Filters:
          $ref: '#/components/schemas/FilterList'
        Marker:
          $ref: '#/components/schemas/String'
        MaxRecords:
          $ref: '#/components/schemas/IntegerOptional'
        EngineName:
          $ref: '#/components/schemas/String'
        MajorEngineVersion:
          $ref: '#/components/schemas/String'
      description: <p/>
    DescribeOrderableDBInstanceOptionsMessage:
      type: object
      required:
        - Engine
      properties:
        Engine:
          $ref: '#/components/schemas/String'
        EngineVersion:
          $ref: '#/components/schemas/String'
        DBInstanceClass:
          $ref: '#/components/schemas/String'
        LicenseModel:
          $ref: '#/components/schemas/String'
        Vpc:
          $ref: '#/components/schemas/BooleanOptional'
        Filters:
          $ref: '#/components/schemas/FilterList'
        MaxRecords:
          $ref: '#/components/schemas/IntegerOptional'
        Marker:
          $ref: '#/components/schemas/String'
      description: <p/>
    DescribePendingMaintenanceActionsMessage:
      type: object
      properties:
        ResourceIdentifier:
          $ref: '#/components/schemas/String'
        Filters:
          $ref: '#/components/schemas/FilterList'
        Marker:
          $ref: '#/components/schemas/String'
        MaxRecords:
          $ref: '#/components/schemas/IntegerOptional'
      description: <p/>
    DescribeReservedDBInstancesMessage:
      type: object
      properties:
        ReservedDBInstanceId:
          $ref: '#/components/schemas/String'
        ReservedDBInstancesOfferingId:
          $ref: '#/components/schemas/String'
        DBInstanceClass:
          $ref: '#/components/schemas/String'
        Duration:
          $ref: '#/components/schemas/String'
        ProductDescription:
          $ref: '#/components/schemas/String'
        OfferingType:
          $ref: '#/components/schemas/String'
        MultiAZ:
          $ref: '#/components/schemas/BooleanOptional'
        Filters:
          $ref: '#/components/schemas/FilterList'
        MaxRecords:
          $ref: '#/components/schemas/IntegerOptional'
        Marker:
          $ref: '#/components/schemas/String'
      description: <p/>
    DescribeReservedDBInstancesOfferingsMessage:
      type: object
      properties:
        ReservedDBInstancesOfferingId:
          $ref: '#/components/schemas/String'
        DBInstanceClass:
          $ref: '#/components/schemas/String'
        Duration:
          $ref: '#/components/schemas/String'
        ProductDescription:
          $ref: '#/components/schemas/String'
        OfferingType:
          $ref: '#/components/schemas/String'
        MultiAZ:
          $ref: '#/components/schemas/BooleanOptional'
        Filters:
          $ref: '#/components/schemas/FilterList'
        MaxRecords:
          $ref: '#/components/schemas/IntegerOptional'
        Marker:
          $ref: '#/components/schemas/String'
      description: <p/>
    DescribeSourceRegionsMessage:
      type: object
      properties:
        RegionName:
          $ref: '#/components/schemas/String'
        MaxRecords:
          $ref: '#/components/schemas/IntegerOptional'
        Marker:
          $ref: '#/components/schemas/String'
        Filters:
          $ref: '#/components/schemas/FilterList'
      description: <p/>
    DomainMembership:
      type: object
      properties:
        Domain:
          $ref: '#/components/schemas/String'
        Status:
          $ref: '#/components/schemas/String'
        FQDN:
          $ref: '#/components/schemas/String'
        IAMRoleName:
          $ref: '#/components/schemas/String'
      description: An Active Directory Domain membership record associated with the DB instance.
    DomainMembershipList:
      type: array
      description: List of Active Directory Domain membership records associated with a DB instance.
      items:
        $ref: '#/components/schemas/DomainMembership'
    DomainNotFoundFault:
      type: object
      properties: {}
      description: ' <i>Domain</i> does not refer to an existing Active Directory Domain. '
    Double:
      type: number
      format: double
    DownloadDBLogFilePortionDetails:
      type: object
      properties:
        LogFileData:
          $ref: '#/components/schemas/String'
        Marker:
          $ref: '#/components/schemas/String'
        AdditionalDataPending:
          $ref: '#/components/schemas/Boolean'
      description: This data type is used as a response element to <a>DownloadDBLogFilePortion</a>.
    DownloadDBLogFilePortionMessage:
      type: object
      required:
        - DBInstanceIdentifier
        - LogFileName
      properties:
        DBInstanceIdentifier:
          $ref: '#/components/schemas/String'
        LogFileName:
          $ref: '#/components/schemas/String'
        Marker:
          $ref: '#/components/schemas/String'
        NumberOfLines:
          $ref: '#/components/schemas/Integer'
      description: <p/>
    EC2SecurityGroup:
      type: object
      properties:
        Status:
          $ref: '#/components/schemas/String'
        EC2SecurityGroupName:
          $ref: '#/components/schemas/String'
        EC2SecurityGroupId:
          $ref: '#/components/schemas/String'
        EC2SecurityGroupOwnerId:
          $ref: '#/components/schemas/String'
      description: '<p>This data type is used as a response element in the following actions:</p> <ul> <li> <p> <a>AuthorizeDBSecurityGroupIngress</a> </p> </li> <li> <p> <a>DescribeDBSecurityGroups</a> </p> </li> <li> <p> <a>RevokeDBSecurityGroupIngress</a> </p> </li> </ul>'
    EC2SecurityGroupList:
      type: array
      items:
        $ref: '#/components/schemas/EC2SecurityGroup'
    Endpoint:
      type: object
      properties:
        Address:
          $ref: '#/components/schemas/String'
        Port:
          $ref: '#/components/schemas/Integer'
        HostedZoneId:
          $ref: '#/components/schemas/String'
      description: '<p>This data type is used as a response element in the following actions:</p> <ul> <li> <p> <a>CreateDBInstance</a> </p> </li> <li> <p> <a>DescribeDBInstances</a> </p> </li> <li> <p> <a>DeleteDBInstance</a> </p> </li> </ul>'
    EngineDefaults:
      type: object
      properties:
        DBParameterGroupFamily:
          $ref: '#/components/schemas/String'
        Marker:
          $ref: '#/components/schemas/String'
        Parameters:
          $ref: '#/components/schemas/ParametersList'
      description: ' Contains the result of a successful invocation of the <a>DescribeEngineDefaultParameters</a> action. '
    Event:
      type: object
      properties:
        SourceIdentifier:
          $ref: '#/components/schemas/String'
        SourceType:
          $ref: '#/components/schemas/SourceType'
        Message:
          $ref: '#/components/schemas/String'
        EventCategories:
          $ref: '#/components/schemas/EventCategoriesList'
        Date:
          $ref: '#/components/schemas/TStamp'
        SourceArn:
          $ref: '#/components/schemas/String'
      description: ' This data type is used as a response element in the <a>DescribeEvents</a> action. '
    EventCategoriesList:
      type: array
      items:
        $ref: '#/components/schemas/String'
    EventCategoriesMap:
      type: object
      properties:
        SourceType:
          $ref: '#/components/schemas/String'
        EventCategories:
          $ref: '#/components/schemas/EventCategoriesList'
      description: Contains the results of a successful invocation of the <a>DescribeEventCategories</a> action.
    EventCategoriesMapList:
      type: array
      items:
        $ref: '#/components/schemas/EventCategoriesMap'
    EventCategoriesMessage:
      type: object
      properties:
        EventCategoriesMapList:
          $ref: '#/components/schemas/EventCategoriesMapList'
      description: Data returned from the <b>DescribeEventCategories</b> action.
    EventList:
      type: array
      items:
        $ref: '#/components/schemas/Event'
    EventSubscription:
      type: object
      properties:
        CustomerAwsId:
          $ref: '#/components/schemas/String'
        CustSubscriptionId:
          $ref: '#/components/schemas/String'
        SnsTopicArn:
          $ref: '#/components/schemas/String'
        Status:
          $ref: '#/components/schemas/String'
        SubscriptionCreationTime:
          $ref: '#/components/schemas/String'
        SourceType:
          $ref: '#/components/schemas/String'
        SourceIdsList:
          $ref: '#/components/schemas/SourceIdsList'
        EventCategoriesList:
          $ref: '#/components/schemas/EventCategoriesList'
        Enabled:
          $ref: '#/components/schemas/Boolean'
        EventSubscriptionArn:
          $ref: '#/components/schemas/String'
      description: Contains the results of a successful invocation of the <a>DescribeEventSubscriptions</a> action.
    EventSubscriptionQuotaExceededFault:
      type: object
      properties: {}
      description: You have reached the maximum number of event subscriptions.
    EventSubscriptionsList:
      type: array
      items:
        $ref: '#/components/schemas/EventSubscription'
    EventSubscriptionsMessage:
      type: object
      properties:
        Marker:
          $ref: '#/components/schemas/String'
        EventSubscriptionsList:
          $ref: '#/components/schemas/EventSubscriptionsList'
      description: Data returned by the <b>DescribeEventSubscriptions</b> action.
    EventsMessage:
      type: object
      properties:
        Marker:
          $ref: '#/components/schemas/String'
        Events:
          $ref: '#/components/schemas/EventList'
      description: ' Contains the result of a successful invocation of the <a>DescribeEvents</a> action. '
    FailoverDBClusterMessage:
      type: object
      properties:
        DBClusterIdentifier:
          $ref: '#/components/schemas/String'
        TargetDBInstanceIdentifier:
          $ref: '#/components/schemas/String'
      description: <p/>
    FailoverDBClusterResult:
      type: object
      properties:
        DBCluster:
          $ref: '#/components/schemas/DBCluster'
    Filter:
      type: object
      required:
        - Name
        - Values
      properties:
        Name:
          $ref: '#/components/schemas/String'
        Values:
          $ref: '#/components/schemas/FilterValueList'
      description: This type is not currently supported.
    FilterList:
      type: array
      items:
        $ref: '#/components/schemas/Filter'
    FilterValueList:
      type: array
      items:
        $ref: '#/components/schemas/String'
    IPRange:
      type: object
      properties:
        Status:
          $ref: '#/components/schemas/String'
        CIDRIP:
          $ref: '#/components/schemas/String'
      description: ' This data type is used as a response element in the <a>DescribeDBSecurityGroups</a> action. '
    IPRangeList:
      type: array
      items:
        $ref: '#/components/schemas/IPRange'
    InstanceQuotaExceededFault:
      type: object
      properties: {}
      description: Request would result in user exceeding the allowed number of DB instances.
    InsufficientDBClusterCapacityFault:
      type: object
      properties: {}
      description: The DB cluster does not have enough capacity for the current operation.
    InsufficientDBInstanceCapacityFault:
      type: object
      properties: {}
      description: Specified DB instance class is not available in the specified Availability Zone.
    InsufficientStorageClusterCapacityFault:
      type: object
      properties: {}
      description: There is insufficient storage available for the current action. You may be able to resolve this error by updating your subnet group to use different Availability Zones that have more storage available.
    Integer:
      type: integer
    IntegerOptional:
      type: integer
    InvalidDBClusterSnapshotStateFault:
      type: object
      properties: {}
      description: The supplied value is not a valid DB cluster snapshot state.
    InvalidDBClusterStateFault:
      type: object
      properties: {}
      description: The DB cluster is not in a valid state.
    InvalidDBInstanceStateFault:
      type: object
      properties: {}
      description: ' The specified DB instance is not in the <i>available</i> state. '
    InvalidDBParameterGroupStateFault:
      type: object
      properties: {}
      description: 'The DB parameter group is in use or is in an invalid state. If you are attempting to delete the parameter group, you cannot delete it when the parameter group is in this state.'
    InvalidDBSecurityGroupStateFault:
      type: object
      properties: {}
      description: The state of the DB security group does not allow deletion.
    InvalidDBSnapshotStateFault:
      type: object
      properties: {}
      description: The state of the DB snapshot does not allow deletion.
    InvalidDBSubnetGroupFault:
      type: object
      properties: {}
      description: Indicates the DBSubnetGroup does not belong to the same VPC as that of an existing cross region read replica of the same source instance.
    InvalidDBSubnetGroupStateFault:
      type: object
      properties: {}
      description: The DB subnet group cannot be deleted because it is in use.
    InvalidDBSubnetStateFault:
      type: object
      properties: {}
      description: ' The DB subnet is not in the <i>available</i> state. '
    InvalidEventSubscriptionStateFault:
      type: object
      properties: {}
      description: This error can occur if someone else is modifying a subscription. You should retry the action.
    InvalidOptionGroupStateFault:
      type: object
      properties: {}
      description: ' The option group is not in the <i>available</i> state. '
    InvalidRestoreFault:
      type: object
      properties: {}
      description: Cannot restore from vpc backup to non-vpc DB instance.
    InvalidS3BucketFault:
      type: object
      properties: {}
      description: The specified Amazon S3 bucket name could not be found or Amazon RDS is not authorized to access the specified Amazon S3 bucket. Verify the <b>SourceS3BucketName</b> and <b>S3IngestionRoleArn</b> values and try again.
    InvalidSubnet:
      type: object
      properties: {}
      description: 'The requested subnet is invalid, or multiple subnets were requested that are not all in a common VPC.'
    InvalidVPCNetworkStateFault:
      type: object
      properties: {}
      description: DB subnet group does not cover all Availability Zones after it is created because users' change.
    KMSKeyNotAccessibleFault:
      type: object
      properties: {}
      description: Error accessing KMS key.
    KeyList:
      type: array
      items:
        $ref: '#/components/schemas/String'
    ListTagsForResourceMessage:
      type: object
      required:
        - ResourceName
      properties:
        ResourceName:
          $ref: '#/components/schemas/String'
        Filters:
          $ref: '#/components/schemas/FilterList'
      description: <p/>
    Long:
      type: integer
    ModifyDBClusterMessage:
      type: object
      required:
        - DBClusterIdentifier
      properties:
        DBClusterIdentifier:
          $ref: '#/components/schemas/String'
        NewDBClusterIdentifier:
          $ref: '#/components/schemas/String'
        ApplyImmediately:
          $ref: '#/components/schemas/Boolean'
        BackupRetentionPeriod:
          $ref: '#/components/schemas/IntegerOptional'
        DBClusterParameterGroupName:
          $ref: '#/components/schemas/String'
        VpcSecurityGroupIds:
          $ref: '#/components/schemas/VpcSecurityGroupIdList'
        Port:
          $ref: '#/components/schemas/IntegerOptional'
        MasterUserPassword:
          $ref: '#/components/schemas/String'
        OptionGroupName:
          $ref: '#/components/schemas/String'
        PreferredBackupWindow:
          $ref: '#/components/schemas/String'
        PreferredMaintenanceWindow:
          $ref: '#/components/schemas/String'
        EnableIAMDatabaseAuthentication:
          $ref: '#/components/schemas/BooleanOptional'
      description: <p/>
    ModifyDBClusterParameterGroupMessage:
      type: object
      required:
        - DBClusterParameterGroupName
        - Parameters
      properties:
        DBClusterParameterGroupName:
          $ref: '#/components/schemas/String'
        Parameters:
          $ref: '#/components/schemas/ParametersList'
      description: <p/>
    ModifyDBClusterResult:
      type: object
      properties:
        DBCluster:
          $ref: '#/components/schemas/DBCluster'
    ModifyDBClusterSnapshotAttributeMessage:
      type: object
      required:
        - DBClusterSnapshotIdentifier
        - AttributeName
      properties:
        DBClusterSnapshotIdentifier:
          $ref: '#/components/schemas/String'
        AttributeName:
          $ref: '#/components/schemas/String'
        ValuesToAdd:
          $ref: '#/components/schemas/AttributeValueList'
        ValuesToRemove:
          $ref: '#/components/schemas/AttributeValueList'
      description: <p/>
    ModifyDBClusterSnapshotAttributeResult:
      type: object
      properties:
        DBClusterSnapshotAttributesResult:
          $ref: '#/components/schemas/DBClusterSnapshotAttributesResult'
    ModifyDBInstanceMessage:
      type: object
      required:
        - DBInstanceIdentifier
      properties:
        DBInstanceIdentifier:
          $ref: '#/components/schemas/String'
        AllocatedStorage:
          $ref: '#/components/schemas/IntegerOptional'
        DBInstanceClass:
          $ref: '#/components/schemas/String'
        DBSubnetGroupName:
          $ref: '#/components/schemas/String'
        DBSecurityGroups:
          $ref: '#/components/schemas/DBSecurityGroupNameList'
        VpcSecurityGroupIds:
          $ref: '#/components/schemas/VpcSecurityGroupIdList'
        ApplyImmediately:
          $ref: '#/components/schemas/Boolean'
        MasterUserPassword:
          $ref: '#/components/schemas/String'
        DBParameterGroupName:
          $ref: '#/components/schemas/String'
        BackupRetentionPeriod:
          $ref: '#/components/schemas/IntegerOptional'
        PreferredBackupWindow:
          $ref: '#/components/schemas/String'
        PreferredMaintenanceWindow:
          $ref: '#/components/schemas/String'
        MultiAZ:
          $ref: '#/components/schemas/BooleanOptional'
        EngineVersion:
          $ref: '#/components/schemas/String'
        AllowMajorVersionUpgrade:
          $ref: '#/components/schemas/Boolean'
        AutoMinorVersionUpgrade:
          $ref: '#/components/schemas/BooleanOptional'
        LicenseModel:
          $ref: '#/components/schemas/String'
        Iops:
          $ref: '#/components/schemas/IntegerOptional'
        OptionGroupName:
          $ref: '#/components/schemas/String'
        NewDBInstanceIdentifier:
          $ref: '#/components/schemas/String'
        StorageType:
          $ref: '#/components/schemas/String'
        TdeCredentialArn:
          $ref: '#/components/schemas/String'
        TdeCredentialPassword:
          $ref: '#/components/schemas/String'
        CACertificateIdentifier:
          $ref: '#/components/schemas/String'
        Domain:
          $ref: '#/components/schemas/String'
        CopyTagsToSnapshot:
          $ref: '#/components/schemas/BooleanOptional'
        MonitoringInterval:
          $ref: '#/components/schemas/IntegerOptional'
        DBPortNumber:
          $ref: '#/components/schemas/IntegerOptional'
        PubliclyAccessible:
          $ref: '#/components/schemas/BooleanOptional'
        MonitoringRoleArn:
          $ref: '#/components/schemas/String'
        DomainIAMRoleName:
          $ref: '#/components/schemas/String'
        PromotionTier:
          $ref: '#/components/schemas/IntegerOptional'
        EnableIAMDatabaseAuthentication:
          $ref: '#/components/schemas/BooleanOptional'
      description: <p/>
    ModifyDBInstanceResult:
      type: object
      properties:
        DBInstance:
          $ref: '#/components/schemas/DBInstance'
    ModifyDBParameterGroupMessage:
      type: object
      required:
        - DBParameterGroupName
        - Parameters
      properties:
        DBParameterGroupName:
          $ref: '#/components/schemas/String'
        Parameters:
          $ref: '#/components/schemas/ParametersList'
      description: <p/>
    ModifyDBSnapshotAttributeMessage:
      type: object
      required:
        - DBSnapshotIdentifier
        - AttributeName
      properties:
        DBSnapshotIdentifier:
          $ref: '#/components/schemas/String'
        AttributeName:
          $ref: '#/components/schemas/String'
        ValuesToAdd:
          $ref: '#/components/schemas/AttributeValueList'
        ValuesToRemove:
          $ref: '#/components/schemas/AttributeValueList'
      description: <p/>
    ModifyDBSnapshotAttributeResult:
      type: object
      properties:
        DBSnapshotAttributesResult:
          $ref: '#/components/schemas/DBSnapshotAttributesResult'
    ModifyDBSnapshotMessage:
      type: object
      required:
        - DBSnapshotIdentifier
      properties:
        DBSnapshotIdentifier:
          $ref: '#/components/schemas/String'
        EngineVersion:
          $ref: '#/components/schemas/String'
    ModifyDBSnapshotResult:
      type: object
      properties:
        DBSnapshot:
          $ref: '#/components/schemas/DBSnapshot'
    ModifyDBSubnetGroupMessage:
      type: object
      required:
        - DBSubnetGroupName
        - SubnetIds
      properties:
        DBSubnetGroupName:
          $ref: '#/components/schemas/String'
        DBSubnetGroupDescription:
          $ref: '#/components/schemas/String'
        SubnetIds:
          $ref: '#/components/schemas/SubnetIdentifierList'
      description: <p/>
    ModifyDBSubnetGroupResult:
      type: object
      properties:
        DBSubnetGroup:
          $ref: '#/components/schemas/DBSubnetGroup'
    ModifyEventSubscriptionMessage:
      type: object
      required:
        - SubscriptionName
      properties:
        SubscriptionName:
          $ref: '#/components/schemas/String'
        SnsTopicArn:
          $ref: '#/components/schemas/String'
        SourceType:
          $ref: '#/components/schemas/String'
        EventCategories:
          $ref: '#/components/schemas/EventCategoriesList'
        Enabled:
          $ref: '#/components/schemas/BooleanOptional'
      description: <p/>
    ModifyEventSubscriptionResult:
      type: object
      properties:
        EventSubscription:
          $ref: '#/components/schemas/EventSubscription'
    ModifyOptionGroupMessage:
      type: object
      required:
        - OptionGroupName
      properties:
        OptionGroupName:
          $ref: '#/components/schemas/String'
        OptionsToInclude:
          $ref: '#/components/schemas/OptionConfigurationList'
        OptionsToRemove:
          $ref: '#/components/schemas/OptionNamesList'
        ApplyImmediately:
          $ref: '#/components/schemas/Boolean'
      description: <p/>
    ModifyOptionGroupResult:
      type: object
      properties:
        OptionGroup:
          $ref: '#/components/schemas/OptionGroup'
    Option:
      type: object
      properties:
        OptionName:
          $ref: '#/components/schemas/String'
        OptionDescription:
          $ref: '#/components/schemas/String'
        Persistent:
          $ref: '#/components/schemas/Boolean'
        Permanent:
          $ref: '#/components/schemas/Boolean'
        Port:
          $ref: '#/components/schemas/IntegerOptional'
        OptionVersion:
          $ref: '#/components/schemas/String'
        OptionSettings:
          $ref: '#/components/schemas/OptionSettingConfigurationList'
        DBSecurityGroupMemberships:
          $ref: '#/components/schemas/DBSecurityGroupMembershipList'
        VpcSecurityGroupMemberships:
          $ref: '#/components/schemas/VpcSecurityGroupMembershipList'
      description: Option details.
    OptionConfiguration:
      type: object
      required:
        - OptionName
      properties:
        OptionName:
          $ref: '#/components/schemas/String'
        Port:
          $ref: '#/components/schemas/IntegerOptional'
        OptionVersion:
          $ref: '#/components/schemas/String'
        DBSecurityGroupMemberships:
          $ref: '#/components/schemas/DBSecurityGroupNameList'
        VpcSecurityGroupMemberships:
          $ref: '#/components/schemas/VpcSecurityGroupIdList'
        OptionSettings:
          $ref: '#/components/schemas/OptionSettingsList'
      description: A list of all available options
    OptionConfigurationList:
      type: array
      items:
        $ref: '#/components/schemas/OptionConfiguration'
    OptionGroup:
      type: object
      properties:
        OptionGroupName:
          $ref: '#/components/schemas/String'
        OptionGroupDescription:
          $ref: '#/components/schemas/String'
        EngineName:
          $ref: '#/components/schemas/String'
        MajorEngineVersion:
          $ref: '#/components/schemas/String'
        Options:
          $ref: '#/components/schemas/OptionsList'
        AllowsVpcAndNonVpcInstanceMemberships:
          $ref: '#/components/schemas/Boolean'
        VpcId:
          $ref: '#/components/schemas/String'
        OptionGroupArn:
          $ref: '#/components/schemas/String'
      description: <p/>
    OptionGroupAlreadyExistsFault:
      type: object
      properties: {}
      description: The option group you are trying to create already exists.
    OptionGroupMembership:
      type: object
      properties:
        OptionGroupName:
          $ref: '#/components/schemas/String'
        Status:
          $ref: '#/components/schemas/String'
      description: Provides information on the option groups the DB instance is a member of.
    OptionGroupMembershipList:
      type: array
      items:
        $ref: '#/components/schemas/OptionGroupMembership'
    OptionGroupNotFoundFault:
      type: object
      properties: {}
      description: The specified option group could not be found.
    OptionGroupOption:
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/String'
        Description:
          $ref: '#/components/schemas/String'
        EngineName:
          $ref: '#/components/schemas/String'
        MajorEngineVersion:
          $ref: '#/components/schemas/String'
        MinimumRequiredMinorEngineVersion:
          $ref: '#/components/schemas/String'
        PortRequired:
          $ref: '#/components/schemas/Boolean'
        DefaultPort:
          $ref: '#/components/schemas/IntegerOptional'
        OptionsDependedOn:
          $ref: '#/components/schemas/OptionsDependedOn'
        OptionsConflictsWith:
          $ref: '#/components/schemas/OptionsConflictsWith'
        Persistent:
          $ref: '#/components/schemas/Boolean'
        Permanent:
          $ref: '#/components/schemas/Boolean'
        OptionGroupOptionSettings:
          $ref: '#/components/schemas/OptionGroupOptionSettingsList'
        OptionGroupOptionVersions:
          $ref: '#/components/schemas/OptionGroupOptionVersionsList'
      description: Available option.
    OptionGroupOptionSetting:
      type: object
      properties:
        SettingName:
          $ref: '#/components/schemas/String'
        SettingDescription:
          $ref: '#/components/schemas/String'
        DefaultValue:
          $ref: '#/components/schemas/String'
        ApplyType:
          $ref: '#/components/schemas/String'
        AllowedValues:
          $ref: '#/components/schemas/String'
        IsModifiable:
          $ref: '#/components/schemas/Boolean'
      description: Option group option settings are used to display settings available for each option with their default values and other information. These values are used with the DescribeOptionGroupOptions action.
    OptionGroupOptionSettingsList:
      type: array
      items:
        $ref: '#/components/schemas/OptionGroupOptionSetting'
    OptionGroupOptionVersionsList:
      type: array
      items:
        $ref: '#/components/schemas/OptionVersion'
    OptionGroupOptionsList:
      type: array
      description: List of available option group options.
      items:
        $ref: '#/components/schemas/OptionGroupOption'
    OptionGroupOptionsMessage:
      type: object
      properties:
        OptionGroupOptions:
          $ref: '#/components/schemas/OptionGroupOptionsList'
        Marker:
          $ref: '#/components/schemas/String'
      description: <p/>
    OptionGroupQuotaExceededFault:
      type: object
      properties: {}
      description: The quota of 20 option groups was exceeded for this AWS account.
    OptionGroups:
      type: object
      properties:
        OptionGroupsList:
          $ref: '#/components/schemas/OptionGroupsList'
        Marker:
          $ref: '#/components/schemas/String'
      description: List of option groups.
    OptionGroupsList:
      type: array
      items:
        $ref: '#/components/schemas/OptionGroup'
    OptionNamesList:
      type: array
      items:
        $ref: '#/components/schemas/String'
    OptionSetting:
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/String'
        Value:
          $ref: '#/components/schemas/String'
        DefaultValue:
          $ref: '#/components/schemas/String'
        Description:
          $ref: '#/components/schemas/String'
        ApplyType:
          $ref: '#/components/schemas/String'
        DataType:
          $ref: '#/components/schemas/String'
        AllowedValues:
          $ref: '#/components/schemas/String'
        IsModifiable:
          $ref: '#/components/schemas/Boolean'
        IsCollection:
          $ref: '#/components/schemas/Boolean'
      description: 'Option settings are the actual settings being applied or configured for that option. It is used when you modify an option group or describe option groups. For example, the NATIVE_NETWORK_ENCRYPTION option has a setting called SQLNET.ENCRYPTION_SERVER that can have several different values.'
    OptionSettingConfigurationList:
      type: array
      items:
        $ref: '#/components/schemas/OptionSetting'
    OptionSettingsList:
      type: array
      items:
        $ref: '#/components/schemas/OptionSetting'
    OptionVersion:
      type: object
      properties:
        Version:
          $ref: '#/components/schemas/String'
        IsDefault:
          $ref: '#/components/schemas/Boolean'
      description: The version for an option. Option group option versions are returned by the <a>DescribeOptionGroupOptions</a> action.
    OptionsConflictsWith:
      type: array
      items:
        $ref: '#/components/schemas/String'
    OptionsDependedOn:
      type: array
      items:
        $ref: '#/components/schemas/String'
    OptionsList:
      type: array
      items:
        $ref: '#/components/schemas/Option'
    OrderableDBInstanceOption:
      type: object
      properties:
        Engine:
          $ref: '#/components/schemas/String'
        EngineVersion:
          $ref: '#/components/schemas/String'
        DBInstanceClass:
          $ref: '#/components/schemas/String'
        LicenseModel:
          $ref: '#/components/schemas/String'
        AvailabilityZones:
          $ref: '#/components/schemas/AvailabilityZoneList'
        MultiAZCapable:
          $ref: '#/components/schemas/Boolean'
        ReadReplicaCapable:
          $ref: '#/components/schemas/Boolean'
        Vpc:
          $ref: '#/components/schemas/Boolean'
        SupportsStorageEncryption:
          $ref: '#/components/schemas/Boolean'
        StorageType:
          $ref: '#/components/schemas/String'
        SupportsIops:
          $ref: '#/components/schemas/Boolean'
        SupportsEnhancedMonitoring:
          $ref: '#/components/schemas/Boolean'
        SupportsIAMDatabaseAuthentication:
          $ref: '#/components/schemas/Boolean'
      description: <p>Contains a list of available options for a DB instance</p> <p> This data type is used as a response element in the <a>DescribeOrderableDBInstanceOptions</a> action. </p>
    OrderableDBInstanceOptionsList:
      type: array
      items:
        $ref: '#/components/schemas/OrderableDBInstanceOption'
    OrderableDBInstanceOptionsMessage:
      type: object
      properties:
        OrderableDBInstanceOptions:
          $ref: '#/components/schemas/OrderableDBInstanceOptionsList'
        Marker:
          $ref: '#/components/schemas/String'
      description: ' Contains the result of a successful invocation of the <a>DescribeOrderableDBInstanceOptions</a> action. '
    Parameter:
      type: object
      properties:
        ParameterName:
          $ref: '#/components/schemas/String'
        ParameterValue:
          $ref: '#/components/schemas/String'
        Description:
          $ref: '#/components/schemas/String'
        Source:
          $ref: '#/components/schemas/String'
        ApplyType:
          $ref: '#/components/schemas/String'
        DataType:
          $ref: '#/components/schemas/String'
        AllowedValues:
          $ref: '#/components/schemas/String'
        IsModifiable:
          $ref: '#/components/schemas/Boolean'
        MinimumEngineVersion:
          $ref: '#/components/schemas/String'
        ApplyMethod:
          $ref: '#/components/schemas/ApplyMethod'
      description: <p> This data type is used as a request parameter in the <a>ModifyDBParameterGroup</a> and <a>ResetDBParameterGroup</a> actions. </p> <p>This data type is used as a response element in the <a>DescribeEngineDefaultParameters</a> and <a>DescribeDBParameters</a> actions.</p>
    ParametersList:
      type: array
      items:
        $ref: '#/components/schemas/Parameter'
    PendingMaintenanceAction:
      type: object
      properties:
        Action:
          $ref: '#/components/schemas/String'
        AutoAppliedAfterDate:
          $ref: '#/components/schemas/TStamp'
        ForcedApplyDate:
          $ref: '#/components/schemas/TStamp'
        OptInStatus:
          $ref: '#/components/schemas/String'
        CurrentApplyDate:
          $ref: '#/components/schemas/TStamp'
        Description:
          $ref: '#/components/schemas/String'
      description: Provides information about a pending maintenance action for a resource.
    PendingMaintenanceActionDetails:
      type: array
      items:
        $ref: '#/components/schemas/PendingMaintenanceAction'
    PendingMaintenanceActions:
      type: array
      items:
        $ref: '#/components/schemas/ResourcePendingMaintenanceActions'
    PendingMaintenanceActionsMessage:
      type: object
      properties:
        PendingMaintenanceActions:
          $ref: '#/components/schemas/PendingMaintenanceActions'
        Marker:
          $ref: '#/components/schemas/String'
      description: Data returned from the <b>DescribePendingMaintenanceActions</b> action.
    PendingModifiedValues:
      type: object
      properties:
        DBInstanceClass:
          $ref: '#/components/schemas/String'
        AllocatedStorage:
          $ref: '#/components/schemas/IntegerOptional'
        MasterUserPassword:
          $ref: '#/components/schemas/String'
        Port:
          $ref: '#/components/schemas/IntegerOptional'
        BackupRetentionPeriod:
          $ref: '#/components/schemas/IntegerOptional'
        MultiAZ:
          $ref: '#/components/schemas/BooleanOptional'
        EngineVersion:
          $ref: '#/components/schemas/String'
        LicenseModel:
          $ref: '#/components/schemas/String'
        Iops:
          $ref: '#/components/schemas/IntegerOptional'
        DBInstanceIdentifier:
          $ref: '#/components/schemas/String'
        StorageType:
          $ref: '#/components/schemas/String'
        CACertificateIdentifier:
          $ref: '#/components/schemas/String'
        DBSubnetGroupName:
          $ref: '#/components/schemas/String'
      description: ' This data type is used as a response element in the <a>ModifyDBInstance</a> action. '
    PointInTimeRestoreNotEnabledFault:
      type: object
      properties: {}
      description: ' <i>SourceDBInstanceIdentifier</i> refers to a DB instance with <i>BackupRetentionPeriod</i> equal to 0. '
    PromoteReadReplicaDBClusterMessage:
      type: object
      required:
        - DBClusterIdentifier
      properties:
        DBClusterIdentifier:
          $ref: '#/components/schemas/String'
      description: <p/>
    PromoteReadReplicaDBClusterResult:
      type: object
      properties:
        DBCluster:
          $ref: '#/components/schemas/DBCluster'
    PromoteReadReplicaMessage:
      type: object
      required:
        - DBInstanceIdentifier
      properties:
        DBInstanceIdentifier:
          $ref: '#/components/schemas/String'
        BackupRetentionPeriod:
          $ref: '#/components/schemas/IntegerOptional'
        PreferredBackupWindow:
          $ref: '#/components/schemas/String'
      description: <p/>
    PromoteReadReplicaResult:
      type: object
      properties:
        DBInstance:
          $ref: '#/components/schemas/DBInstance'
    ProvisionedIopsNotAvailableInAZFault:
      type: object
      properties: {}
      description: Provisioned IOPS not available in the specified Availability Zone.
    PurchaseReservedDBInstancesOfferingMessage:
      type: object
      required:
        - ReservedDBInstancesOfferingId
      properties:
        ReservedDBInstancesOfferingId:
          $ref: '#/components/schemas/String'
        ReservedDBInstanceId:
          $ref: '#/components/schemas/String'
        DBInstanceCount:
          $ref: '#/components/schemas/IntegerOptional'
        Tags:
          $ref: '#/components/schemas/TagList'
      description: <p/>
    PurchaseReservedDBInstancesOfferingResult:
      type: object
      properties:
        ReservedDBInstance:
          $ref: '#/components/schemas/ReservedDBInstance'
    ReadReplicaDBClusterIdentifierList:
      type: array
      items:
        $ref: '#/components/schemas/String'
    ReadReplicaDBInstanceIdentifierList:
      type: array
      items:
        $ref: '#/components/schemas/String'
    ReadReplicaIdentifierList:
      type: array
      items:
        $ref: '#/components/schemas/String'
    RebootDBInstanceMessage:
      type: object
      required:
        - DBInstanceIdentifier
      properties:
        DBInstanceIdentifier:
          $ref: '#/components/schemas/String'
        ForceFailover:
          $ref: '#/components/schemas/BooleanOptional'
      description: <p/>
    RebootDBInstanceResult:
      type: object
      properties:
        DBInstance:
          $ref: '#/components/schemas/DBInstance'
    RecurringCharge:
      type: object
      properties:
        RecurringChargeAmount:
          $ref: '#/components/schemas/Double'
        RecurringChargeFrequency:
          $ref: '#/components/schemas/String'
      description: ' This data type is used as a response element in the <a>DescribeReservedDBInstances</a> and <a>DescribeReservedDBInstancesOfferings</a> actions. '
    RecurringChargeList:
      type: array
      items:
        $ref: '#/components/schemas/RecurringCharge'
    RemoveRoleFromDBClusterMessage:
      type: object
      required:
        - DBClusterIdentifier
        - RoleArn
      properties:
        DBClusterIdentifier:
          $ref: '#/components/schemas/String'
        RoleArn:
          $ref: '#/components/schemas/String'
    RemoveSourceIdentifierFromSubscriptionMessage:
      type: object
      required:
        - SubscriptionName
        - SourceIdentifier
      properties:
        SubscriptionName:
          $ref: '#/components/schemas/String'
        SourceIdentifier:
          $ref: '#/components/schemas/String'
      description: <p/>
    RemoveSourceIdentifierFromSubscriptionResult:
      type: object
      properties:
        EventSubscription:
          $ref: '#/components/schemas/EventSubscription'
    RemoveTagsFromResourceMessage:
      type: object
      required:
        - ResourceName
        - TagKeys
      properties:
        ResourceName:
          $ref: '#/components/schemas/String'
        TagKeys:
          $ref: '#/components/schemas/KeyList'
      description: <p/>
    ReservedDBInstance:
      type: object
      properties:
        ReservedDBInstanceId:
          $ref: '#/components/schemas/String'
        ReservedDBInstancesOfferingId:
          $ref: '#/components/schemas/String'
        DBInstanceClass:
          $ref: '#/components/schemas/String'
        StartTime:
          $ref: '#/components/schemas/TStamp'
        Duration:
          $ref: '#/components/schemas/Integer'
        FixedPrice:
          $ref: '#/components/schemas/Double'
        UsagePrice:
          $ref: '#/components/schemas/Double'
        CurrencyCode:
          $ref: '#/components/schemas/String'
        DBInstanceCount:
          $ref: '#/components/schemas/Integer'
        ProductDescription:
          $ref: '#/components/schemas/String'
        OfferingType:
          $ref: '#/components/schemas/String'
        MultiAZ:
          $ref: '#/components/schemas/Boolean'
        State:
          $ref: '#/components/schemas/String'
        RecurringCharges:
          $ref: '#/components/schemas/RecurringChargeList'
        ReservedDBInstanceArn:
          $ref: '#/components/schemas/String'
      description: ' This data type is used as a response element in the <a>DescribeReservedDBInstances</a> and <a>PurchaseReservedDBInstancesOffering</a> actions. '
    ReservedDBInstanceAlreadyExistsFault:
      type: object
      properties: {}
      description: User already has a reservation with the given identifier.
    ReservedDBInstanceList:
      type: array
      items:
        $ref: '#/components/schemas/ReservedDBInstance'
    ReservedDBInstanceMessage:
      type: object
      properties:
        Marker:
          $ref: '#/components/schemas/String'
        ReservedDBInstances:
          $ref: '#/components/schemas/ReservedDBInstanceList'
      description: ' Contains the result of a successful invocation of the <a>DescribeReservedDBInstances</a> action. '
    ReservedDBInstanceNotFoundFault:
      type: object
      properties: {}
      description: The specified reserved DB Instance not found.
    ReservedDBInstanceQuotaExceededFault:
      type: object
      properties: {}
      description: Request would exceed the user's DB Instance quota.
    ReservedDBInstancesOffering:
      type: object
      properties:
        ReservedDBInstancesOfferingId:
          $ref: '#/components/schemas/String'
        DBInstanceClass:
          $ref: '#/components/schemas/String'
        Duration:
          $ref: '#/components/schemas/Integer'
        FixedPrice:
          $ref: '#/components/schemas/Double'
        UsagePrice:
          $ref: '#/components/schemas/Double'
        CurrencyCode:
          $ref: '#/components/schemas/String'
        ProductDescription:
          $ref: '#/components/schemas/String'
        OfferingType:
          $ref: '#/components/schemas/String'
        MultiAZ:
          $ref: '#/components/schemas/Boolean'
        RecurringCharges:
          $ref: '#/components/schemas/RecurringChargeList'
      description: ' This data type is used as a response element in the <a>DescribeReservedDBInstancesOfferings</a> action. '
    ReservedDBInstancesOfferingList:
      type: array
      items:
        $ref: '#/components/schemas/ReservedDBInstancesOffering'
    ReservedDBInstancesOfferingMessage:
      type: object
      properties:
        Marker:
          $ref: '#/components/schemas/String'
        ReservedDBInstancesOfferings:
          $ref: '#/components/schemas/ReservedDBInstancesOfferingList'
      description: ' Contains the result of a successful invocation of the <a>DescribeReservedDBInstancesOfferings</a> action. '
    ReservedDBInstancesOfferingNotFoundFault:
      type: object
      properties: {}
      description: Specified offering does not exist.
    ResetDBClusterParameterGroupMessage:
      type: object
      required:
        - DBClusterParameterGroupName
      properties:
        DBClusterParameterGroupName:
          $ref: '#/components/schemas/String'
        ResetAllParameters:
          $ref: '#/components/schemas/Boolean'
        Parameters:
          $ref: '#/components/schemas/ParametersList'
      description: <p/>
    ResetDBParameterGroupMessage:
      type: object
      required:
        - DBParameterGroupName
      properties:
        DBParameterGroupName:
          $ref: '#/components/schemas/String'
        ResetAllParameters:
          $ref: '#/components/schemas/Boolean'
        Parameters:
          $ref: '#/components/schemas/ParametersList'
      description: <p/>
    ResourceNotFoundFault:
      type: object
      properties: {}
      description: The specified resource ID was not found.
    ResourcePendingMaintenanceActions:
      type: object
      properties:
        ResourceIdentifier:
          $ref: '#/components/schemas/String'
        PendingMaintenanceActionDetails:
          $ref: '#/components/schemas/PendingMaintenanceActionDetails'
      description: Describes the pending maintenance actions for a resource.
    RestoreDBClusterFromS3Message:
      type: object
      required:
        - DBClusterIdentifier
        - Engine
        - MasterUsername
        - MasterUserPassword
        - SourceEngine
        - SourceEngineVersion
        - S3BucketName
        - S3IngestionRoleArn
      properties:
        AvailabilityZones:
          $ref: '#/components/schemas/AvailabilityZones'
        BackupRetentionPeriod:
          $ref: '#/components/schemas/IntegerOptional'
        CharacterSetName:
          $ref: '#/components/schemas/String'
        DatabaseName:
          $ref: '#/components/schemas/String'
        DBClusterIdentifier:
          $ref: '#/components/schemas/String'
        DBClusterParameterGroupName:
          $ref: '#/components/schemas/String'
        VpcSecurityGroupIds:
          $ref: '#/components/schemas/VpcSecurityGroupIdList'
        DBSubnetGroupName:
          $ref: '#/components/schemas/String'
        Engine:
          $ref: '#/components/schemas/String'
        EngineVersion:
          $ref: '#/components/schemas/String'
        Port:
          $ref: '#/components/schemas/IntegerOptional'
        MasterUsername:
          $ref: '#/components/schemas/String'
        MasterUserPassword:
          $ref: '#/components/schemas/String'
        OptionGroupName:
          $ref: '#/components/schemas/String'
        PreferredBackupWindow:
          $ref: '#/components/schemas/String'
        PreferredMaintenanceWindow:
          $ref: '#/components/schemas/String'
        Tags:
          $ref: '#/components/schemas/TagList'
        StorageEncrypted:
          $ref: '#/components/schemas/BooleanOptional'
        KmsKeyId:
          $ref: '#/components/schemas/String'
        EnableIAMDatabaseAuthentication:
          $ref: '#/components/schemas/BooleanOptional'
        SourceEngine:
          $ref: '#/components/schemas/String'
        SourceEngineVersion:
          $ref: '#/components/schemas/String'
        S3BucketName:
          $ref: '#/components/schemas/String'
        S3Prefix:
          $ref: '#/components/schemas/String'
        S3IngestionRoleArn:
          $ref: '#/components/schemas/String'
    RestoreDBClusterFromS3Result:
      type: object
      properties:
        DBCluster:
          $ref: '#/components/schemas/DBCluster'
    RestoreDBClusterFromSnapshotMessage:
      type: object
      required:
        - DBClusterIdentifier
        - SnapshotIdentifier
        - Engine
      properties:
        AvailabilityZones:
          $ref: '#/components/schemas/AvailabilityZones'
        DBClusterIdentifier:
          $ref: '#/components/schemas/String'
        SnapshotIdentifier:
          $ref: '#/components/schemas/String'
        Engine:
          $ref: '#/components/schemas/String'
        EngineVersion:
          $ref: '#/components/schemas/String'
        Port:
          $ref: '#/components/schemas/IntegerOptional'
        DBSubnetGroupName:
          $ref: '#/components/schemas/String'
        DatabaseName:
          $ref: '#/components/schemas/String'
        OptionGroupName:
          $ref: '#/components/schemas/String'
        VpcSecurityGroupIds:
          $ref: '#/components/schemas/VpcSecurityGroupIdList'
        Tags:
          $ref: '#/components/schemas/TagList'
        KmsKeyId:
          $ref: '#/components/schemas/String'
        EnableIAMDatabaseAuthentication:
          $ref: '#/components/schemas/BooleanOptional'
      description: <p/>
    RestoreDBClusterFromSnapshotResult:
      type: object
      properties:
        DBCluster:
          $ref: '#/components/schemas/DBCluster'
    RestoreDBClusterToPointInTimeMessage:
      type: object
      required:
        - DBClusterIdentifier
        - SourceDBClusterIdentifier
      properties:
        DBClusterIdentifier:
          $ref: '#/components/schemas/String'
        RestoreType:
          $ref: '#/components/schemas/String'
        SourceDBClusterIdentifier:
          $ref: '#/components/schemas/String'
        RestoreToTime:
          $ref: '#/components/schemas/TStamp'
        UseLatestRestorableTime:
          $ref: '#/components/schemas/Boolean'
        Port:
          $ref: '#/components/schemas/IntegerOptional'
        DBSubnetGroupName:
          $ref: '#/components/schemas/String'
        OptionGroupName:
          $ref: '#/components/schemas/String'
        VpcSecurityGroupIds:
          $ref: '#/components/schemas/VpcSecurityGroupIdList'
        Tags:
          $ref: '#/components/schemas/TagList'
        KmsKeyId:
          $ref: '#/components/schemas/String'
        EnableIAMDatabaseAuthentication:
          $ref: '#/components/schemas/BooleanOptional'
      description: <p/>
    RestoreDBClusterToPointInTimeResult:
      type: object
      properties:
        DBCluster:
          $ref: '#/components/schemas/DBCluster'
    RestoreDBInstanceFromDBSnapshotMessage:
      type: object
      required:
        - DBInstanceIdentifier
        - DBSnapshotIdentifier
      properties:
        DBInstanceIdentifier:
          $ref: '#/components/schemas/String'
        DBSnapshotIdentifier:
          $ref: '#/components/schemas/String'
        DBInstanceClass:
          $ref: '#/components/schemas/String'
        Port:
          $ref: '#/components/schemas/IntegerOptional'
        AvailabilityZone:
          $ref: '#/components/schemas/String'
        DBSubnetGroupName:
          $ref: '#/components/schemas/String'
        MultiAZ:
          $ref: '#/components/schemas/BooleanOptional'
        PubliclyAccessible:
          $ref: '#/components/schemas/BooleanOptional'
        AutoMinorVersionUpgrade:
          $ref: '#/components/schemas/BooleanOptional'
        LicenseModel:
          $ref: '#/components/schemas/String'
        DBName:
          $ref: '#/components/schemas/String'
        Engine:
          $ref: '#/components/schemas/String'
        Iops:
          $ref: '#/components/schemas/IntegerOptional'
        OptionGroupName:
          $ref: '#/components/schemas/String'
        Tags:
          $ref: '#/components/schemas/TagList'
        StorageType:
          $ref: '#/components/schemas/String'
        TdeCredentialArn:
          $ref: '#/components/schemas/String'
        TdeCredentialPassword:
          $ref: '#/components/schemas/String'
        Domain:
          $ref: '#/components/schemas/String'
        CopyTagsToSnapshot:
          $ref: '#/components/schemas/BooleanOptional'
        DomainIAMRoleName:
          $ref: '#/components/schemas/String'
        EnableIAMDatabaseAuthentication:
          $ref: '#/components/schemas/BooleanOptional'
      description: <p/>
    RestoreDBInstanceFromDBSnapshotResult:
      type: object
      properties:
        DBInstance:
          $ref: '#/components/schemas/DBInstance'
    RestoreDBInstanceToPointInTimeMessage:
      type: object
      required:
        - SourceDBInstanceIdentifier
        - TargetDBInstanceIdentifier
      properties:
        SourceDBInstanceIdentifier:
          $ref: '#/components/schemas/String'
        TargetDBInstanceIdentifier:
          $ref: '#/components/schemas/String'
        RestoreTime:
          $ref: '#/components/schemas/TStamp'
        UseLatestRestorableTime:
          $ref: '#/components/schemas/Boolean'
        DBInstanceClass:
          $ref: '#/components/schemas/String'
        Port:
          $ref: '#/components/schemas/IntegerOptional'
        AvailabilityZone:
          $ref: '#/components/schemas/String'
        DBSubnetGroupName:
          $ref: '#/components/schemas/String'
        MultiAZ:
          $ref: '#/components/schemas/BooleanOptional'
        PubliclyAccessible:
          $ref: '#/components/schemas/BooleanOptional'
        AutoMinorVersionUpgrade:
          $ref: '#/components/schemas/BooleanOptional'
        LicenseModel:
          $ref: '#/components/schemas/String'
        DBName:
          $ref: '#/components/schemas/String'
        Engine:
          $ref: '#/components/schemas/String'
        Iops:
          $ref: '#/components/schemas/IntegerOptional'
        OptionGroupName:
          $ref: '#/components/schemas/String'
        CopyTagsToSnapshot:
          $ref: '#/components/schemas/BooleanOptional'
        Tags:
          $ref: '#/components/schemas/TagList'
        StorageType:
          $ref: '#/components/schemas/String'
        TdeCredentialArn:
          $ref: '#/components/schemas/String'
        TdeCredentialPassword:
          $ref: '#/components/schemas/String'
        Domain:
          $ref: '#/components/schemas/String'
        DomainIAMRoleName:
          $ref: '#/components/schemas/String'
        EnableIAMDatabaseAuthentication:
          $ref: '#/components/schemas/BooleanOptional'
      description: <p/>
    RestoreDBInstanceToPointInTimeResult:
      type: object
      properties:
        DBInstance:
          $ref: '#/components/schemas/DBInstance'
    RevokeDBSecurityGroupIngressMessage:
      type: object
      required:
        - DBSecurityGroupName
      properties:
        DBSecurityGroupName:
          $ref: '#/components/schemas/String'
        CIDRIP:
          $ref: '#/components/schemas/String'
        EC2SecurityGroupName:
          $ref: '#/components/schemas/String'
        EC2SecurityGroupId:
          $ref: '#/components/schemas/String'
        EC2SecurityGroupOwnerId:
          $ref: '#/components/schemas/String'
      description: <p/>
    RevokeDBSecurityGroupIngressResult:
      type: object
      properties:
        DBSecurityGroup:
          $ref: '#/components/schemas/DBSecurityGroup'
    SNSInvalidTopicFault:
      type: object
      properties: {}
      description: SNS has responded that there is a problem with the SND topic specified.
    SNSNoAuthorizationFault:
      type: object
      properties: {}
      description: You do not have permission to publish to the SNS topic ARN.
    SNSTopicArnNotFoundFault:
      type: object
      properties: {}
      description: The SNS topic ARN does not exist.
    SharedSnapshotQuotaExceededFault:
      type: object
      properties: {}
      description: You have exceeded the maximum number of accounts that you can share a manual DB snapshot with.
    SnapshotQuotaExceededFault:
      type: object
      properties: {}
      description: Request would result in user exceeding the allowed number of DB snapshots.
    SourceIdsList:
      type: array
      items:
        $ref: '#/components/schemas/String'
    SourceNotFoundFault:
      type: object
      properties: {}
      description: The requested source could not be found.
    SourceRegion:
      type: object
      properties:
        RegionName:
          $ref: '#/components/schemas/String'
        Endpoint:
          $ref: '#/components/schemas/String'
        Status:
          $ref: '#/components/schemas/String'
      description: Contains an AWS Region name as the result of a successful call to the <a>DescribeSourceRegions</a> action.
    SourceRegionList:
      type: array
      items:
        $ref: '#/components/schemas/SourceRegion'
    SourceRegionMessage:
      type: object
      properties:
        Marker:
          $ref: '#/components/schemas/String'
        SourceRegions:
          $ref: '#/components/schemas/SourceRegionList'
      description: Contains the result of a successful invocation of the <a>DescribeSourceRegions</a> action.
    SourceType:
      type: string
      enum:
        - db-instance
        - db-parameter-group
        - db-security-group
        - db-snapshot
        - db-cluster
        - db-cluster-snapshot
    StartDBInstanceMessage:
      type: object
      required:
        - DBInstanceIdentifier
      properties:
        DBInstanceIdentifier:
          $ref: '#/components/schemas/String'
    StartDBInstanceResult:
      type: object
      properties:
        DBInstance:
          $ref: '#/components/schemas/DBInstance'
    StopDBInstanceMessage:
      type: object
      required:
        - DBInstanceIdentifier
      properties:
        DBInstanceIdentifier:
          $ref: '#/components/schemas/String'
        DBSnapshotIdentifier:
          $ref: '#/components/schemas/String'
    StopDBInstanceResult:
      type: object
      properties:
        DBInstance:
          $ref: '#/components/schemas/DBInstance'
    StorageQuotaExceededFault:
      type: object
      properties: {}
      description: Request would result in user exceeding the allowed amount of storage available across all DB instances.
    StorageTypeNotSupportedFault:
      type: object
      properties: {}
      description: ' <i>StorageType</i> specified cannot be associated with the DB Instance. '
    String:
      type: string
    Subnet:
      type: object
      properties:
        SubnetIdentifier:
          $ref: '#/components/schemas/String'
        SubnetAvailabilityZone:
          $ref: '#/components/schemas/AvailabilityZone'
        SubnetStatus:
          $ref: '#/components/schemas/String'
      description: ' This data type is used as a response element in the <a>DescribeDBSubnetGroups</a> action. '
    SubnetAlreadyInUse:
      type: object
      properties: {}
      description: The DB subnet is already in use in the Availability Zone.
    SubnetIdentifierList:
      type: array
      items:
        $ref: '#/components/schemas/String'
    SubnetList:
      type: array
      items:
        $ref: '#/components/schemas/Subnet'
    SubscriptionAlreadyExistFault:
      type: object
      properties: {}
      description: The supplied subscription name already exists.
    SubscriptionCategoryNotFoundFault:
      type: object
      properties: {}
      description: The supplied category does not exist.
    SubscriptionNotFoundFault:
      type: object
      properties: {}
      description: The subscription name does not exist.
    SupportedCharacterSetsList:
      type: array
      items:
        $ref: '#/components/schemas/CharacterSet'
    SupportedTimezonesList:
      type: array
      items:
        $ref: '#/components/schemas/Timezone'
    TStamp:
      type: string
      format: date-time
    Tag:
      type: object
      properties:
        Key:
          $ref: '#/components/schemas/String'
        Value:
          $ref: '#/components/schemas/String'
      description: Metadata assigned to an Amazon RDS resource consisting of a key-value pair.
    TagList:
      type: array
      description: A list of tags.
      items:
        $ref: '#/components/schemas/Tag'
    TagListMessage:
      type: object
      properties:
        TagList:
          $ref: '#/components/schemas/TagList'
      description: <p/>
    Timezone:
      type: object
      properties:
        TimezoneName:
          $ref: '#/components/schemas/String'
      description: 'A time zone associated with a <a>DBInstance</a> or a <a>DBSnapshot</a>. This data type is an element in the response to the <a>DescribeDBInstances</a>, the <a>DescribeDBSnapshots</a>, and the <a>DescribeDBEngineVersions</a> actions. '
    UpgradeTarget:
      type: object
      properties:
        Engine:
          $ref: '#/components/schemas/String'
        EngineVersion:
          $ref: '#/components/schemas/String'
        Description:
          $ref: '#/components/schemas/String'
        AutoUpgrade:
          $ref: '#/components/schemas/Boolean'
        IsMajorVersionUpgrade:
          $ref: '#/components/schemas/Boolean'
      description: The version of the database engine that a DB instance can be upgraded to.
    ValidUpgradeTargetList:
      type: array
      items:
        $ref: '#/components/schemas/UpgradeTarget'
    VpcSecurityGroupIdList:
      type: array
      items:
        $ref: '#/components/schemas/String'
    VpcSecurityGroupMembership:
      type: object
      properties:
        VpcSecurityGroupId:
          $ref: '#/components/schemas/String'
        Status:
          $ref: '#/components/schemas/String'
      description: This data type is used as a response element for queries on VPC security group membership.
    VpcSecurityGroupMembershipList:
      type: array
      items:
        $ref: '#/components/schemas/VpcSecurityGroupMembership'
  parameters:
    Action:
      name: Action
      in: header
      required: true
      schema:
        type: string
    Version:
      name: Version
      in: header
      required: true
      schema:
        type: string
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      required: false
      schema:
        type: string
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      required: false
      schema:
        type: string
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      required: false
      schema:
        type: string
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      required: false
      schema:
        type: string
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      required: false
      schema:
        type: string
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      required: false
      schema:
        type: string
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      required: false
      schema:
        type: string
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
