openapi: 3.0.0
servers:
  - url: 'http://metering.marketplace.amazonaws.com/'
info:
  version: '2016-01-14'
  x-release: v4
  title: AWSMarketplace Metering
  description: '<fullname>AWS Marketplace Metering Service</fullname> <p>This reference provides descriptions of the low-level AWS Marketplace Metering Service API.</p> <p>AWS Marketplace sellers can use this API to submit usage data for custom usage dimensions.</p> <p> <b>Submitting Metering Records</b> </p> <ul> <li> <p> <i>MeterUsage</i>- Submits the metering record for a Marketplace product. MeterUsage is called from an EC2 instance.</p> </li> <li> <p> <i>BatchMeterUsage</i>- Submits the metering record for a set of customers. BatchMeterUsage is called from a software-as-a-service (SaaS) application.</p> </li> </ul> <p> <b>Accepting New Customers</b> </p> <ul> <li> <p> <i>ResolveCustomer</i>- Called by a SaaS application during the registration process. When a buyer visits your website during the registration process, the buyer submits a Registration Token through the browser. The Registration Token is resolved through this API to obtain a CustomerIdentifier and Product Code.</p> </li> </ul>'
  x-logo:
    url: 'https://media.amazonwebservices.com/blog/2007/big_pbaws_logo_300px.jpg'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: metering.marketplace
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/meteringmarketplace-2016-01-14.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-direct: true
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://aws.amazon.com/marketplace/'
x-hasEquivalentPaths: true
security:
  - hmac: []
paths:
  /:
    post:
      operationId: BatchMeterUsage
      description: '<p>BatchMeterUsage is called from a SaaS application listed on the AWS Marketplace to post metering records for a set of customers.</p> <p>For identical requests, the API is idempotent; requests can be retried with the same records or a subset of the input records.</p> <p>Every request to BatchMeterUsage is for one product. If you need to meter usage for multiple products, you must make multiple calls to BatchMeterUsage.</p> <p>BatchMeterUsage can process up to 25 UsageRecords at a time.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchMeterUsageResult'
        '480':
          description: InternalServiceErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceErrorException'
        '481':
          description: InvalidProductCodeException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidProductCodeException'
        '482':
          description: InvalidUsageDimensionException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidUsageDimensionException'
        '483':
          description: InvalidCustomerIdentifierException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidCustomerIdentifierException'
        '484':
          description: TimestampOutOfBoundsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimestampOutOfBoundsException'
        '485':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchMeterUsageRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#MeterUsage':
    post:
      operationId: MeterUsage
      description: '<p>API to emit metering records. For identical requests, the API is idempotent. It simply returns the metering record ID.</p> <p>MeterUsage is authenticated on the buyer''s AWS account, generally when running from an EC2 instance on the AWS Marketplace.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeterUsageResult'
        '480':
          description: InternalServiceErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceErrorException'
        '481':
          description: InvalidProductCodeException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidProductCodeException'
        '482':
          description: InvalidUsageDimensionException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidUsageDimensionException'
        '483':
          description: InvalidEndpointRegionException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidEndpointRegionException'
        '484':
          description: TimestampOutOfBoundsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimestampOutOfBoundsException'
        '485':
          description: DuplicateRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DuplicateRequestException'
        '486':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MeterUsageRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#ResolveCustomer':
    post:
      operationId: ResolveCustomer
      description: 'ResolveCustomer is called by a SaaS application during the registration process. When a buyer visits your website during the registration process, the buyer submits a registration token through their browser. The registration token is resolved through this API to obtain a CustomerIdentifier and product code.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResolveCustomerResult'
        '480':
          description: InvalidTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidTokenException'
        '481':
          description: ExpiredTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpiredTokenException'
        '482':
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '483':
          description: InternalServiceErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceErrorException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResolveCustomerRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
components:
  schemas:
    BatchMeterUsageRequest:
      type: object
      required:
        - UsageRecords
        - ProductCode
      properties:
        UsageRecords:
          $ref: '#/components/schemas/UsageRecordList'
        ProductCode:
          $ref: '#/components/schemas/ProductCode'
      description: 'A BatchMeterUsageRequest contains UsageRecords, which indicate quantities of usage within your application.'
    BatchMeterUsageResult:
      type: object
      properties:
        Results:
          $ref: '#/components/schemas/UsageRecordResultList'
        UnprocessedRecords:
          $ref: '#/components/schemas/UsageRecordList'
      description: Contains the UsageRecords processed by BatchMeterUsage and any records that have failed due to transient error.
    Boolean:
      type: boolean
    CustomerIdentifier:
      type: string
      minLength: 1
      maxLength: 255
    DuplicateRequestException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/errorMessage'
      description: 'A metering record has already been emitted by the same EC2 instance for the given {usageDimension, timestamp} with a different usageQuantity.'
    ExpiredTokenException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/errorMessage'
      description: 'The submitted registration token has expired. This can happen if the buyer''s browser takes too long to redirect to your page, the buyer has resubmitted the registration token, or your application has held on to the registration token for too long. Your SaaS registration website should redeem this token as soon as it is submitted by the buyer''s browser.'
    InternalServiceErrorException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/errorMessage'
      description: 'An internal error has occurred. Retry your request. If the problem persists, post a message with details on the AWS forums.'
    InvalidCustomerIdentifierException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/errorMessage'
      description: You have metered usage for a CustomerIdentifier that does not exist.
    InvalidEndpointRegionException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/errorMessage'
      description: The endpoint being called is in a region different from your EC2 instance. The region of the Metering service endpoint and the region of the EC2 instance must match.
    InvalidProductCodeException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/errorMessage'
      description: The product code passed does not match the product code used for publishing the product.
    InvalidTokenException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/errorMessage'
    InvalidUsageDimensionException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/errorMessage'
      description: The usage dimension does not match one of the UsageDimensions associated with products.
    MeterUsageRequest:
      type: object
      required:
        - ProductCode
        - Timestamp
        - UsageDimension
        - UsageQuantity
        - DryRun
      properties:
        ProductCode:
          $ref: '#/components/schemas/ProductCode'
        Timestamp:
          $ref: '#/components/schemas/Timestamp'
        UsageDimension:
          $ref: '#/components/schemas/UsageDimension'
        UsageQuantity:
          $ref: '#/components/schemas/UsageQuantity'
        DryRun:
          $ref: '#/components/schemas/Boolean'
    MeterUsageResult:
      type: object
      properties:
        MeteringRecordId:
          $ref: '#/components/schemas/String'
    NonEmptyString:
      type: string
      pattern: \S+
    ProductCode:
      type: string
      minLength: 1
      maxLength: 255
    ResolveCustomerRequest:
      type: object
      required:
        - RegistrationToken
      properties:
        RegistrationToken:
          $ref: '#/components/schemas/NonEmptyString'
      description: Contains input to the ResolveCustomer operation.
    ResolveCustomerResult:
      type: object
      properties:
        CustomerIdentifier:
          $ref: '#/components/schemas/CustomerIdentifier'
        ProductCode:
          $ref: '#/components/schemas/ProductCode'
      description: The result of the ResolveCustomer operation. Contains the CustomerIdentifier and product code.
    String:
      type: string
    ThrottlingException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/errorMessage'
      description: The calls to the MeterUsage API are throttled.
    Timestamp:
      type: string
      format: date-time
    TimestampOutOfBoundsException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/errorMessage'
      description: The timestamp value passed in the meterUsage() is out of allowed range.
    UsageDimension:
      type: string
      minLength: 1
      maxLength: 255
    UsageQuantity:
      type: integer
      minimum: 0
      maximum: 1000000
    UsageRecord:
      type: object
      required:
        - Timestamp
        - CustomerIdentifier
        - Dimension
        - Quantity
      properties:
        Timestamp:
          $ref: '#/components/schemas/Timestamp'
        CustomerIdentifier:
          $ref: '#/components/schemas/CustomerIdentifier'
        Dimension:
          $ref: '#/components/schemas/UsageDimension'
        Quantity:
          $ref: '#/components/schemas/UsageQuantity'
      description: '<p>A UsageRecord indicates a quantity of usage for a given product, customer, dimension and time.</p> <p>Multiple requests with the same UsageRecords as input will be deduplicated to prevent double charges.</p>'
    UsageRecordList:
      type: array
      items:
        $ref: '#/components/schemas/UsageRecord'
      minItems: 0
      maxItems: 25
    UsageRecordResult:
      type: object
      properties:
        UsageRecord:
          $ref: '#/components/schemas/UsageRecord'
        MeteringRecordId:
          $ref: '#/components/schemas/String'
        Status:
          $ref: '#/components/schemas/UsageRecordResultStatus'
      description: A UsageRecordResult indicates the status of a given UsageRecord processed by BatchMeterUsage.
    UsageRecordResultList:
      type: array
      items:
        $ref: '#/components/schemas/UsageRecordResult'
    UsageRecordResultStatus:
      type: string
      enum:
        - Success
        - CustomerNotSubscribed
        - DuplicateRecord
    errorMessage:
      type: string
  parameters:
    Action:
      name: Action
      in: header
      required: true
      schema:
        type: string
    Version:
      name: Version
      in: header
      required: true
      schema:
        type: string
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      required: false
      schema:
        type: string
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      required: false
      schema:
        type: string
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      required: false
      schema:
        type: string
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      required: false
      schema:
        type: string
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      required: false
      schema:
        type: string
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      required: false
      schema:
        type: string
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      required: false
      schema:
        type: string
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
