openapi: 3.0.0
servers:
  - url: 'http://organizations.amazonaws.com/'
info:
  version: '2016-11-28'
  x-release: v4
  title: AWS Organizations
  description: '<fullname>AWS Organizations API Reference</fullname> <p>AWS Organizations is a web service that enables you to consolidate your multiple AWS accounts into an <i>organization</i> and centrally manage your accounts and their resources.</p> <p>This guide provides descriptions of the Organizations API. For more information about using this service, see the <a href="http://docs.aws.amazon.com/organizations/latest/userguide/orgs_introduction.html">AWS Organizations User Guide</a>.</p> <p> <b>API Version</b> </p> <p>This version of the Organizations API Reference documents the Organizations API version 2016-11-28.</p> <note> <p>As an alternative to using the API directly, you can use one of the AWS SDKs, which consist of libraries and sample code for various programming languages and platforms (Java, Ruby, .NET, iOS, Android, and more). The SDKs provide a convenient way to create programmatic access to AWS Organizations. For example, the SDKs take care of cryptographically signing requests, managing errors, and retrying requests automatically. For more information about the AWS SDKs, including how to download and install them, see <a href="http://aws.amazon.com/tools/">Tools for Amazon Web Services</a>.</p> </note> <p>We recommend that you use the AWS SDKs to make programmatic API calls to Organizations. However, you also can use the Organizations Query API to make direct calls to the Organizations web service. To learn more about the Organizations Query API, see <a href="http://docs.aws.amazon.com/organizations/latest/userguide/orgs_query-requests.html">Making Query Requests</a> in the <i>AWS Organizations User Guide</i>. Organizations supports GET and POST requests for all actions. That is, the API does not require you to use GET for some actions and POST for others. However, GET requests are subject to the limitation size of a URL. Therefore, for operations that require larger sizes, use a POST request.</p> <p> <b>Signing Requests</b> </p> <p>When you send HTTP requests to AWS, you must sign the requests so that AWS can identify who sent them. You sign requests with your AWS access key, which consists of an access key ID and a secret access key. We strongly recommend that you do not create an access key for your root account. Anyone who has the access key for your root account has unrestricted access to all the resources in your account. Instead, create an access key for an IAM user account that has administrative privileges. As another option, use AWS Security Token Service to generate temporary security credentials, and use those credentials to sign requests. </p> <p>To sign requests, we recommend that you use <a href="http://docs.aws.amazon.com/general/latest/gr/signature-version-4.html">Signature Version 4</a>. If you have an existing application that uses Signature Version 2, you do not have to update it to use Signature Version 4. However, some operations now require Signature Version 4. The documentation for operations that require version 4 indicate this requirement. </p> <p>When you use the AWS Command Line Interface (AWS CLI) or one of the AWS SDKs to make requests to AWS, these tools automatically sign the requests for you with the access key that you specify when you configure the tools.</p> <p>In this release, each organization can have only one root. In a future release, a single organization will support multiple roots.</p> <p> <b>Support and Feedback for AWS Organizations</b> </p> <p>We welcome your feedback. Send your comments to <a href="mailto:feedback-awsorganizations@amazon.com">feedback-awsorganizations@amazon.com</a> or post your feedback and questions in our private <a href="http://forums.aws.amazon.com/forum.jspa?forumID=219">AWS Organizations support forum</a>. If you don''t have access to the forum, send a request for access to the email address, along with your forum user ID. For more information about the AWS support forums, see <a href="http://forums.aws.amazon.com/help.jspa">Forums Help</a>.</p> <p> <b>Endpoint to Call When Using the CLI or the AWS API</b> </p> <p>For the current release of Organizations, you must specify the <code>us-east-1</code> region for all AWS API and CLI calls. You can do this in the CLI by using these parameters and commands:</p> <ul> <li> <p>Use the following parameter with each command to specify both the endpoint and its region:</p> <p> <code>--endpoint-url https://organizations.us-east-1.amazonaws.com</code> </p> </li> <li> <p>Use the default endpoint, but configure your default region with this command:</p> <p> <code>aws configure set default.region us-east-1</code> </p> </li> <li> <p>Use the following parameter with each command to specify the endpoint:</p> <p> <code>--region us-east-1</code> </p> </li> </ul> <p>For the various SDKs used to call the APIs, see the documentation for the SDK of interest to learn how to direct the requests to a specific endpoint. For more information, see <a href="http://docs.aws.amazon.com/general/latest/gr/rande.html#sts_region">Regions and Endpoints</a> in the <i>AWS General Reference</i>. </p> <p> <b>How examples are presented</b> </p> <p>The JSON returned by the AWS Organizations service as response to your requests is returned as a single long string without line breaks or formatting whitespace. Both line breaks and whitespace are included in the examples in this guide to improve readability. When example input parameters also would result in long strings that would extend beyond the screen, we insert line breaks to enhance readability. You should always submit the input as a single JSON text string.</p> <p> <b>Recording API Requests</b> </p> <p>AWS Organizations supports AWS CloudTrail, a service that records AWS API calls for your AWS account and delivers log files to an Amazon S3 bucket. By using information collected by AWS CloudTrail, you can determine which requests were successfully made to Organizations, who made the request, when it was made, and so on. For more about AWS Organizations and its support for AWS CloudTrail, see <a href="http://docs.aws.amazon.com/organizations/latest/userguide/orgs_cloudtrail-integration.html">Logging AWS Organizations Events with AWS CloudTrail</a> in the <i>AWS Organizations User Guide</i>. To learn more about CloudTrail, including how to turn it on and find your log files, see the <a href="http://docs.aws.amazon.com/awscloudtrail/latest/userguide/what_is_cloud_trail_top_level.html">AWS CloudTrail User Guide</a>.</p>'
  x-logo:
    url: 'https://media.amazonwebservices.com/blog/2007/big_pbaws_logo_300px.jpg'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: organizations
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/organizations-2016-11-28.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-direct: true
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://aws.amazon.com/organizations/'
x-hasEquivalentPaths: true
security:
  - hmac: []
paths:
  /:
    post:
      operationId: AcceptHandshake
      description: '<p>Sends a response to the originator of a handshake agreeing to the action proposed by the handshake request. </p> <p>This operation can be called only by the following principals when they also have the relevant IAM permissions:</p> <ul> <li> <p> <b>Invitation to join</b> or <b>Approve all features request</b> handshakes: only a principal from the member account. </p> </li> <li> <p> <b>Enable all features final confirmation</b> handshake: only a principal from the master account.</p> <p>For more information about invitations, see <a href="http://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_accounts_invites.html">Inviting an AWS Account to Join Your Organization</a> in the <i>AWS Organizations User Guide</i>. For more information about requests to enable all features in the organization, see <a href="http://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_org_support-all-features.html">Enabling All Features in Your Organization</a> in the <i>AWS Organizations User Guide</i>.</p> </li> </ul> <p>After you accept a handshake, it continues to appear in the results of relevant APIs for only 30 days. After that it is deleted.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcceptHandshakeResponse'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: AWSOrganizationsNotInUseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AWSOrganizationsNotInUseException'
        '482':
          description: HandshakeConstraintViolationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HandshakeConstraintViolationException'
        '483':
          description: HandshakeNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HandshakeNotFoundException'
        '484':
          description: InvalidHandshakeTransitionException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidHandshakeTransitionException'
        '485':
          description: HandshakeAlreadyInStateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HandshakeAlreadyInStateException'
        '486':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '487':
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
        '488':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '489':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AcceptHandshakeRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#AttachPolicy':
    post:
      operationId: AttachPolicy
      description: '<p>Attaches a policy to a root, an organizational unit, or an individual account. How the policy affects accounts depends on the type of policy:</p> <ul> <li> <p> <b>Service control policy (SCP)</b> - An SCP specifies what permissions can be delegated to users in affected member accounts. The scope of influence for a policy depends on what you attach the policy to:</p> <ul> <li> <p>If you attach an SCP to a root, it affects all accounts in the organization.</p> </li> <li> <p>If you attach an SCP to an OU, it affects all accounts in that OU and in any child OUs.</p> </li> <li> <p>If you attach the policy directly to an account, then it affects only that account.</p> </li> </ul> <p>SCPs essentially are permission "filters". When you attach one SCP to a higher level root or OU, and you also attach a different SCP to a child OU or to an account, the child policy can further restrict only the permissions that pass through the parent filter and are available to the child. An SCP that is attached to a child cannot grant a permission that is not already granted by the parent. For example, imagine that the parent SCP allows permissions A, B, C, D, and E. The child SCP allows C, D, E, F, and G. The result is that the accounts affected by the child SCP are allowed to use only C, D, and E. They cannot use A or B because they were filtered out by the child OU. They also cannot use F and G because they were filtered out by the parent OU. They cannot be granted back by the child SCP; child SCPs can only filter the permissions they receive from the parent SCP.</p> <p>AWS Organizations attaches a default SCP named <code>"FullAWSAccess</code> to every root, OU, and account. This default SCP allows all services and actions, enabling any new child OU or account to inherit the permissions of the parent root or OU. If you detach the default policy, you must replace it with a policy that specifies the permissions that you want to allow in that OU or account.</p> <p>For more information about how Organizations policies permissions work, see <a href="http://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_scp.html">Using Service Control Policies</a> in the <i>AWS Organizations User Guide</i>.</p> </li> </ul> <p>This operation can be called only from the organization''s master account.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: AWSOrganizationsNotInUseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AWSOrganizationsNotInUseException'
        '482':
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
        '483':
          description: ConstraintViolationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConstraintViolationException'
        '484':
          description: DuplicatePolicyAttachmentException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DuplicatePolicyAttachmentException'
        '485':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '486':
          description: PolicyNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyNotFoundException'
        '487':
          description: PolicyTypeNotEnabledException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyTypeNotEnabledException'
        '488':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '489':
          description: TargetNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TargetNotFoundException'
        '490':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttachPolicyRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#CancelHandshake':
    post:
      operationId: CancelHandshake
      description: '<p>Cancels a handshake. Canceling a handshake sets the handshake state to <code>CANCELED</code>. </p> <p>This operation can be called only from the account that originated the handshake. The recipient of the handshake can''t cancel it, but can use <a>DeclineHandshake</a> instead. After a handshake is canceled, the recipient can no longer respond to that handshake.</p> <p>After you cancel a handshake, it continues to appear in the results of relevant APIs for only 30 days. After that it is deleted.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancelHandshakeResponse'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
        '482':
          description: HandshakeNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HandshakeNotFoundException'
        '483':
          description: InvalidHandshakeTransitionException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidHandshakeTransitionException'
        '484':
          description: HandshakeAlreadyInStateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HandshakeAlreadyInStateException'
        '485':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '486':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '487':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelHandshakeRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#CreateAccount':
    post:
      operationId: CreateAccount
      description: '<p>Creates an AWS account that is automatically a member of the organization whose credentials made the request. This is an asynchronous request that AWS performs in the background. If you want to check the status of the request later, you need the <code>OperationId</code> response element from this operation to provide as a parameter to the <a>DescribeCreateAccountStatus</a> operation.</p> <p>AWS Organizations preconfigures the new member account with a role (named <code>OrganizationAccountAccessRole</code> by default) that grants administrator permissions to the new account. Principals in the master account can assume the role. AWS Organizations clones the company name and address information for the new account from the organization''s master account.</p> <p>For more information about creating accounts, see <a href="http://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_accounts_create.html">Creating an AWS Account in Your Organization</a> in the <i>AWS Organizations User Guide</i>.</p> <important> <p>You cannot remove accounts that are created with this operation from an organization. That also means that you cannot delete an organization that contains an account that is created with this operation.</p> </important> <note> <p>When you create a member account with this operation, you can choose whether to create the account with the <b>IAM User and Role Access to Billing Information</b> switch enabled. If you enable it, IAM users and roles that have appropriate permissions can view billing information for the account. If you disable this, then only the account root user can access billing information. For information about how to disable this for an account, see <a href="http://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/grantaccess.html">Granting Access to Your Billing Information and Tools</a>.</p> </note> <p>This operation can be called only from the organization''s master account.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAccountResponse'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: AWSOrganizationsNotInUseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AWSOrganizationsNotInUseException'
        '482':
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
        '483':
          description: ConstraintViolationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConstraintViolationException'
        '484':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '485':
          description: FinalizingOrganizationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FinalizingOrganizationException'
        '486':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '487':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAccountRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#CreateOrganization':
    post:
      operationId: CreateOrganization
      description: '<p>Creates an AWS organization. The account whose user is calling the CreateOrganization operation automatically becomes the <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/orgs_getting-started_concepts.html#account">master account</a> of the new organization.</p> <p>This operation must be called using credentials from the account that is to become the new organization''s master account. The principal must also have the relevant IAM permissions.</p> <p>By default (or if you set the <code>FeatureSet</code> parameter to <code>ALL</code>), the new organization is created with all features enabled and service control policies automatically enabled in the root. If you instead choose to create the organization supporting only the consolidated billing features by setting the <code>FeatureSet</code> parameter to <code>CONSOLIDATED_BILLING"</code>, then no policy types are enabled by default and you cannot use organization policies.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateOrganizationResponse'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: AlreadyInOrganizationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlreadyInOrganizationException'
        '482':
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
        '483':
          description: ConstraintViolationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConstraintViolationException'
        '484':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '485':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '486':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrganizationRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#CreateOrganizationalUnit':
    post:
      operationId: CreateOrganizationalUnit
      description: '<p>Creates an organizational unit (OU) within a root or parent OU. An OU is a container for accounts that enables you to organize your accounts to apply policies according to your business requirements. The number of levels deep that you can nest OUs is dependent upon the policy types enabled for that root. For service control policies, the limit is five. </p> <p>For more information about OUs, see <a href="http://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_ous.html">Managing Organizational Units</a> in the <i>AWS Organizations User Guide</i>.</p> <p>This operation can be called only from the organization''s master account.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateOrganizationalUnitResponse'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: AWSOrganizationsNotInUseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AWSOrganizationsNotInUseException'
        '482':
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
        '483':
          description: ConstraintViolationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConstraintViolationException'
        '484':
          description: DuplicateOrganizationalUnitException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DuplicateOrganizationalUnitException'
        '485':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '486':
          description: ParentNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParentNotFoundException'
        '487':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '488':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrganizationalUnitRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#CreatePolicy':
    post:
      operationId: CreatePolicy
      description: '<p>Creates a policy of a specified type that you can attach to a root, an organizational unit (OU), or an individual AWS account.</p> <p>For more information about policies and their use, see <a href="http://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies.html">Managing Organization Policies</a>.</p> <p>This operation can be called only from the organization''s master account.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatePolicyResponse'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: AWSOrganizationsNotInUseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AWSOrganizationsNotInUseException'
        '482':
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
        '483':
          description: ConstraintViolationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConstraintViolationException'
        '484':
          description: DuplicatePolicyException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DuplicatePolicyException'
        '485':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '486':
          description: MalformedPolicyDocumentException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MalformedPolicyDocumentException'
        '487':
          description: PolicyTypeNotAvailableForOrganizationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyTypeNotAvailableForOrganizationException'
        '488':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '489':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePolicyRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DeclineHandshake':
    post:
      operationId: DeclineHandshake
      description: '<p>Declines a handshake request. This sets the handshake state to <code>DECLINED</code> and effectively deactivates the request.</p> <p>This operation can be called only from the account that received the handshake. The originator of the handshake can use <a>CancelHandshake</a> instead. The originator can''t reactivate a declined request, but can re-initiate the process with a new handshake request.</p> <p>After you decline a handshake, it continues to appear in the results of relevant APIs for only 30 days. After that it is deleted.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeclineHandshakeResponse'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
        '482':
          description: HandshakeNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HandshakeNotFoundException'
        '483':
          description: InvalidHandshakeTransitionException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidHandshakeTransitionException'
        '484':
          description: HandshakeAlreadyInStateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HandshakeAlreadyInStateException'
        '485':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '486':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '487':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeclineHandshakeRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DeleteOrganization':
    post:
      operationId: DeleteOrganization
      description: '<p>Deletes the organization. You can delete an organization only by using credentials from the master account. The organization must be empty of member accounts, OUs, and policies.</p> <important> <p>If you create any accounts using Organizations operations or the Organizations console, you can''t remove those accounts from the organization, which means that you can''t delete the organization.</p> </important>'
      responses:
        '200':
          description: Success
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: AWSOrganizationsNotInUseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AWSOrganizationsNotInUseException'
        '482':
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
        '483':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '484':
          description: OrganizationNotEmptyException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationNotEmptyException'
        '485':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '486':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DeleteOrganizationalUnit':
    post:
      operationId: DeleteOrganizationalUnit
      description: <p>Deletes an organizational unit from a root or another OU. You must first remove all accounts and child OUs from the OU that you want to delete.</p> <p>This operation can be called only from the organization's master account.</p>
      responses:
        '200':
          description: Success
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: AWSOrganizationsNotInUseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AWSOrganizationsNotInUseException'
        '482':
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
        '483':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '484':
          description: OrganizationalUnitNotEmptyException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationalUnitNotEmptyException'
        '485':
          description: OrganizationalUnitNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationalUnitNotFoundException'
        '486':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '487':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteOrganizationalUnitRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DeletePolicy':
    post:
      operationId: DeletePolicy
      description: '<p>Deletes the specified policy from your organization. Before you perform this operation, you must first detach the policy from all OUs, roots, and accounts.</p> <p>This operation can be called only from the organization''s master account.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: AWSOrganizationsNotInUseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AWSOrganizationsNotInUseException'
        '482':
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
        '483':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '484':
          description: PolicyInUseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyInUseException'
        '485':
          description: PolicyNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyNotFoundException'
        '486':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '487':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeletePolicyRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DescribeAccount':
    post:
      operationId: DescribeAccount
      description: <p>Retrieves Organizations-related information about the specified account.</p> <p>This operation can be called only from the organization's master account.</p>
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeAccountResponse'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: AccountNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountNotFoundException'
        '482':
          description: AWSOrganizationsNotInUseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AWSOrganizationsNotInUseException'
        '483':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '484':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '485':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeAccountRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DescribeCreateAccountStatus':
    post:
      operationId: DescribeCreateAccountStatus
      description: <p>Retrieves the current status of an asynchronous request to create an account.</p> <p>This operation can be called only from the organization's master account.</p>
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeCreateAccountStatusResponse'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: AWSOrganizationsNotInUseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AWSOrganizationsNotInUseException'
        '482':
          description: CreateAccountStatusNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAccountStatusNotFoundException'
        '483':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '484':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '485':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeCreateAccountStatusRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DescribeHandshake':
    post:
      operationId: DescribeHandshake
      description: '<p>Retrieves information about a previously requested handshake. The handshake ID comes from the response to the original <a>InviteAccountToOrganization</a> operation that generated the handshake.</p> <p>You can access handshakes that are ACCEPTED, DECLINED, or CANCELED for only 30 days after they change to that state. They are then deleted and no longer accessible.</p> <p>This operation can be called from any account in the organization.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeHandshakeResponse'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
        '482':
          description: HandshakeNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HandshakeNotFoundException'
        '483':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '484':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '485':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeHandshakeRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DescribeOrganization':
    post:
      operationId: DescribeOrganization
      description: <p>Retrieves information about the organization that the user's account belongs to.</p> <p>This operation can be called from any account in the organization.</p>
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeOrganizationResponse'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: AWSOrganizationsNotInUseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AWSOrganizationsNotInUseException'
        '482':
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
        '483':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '484':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DescribeOrganizationalUnit':
    post:
      operationId: DescribeOrganizationalUnit
      description: <p>Retrieves information about an organizational unit (OU).</p> <p>This operation can be called only from the organization's master account.</p>
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeOrganizationalUnitResponse'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: AWSOrganizationsNotInUseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AWSOrganizationsNotInUseException'
        '482':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '483':
          description: OrganizationalUnitNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationalUnitNotFoundException'
        '484':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '485':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeOrganizationalUnitRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DescribePolicy':
    post:
      operationId: DescribePolicy
      description: <p>Retrieves information about a policy.</p> <p>This operation can be called only from the organization's master account.</p>
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribePolicyResponse'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: AWSOrganizationsNotInUseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AWSOrganizationsNotInUseException'
        '482':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '483':
          description: PolicyNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyNotFoundException'
        '484':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '485':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribePolicyRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DetachPolicy':
    post:
      operationId: DetachPolicy
      description: '<p>Detaches a policy from a target root, organizational unit, or account. If the policy being detached is a service control policy (SCP), the changes to permissions for IAM users and roles in affected accounts are immediate.</p> <p> <b>Note:</b> Every root, OU, and account must have at least one SCP attached. If you want to replace the default <code>FullAWSAccess</code> policy with one that limits the permissions that can be delegated, then you must attach the replacement policy before you can remove the default one. This is the authorization strategy of <a href="http://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_about-scps.html#orgs_policies_whitelist">whitelisting</a>. If you instead attach a second SCP and leave the <code>FullAWSAccess</code> SCP still attached, and specify <code>"Effect": "Deny"</code> in the second SCP to override the <code>"Effect": "Allow"</code> in the <code>FullAWSAccess</code> policy (or any other attached SCP), then you are using the authorization strategy of <a href="http://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_about-scps.html#orgs_policies_blacklist">blacklisting</a>. </p> <p>This operation can be called only from the organization''s master account.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: AWSOrganizationsNotInUseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AWSOrganizationsNotInUseException'
        '482':
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
        '483':
          description: ConstraintViolationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConstraintViolationException'
        '484':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '485':
          description: PolicyNotAttachedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyNotAttachedException'
        '486':
          description: PolicyNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyNotFoundException'
        '487':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '488':
          description: TargetNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TargetNotFoundException'
        '489':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DetachPolicyRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#DisablePolicyType':
    post:
      operationId: DisablePolicyType
      description: '<p>Disables an organizational control policy type in a root. A poicy of a certain type can be attached to entities in a root only if that type is enabled in the root. After you perform this operation, you no longer can attach policies of the specified type to that root or to any OU or account in that root. You can undo this by using the <a>EnablePolicyType</a> operation.</p> <p>This operation can be called only from the organization''s master account.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisablePolicyTypeResponse'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: AWSOrganizationsNotInUseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AWSOrganizationsNotInUseException'
        '482':
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
        '483':
          description: ConstraintViolationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConstraintViolationException'
        '484':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '485':
          description: PolicyTypeNotEnabledException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyTypeNotEnabledException'
        '486':
          description: RootNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RootNotFoundException'
        '487':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '488':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisablePolicyTypeRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#EnableAllFeatures':
    post:
      operationId: EnableAllFeatures
      description: '<p>Enables all features in an organization. This enables the use of organization policies that can restrict the services and actions that can be called in each account. Until you enable all features, you have access only to consolidated billing, and you can''t use any of the advanced account administration features that AWS Organizations supports. For more information, see <a href="http://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_org_support-all-features.html">Enabling All Features in Your Organization</a> in the <i>AWS Organizations User Guide</i>.</p> <important> <p>This operation is required only for organizations that were created explicitly with only the consolidated billing features enabled, or that were migrated from a Consolidated Billing account family to Organizations. Calling this operation sends a handshake to every invited account in the organization. The feature set change can be finalized and the additional features enabled only after all administrators in the invited accounts approve the change by accepting the handshake.</p> </important> <p>After all invited member accounts accept the handshake, you finalize the feature set change by accepting the handshake that contains <code>"Action": "ENABLE_ALL_FEATURES"</code>. This completes the change.</p> <p>After you enable all features in your organization, the master account in the organization can apply policies on all member accounts. These policies can restrict what users and even administrators in those accounts can do. The master account can apply policies that prevent accounts from leaving the organization. Ensure that your account administrators are aware of this.</p> <p>This operation can be called only from the organization''s master account. </p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnableAllFeaturesResponse'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: AWSOrganizationsNotInUseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AWSOrganizationsNotInUseException'
        '482':
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
        '483':
          description: HandshakeConstraintViolationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HandshakeConstraintViolationException'
        '484':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '485':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '486':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnableAllFeaturesRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#EnablePolicyType':
    post:
      operationId: EnablePolicyType
      description: '<p>Enables a policy type in a root. After you enable a policy type in a root, you can attach policies of that type to the root, any OU, or account in that root. You can undo this by using the <a>DisablePolicyType</a> operation.</p> <p>This operation can be called only from the organization''s master account.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnablePolicyTypeResponse'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: AWSOrganizationsNotInUseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AWSOrganizationsNotInUseException'
        '482':
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
        '483':
          description: ConstraintViolationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConstraintViolationException'
        '484':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '485':
          description: PolicyTypeAlreadyEnabledException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyTypeAlreadyEnabledException'
        '486':
          description: RootNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RootNotFoundException'
        '487':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '488':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '489':
          description: PolicyTypeNotAvailableForOrganizationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyTypeNotAvailableForOrganizationException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnablePolicyTypeRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#InviteAccountToOrganization':
    post:
      operationId: InviteAccountToOrganization
      description: '<p>Sends an invitation to another account to join your organization as a member account. Organizations sends email on your behalf to the email address that is associated with the other account''s owner. The invitation is implemented as a <a>Handshake</a> whose details are in the response.</p> <important> <p>You can invite AWS accounts only from the same reseller as the master account. For example, if your organization''s master account was created by Amazon Internet Services Pvt. Ltd (AISPL), an AWS reseller in India, then you can only invite other AISPL accounts to your organization. You can''t combine accounts from AISPL and AWS. For more information, see <a href="http://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/useconsolidatedbilliing-India.html">Consolidated Billing in India</a>.</p> </important> <p>This operation can be called only from the organization''s master account.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InviteAccountToOrganizationResponse'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: AWSOrganizationsNotInUseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AWSOrganizationsNotInUseException'
        '482':
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
        '483':
          description: HandshakeConstraintViolationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HandshakeConstraintViolationException'
        '484':
          description: DuplicateHandshakeException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DuplicateHandshakeException'
        '485':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '486':
          description: FinalizingOrganizationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FinalizingOrganizationException'
        '487':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '488':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InviteAccountToOrganizationRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#LeaveOrganization':
    post:
      operationId: LeaveOrganization
      description: '<p>Removes a member account from its parent organization. This version of the operation is performed by the account that wants to leave. To remove a member account as a user in the master account, use <a>RemoveAccountFromOrganization</a> instead.</p> <p>This operation can be called only from a member account in the organization.</p> <important> <ul> <li> <p>The master account in an organization with all features enabled can set service control policies (SCPs) that can restrict what administrators of member accounts can do, including preventing them from successfully calling <code>LeaveOrganization</code> and leaving the organization. </p> </li> <li> <p>If you created the account using the AWS Organizations console, the Organizations API, or the Organizations CLI commands, then you cannot remove the account.</p> </li> <li> <p>You can leave an organization only after you enable IAM user access to billing in your account. For more information, see <a href="http://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/grantaccess.html#ControllingAccessWebsite-Activate">Activating Access to the Billing and Cost Management Console</a> in the <i>AWS Billing and Cost Management User Guide</i>.</p> </li> </ul> </important>'
      responses:
        '200':
          description: Success
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: AccountNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountNotFoundException'
        '482':
          description: AWSOrganizationsNotInUseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AWSOrganizationsNotInUseException'
        '483':
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
        '484':
          description: ConstraintViolationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConstraintViolationException'
        '485':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '486':
          description: MasterCannotLeaveOrganizationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MasterCannotLeaveOrganizationException'
        '487':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '488':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#ListAccounts':
    post:
      operationId: ListAccounts
      description: '<p>Lists all the accounts in the organization. To request only the accounts in a root or OU, use the <a>ListAccountsForParent</a> operation instead.</p> <p>This operation can be called only from the organization''s master account.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAccountsResponse'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: AWSOrganizationsNotInUseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AWSOrganizationsNotInUseException'
        '482':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '483':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '484':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListAccountsRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#ListAccountsForParent':
    post:
      operationId: ListAccountsForParent
      description: 'Lists the accounts in an organization that are contained by the specified target root or organizational unit (OU). If you specify the root, you get a list of all the accounts that are not in any OU. If you specify an OU, you get a list of all the accounts in only that OU, and not in any child OUs. To get a list of all accounts in the organization, use the <a>ListAccounts</a> operation.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAccountsForParentResponse'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: AWSOrganizationsNotInUseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AWSOrganizationsNotInUseException'
        '482':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '483':
          description: ParentNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParentNotFoundException'
        '484':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '485':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListAccountsForParentRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#ListChildren':
    post:
      operationId: ListChildren
      description: 'Lists all of the OUs or accounts that are contained in the specified parent OU or root. This operation, along with <a>ListParents</a> enables you to traverse the tree structure that makes up this root.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListChildrenResponse'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: AWSOrganizationsNotInUseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AWSOrganizationsNotInUseException'
        '482':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '483':
          description: ParentNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParentNotFoundException'
        '484':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '485':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListChildrenRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#ListCreateAccountStatus':
    post:
      operationId: ListCreateAccountStatus
      description: <p>Lists the account creation requests that match the specified status that is currently being tracked for the organization.</p> <p>This operation can be called only from the organization's master account.</p>
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCreateAccountStatusResponse'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: AWSOrganizationsNotInUseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AWSOrganizationsNotInUseException'
        '482':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '483':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '484':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListCreateAccountStatusRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#ListHandshakesForAccount':
    post:
      operationId: ListHandshakesForAccount
      description: '<p>Lists the current handshakes that are associated with the account of the requesting user.</p> <p>Handshakes that are ACCEPTED, DECLINED, or CANCELED appear in the results of this API for only 30 days after changing to that state. After that they are deleted and no longer accessible.</p> <p>This operation can be called from any account in the organization.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListHandshakesForAccountResponse'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
        '482':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '483':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '484':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListHandshakesForAccountRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#ListHandshakesForOrganization':
    post:
      operationId: ListHandshakesForOrganization
      description: '<p>Lists the handshakes that are associated with the organization that the requesting user is part of. The <code>ListHandshakesForOrganization</code> operation returns a list of handshake structures. Each structure contains details and status about a handshake.</p> <p>Handshakes that are ACCEPTED, DECLINED, or CANCELED appear in the results of this API for only 30 days after changing to that state. After that they are deleted and no longer accessible.</p> <p>This operation can be called only from the organization''s master account.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListHandshakesForOrganizationResponse'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: AWSOrganizationsNotInUseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AWSOrganizationsNotInUseException'
        '482':
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
        '483':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '484':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '485':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListHandshakesForOrganizationRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#ListOrganizationalUnitsForParent':
    post:
      operationId: ListOrganizationalUnitsForParent
      description: <p>Lists the organizational units (OUs) in a parent organizational unit or root.</p> <p>This operation can be called only from the organization's master account.</p>
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOrganizationalUnitsForParentResponse'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: AWSOrganizationsNotInUseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AWSOrganizationsNotInUseException'
        '482':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '483':
          description: ParentNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParentNotFoundException'
        '484':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '485':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListOrganizationalUnitsForParentRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#ListParents':
    post:
      operationId: ListParents
      description: '<p>Lists the root or organizational units (OUs) that serve as the immediate parent of the specified child OU or account. This operation, along with <a>ListChildren</a> enables you to traverse the tree structure that makes up this root.</p> <p>This operation can be called only from the organization''s master account.</p> <note> <p>In the current release, a child can have only a single parent. </p> </note>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListParentsResponse'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: AWSOrganizationsNotInUseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AWSOrganizationsNotInUseException'
        '482':
          description: ChildNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChildNotFoundException'
        '483':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '484':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '485':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListParentsRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#ListPolicies':
    post:
      operationId: ListPolicies
      description: <p>Retrieves the list of all policies in an organization of a specified type.</p> <p>This operation can be called only from the organization's master account.</p>
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPoliciesResponse'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: AWSOrganizationsNotInUseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AWSOrganizationsNotInUseException'
        '482':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '483':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '484':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListPoliciesRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#ListPoliciesForTarget':
    post:
      operationId: ListPoliciesForTarget
      description: '<p>Lists the policies that are directly attached to the specified target root, organizational unit (OU), or account. You must specify the policy type that you want included in the returned list.</p> <p>This operation can be called only from the organization''s master account.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPoliciesForTargetResponse'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: AWSOrganizationsNotInUseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AWSOrganizationsNotInUseException'
        '482':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '483':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '484':
          description: TargetNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TargetNotFoundException'
        '485':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListPoliciesForTargetRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#ListRoots':
    post:
      operationId: ListRoots
      description: <p>Lists the roots that are defined in the current organization.</p> <p>This operation can be called only from the organization's master account.</p>
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRootsResponse'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: AWSOrganizationsNotInUseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AWSOrganizationsNotInUseException'
        '482':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '483':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '484':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListRootsRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#ListTargetsForPolicy':
    post:
      operationId: ListTargetsForPolicy
      description: '<p>Lists all the roots, OUs, and accounts to which the specified policy is attached.</p> <p>This operation can be called only from the organization''s master account.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTargetsForPolicyResponse'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: AWSOrganizationsNotInUseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AWSOrganizationsNotInUseException'
        '482':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '483':
          description: PolicyNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyNotFoundException'
        '484':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '485':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListTargetsForPolicyRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#MoveAccount':
    post:
      operationId: MoveAccount
      description: <p>Moves an account from its current source parent root or OU to the specified destination parent root or OU.</p> <p>This operation can be called only from the organization's master account.</p>
      responses:
        '200':
          description: Success
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '482':
          description: SourceParentNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceParentNotFoundException'
        '483':
          description: DestinationParentNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DestinationParentNotFoundException'
        '484':
          description: DuplicateAccountException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DuplicateAccountException'
        '485':
          description: AccountNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountNotFoundException'
        '486':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '487':
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
        '488':
          description: AWSOrganizationsNotInUseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AWSOrganizationsNotInUseException'
        '489':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MoveAccountRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#RemoveAccountFromOrganization':
    post:
      operationId: RemoveAccountFromOrganization
      description: '<p>Removes the specified account from the organization.</p> <p>The removed account becomes a stand-alone account that is not a member of any organization. It is no longer subject to any policies and is responsible for its own bill payments. The organization''s master account is no longer charged for any expenses accrued by the member account after it is removed from the organization.</p> <p>This operation can be called only from the organization''s master account. Member accounts can remove themselves with <a>LeaveOrganization</a> instead.</p> <important> <ul> <li> <p>You can remove only accounts that were created outside your organization and invited to join. If you created the account using the AWS Organizations console, the Organizations API, or the Organizations CLI commands, then you cannot remove the account.</p> </li> <li> <p>You can remove a member account only after you enable IAM user access to billing in the member account. For more information, see <a href="http://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/grantaccess.html#ControllingAccessWebsite-Activate">Activating Access to the Billing and Cost Management Console</a> in the <i>AWS Billing and Cost Management User Guide</i>.</p> </li> </ul> </important>'
      responses:
        '200':
          description: Success
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: AccountNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountNotFoundException'
        '482':
          description: AWSOrganizationsNotInUseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AWSOrganizationsNotInUseException'
        '483':
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
        '484':
          description: ConstraintViolationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConstraintViolationException'
        '485':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '486':
          description: MasterCannotLeaveOrganizationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MasterCannotLeaveOrganizationException'
        '487':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '488':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoveAccountFromOrganizationRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#UpdateOrganizationalUnit':
    post:
      operationId: UpdateOrganizationalUnit
      description: '<p>Renames the specified organizational unit (OU). The ID and ARN do not change. The child OUs and accounts remain in place, and any attached policies of the OU remain attached. </p> <p>This operation can be called only from the organization''s master account.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateOrganizationalUnitResponse'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: AWSOrganizationsNotInUseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AWSOrganizationsNotInUseException'
        '482':
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
        '483':
          description: DuplicateOrganizationalUnitException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DuplicateOrganizationalUnitException'
        '484':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '485':
          description: OrganizationalUnitNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationalUnitNotFoundException'
        '486':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '487':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOrganizationalUnitRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  '/#UpdatePolicy':
    post:
      operationId: UpdatePolicy
      description: '<p>Updates an existing policy with a new name, description, or content. If any parameter is not supplied, that value remains unchanged. Note that you cannot change a policy''s type.</p> <p>This operation can be called only from the organization''s master account.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdatePolicyResponse'
        '480':
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '481':
          description: AWSOrganizationsNotInUseException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AWSOrganizationsNotInUseException'
        '482':
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
        '483':
          description: ConstraintViolationException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConstraintViolationException'
        '484':
          description: DuplicatePolicyException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DuplicatePolicyException'
        '485':
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '486':
          description: MalformedPolicyDocumentException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MalformedPolicyDocumentException'
        '487':
          description: PolicyNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyNotFoundException'
        '488':
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceException'
        '489':
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePolicyRequest'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
components:
  schemas:
    AWSOrganizationsNotInUseException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: 'Your account is not a member of an organization. To make this request, you must use the credentials of an account that belongs to an organization.'
    AcceptHandshakeRequest:
      type: object
      required:
        - HandshakeId
      example:
        HandshakeId: h-examplehandshakeid111
      properties:
        HandshakeId:
          $ref: '#/components/schemas/HandshakeId'
    AcceptHandshakeResponse:
      type: object
      example:
        Handshake:
          Action: INVITE
          Arn: 'arn:aws:organizations::111111111111:handshake/o-exampleorgid/invite/h-examplehandshakeid111'
          ExpirationTimestamp: 20170228T1215Z
          Id: h-examplehandshakeid111
          Parties:
            - Id: o-exampleorgid
              Type: ORGANIZATION
            - Id: juan@example.com
              Type: EMAIL
          RequestedTimestamp: 20170214T1215Z
          Resources:
            - Resources:
                - Type: MASTER_EMAIL
                  Value: bill@amazon.com
                - Type: MASTER_NAME
                  Value: Org Master Account
                - Type: ORGANIZATION_FEATURE_SET
                  Value: ALL
              Type: ORGANIZATION
              Value: o-exampleorgid
            - Type: ACCOUNT
              Value: '222222222222'
          State: ACCEPTED
      properties:
        Handshake:
          $ref: '#/components/schemas/Handshake'
    AccessDeniedException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: 'You don''t have permissions to perform the requested operation. The user or role that is making the request must have at least one IAM permissions policy attached that grants the required permissions. For more information, see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/access.html">Access Management</a> in the <i>IAM User Guide</i>.'
    Account:
      type: object
      properties:
        Id:
          $ref: '#/components/schemas/AccountId'
        Arn:
          $ref: '#/components/schemas/AccountArn'
        Email:
          $ref: '#/components/schemas/Email'
        Name:
          $ref: '#/components/schemas/AccountName'
        Status:
          $ref: '#/components/schemas/AccountStatus'
        JoinedMethod:
          $ref: '#/components/schemas/AccountJoinedMethod'
        JoinedTimestamp:
          $ref: '#/components/schemas/Timestamp'
      description: Contains information about an AWS account that is a member of an organization.
    AccountArn:
      type: string
      pattern: '^arn:aws:organizations::\d{12}:account\/o-[a-z0-9]{10,32}\/\d{12}'
    AccountId:
      type: string
      pattern: '^\d{12}$'
    AccountJoinedMethod:
      type: string
      enum:
        - INVITED
        - CREATED
    AccountName:
      type: string
      minLength: 1
      maxLength: 50
      format: password
    AccountNotFoundException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: ' We can''t find an AWS account with the AccountId that you specified, or the account whose credentials you used to make this request is not a member of an organization.'
    AccountStatus:
      type: string
      enum:
        - ACTIVE
        - SUSPENDED
    Accounts:
      type: array
      items:
        $ref: '#/components/schemas/Account'
    ActionType:
      type: string
      enum:
        - INVITE
        - ENABLE_ALL_FEATURES
        - APPROVE_ALL_FEATURES
    AlreadyInOrganizationException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: This account is already a member of an organization. An account can belong to only one organization at a time.
    AttachPolicyRequest:
      type: object
      required:
        - PolicyId
        - TargetId
      example:
        PolicyId: p-examplepolicyid111
        TargetId: '333333333333'
      properties:
        PolicyId:
          $ref: '#/components/schemas/PolicyId'
        TargetId:
          $ref: '#/components/schemas/PolicyTargetId'
    AwsManagedPolicy:
      type: boolean
    CancelHandshakeRequest:
      type: object
      required:
        - HandshakeId
      example:
        HandshakeId: h-examplehandshakeid111
      properties:
        HandshakeId:
          $ref: '#/components/schemas/HandshakeId'
    CancelHandshakeResponse:
      type: object
      example:
        Handshake:
          Action: INVITE
          Arn: 'arn:aws:organizations::111111111111:handshake/o-exampleorgid/invite/h-examplehandshakeid111'
          ExpirationTimestamp: 20170228T1215Z
          Id: h-examplehandshakeid111
          Parties:
            - Id: o-exampleorgid
              Type: ORGANIZATION
            - Id: susan@example.com
              Type: EMAIL
          RequestedTimestamp: 20170214T1215Z
          Resources:
            - Resources:
                - Type: MASTER_EMAIL
                  Value: bill@example.com
                - Type: MASTER_NAME
                  Value: Master Account
                - Type: ORGANIZATION_FEATURE_SET
                  Value: CONSOLIDATED_BILLING
              Type: ORGANIZATION
              Value: o-exampleorgid
            - Type: ACCOUNT
              Value: '222222222222'
            - Type: NOTES
              Value: This is a request for Susan's account to join Bob's organization.
          State: CANCELED
      properties:
        Handshake:
          $ref: '#/components/schemas/Handshake'
    Child:
      type: object
      properties:
        Id:
          $ref: '#/components/schemas/ChildId'
        Type:
          $ref: '#/components/schemas/ChildType'
      description: 'Contains a list of child entities, either OUs or accounts.'
    ChildId:
      type: string
      pattern: '^(\d{12})|(ou-[0-9a-z]{4,32}-[a-z0-9]{8,32})$'
    ChildNotFoundException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: We can't find an organizational unit (OU) or AWS account with the ChildId that you specified.
    ChildType:
      type: string
      enum:
        - ACCOUNT
        - ORGANIZATIONAL_UNIT
    Children:
      type: array
      items:
        $ref: '#/components/schemas/Child'
    ConcurrentModificationException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: The target of the operation is currently being modified by a different request. Try again later.
    ConstraintViolationException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
        Reason:
          $ref: '#/components/schemas/ConstraintViolationExceptionReason'
      description: '<p>Performing this operation violates a minimum or maximum value limit. For example, attempting to removing the last SCP from an OU or root, inviting or creating too many accounts to the organization, or attaching too many policies to an account, OU, or root. This exception includes a reason that contains additional information about the violated limit:</p> <p/> <ul> <li> <p>ACCOUNT_NUMBER_LIMIT_EXCEEDED: You attempted to exceed the limit on the number of accounts in an organization. If you need more accounts, contact AWS Support to request an increase in your limit. </p> <p>Or, The number of invitations that you tried to send would cause you to exceed the limit of accounts in your organization. Send fewer invitations, or contact AWS Support to request an increase in the number of accounts.</p> <p> <b>Note</b>: deleted and closed accounts still count toward your limit.</p> </li> <li> <p>HANDSHAKE_RATE_LIMIT_EXCEEDED: You attempted to exceed the number of handshakes you can send in one day.</p> </li> <li> <p>OU_NUMBER_LIMIT_EXCEEDED: You attempted to exceed the number of organizational units you can have in an organization.</p> </li> <li> <p>OU_DEPTH_LIMIT_EXCEEDED: You attempted to create an organizational unit tree that is too many levels deep.</p> </li> <li> <p>POLICY_NUMBER_LIMIT_EXCEEDED. You attempted to exceed the number of policies that you can have in an organization.</p> </li> <li> <p>MAX_POLICY_TYPE_ATTACHMENT_LIMIT_EXCEEDED: You attempted to exceed the number of policies of a certain type that can be attached to an entity at one time.</p> </li> <li> <p>MIN_POLICY_TYPE_ATTACHMENT_LIMIT_EXCEEDED: You attempted to detach a policy from an entity that would cause the entity to have fewer than the minimum number of policies of a certain type required.</p> </li> <li> <p>ACCOUNT_CANNOT_LEAVE_WITHOUT_EULA: You attempted to remove an account from the organization that does not yet have enough information to exist as a stand-alone account. This account requires you to first agree to the End-User License Agreement (EULA).</p> </li> <li> <p>ACCOUNT_CANNOT_LEAVE_WITHOUT_PHONE_VERIFICATION: You attempted to remove an account from the organization that does not yet have enough information to exist as a stand-alone account. This account requires you to first complete phone verification.</p> </li> <li> <p>MASTER_ACCOUNT_PAYMENT_INSTRUMENT_REQUIRED: To create an organization with this account, you first must associate a payment instrument, such as a credit card, with the account.</p> </li> <li> <p>MEMBER_ACCOUNT_PAYMENT_INSTRUMENT_REQUIRED: To complete this operation with this member account, you first must associate a payment instrument, such as a credit card, with the account.</p> </li> <li> <p>ACCOUNT_CREATION_RATE_LIMIT_EXCEEDED: You attempted to exceed the number of accounts that you can create in one day.</p> </li> <li> <p>MASTER_ACCOUNT_ADDRESS_DOES_NOT_MATCH_MARKETPLACE: To create an account in this organization, you first must migrate the organization''s master account to the marketplace that corresponds to the master account''s address. For example, accounts with India addresses must be associated with the AISPL marketplace. All accounts in an organization must be associated with the same marketplace.</p> </li> </ul>'
    ConstraintViolationExceptionReason:
      type: string
      enum:
        - ACCOUNT_NUMBER_LIMIT_EXCEEDED
        - HANDSHAKE_RATE_LIMIT_EXCEEDED
        - OU_NUMBER_LIMIT_EXCEEDED
        - OU_DEPTH_LIMIT_EXCEEDED
        - POLICY_NUMBER_LIMIT_EXCEEDED
        - MAX_POLICY_TYPE_ATTACHMENT_LIMIT_EXCEEDED
        - MIN_POLICY_TYPE_ATTACHMENT_LIMIT_EXCEEDED
        - ACCOUNT_CANNOT_LEAVE_ORGANIZATION
        - ACCOUNT_CANNOT_LEAVE_WITHOUT_EULA
        - ACCOUNT_CANNOT_LEAVE_WITHOUT_PHONE_VERIFICATION
        - MASTER_ACCOUNT_PAYMENT_INSTRUMENT_REQUIRED
        - MEMBER_ACCOUNT_PAYMENT_INSTRUMENT_REQUIRED
        - ACCOUNT_CREATION_RATE_LIMIT_EXCEEDED
        - MASTER_ACCOUNT_ADDRESS_DOES_NOT_MATCH_MARKETPLACE
    CreateAccountFailureReason:
      type: string
      enum:
        - ACCOUNT_LIMIT_EXCEEDED
        - EMAIL_ALREADY_EXISTS
        - INVALID_ADDRESS
        - INVALID_EMAIL
        - INTERNAL_FAILURE
    CreateAccountRequest:
      type: object
      required:
        - Email
        - AccountName
      example:
        AccountName: Production Account
        Email: susan@example.com
      properties:
        Email:
          $ref: '#/components/schemas/Email'
        AccountName:
          $ref: '#/components/schemas/AccountName'
        RoleName:
          $ref: '#/components/schemas/RoleName'
        IamUserAccessToBilling:
          $ref: '#/components/schemas/IAMUserAccessToBilling'
    CreateAccountRequestId:
      type: string
      pattern: '^car-[a-z0-9]{8,32}$'
    CreateAccountResponse:
      type: object
      example:
        CreateAccountStatus:
          Id: car-examplecreateaccountrequestid111
          State: IN_PROGRESS
      properties:
        CreateAccountStatus:
          $ref: '#/components/schemas/CreateAccountStatus'
    CreateAccountState:
      type: string
      enum:
        - IN_PROGRESS
        - SUCCEEDED
        - FAILED
    CreateAccountStates:
      type: array
      items:
        $ref: '#/components/schemas/CreateAccountState'
    CreateAccountStatus:
      type: object
      properties:
        Id:
          $ref: '#/components/schemas/CreateAccountRequestId'
        AccountName:
          $ref: '#/components/schemas/AccountName'
        State:
          $ref: '#/components/schemas/CreateAccountState'
        RequestedTimestamp:
          $ref: '#/components/schemas/Timestamp'
        CompletedTimestamp:
          $ref: '#/components/schemas/Timestamp'
        AccountId:
          $ref: '#/components/schemas/AccountId'
        FailureReason:
          $ref: '#/components/schemas/CreateAccountFailureReason'
      description: Contains the status about a <a>CreateAccount</a> request to create an AWS account in an organization.
    CreateAccountStatusNotFoundException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: We can't find an create account request with the CreateAccountRequestId that you specified.
    CreateAccountStatuses:
      type: array
      items:
        $ref: '#/components/schemas/CreateAccountStatus'
    CreateOrganizationRequest:
      type: object
      example:
        FeatureSet: CONSOLIDATED_BILLING
      properties:
        FeatureSet:
          $ref: '#/components/schemas/OrganizationFeatureSet'
    CreateOrganizationResponse:
      type: object
      example:
        Organization:
          Arn: 'arn:aws:organizations::111111111111:organization/o-exampleorgid'
          AvailablePolicyTypes: []
          FeatureSet: CONSOLIDATED_BILLING
          Id: o-exampleorgid
          MasterAccountArn: 'arn:aws:organizations::111111111111:account/o-exampleorgid/111111111111'
          MasterAccountEmail: bill@example.com
          MasterAccountId: '111111111111'
      properties:
        Organization:
          $ref: '#/components/schemas/Organization'
    CreateOrganizationalUnitRequest:
      type: object
      required:
        - ParentId
        - Name
      example:
        Name: AccountingOU
        ParentId: r-examplerootid111
      properties:
        ParentId:
          $ref: '#/components/schemas/ParentId'
        Name:
          $ref: '#/components/schemas/OrganizationalUnitName'
    CreateOrganizationalUnitResponse:
      type: object
      example:
        OrganizationalUnit:
          Arn: 'arn:aws:organizations::111111111111:ou/o-exampleorgid/ou-examplerootid111-exampleouid111'
          Id: ou-examplerootid111-exampleouid111
          Name: AccountingOU
      properties:
        OrganizationalUnit:
          $ref: '#/components/schemas/OrganizationalUnit'
    CreatePolicyRequest:
      type: object
      required:
        - Content
        - Description
        - Name
        - Type
      example:
        Content: '{\"Version\":\"2012-10-17\",\"Statement\":{\"Effect\":\"Allow\",\"Action\":\"s3:*\"}}'
        Description: Enables admins of attached accounts to delegate all S3 permissions
        Name: AllowAllS3Actions
        Type: SERVICE_CONTROL_POLICY
      properties:
        Content:
          $ref: '#/components/schemas/PolicyContent'
        Description:
          $ref: '#/components/schemas/PolicyDescription'
        Name:
          $ref: '#/components/schemas/PolicyName'
        Type:
          $ref: '#/components/schemas/PolicyType'
    CreatePolicyResponse:
      type: object
      example:
        Policy:
          Content: '{"Version":"2012-10-17","Statement":{"Effect":"Allow","Action":"s3:*"}}'
          PolicySummary:
            Arn: 'arn:aws:organizations::111111111111:policy/o-exampleorgid/service_control_policy/p-examplepolicyid111'
            Description: Allows delegation of all S3 actions
            Name: AllowAllS3Actions
            Type: SERVICE_CONTROL_POLICY
      properties:
        Policy:
          $ref: '#/components/schemas/Policy'
    DeclineHandshakeRequest:
      type: object
      required:
        - HandshakeId
      example:
        HandshakeId: h-examplehandshakeid111
      properties:
        HandshakeId:
          $ref: '#/components/schemas/HandshakeId'
    DeclineHandshakeResponse:
      type: object
      example:
        Handshake:
          Action: INVITE
          Arn: 'arn:aws:organizations::111111111111:handshake/o-exampleorgid/invite/h-examplehandshakeid111'
          ExpirationTimestamp: '2016-12-15T19:27:58Z'
          Id: h-examplehandshakeid111
          Parties:
            - Id: '222222222222'
              Type: ACCOUNT
            - Id: o-exampleorgid
              Type: ORGANIZATION
          RequestedTimestamp: '2016-11-30T19:27:58Z'
          Resources:
            - Resources:
                - Type: MASTER_EMAIL
                  Value: bill@example.com
                - Type: MASTER_NAME
                  Value: Master Account
              Type: ORGANIZATION
              Value: o-exampleorgid
            - Type: ACCOUNT
              Value: '222222222222'
            - Type: NOTES
              Value: This is an invitation to Susan's account to join the Bill's organization.
          State: DECLINED
      properties:
        Handshake:
          $ref: '#/components/schemas/Handshake'
    DeleteOrganizationalUnitRequest:
      type: object
      required:
        - OrganizationalUnitId
      example:
        OrganizationalUnitId: ou-examplerootid111-exampleouid111
      properties:
        OrganizationalUnitId:
          $ref: '#/components/schemas/OrganizationalUnitId'
    DeletePolicyRequest:
      type: object
      required:
        - PolicyId
      example:
        PolicyId: p-examplepolicyid111
      properties:
        PolicyId:
          $ref: '#/components/schemas/PolicyId'
    DescribeAccountRequest:
      type: object
      required:
        - AccountId
      example:
        AccountId: '555555555555'
      properties:
        AccountId:
          $ref: '#/components/schemas/AccountId'
    DescribeAccountResponse:
      type: object
      example:
        Account:
          Arn: 'arn:aws:organizations::111111111111:account/o-exampleorgid/555555555555'
          Email: anika@example.com
          Id: '555555555555'
          Name: Beta Account
      properties:
        Account:
          $ref: '#/components/schemas/Account'
    DescribeCreateAccountStatusRequest:
      type: object
      required:
        - CreateAccountRequestId
      example:
        CreateAccountRequestId: car-exampleaccountcreationrequestid
      properties:
        CreateAccountRequestId:
          $ref: '#/components/schemas/CreateAccountRequestId'
    DescribeCreateAccountStatusResponse:
      type: object
      example:
        CreateAccountStatus:
          AccountId: '333333333333'
          Id: car-exampleaccountcreationrequestid
          State: SUCCEEDED
      properties:
        CreateAccountStatus:
          $ref: '#/components/schemas/CreateAccountStatus'
    DescribeHandshakeRequest:
      type: object
      required:
        - HandshakeId
      example:
        HandshakeId: h-examplehandshakeid111
      properties:
        HandshakeId:
          $ref: '#/components/schemas/HandshakeId'
    DescribeHandshakeResponse:
      type: object
      example:
        Handshake:
          Action: INVITE
          Arn: 'arn:aws:organizations::111111111111:handshake/o-exampleorgid/invite/h-examplehandshakeid111'
          ExpirationTimestamp: '2016-11-30T17:24:58.046Z'
          Id: h-examplehandshakeid111
          Parties:
            - Id: o-exampleorgid
              Type: ORGANIZATION
            - Id: '333333333333'
              Type: ACCOUNT
          RequestedTimestamp: '2016-11-30T17:24:58.046Z'
          Resources:
            - Resources:
                - Type: MASTER_EMAIL
                  Value: bill@example.com
                - Type: MASTER_NAME
                  Value: Master Account
              Type: ORGANIZATION
              Value: o-exampleorgid
            - Type: ACCOUNT
              Value: '333333333333'
          State: OPEN
      properties:
        Handshake:
          $ref: '#/components/schemas/Handshake'
    DescribeOrganizationResponse:
      type: object
      example:
        Organization:
          Arn: 'arn:aws:organizations::111111111111:organization/o-exampleorgid'
          AvailablePolicyTypes:
            - Status: ENABLED
              Type: SERVICE_CONTROL_POLICY
          FeatureSet: ALL
          Id: o-exampleorgid
          MasterAccountArn: 'arn:aws:organizations::111111111111:account/o-exampleorgid/111111111111'
          MasterAccountEmail: bill@example.com
      properties:
        Organization:
          $ref: '#/components/schemas/Organization'
    DescribeOrganizationalUnitRequest:
      type: object
      required:
        - OrganizationalUnitId
      example:
        OrganizationalUnitId: ou-examplerootid111-exampleouid111
      properties:
        OrganizationalUnitId:
          $ref: '#/components/schemas/OrganizationalUnitId'
    DescribeOrganizationalUnitResponse:
      type: object
      example:
        OrganizationalUnit:
          Arn: 'arn:aws:organizations::111111111111:ou/o-exampleorgid/ou-examplerootid111-exampleouid111'
          Id: ou-examplerootid111-exampleouid111
          Name: Accounting Group
      properties:
        OrganizationalUnit:
          $ref: '#/components/schemas/OrganizationalUnit'
    DescribePolicyRequest:
      type: object
      required:
        - PolicyId
      example:
        PolicyId: p-examplepolicyid111
      properties:
        PolicyId:
          $ref: '#/components/schemas/PolicyId'
    DescribePolicyResponse:
      type: object
      example:
        Policy:
          Content: '{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"*\",\n      \"Resource\": \"*\"\n    }\n  ]\n}'
          PolicySummary:
            Arn: 'arn:aws:organizations::111111111111:policy/o-exampleorgid/service_control_policy/p-examplepolicyid111'
            AwsManaged: false
            Description: Enables admins to delegate S3 permissions
            Id: p-examplepolicyid111
            Name: AllowAllS3Actions
            Type: SERVICE_CONTROL_POLICY
      properties:
        Policy:
          $ref: '#/components/schemas/Policy'
    DestinationParentNotFoundException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: We can't find the destination container (a root or OU) with the ParentId that you specified.
    DetachPolicyRequest:
      type: object
      required:
        - PolicyId
        - TargetId
      example:
        PolicyId: p-examplepolicyid111
        TargetId: ou-examplerootid111-exampleouid111
      properties:
        PolicyId:
          $ref: '#/components/schemas/PolicyId'
        TargetId:
          $ref: '#/components/schemas/PolicyTargetId'
    DisablePolicyTypeRequest:
      type: object
      required:
        - RootId
        - PolicyType
      example:
        PolicyType: SERVICE_CONTROL_POLICY
        RootId: r-examplerootid111
      properties:
        RootId:
          $ref: '#/components/schemas/RootId'
        PolicyType:
          $ref: '#/components/schemas/PolicyType'
    DisablePolicyTypeResponse:
      type: object
      example:
        Root:
          Arn: 'arn:aws:organizations::111111111111:root/o-exampleorgid/r-examplerootid111'
          Id: r-examplerootid111
          Name: Root
          PolicyTypes: []
      properties:
        Root:
          $ref: '#/components/schemas/Root'
    DuplicateAccountException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: That account is already present in the specified destination.
    DuplicateHandshakeException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: 'A handshake with the same action and target already exists. For example, if you invited an account to join your organization, the invited account might already have a pending invitation from this organization. If you intend to resend an invitation to an account, ensure that existing handshakes that might be considered duplicates are canceled or declined.'
    DuplicateOrganizationalUnitException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: An organizational unit (OU) with the same name already exists.
    DuplicatePolicyAttachmentException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: The selected policy is already attached to the specified target.
    DuplicatePolicyException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: A policy with the same name already exists.
    Email:
      type: string
      pattern: '[^\s@]+@[^\s@]+\.[^\s@]+'
      minLength: 6
      maxLength: 64
      format: password
    EnableAllFeaturesRequest:
      type: object
      example: {}
      properties: {}
    EnableAllFeaturesResponse:
      type: object
      example:
        Handshake:
          Action: ENABLE_ALL_FEATURES
          Arn: 'arn:aws:organizations::111111111111:handshake/o-exampleorgid/enable_all_features/h-examplehandshakeid111'
          ExpirationTimestamp: '2017-02-28T09:35:40.05Z'
          Id: h-examplehandshakeid111
          Parties:
            - Id: o-exampleorgid
              Type: ORGANIZATION
          RequestedTimestamp: '2017-02-13T09:35:40.05Z'
          Resources:
            - Type: ORGANIZATION
              Value: o-exampleorgid
          State: REQUESTED
      properties:
        Handshake:
          $ref: '#/components/schemas/Handshake'
    EnablePolicyTypeRequest:
      type: object
      required:
        - RootId
        - PolicyType
      example:
        PolicyType: SERVICE_CONTROL_POLICY
        RootId: r-examplerootid111
      properties:
        RootId:
          $ref: '#/components/schemas/RootId'
        PolicyType:
          $ref: '#/components/schemas/PolicyType'
    EnablePolicyTypeResponse:
      type: object
      example:
        Root:
          Arn: 'arn:aws:organizations::111111111111:root/o-exampleorgid/r-examplerootid111'
          Id: r-examplerootid111
          Name: Root
          PolicyTypes:
            - Status: ENABLED
              Type: SERVICE_CONTROL_POLICY
      properties:
        Root:
          $ref: '#/components/schemas/Root'
    ExceptionMessage:
      type: string
    ExceptionType:
      type: string
    FinalizingOrganizationException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: 'AWS Organizations could not finalize the creation of your organization. Try again later. If this persists, contact AWS customer support.'
    GenericArn:
      type: string
      pattern: '^arn:aws:organizations::.+:.+'
    Handshake:
      type: object
      properties:
        Id:
          $ref: '#/components/schemas/HandshakeId'
        Arn:
          $ref: '#/components/schemas/HandshakeArn'
        Parties:
          $ref: '#/components/schemas/HandshakeParties'
        State:
          $ref: '#/components/schemas/HandshakeState'
        RequestedTimestamp:
          $ref: '#/components/schemas/Timestamp'
        ExpirationTimestamp:
          $ref: '#/components/schemas/Timestamp'
        Action:
          $ref: '#/components/schemas/ActionType'
        Resources:
          $ref: '#/components/schemas/HandshakeResources'
      description: '<p>Contains information that must be exchanged to securely establish a relationship between two accounts (an <i>originator</i> and a <i>recipient</i>). For example, when a master account (the originator) invites another account (the recipient) to join its organization, the two accounts exchange information as a series of handshake requests and responses.</p> <p> <b>Note:</b> Handshakes that are CANCELED, ACCEPTED, or DECLINED show up in lists for only 30 days after entering that state After that they are deleted.</p>'
    HandshakeAlreadyInStateException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: 'The specified handshake is already in the requested state. For example, you can''t accept a handshake that was already accepted.'
    HandshakeArn:
      type: string
      pattern: '^arn:aws:organizations::\d{12}:handshake\/o-[a-z0-9]{10,32}\/[a-z_]{1,32}\/h-[0-9a-z]{8,32}'
    HandshakeConstraintViolationException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
        Reason:
          $ref: '#/components/schemas/HandshakeConstraintViolationExceptionReason'
      description: '<p>The requested operation would violate the constraint identified in the reason code.</p> <ul> <li> <p>ACCOUNT_NUMBER_LIMIT_EXCEEDED: You attempted to exceed the limit on the number of accounts in an organization. <b>Note</b>: deleted and closed accounts still count toward your limit.</p> </li> <li> <p>HANDSHAKE_RATE_LIMIT_EXCEEDED: You attempted to exceed the number of handshakes you can send in one day.</p> </li> <li> <p>ALREADY_IN_AN_ORGANIZATION: The handshake request is invalid because the invited account is already a member of an organization.</p> </li> <li> <p>ORGANIZATION_ALREADY_HAS_ALL_FEATURES: The handshake request is invalid because the organization has already enabled all features.</p> </li> <li> <p>INVITE_DISABLED_DURING_ENABLE_ALL_FEATURES: You cannot issue new invitations to join an organization while it is in the process of enabling all features. You can resume inviting accounts after you finalize the process when all accounts have agreed to the change.</p> </li> <li> <p>PAYMENT_INSTRUMENT_REQUIRED: You cannot complete the operation with an account that does not have a payment instrument, such as a credit card, associated with it.</p> </li> <li> <p>ORGANIZATION_FROM_DIFFERENT_SELLER_OF_RECORD: The request failed because the account is from a different marketplace than the accounts in the organization. For example, accounts with India addresses must be associated with the AISPL marketplace. All accounts in an organization must be from the same marketplace.</p> </li> <li> <p>ORGANIZATION_MEMBERSHIP_CHANGE_RATE_LIMIT_EXCEEDED: You attempted to change the membership of an account too quickly after its previous change.</p> </li> </ul>'
    HandshakeConstraintViolationExceptionReason:
      type: string
      enum:
        - ACCOUNT_NUMBER_LIMIT_EXCEEDED
        - HANDSHAKE_RATE_LIMIT_EXCEEDED
        - ALREADY_IN_AN_ORGANIZATION
        - ORGANIZATION_ALREADY_HAS_ALL_FEATURES
        - INVITE_DISABLED_DURING_ENABLE_ALL_FEATURES
        - PAYMENT_INSTRUMENT_REQUIRED
        - ORGANIZATION_FROM_DIFFERENT_SELLER_OF_RECORD
        - ORGANIZATION_MEMBERSHIP_CHANGE_RATE_LIMIT_EXCEEDED
    HandshakeFilter:
      type: object
      properties:
        ActionType:
          $ref: '#/components/schemas/ActionType'
        ParentHandshakeId:
          $ref: '#/components/schemas/HandshakeId'
      description: Specifies the criteria that are used to select the handshakes for the operation.
    HandshakeId:
      type: string
      pattern: '^h-[0-9a-z]{8,32}$'
    HandshakeNotFoundException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: We can't find a handshake with the HandshakeId that you specified.
    HandshakeNotes:
      type: string
      maxLength: 1024
      format: password
    HandshakeParties:
      type: array
      items:
        $ref: '#/components/schemas/HandshakeParty'
    HandshakeParty:
      type: object
      properties:
        Id:
          $ref: '#/components/schemas/HandshakePartyId'
        Type:
          $ref: '#/components/schemas/HandshakePartyType'
      description: Identifies a participant in a handshake.
    HandshakePartyId:
      type: string
      minLength: 1
      maxLength: 64
      format: password
    HandshakePartyType:
      type: string
      enum:
        - ACCOUNT
        - ORGANIZATION
        - EMAIL
    HandshakeResource:
      type: object
      properties:
        Value:
          $ref: '#/components/schemas/HandshakeResourceValue'
        Type:
          $ref: '#/components/schemas/HandshakeResourceType'
        Resources:
          $ref: '#/components/schemas/HandshakeResources'
      description: Contains additional data that is needed to process a handshake.
    HandshakeResourceType:
      type: string
      enum:
        - ACCOUNT
        - ORGANIZATION
        - ORGANIZATION_FEATURE_SET
        - EMAIL
        - MASTER_EMAIL
        - MASTER_NAME
        - NOTES
        - PARENT_HANDSHAKE
    HandshakeResourceValue:
      type: string
      format: password
    HandshakeResources:
      type: array
      items:
        $ref: '#/components/schemas/HandshakeResource'
    HandshakeState:
      type: string
      enum:
        - REQUESTED
        - OPEN
        - CANCELED
        - ACCEPTED
        - DECLINED
        - EXPIRED
    Handshakes:
      type: array
      items:
        $ref: '#/components/schemas/Handshake'
    IAMUserAccessToBilling:
      type: string
      enum:
        - ALLOW
        - DENY
    InvalidHandshakeTransitionException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: 'You can''t perform the operation on the handshake in its current state. For example, you can''t cancel a handshake that was already accepted, or accept a handshake that was already declined.'
    InvalidInputException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
        Reason:
          $ref: '#/components/schemas/InvalidInputExceptionReason'
      description: '<p>The requested operation failed because you provided invalid values for one or more of the request parameters. This exception includes a reason that contains additional information about the violated limit:</p> <ul> <li> <p>INVALID_PARTY_TYPE_TARGET: You specified the wrong type of entity (account, organization, or email) as a party.</p> </li> <li> <p>INVALID_SYNTAX_ORGANIZATION_ARN: You specified an invalid ARN for the organization.</p> </li> <li> <p>INVALID_SYNTAX_POLICY_ID: You specified an invalid policy ID. </p> </li> <li> <p>INVALID_ENUM: You specified a value that is not valid for that parameter.</p> </li> <li> <p>INVALID_FULL_NAME_TARGET: You specified a full name that contains invalid characters.</p> </li> <li> <p>INVALID_LIST_MEMBER: You provided a list to a parameter that contains at least one invalid value.</p> </li> <li> <p>MAX_LENGTH_EXCEEDED: You provided a string parameter that is longer than allowed.</p> </li> <li> <p>MAX_VALUE_EXCEEDED: You provided a numeric parameter that has a larger value than allowed.</p> </li> <li> <p>MIN_LENGTH_EXCEEDED: You provided a string parameter that is shorter than allowed.</p> </li> <li> <p>MIN_VALUE_EXCEEDED: You provided a numeric parameter that has a smaller value than allowed.</p> </li> <li> <p>IMMUTABLE_POLICY: You specified a policy that is managed by AWS and cannot be modified.</p> </li> <li> <p>INVALID_PATTERN: You provided a value that doesn''t match the required pattern.</p> </li> <li> <p>INVALID_PATTERN_TARGET_ID: You specified a policy target ID that doesn''t match the required pattern.</p> </li> <li> <p>INPUT_REQUIRED: You must include a value for all required parameters.</p> </li> <li> <p>INVALID_PAGINATION_TOKEN: Get the value for the NextToken parameter from the response to a previous call of the operation.</p> </li> <li> <p>MAX_FILTER_LIMIT_EXCEEDED: You can specify only one filter parameter for the operation.</p> </li> <li> <p>MOVING_ACCOUNT_BETWEEN_DIFFERENT_ROOTS: You can move an account only between entities in the same root.</p> </li> </ul>'
    InvalidInputExceptionReason:
      type: string
      enum:
        - INVALID_PARTY_TYPE_TARGET
        - INVALID_SYNTAX_ORGANIZATION_ARN
        - INVALID_SYNTAX_POLICY_ID
        - INVALID_ENUM
        - INVALID_LIST_MEMBER
        - MAX_LENGTH_EXCEEDED
        - MAX_VALUE_EXCEEDED
        - MIN_LENGTH_EXCEEDED
        - MIN_VALUE_EXCEEDED
        - IMMUTABLE_POLICY
        - INVALID_PATTERN
        - INVALID_PATTERN_TARGET_ID
        - INPUT_REQUIRED
        - INVALID_NEXT_TOKEN
        - MAX_LIMIT_EXCEEDED_FILTER
        - MOVING_ACCOUNT_BETWEEN_DIFFERENT_ROOTS
        - INVALID_FULL_NAME_TARGET
    InviteAccountToOrganizationRequest:
      type: object
      required:
        - Target
      example:
        Notes: This is a request for Juan's account to join Bill's organization
        Target:
          Id: juan@example.com
          Type: EMAIL
      properties:
        Target:
          $ref: '#/components/schemas/HandshakeParty'
        Notes:
          $ref: '#/components/schemas/HandshakeNotes'
    InviteAccountToOrganizationResponse:
      type: object
      example:
        Handshake:
          Action: INVITE
          Arn: 'arn:aws:organizations::111111111111:handshake/o-exampleorgid/invite/h-examplehandshakeid111'
          ExpirationTimestamp: '2017-02-16T09:36:05.02Z'
          Id: h-examplehandshakeid111
          Parties:
            - Id: o-exampleorgid
              Type: ORGANIZATION
            - Id: juan@example.com
              Type: EMAIL
          RequestedTimestamp: '2017-02-01T09:36:05.02Z'
          Resources:
            - Resources:
                - Type: MASTER_EMAIL
                  Value: bill@amazon.com
                - Type: MASTER_NAME
                  Value: Org Master Account
                - Type: ORGANIZATION_FEATURE_SET
                  Value: FULL
              Type: ORGANIZATION
              Value: o-exampleorgid
            - Type: EMAIL
              Value: juan@example.com
          State: OPEN
      properties:
        Handshake:
          $ref: '#/components/schemas/Handshake'
    ListAccountsForParentRequest:
      type: object
      required:
        - ParentId
      example:
        ParentId: ou-examplerootid111-exampleouid111
      properties:
        ParentId:
          $ref: '#/components/schemas/ParentId'
        NextToken:
          $ref: '#/components/schemas/NextToken'
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
    ListAccountsForParentResponse:
      type: object
      example:
        Accounts:
          - Arn: 'arn:aws:organizations::111111111111:account/o-exampleorgid/333333333333'
            Email: juan@example.com
            Id: '333333333333'
            JoinedMethod: INVITED
            JoinedTimestamp: 1481835795.536
            Name: Development Account
            Status: ACTIVE
          - Arn: 'arn:aws:organizations::111111111111:account/o-exampleorgid/444444444444'
            Email: anika@example.com
            Id: '444444444444'
            JoinedMethod: INVITED
            JoinedTimestamp: 1481835812.143
            Name: Test Account
            Status: ACTIVE
      properties:
        Accounts:
          $ref: '#/components/schemas/Accounts'
        NextToken:
          $ref: '#/components/schemas/NextToken'
    ListAccountsRequest:
      type: object
      example: {}
      properties:
        NextToken:
          $ref: '#/components/schemas/NextToken'
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
    ListAccountsResponse:
      type: object
      example:
        Accounts:
          - Arn: 'arn:aws:organizations::111111111111:account/o-exampleorgid/111111111111'
            Email: bill@example.com
            Id: '111111111111'
            JoinedMethod: INVITED
            JoinedTimestamp: 20161215T193015Z
            Name: Master Account
            Status: ACTIVE
          - Arn: 'arn:aws:organizations::111111111111:account/o-exampleorgid/222222222222'
            Email: alice@example.com
            Id: '222222222222'
            JoinedMethod: INVITED
            JoinedTimestamp: 20161215T210221Z
            Name: Developer Account
            Status: ACTIVE
          - Arn: 'arn:aws:organizations::111111111111:account/o-exampleorgid/333333333333'
            Email: juan@example.com
            Id: '333333333333'
            JoinedMethod: INVITED
            JoinedTimestamp: 20161215T210347Z
            Name: Test Account
            Status: ACTIVE
          - Arn: 'arn:aws:organizations::111111111111:account/o-exampleorgid/444444444444'
            Email: anika@example.com
            Id: '444444444444'
            JoinedMethod: INVITED
            JoinedTimestamp: 20161215T210332Z
            Name: Production Account
            Status: ACTIVE
      properties:
        Accounts:
          $ref: '#/components/schemas/Accounts'
        NextToken:
          $ref: '#/components/schemas/NextToken'
    ListChildrenRequest:
      type: object
      required:
        - ParentId
        - ChildType
      example:
        ChildType: ORGANIZATIONAL_UNIT
        ParentId: ou-examplerootid111-exampleouid111
      properties:
        ParentId:
          $ref: '#/components/schemas/ParentId'
        ChildType:
          $ref: '#/components/schemas/ChildType'
        NextToken:
          $ref: '#/components/schemas/NextToken'
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
    ListChildrenResponse:
      type: object
      example:
        Children:
          - Id: ou-examplerootid111-exampleouid111
            Type: ORGANIZATIONAL_UNIT
          - Id: ou-examplerootid111-exampleouid222
            Type: ORGANIZATIONAL_UNIT
      properties:
        Children:
          $ref: '#/components/schemas/Children'
        NextToken:
          $ref: '#/components/schemas/NextToken'
    ListCreateAccountStatusRequest:
      type: object
      example:
        States:
          - IN_PROGRESS
      properties:
        States:
          $ref: '#/components/schemas/CreateAccountStates'
        NextToken:
          $ref: '#/components/schemas/NextToken'
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
    ListCreateAccountStatusResponse:
      type: object
      example:
        CreateAccountStatuses:
          - AccountName: Production Account
            Id: car-exampleaccountcreationrequestid2
            RequestedTimestamp: '2017-01-15T13:45:23.01Z'
            State: IN_PROGRESS
      properties:
        CreateAccountStatuses:
          $ref: '#/components/schemas/CreateAccountStatuses'
        NextToken:
          $ref: '#/components/schemas/NextToken'
    ListHandshakesForAccountRequest:
      type: object
      properties:
        Filter:
          $ref: '#/components/schemas/HandshakeFilter'
        NextToken:
          $ref: '#/components/schemas/NextToken'
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
    ListHandshakesForAccountResponse:
      type: object
      example:
        Handshakes:
          - Action: INVITE
            Arn: 'arn:aws:organizations::111111111111:handshake/o-exampleorgid/invite/h-examplehandshakeid111'
            ExpirationTimestamp: '2017-01-28T14:35:23.3Z'
            Id: h-examplehandshakeid111
            Parties:
              - Id: o-exampleorgid
                Type: ORGANIZATION
              - Id: juan@example.com
                Type: EMAIL
            RequestedTimestamp: '2017-01-13T14:35:23.3Z'
            Resources:
              - Resources:
                  - Type: MASTER_EMAIL
                    Value: bill@amazon.com
                  - Type: MASTER_NAME
                    Value: Org Master Account
                  - Type: ORGANIZATION_FEATURE_SET
                    Value: FULL
                Type: ORGANIZATION
                Value: o-exampleorgid
              - Type: EMAIL
                Value: juan@example.com
            State: OPEN
      properties:
        Handshakes:
          $ref: '#/components/schemas/Handshakes'
        NextToken:
          $ref: '#/components/schemas/NextToken'
    ListHandshakesForOrganizationRequest:
      type: object
      properties:
        Filter:
          $ref: '#/components/schemas/HandshakeFilter'
        NextToken:
          $ref: '#/components/schemas/NextToken'
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
    ListHandshakesForOrganizationResponse:
      type: object
      example:
        Handshakes:
          - Action: INVITE
            Arn: 'arn:aws:organizations::111111111111:handshake/o-exampleorgid/invite/h-examplehandshakeid111'
            ExpirationTimestamp: '2017-01-28T14:35:23.3Z'
            Id: h-examplehandshakeid111
            Parties:
              - Id: o-exampleorgid
                Type: ORGANIZATION
              - Id: juan@example.com
                Type: EMAIL
            RequestedTimestamp: '2017-01-13T14:35:23.3Z'
            Resources:
              - Resources:
                  - Type: MASTER_EMAIL
                    Value: bill@amazon.com
                  - Type: MASTER_NAME
                    Value: Org Master Account
                  - Type: ORGANIZATION_FEATURE_SET
                    Value: FULL
                Type: ORGANIZATION
                Value: o-exampleorgid
              - Type: EMAIL
                Value: juan@example.com
            State: OPEN
          - Action: INVITE
            Arn: 'arn:aws:organizations::111111111111:handshake/o-exampleorgid/invite/h-examplehandshakeid111'
            ExpirationTimestamp: '2017-01-28T14:35:23.3Z'
            Id: h-examplehandshakeid222
            Parties:
              - Id: o-exampleorgid
                Type: ORGANIZATION
              - Id: anika@example.com
                Type: EMAIL
            RequestedTimestamp: '2017-01-13T14:35:23.3Z'
            Resources:
              - Resources:
                  - Type: MASTER_EMAIL
                    Value: bill@example.com
                  - Type: MASTER_NAME
                    Value: Master Account
                Type: ORGANIZATION
                Value: o-exampleorgid
              - Type: EMAIL
                Value: anika@example.com
              - Type: NOTES
                Value: This is an invitation to Anika's account to join Bill's organization.
            State: ACCEPTED
      properties:
        Handshakes:
          $ref: '#/components/schemas/Handshakes'
        NextToken:
          $ref: '#/components/schemas/NextToken'
    ListOrganizationalUnitsForParentRequest:
      type: object
      required:
        - ParentId
      example:
        ParentId: r-examplerootid111
      properties:
        ParentId:
          $ref: '#/components/schemas/ParentId'
        NextToken:
          $ref: '#/components/schemas/NextToken'
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
    ListOrganizationalUnitsForParentResponse:
      type: object
      example:
        OrganizationalUnits:
          - Arn: 'arn:aws:organizations::111111111111:ou/o-exampleorgid/ou-examlerootid111-exampleouid111'
            Id: ou-examplerootid111-exampleouid111
            Name: Development
          - Arn: 'arn:aws:organizations::111111111111:ou/o-exampleorgid/ou-examlerootid111-exampleouid222'
            Id: ou-examplerootid111-exampleouid222
            Name: Production
      properties:
        OrganizationalUnits:
          $ref: '#/components/schemas/OrganizationalUnits'
        NextToken:
          $ref: '#/components/schemas/NextToken'
    ListParentsRequest:
      type: object
      required:
        - ChildId
      example:
        ChildId: '444444444444'
      properties:
        ChildId:
          $ref: '#/components/schemas/ChildId'
        NextToken:
          $ref: '#/components/schemas/NextToken'
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
    ListParentsResponse:
      type: object
      example:
        Parents:
          - Id: ou-examplerootid111-exampleouid111
            Type: ORGANIZATIONAL_UNIT
      properties:
        Parents:
          $ref: '#/components/schemas/Parents'
        NextToken:
          $ref: '#/components/schemas/NextToken'
    ListPoliciesForTargetRequest:
      type: object
      required:
        - TargetId
        - Filter
      example:
        Filter: SERVICE_CONTROL_POLICY
        TargetId: '444444444444'
      properties:
        TargetId:
          $ref: '#/components/schemas/PolicyTargetId'
        Filter:
          $ref: '#/components/schemas/PolicyType'
        NextToken:
          $ref: '#/components/schemas/NextToken'
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
    ListPoliciesForTargetResponse:
      type: object
      example:
        Policies:
          - Arn: 'arn:aws:organizations::111111111111:policy/o-exampleorgid/service_control_policy/p-examplepolicyid222'
            AwsManaged: false
            Description: Enables account admins to delegate permissions for any EC2 actions to users and roles in their accounts.
            Id: p-examplepolicyid222
            Name: AllowAllEC2Actions
            Type: SERVICE_CONTROL_POLICY
      properties:
        Policies:
          $ref: '#/components/schemas/Policies'
        NextToken:
          $ref: '#/components/schemas/NextToken'
    ListPoliciesRequest:
      type: object
      required:
        - Filter
      example:
        Filter: SERVICE_CONTROL_POLICY
      properties:
        Filter:
          $ref: '#/components/schemas/PolicyType'
        NextToken:
          $ref: '#/components/schemas/NextToken'
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
    ListPoliciesResponse:
      type: object
      example:
        Policies:
          - Arn: 'arn:aws:organizations::111111111111:policy/o-exampleorgid/service_control_policy/p-examplepolicyid111'
            AwsManaged: false
            Description: Enables account admins to delegate permissions for any S3 actions to users and roles in their accounts.
            Id: p-examplepolicyid111
            Name: AllowAllS3Actions
            Type: SERVICE_CONTROL_POLICY
          - Arn: 'arn:aws:organizations::111111111111:policy/o-exampleorgid/service_control_policy/p-examplepolicyid222'
            AwsManaged: false
            Description: Enables account admins to delegate permissions for any EC2 actions to users and roles in their accounts.
            Id: p-examplepolicyid222
            Name: AllowAllEC2Actions
            Type: SERVICE_CONTROL_POLICY
          - Arn: 'arn:aws:organizations::aws:policy/service_control_policy/p-FullAWSAccess'
            AwsManaged: true
            Description: Allows access to every operation
            Id: p-FullAWSAccess
            Name: FullAWSAccess
            Type: SERVICE_CONTROL_POLICY
      properties:
        Policies:
          $ref: '#/components/schemas/Policies'
        NextToken:
          $ref: '#/components/schemas/NextToken'
    ListRootsRequest:
      type: object
      example: {}
      properties:
        NextToken:
          $ref: '#/components/schemas/NextToken'
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
    ListRootsResponse:
      type: object
      example:
        Roots:
          - Arn: 'arn:aws:organizations::111111111111:root/o-exampleorgid/r-examplerootid111'
            Id: r-examplerootid111
            Name: Root
            PolicyTypes:
              - Status: ENABLED
                Type: SERVICE_CONTROL_POLICY
      properties:
        Roots:
          $ref: '#/components/schemas/Roots'
        NextToken:
          $ref: '#/components/schemas/NextToken'
    ListTargetsForPolicyRequest:
      type: object
      required:
        - PolicyId
      example:
        PolicyId: p-FullAWSAccess
      properties:
        PolicyId:
          $ref: '#/components/schemas/PolicyId'
        NextToken:
          $ref: '#/components/schemas/NextToken'
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
    ListTargetsForPolicyResponse:
      type: object
      example:
        Targets:
          - Arn: 'arn:aws:organizations::111111111111:root/o-exampleorgid/r-examplerootid111'
            Name: Root
            TargetId: r-examplerootid111
            Type: ROOT
          - Arn: 'arn:aws:organizations::111111111111:account/o-exampleorgid/333333333333;'
            Name: Developer Test Account
            TargetId: '333333333333'
            Type: ACCOUNT
          - Arn: 'arn:aws:organizations::111111111111:ou/o-exampleorgid/ou-examplerootid111-exampleouid111'
            Name: Accounting
            TargetId: ou-examplerootid111-exampleouid111
            Type: ORGANIZATIONAL_UNIT
      properties:
        Targets:
          $ref: '#/components/schemas/PolicyTargets'
        NextToken:
          $ref: '#/components/schemas/NextToken'
    MalformedPolicyDocumentException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: 'The provided policy document does not meet the requirements of the specified policy type. For example, the syntax might be incorrect. For details about service control policy syntax, see <a href="http://docs.aws.amazon.com/organizations/latest/userguide/orgs_reference_scp-syntax.html">Service Control Policy Syntax</a> in the <i>AWS Organizations User Guide</i>.'
    MasterCannotLeaveOrganizationException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: 'You can''t remove a master account from an organization. If you want the master account to become a member account in another organization, you must first delete the current organization of the master account.'
    MaxResults:
      type: integer
      minimum: 1
      maximum: 20
    MoveAccountRequest:
      type: object
      required:
        - AccountId
        - SourceParentId
        - DestinationParentId
      example:
        AccountId: '333333333333'
        DestinationParentId: ou-examplerootid111-exampleouid111
        SourceParentId: r-examplerootid111
      properties:
        AccountId:
          $ref: '#/components/schemas/AccountId'
        SourceParentId:
          $ref: '#/components/schemas/ParentId'
        DestinationParentId:
          $ref: '#/components/schemas/ParentId'
    NextToken:
      type: string
    Organization:
      type: object
      properties:
        Id:
          $ref: '#/components/schemas/OrganizationId'
        Arn:
          $ref: '#/components/schemas/OrganizationArn'
        FeatureSet:
          $ref: '#/components/schemas/OrganizationFeatureSet'
        MasterAccountArn:
          $ref: '#/components/schemas/AccountArn'
        MasterAccountId:
          $ref: '#/components/schemas/AccountId'
        MasterAccountEmail:
          $ref: '#/components/schemas/Email'
        AvailablePolicyTypes:
          $ref: '#/components/schemas/PolicyTypes'
      description: 'Contains details about an organization. An organization is a collection of accounts that are centrally managed together using consolidated billing, organized hierarchically with organizational units (OUs), and controlled with policies .'
    OrganizationArn:
      type: string
      pattern: '^arn:aws:organizations::\d{12}:organization\/o-[a-z0-9]{10,32}'
    OrganizationFeatureSet:
      type: string
      enum:
        - ALL
        - CONSOLIDATED_BILLING
    OrganizationId:
      type: string
      pattern: '^o-[a-z0-9]{10,32}$'
    OrganizationNotEmptyException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: 'The organization isn''t empty. To delete an organization, you must first remove all accounts except the master account, delete all organizational units (OUs), and delete all policies.'
    OrganizationalUnit:
      type: object
      properties:
        Id:
          $ref: '#/components/schemas/OrganizationalUnitId'
        Arn:
          $ref: '#/components/schemas/OrganizationalUnitArn'
        Name:
          $ref: '#/components/schemas/OrganizationalUnitName'
      description: Contains details about an organizational unit (OU). An OU is a container of AWS accounts within a root of an organization. Policies that are attached to an OU apply to all accounts contained in that OU and in any child OUs.
    OrganizationalUnitArn:
      type: string
      pattern: '^arn:aws:organizations::\d{12}:ou\/o-[a-z0-9]{10,32}\/ou-[0-9a-z]{4,32}-[0-9a-z]{8,32}'
    OrganizationalUnitId:
      type: string
      pattern: '^ou-[0-9a-z]{4,32}-[a-z0-9]{8,32}$'
    OrganizationalUnitName:
      type: string
      minLength: 1
      maxLength: 128
    OrganizationalUnitNotEmptyException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: 'The specified organizational unit (OU) is not empty. Move all accounts to another root or to other OUs, remove all child OUs, and then try the operation again.'
    OrganizationalUnitNotFoundException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: We can't find an organizational unit (OU) with the OrganizationalUnitId that you specified.
    OrganizationalUnits:
      type: array
      items:
        $ref: '#/components/schemas/OrganizationalUnit'
    Parent:
      type: object
      properties:
        Id:
          $ref: '#/components/schemas/ParentId'
        Type:
          $ref: '#/components/schemas/ParentType'
      description: Contains information about either a root or an organizational unit (OU) that can contain OUs or accounts in an organization.
    ParentId:
      type: string
      pattern: '^(r-[0-9a-z]{4,32})|(ou-[0-9a-z]{4,32}-[a-z0-9]{8,32})$'
    ParentNotFoundException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: We can't find a root or organizational unit (OU) with the ParentId that you specified.
    ParentType:
      type: string
      enum:
        - ROOT
        - ORGANIZATIONAL_UNIT
    Parents:
      type: array
      items:
        $ref: '#/components/schemas/Parent'
    Policies:
      type: array
      items:
        $ref: '#/components/schemas/PolicySummary'
    Policy:
      type: object
      properties:
        PolicySummary:
          $ref: '#/components/schemas/PolicySummary'
        Content:
          $ref: '#/components/schemas/PolicyContent'
      description: 'Contains rules to be applied to the affected accounts. Policies can be attached directly to accounts, or to roots and OUs to affect all accounts in those hierarchies.'
    PolicyArn:
      type: string
      pattern: '^(arn:aws:organizations::\d{12}:policy\/o-[a-z0-9]{10,32}\/[0-9a-z_]+\/p-[0-9a-z]{10,32})|(arn:aws:organizations::aws:policy\/[0-9a-z_]+\/p-[0-9a-zA-Z_]{10,128})'
    PolicyContent:
      type: string
      minLength: 1
      maxLength: 1000000
    PolicyDescription:
      type: string
      maxLength: 512
    PolicyId:
      type: string
      pattern: '^p-[0-9a-zA-Z_]{8,128}$'
    PolicyInUseException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: 'The policy is attached to one or more entities. You must detach it from all roots, organizational units (OUs), and accounts before performing this operation.'
    PolicyName:
      type: string
      minLength: 1
      maxLength: 128
    PolicyNotAttachedException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: The policy isn't attached to the specified target in the specified root.
    PolicyNotFoundException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: We can't find a policy with the PolicyId that you specified.
    PolicySummary:
      type: object
      properties:
        Id:
          $ref: '#/components/schemas/PolicyId'
        Arn:
          $ref: '#/components/schemas/PolicyArn'
        Name:
          $ref: '#/components/schemas/PolicyName'
        Description:
          $ref: '#/components/schemas/PolicyDescription'
        Type:
          $ref: '#/components/schemas/PolicyType'
        AwsManaged:
          $ref: '#/components/schemas/AwsManagedPolicy'
      description: 'Contains information about a policy, but does not include the content. To see the content of a policy, see <a>DescribePolicy</a>.'
    PolicyTargetId:
      type: string
      pattern: '^(r-[0-9a-z]{4,32})|(\d{12})|(ou-[0-9a-z]{4,32}-[a-z0-9]{8,32})$'
    PolicyTargetSummary:
      type: object
      properties:
        TargetId:
          $ref: '#/components/schemas/PolicyTargetId'
        Arn:
          $ref: '#/components/schemas/GenericArn'
        Name:
          $ref: '#/components/schemas/TargetName'
        Type:
          $ref: '#/components/schemas/TargetType'
      description: 'Contains information about a root, OU, or account that a policy is attached to.'
    PolicyTargets:
      type: array
      items:
        $ref: '#/components/schemas/PolicyTargetSummary'
    PolicyType:
      type: string
      enum:
        - SERVICE_CONTROL_POLICY
    PolicyTypeAlreadyEnabledException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: The specified policy type is already enabled in the specified root.
    PolicyTypeNotAvailableForOrganizationException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: 'You can''t use the specified policy type with the feature set currently enabled for this organization. For example, you can enable service control policies (SCPs) only after you enable all features in the organization. For more information, see <a href="http://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies.html#enable_policies_on_root">Enabling and Disabling a Policy Type on a Root</a> in the <i>AWS Organizations User Guide</i>.'
    PolicyTypeNotEnabledException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: 'The specified policy type is not currently enabled in this root. You cannot attach policies of the specified type to entities in a root until you enable that type in the root. For more information, see <a href="http://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_org_support-all-features.html">Enabling All Features in Your Organization</a> in the <i>AWS Organizations User Guide</i>.'
    PolicyTypeStatus:
      type: string
      enum:
        - ENABLED
        - PENDING_ENABLE
        - PENDING_DISABLE
    PolicyTypeSummary:
      type: object
      properties:
        Type:
          $ref: '#/components/schemas/PolicyType'
        Status:
          $ref: '#/components/schemas/PolicyTypeStatus'
      description: Contains information about a policy type and its status in the associated root.
    PolicyTypes:
      type: array
      items:
        $ref: '#/components/schemas/PolicyTypeSummary'
    RemoveAccountFromOrganizationRequest:
      type: object
      required:
        - AccountId
      example:
        AccountId: '333333333333'
      properties:
        AccountId:
          $ref: '#/components/schemas/AccountId'
    RoleName:
      type: string
      pattern: '[\w+=,.@-]{1,64}'
    Root:
      type: object
      properties:
        Id:
          $ref: '#/components/schemas/RootId'
        Arn:
          $ref: '#/components/schemas/RootArn'
        Name:
          $ref: '#/components/schemas/RootName'
        PolicyTypes:
          $ref: '#/components/schemas/PolicyTypes'
      description: Contains details about a root. A root is a top-level parent node in the hierarchy of an organization that can contain organizational units (OUs) and accounts. Every root contains every AWS account in the organization. Each root enables the accounts to be organized in a different way and to have different policy types enabled for use in that root.
    RootArn:
      type: string
      pattern: '^arn:aws:organizations::\d{12}:root\/o-[a-z0-9]{10,32}\/r-[0-9a-z]{4,32}'
    RootId:
      type: string
      pattern: '^r-[0-9a-z]{4,32}$'
    RootName:
      type: string
      minLength: 1
      maxLength: 128
    RootNotFoundException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: We can't find a root with the RootId that you specified.
    Roots:
      type: array
      items:
        $ref: '#/components/schemas/Root'
    ServiceException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: AWS Organizations can't complete your request because of an internal service error. Try again later.
    SourceParentNotFoundException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: We can't find a source root or OU with the ParentId that you specified.
    TargetName:
      type: string
      minLength: 1
      maxLength: 128
    TargetNotFoundException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: 'We can''t find a root, OU, or account with the TargetId that you specified.'
    TargetType:
      type: string
      enum:
        - ACCOUNT
        - ORGANIZATIONAL_UNIT
        - ROOT
    Timestamp:
      type: string
      format: date-time
    TooManyRequestsException:
      type: object
      properties:
        Type:
          $ref: '#/components/schemas/ExceptionType'
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: You've sent too many requests in too short a period of time. The limit helps protect against denial-of-service attacks. Try again later.
    UpdateOrganizationalUnitRequest:
      type: object
      required:
        - OrganizationalUnitId
      example:
        Name: AccountingOU
        OrganizationalUnitId: ou-examplerootid111-exampleouid111
      properties:
        OrganizationalUnitId:
          $ref: '#/components/schemas/OrganizationalUnitId'
        Name:
          $ref: '#/components/schemas/OrganizationalUnitName'
    UpdateOrganizationalUnitResponse:
      type: object
      example:
        OrganizationalUnit:
          Arn: 'arn:aws:organizations::111111111111:ou/o-exampleorgid/ou-examplerootid111-exampleouid111'
          Id: ou-examplerootid111-exampleouid111
          Name: AccountingOU
      properties:
        OrganizationalUnit:
          $ref: '#/components/schemas/OrganizationalUnit'
    UpdatePolicyRequest:
      type: object
      required:
        - PolicyId
      example:
        Content: '{ \"Version\": \"2012-10-17\", \"Statement\": {\"Effect\": \"Allow\", \"Action\": \"s3:*\", \"Resource\": \"*\" } }'
        PolicyId: p-examplepolicyid111
      properties:
        PolicyId:
          $ref: '#/components/schemas/PolicyId'
        Name:
          $ref: '#/components/schemas/PolicyName'
        Description:
          $ref: '#/components/schemas/PolicyDescription'
        Content:
          $ref: '#/components/schemas/PolicyContent'
    UpdatePolicyResponse:
      type: object
      example:
        Policy:
          Content: '{ \"Version\": \"2012-10-17\", \"Statement\": { \"Effect\": \"Allow\", \"Action\": \"s3:*\", \"Resource\": \"*\" } }'
          PolicySummary:
            Arn: 'arn:aws:organizations::111111111111:policy/o-exampleorgid/service_control_policy/p-examplepolicyid111'
            AwsManaged: false
            Description: This description replaces the original.
            Id: p-examplepolicyid111
            Name: Renamed-Policy
            Type: SERVICE_CONTROL_POLICY
      properties:
        Policy:
          $ref: '#/components/schemas/Policy'
  parameters:
    Action:
      name: Action
      in: header
      required: true
      schema:
        type: string
    Version:
      name: Version
      in: header
      required: true
      schema:
        type: string
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      required: false
      schema:
        type: string
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      required: false
      schema:
        type: string
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      required: false
      schema:
        type: string
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      required: false
      schema:
        type: string
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      required: false
      schema:
        type: string
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      required: false
      schema:
        type: string
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      required: false
      schema:
        type: string
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
