openapi: 3.0.0
servers:
  - url: 'http://polly.amazonaws.com/'
info:
  version: '2016-06-10'
  x-release: v4
  title: Amazon Polly
  description: '<p>Amazon Polly is a web service that makes it easy to synthesize speech from text.</p> <p>The Amazon Polly service provides API operations for synthesizing high-quality speech from plain text and Speech Synthesis Markup Language (SSML), along with managing pronunciations lexicons that enable you to get the best results for your application domain.</p>'
  x-logo:
    url: 'https://media.amazonwebservices.com/blog/2007/big_pbaws_logo_300px.jpg'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: polly
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/polly-2016-06-10.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-direct: true
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://aws.amazon.com/polly/'
x-hasEquivalentPaths: true
security:
  - hmac: []
paths:
  '/v1/lexicons/{LexiconName}':
    put:
      operationId: PutLexicon
      description: '<p>Stores a pronunciation lexicon in an AWS Region. If a lexicon with the same name already exists in the region, it is overwritten by the new lexicon. Lexicon operations have eventual consistency, therefore, it might take some time before the lexicon is available to the SynthesizeSpeech operation.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/polly/latest/dg/managing-lexicons.html">Managing Lexicons</a>.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutLexiconOutput'
        '480':
          description: InvalidLexiconException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidLexiconException'
        '481':
          description: UnsupportedPlsAlphabetException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedPlsAlphabetException'
        '482':
          description: UnsupportedPlsLanguageException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedPlsLanguageException'
        '483':
          description: LexiconSizeExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LexiconSizeExceededException'
        '484':
          description: MaxLexemeLengthExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaxLexemeLengthExceededException'
        '485':
          description: MaxLexiconsNumberExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaxLexiconsNumberExceededException'
        '486':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      parameters:
        - name: LexiconName
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutLexiconInput'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /v1/voices:
    get:
      operationId: DescribeVoices
      description: '<p>Returns the list of voices that are available for use when requesting speech synthesis. Each voice speaks a specified language, is either male or female, and is identified by an ID, which is the ASCII version of the voice name. </p> <p>When synthesizing speech ( <code>SynthesizeSpeech</code> ), you provide the voice ID for the voice you want from the list of voices returned by <code>DescribeVoices</code>.</p> <p>For example, you want your news reader application to read news in a specific language, but giving a user the option to choose the voice. Using the <code>DescribeVoices</code> operation you can provide the user with a list of available voices to select from.</p> <p> You can optionally specify a language code to filter the available voices. For example, if you specify <code>en-US</code>, the operation returns a list of all available US English voices. </p> <p>This operation requires permissions to perform the <code>polly:DescribeVoices</code> action.</p>'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeVoicesOutput'
        '480':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
        '481':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DescribeVoicesInput'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /v1/lexicons:
    get:
      operationId: ListLexicons
      description: 'Returns a list of pronunciation lexicons stored in an AWS Region. For more information, see <a href="http://docs.aws.amazon.com/polly/latest/dg/managing-lexicons.html">Managing Lexicons</a>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLexiconsOutput'
        '480':
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
        '481':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListLexiconsInput'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
  /v1/speech:
    post:
      operationId: SynthesizeSpeech
      description: 'Synthesizes UTF-8 input, plain text or SSML, to a stream of bytes. SSML input must be valid, well-formed SSML. Some alphabets might not be available with all the voices (for example, Cyrillic might not be read at all by English voices) unless phoneme mapping is used. For more information, see <a href="http://docs.aws.amazon.com/polly/latest/dg/how-text-to-speech-works.html">How it Works</a>.'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SynthesizeSpeechOutput'
        '480':
          description: TextLengthExceededException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TextLengthExceededException'
        '481':
          description: InvalidSampleRateException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidSampleRateException'
        '482':
          description: InvalidSsmlException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidSsmlException'
        '483':
          description: LexiconNotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LexiconNotFoundException'
        '484':
          description: ServiceFailureException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
        '485':
          description: MarksNotSupportedForFormatException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarksNotSupportedForFormatException'
        '486':
          description: SsmlMarksNotSupportedForTextTypeException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SsmlMarksNotSupportedForTextTypeException'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SynthesizeSpeechInput'
        required: true
    parameters:
      - $ref: '#/components/parameters/Action'
      - $ref: '#/components/parameters/Version'
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
components:
  schemas:
    Alphabet:
      type: string
    AudioStream:
      type: string
    ContentType:
      type: string
    DeleteLexiconInput:
      type: object
      example:
        Name: example
      properties: {}
    DeleteLexiconOutput:
      type: object
      example: {}
      properties: {}
    DescribeVoicesInput:
      type: object
      example:
        LanguageCode: en-GB
      properties: {}
    DescribeVoicesOutput:
      type: object
      example:
        Voices:
          - Gender: Female
            Id: Emma
            LanguageCode: en-GB
            LanguageName: British English
            Name: Emma
          - Gender: Male
            Id: Brian
            LanguageCode: en-GB
            LanguageName: British English
            Name: Brian
          - Gender: Female
            Id: Amy
            LanguageCode: en-GB
            LanguageName: British English
            Name: Amy
      properties:
        Voices:
          $ref: '#/components/schemas/VoiceList'
        NextToken:
          $ref: '#/components/schemas/NextToken'
    ErrorMessage:
      type: string
    Gender:
      type: string
      enum:
        - Female
        - Male
    GetLexiconInput:
      type: object
      example:
        Name: ''
      properties: {}
    GetLexiconOutput:
      type: object
      example:
        Lexicon:
          Content: "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<lexicon version=\"1.0\" \r\n      xmlns=\"http://www.w3.org/2005/01/pronunciation-lexicon\"\r\n      xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" \r\n      xsi:schemaLocation=\"http://www.w3.org/2005/01/pronunciation-lexicon \r\n        http://www.w3.org/TR/2007/CR-pronunciation-lexicon-20071212/pls.xsd\"\r\n      alphabet=\"ipa\" \r\n      xml:lang=\"en-US\">\r\n  <lexeme>\r\n    <grapheme>W3C</grapheme>\r\n    <alias>World Wide Web Consortium</alias>\r\n  </lexeme>\r\n</lexicon>"
          Name: example
        LexiconAttributes:
          Alphabet: ipa
          LanguageCode: en-US
          LastModified: 1478542980.117
          LexemesCount: 1
          LexiconArn: 'arn:aws:polly:us-east-1:123456789012:lexicon/example'
          Size: 503
      properties:
        Lexicon:
          $ref: '#/components/schemas/Lexicon'
        LexiconAttributes:
          $ref: '#/components/schemas/LexiconAttributes'
    InvalidLexiconException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      description: 'Amazon Polly can''t find the specified lexicon. Verify that the lexicon''s name is spelled correctly, and then try again.'
    InvalidNextTokenException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      description: 'The NextToken is invalid. Verify that it''s spelled correctly, and then try again.'
    InvalidSampleRateException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      description: The specified sample rate is not valid.
    InvalidSsmlException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      description: 'The SSML you provided is invalid. Verify the SSML syntax, spelling of tags and values, and then try again.'
    LanguageCode:
      type: string
      enum:
        - cy-GB
        - da-DK
        - de-DE
        - en-AU
        - en-GB
        - en-GB-WLS
        - en-IN
        - en-US
        - es-ES
        - es-US
        - fr-CA
        - fr-FR
        - is-IS
        - it-IT
        - ja-JP
        - nb-NO
        - nl-NL
        - pl-PL
        - pt-BR
        - pt-PT
        - ro-RO
        - ru-RU
        - sv-SE
        - tr-TR
    LanguageName:
      type: string
    LastModified:
      type: string
      format: date-time
    LexemesCount:
      type: integer
    Lexicon:
      type: object
      properties:
        Content:
          $ref: '#/components/schemas/LexiconContent'
        Name:
          $ref: '#/components/schemas/LexiconName'
      description: 'Provides lexicon name and lexicon content in string format. For more information, see <a href="https://www.w3.org/TR/pronunciation-lexicon/">Pronunciation Lexicon Specification (PLS) Version 1.0</a>.'
    LexiconArn:
      type: string
    LexiconAttributes:
      type: object
      properties:
        Alphabet:
          $ref: '#/components/schemas/Alphabet'
        LanguageCode:
          $ref: '#/components/schemas/LanguageCode'
        LastModified:
          $ref: '#/components/schemas/LastModified'
        LexiconArn:
          $ref: '#/components/schemas/LexiconArn'
        LexemesCount:
          $ref: '#/components/schemas/LexemesCount'
        Size:
          $ref: '#/components/schemas/Size'
      description: 'Contains metadata describing the lexicon such as the number of lexemes, language code, and so on. For more information, see <a href="http://docs.aws.amazon.com/polly/latest/dg/managing-lexicons.html">Managing Lexicons</a>.'
    LexiconContent:
      type: string
    LexiconDescription:
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/LexiconName'
        Attributes:
          $ref: '#/components/schemas/LexiconAttributes'
      description: Describes the content of the lexicon.
    LexiconDescriptionList:
      type: array
      items:
        $ref: '#/components/schemas/LexiconDescription'
    LexiconName:
      type: string
      pattern: '[0-9A-Za-z]{1,20}'
      format: password
    LexiconNameList:
      type: array
      items:
        $ref: '#/components/schemas/LexiconName'
      maxItems: 5
    LexiconNotFoundException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      description: '<p>Amazon Polly can''t find the specified lexicon. This could be caused by a lexicon that is missing, its name is misspelled or specifying a lexicon that is in a different region.</p> <p>Verify that the lexicon exists, is in the region (see <a>ListLexicons</a>) and that you spelled its name is spelled correctly. Then try again.</p>'
    LexiconSizeExceededException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      description: The maximum size of the specified lexicon would be exceeded by this operation.
    ListLexiconsInput:
      type: object
      example: {}
      properties: {}
    ListLexiconsOutput:
      type: object
      example:
        Lexicons:
          - Attributes:
              Alphabet: ipa
              LanguageCode: en-US
              LastModified: 1478542980.117
              LexemesCount: 1
              LexiconArn: 'arn:aws:polly:us-east-1:123456789012:lexicon/example'
              Size: 503
            Name: example
      properties:
        Lexicons:
          $ref: '#/components/schemas/LexiconDescriptionList'
        NextToken:
          $ref: '#/components/schemas/NextToken'
    MarksNotSupportedForFormatException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      description: Speech marks are not supported for the <code>OutputFormat</code> selected. Speech marks are only available for content in <code>json</code> format.
    MaxLexemeLengthExceededException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      description: The maximum size of the lexeme would be exceeded by this operation.
    MaxLexiconsNumberExceededException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      description: The maximum number of lexicons would be exceeded by this operation.
    NextToken:
      type: string
    OutputFormat:
      type: string
      enum:
        - json
        - mp3
        - ogg_vorbis
        - pcm
    PutLexiconInput:
      type: object
      required:
        - Content
      example:
        Content: 'file://example.pls'
        Name: W3C
      properties:
        Content:
          $ref: '#/components/schemas/LexiconContent'
    PutLexiconOutput:
      type: object
      example: {}
      properties: {}
    RequestCharacters:
      type: integer
    SampleRate:
      type: string
    ServiceFailureException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      description: An unknown condition has caused a service failure.
    Size:
      type: integer
    SpeechMarkType:
      type: string
      enum:
        - sentence
        - ssml
        - viseme
        - word
    SpeechMarkTypeList:
      type: array
      items:
        $ref: '#/components/schemas/SpeechMarkType'
      maxItems: 4
    SsmlMarksNotSupportedForTextTypeException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      description: SSML speech marks are not supported for plain text-type input.
    SynthesizeSpeechInput:
      type: object
      required:
        - OutputFormat
        - Text
        - VoiceId
      example:
        LexiconNames:
          - example
        OutputFormat: mp3
        SampleRate: '8000'
        Text: All Gaul is divided into three parts
        TextType: text
        VoiceId: Joanna
      properties:
        LexiconNames:
          $ref: '#/components/schemas/LexiconNameList'
        OutputFormat:
          $ref: '#/components/schemas/OutputFormat'
        SampleRate:
          $ref: '#/components/schemas/SampleRate'
        SpeechMarkTypes:
          $ref: '#/components/schemas/SpeechMarkTypeList'
        Text:
          $ref: '#/components/schemas/Text'
        TextType:
          $ref: '#/components/schemas/TextType'
        VoiceId:
          $ref: '#/components/schemas/VoiceId'
    SynthesizeSpeechOutput:
      type: object
      example:
        AudioStream: TEXT
        ContentType: audio/mpeg
        RequestCharacters: 37
      properties:
        AudioStream:
          $ref: '#/components/schemas/AudioStream'
    Text:
      type: string
    TextLengthExceededException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      description: 'The value of the "Text" parameter is longer than the accepted limits. The limit for input text is a maximum of 3000 characters total, of which no more than 1500 can be billed characters. SSML tags are not counted as billed characters.'
    TextType:
      type: string
      enum:
        - ssml
        - text
    UnsupportedPlsAlphabetException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      description: The alphabet specified by the lexicon is not a supported alphabet. Valid values are <code>x-sampa</code> and <code>ipa</code>.
    UnsupportedPlsLanguageException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      description: 'The language specified in the lexicon is unsupported. For a list of supported languages, see <a href="http://docs.aws.amazon.com/polly/latest/dg/API_LexiconAttributes.html">Lexicon Attributes</a>.'
    Voice:
      type: object
      properties:
        Gender:
          $ref: '#/components/schemas/Gender'
        Id:
          $ref: '#/components/schemas/VoiceId'
        LanguageCode:
          $ref: '#/components/schemas/LanguageCode'
        LanguageName:
          $ref: '#/components/schemas/LanguageName'
        Name:
          $ref: '#/components/schemas/VoiceName'
      description: Description of the voice.
    VoiceId:
      type: string
      enum:
        - Geraint
        - Gwyneth
        - Mads
        - Naja
        - Hans
        - Marlene
        - Nicole
        - Russell
        - Amy
        - Brian
        - Emma
        - Raveena
        - Ivy
        - Joanna
        - Joey
        - Justin
        - Kendra
        - Kimberly
        - Salli
        - Conchita
        - Enrique
        - Miguel
        - Penelope
        - Chantal
        - Celine
        - Mathieu
        - Dora
        - Karl
        - Carla
        - Giorgio
        - Mizuki
        - Liv
        - Lotte
        - Ruben
        - Ewa
        - Jacek
        - Jan
        - Maja
        - Ricardo
        - Vitoria
        - Cristiano
        - Ines
        - Carmen
        - Maxim
        - Tatyana
        - Astrid
        - Filiz
        - Vicki
    VoiceList:
      type: array
      items:
        $ref: '#/components/schemas/Voice'
    VoiceName:
      type: string
  parameters:
    Action:
      name: Action
      in: header
      required: true
      schema:
        type: string
    Version:
      name: Version
      in: header
      required: true
      schema:
        type: string
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      required: false
      schema:
        type: string
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      required: false
      schema:
        type: string
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      required: false
      schema:
        type: string
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      required: false
      schema:
        type: string
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      required: false
      schema:
        type: string
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      required: false
      schema:
        type: string
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      required: false
      schema:
        type: string
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
