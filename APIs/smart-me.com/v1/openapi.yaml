openapi: 3.0.0
servers:
  - url: 'https://smart-me.com:443/'
info:
  description: With the smart-me REST API you get Access to all your devices in the smart-me Cloud and you can add your own devices. So it's a easy way to add the smart-me Cloud support to your Hardware or Software Product.
  title: smart-me
  version: v1
  x-logo:
    url: 'http://smart-me.com/Images/bootstrap/logo.png'
  x-origin:
    - format: swagger
      url: 'https://smart-me.com/swagger/docs/v1'
      version: '2.0'
  x-providerName: smart-me.com
paths:
  /api/AccessToken:
    put:
      deprecated: false
      description: Creates a Access Token to write on a Card (e.g. NFC)
      operationId: AccessToken_Put
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
            text/xml:
              schema:
                type: string
      summary: Creates a Access Token to write on a Card (e.g. NFC)
      tags:
        - AccessToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccessTokenToPut'
          text/json:
            schema:
              $ref: '#/components/schemas/AccessTokenToPut'
          application/xml:
            schema:
              $ref: '#/components/schemas/AccessTokenToPut'
          text/xml:
            schema:
              $ref: '#/components/schemas/AccessTokenToPut'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AccessTokenToPut'
        required: true
  /api/Actions:
    post:
      deprecated: false
      description: Set an action for the specified device.
      operationId: Actions_Post
      responses:
        '204':
          description: No Content
      summary: Set an action for the specified device.
      tags:
        - Actions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActionToPost'
          text/json:
            schema:
              $ref: '#/components/schemas/ActionToPost'
          application/xml:
            schema:
              $ref: '#/components/schemas/ActionToPost'
          text/xml:
            schema:
              $ref: '#/components/schemas/ActionToPost'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ActionToPost'
        description: The Action Data
        required: true
  '/api/Actions/{id}':
    get:
      deprecated: false
      description: Gets all available Actions of a Device
      operationId: Actions_Get
      parameters:
        - description: The ID of the device
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ActionInformation'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/ActionInformation'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ActionInformation'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ActionInformation'
                type: array
      summary: Gets all available Actions of a Device
      tags:
        - Actions
  /api/CustomDevice:
    get:
      deprecated: false
      description: Gets all Devices
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CustomDeviceToPost'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/CustomDeviceToPost'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/CustomDeviceToPost'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/CustomDeviceToPost'
                type: array
      summary: Gets all Custom Devices
      tags:
        - CustomDevice
    post:
      deprecated: false
      description: "Creates or updates a Custom Device or updates it's values.\r\n            A Custom Device can be any device that like to add some measurement values to the smart-me Cloud.\r\n            Only use a custom device for all non meters.\r\n            For a new device leave the ID empty. To create a device you have to set the DeviceEnergyType.\r\n            To update values, add the ID of the device and the values you like to set.  (See the Data Type Model for more Information)"
      operationId: CustomDevice_Post
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomDeviceToPost'
            text/json:
              schema:
                $ref: '#/components/schemas/CustomDeviceToPost'
            application/xml:
              schema:
                $ref: '#/components/schemas/CustomDeviceToPost'
            text/xml:
              schema:
                $ref: '#/components/schemas/CustomDeviceToPost'
        '401':
          description: Unauthorized
      summary: Creates or updates a Custom Device or updates it's values.
      tags:
        - CustomDevice
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomDeviceToPost'
          text/json:
            schema:
              $ref: '#/components/schemas/CustomDeviceToPost'
          application/xml:
            schema:
              $ref: '#/components/schemas/CustomDeviceToPost'
          text/xml:
            schema:
              $ref: '#/components/schemas/CustomDeviceToPost'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomDeviceToPost'
        description: Device object with all the data
        required: true
  '/api/CustomDevice/{id}':
    get:
      deprecated: false
      description: Gets a Device by it's ID
      parameters:
        - description: The ID of the device
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomDeviceToPost'
            text/json:
              schema:
                $ref: '#/components/schemas/CustomDeviceToPost'
            application/xml:
              schema:
                $ref: '#/components/schemas/CustomDeviceToPost'
            text/xml:
              schema:
                $ref: '#/components/schemas/CustomDeviceToPost'
      summary: Gets a Custom Device by it's ID
      tags:
        - CustomDevice
  /api/DeviceBySerial:
    get:
      deprecated: false
      description: Gets a Device by it's Serial Number. The Serial is the part before the "-".
      operationId: DeviceBySerial_Get
      parameters:
        - description: The Serial Number of the device
          in: query
          name: serial
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
            text/json:
              schema:
                $ref: '#/components/schemas/Device'
            application/xml:
              schema:
                $ref: '#/components/schemas/Device'
            text/xml:
              schema:
                $ref: '#/components/schemas/Device'
      summary: Gets a Device by it's Serial Number. The Serial is the part before the "-".
      tags:
        - DeviceBySerial
  /api/Devices:
    get:
      deprecated: false
      description: Gets all Devices
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Device'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/Device'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Device'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Device'
                type: array
      summary: Gets all Devices
      tags:
        - Devices
    post:
      deprecated: false
      description: "Creates or updates a Device or updates it's values. \r\n            For a new device leave the ID empty. To create a device you have to set the DeviceEnergyType.\r\n            To update values, add the ID of the device and the values you like to set.  (See the Data Type Model for more Information)"
      operationId: Devices_Post
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceToPost'
            text/json:
              schema:
                $ref: '#/components/schemas/DeviceToPost'
            application/xml:
              schema:
                $ref: '#/components/schemas/DeviceToPost'
            text/xml:
              schema:
                $ref: '#/components/schemas/DeviceToPost'
        '401':
          description: Unauthorized
      summary: Creates or updates a Device or updates it's values.
      tags:
        - Devices
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceToPost'
          text/json:
            schema:
              $ref: '#/components/schemas/DeviceToPost'
          application/xml:
            schema:
              $ref: '#/components/schemas/DeviceToPost'
          text/xml:
            schema:
              $ref: '#/components/schemas/DeviceToPost'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DeviceToPost'
        description: Device object with all the data
        required: true
  '/api/Devices/{id}':
    get:
      deprecated: false
      description: Gets a Device by it's ID
      parameters:
        - description: The ID of the device
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
            text/json:
              schema:
                $ref: '#/components/schemas/Device'
            application/xml:
              schema:
                $ref: '#/components/schemas/Device'
            text/xml:
              schema:
                $ref: '#/components/schemas/Device'
      summary: Gets a Device by it's ID
      tags:
        - Devices
    put:
      deprecated: false
      description: "Updates the On/Off Switch on a device\r\n            For new implementations please use the \"actions\" command"
      operationId: Devices_Put
      parameters:
        - description: The ID of the device
          in: path
          name: id
          required: true
          schema:
            type: string
        - description: The new state of the switch
          in: query
          name: switchState
          required: true
          schema:
            type: boolean
        - description: 'The number of the switch if there are multiple (1 for L1, 3 for L3)'
          in: query
          name: switchNumber
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Object'
            text/json:
              schema:
                $ref: '#/components/schemas/Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/Object'
        '401':
          description: Unauthorized
        '405':
          description: MethodNotAllowed
      summary: "Updates the On/Off Switch on a device. \r\n            For new implementations please use the \"actions\" command"
      tags:
        - Devices
  /api/DevicesByEnergy:
    get:
      deprecated: false
      description: Gets all Devices for an Energy Type
      operationId: DevicesByEnergy_Get
      parameters:
        - in: query
          name: meterEnergyType
          required: true
          schema:
            type: string
            enum:
              - MeterTypeUnknown
              - MeterTypeElectricity
              - MeterTypeWater
              - MeterTypeGas
              - MeterTypeHeat
              - MeterTypeHCA
              - MeterTypeAllMeters
              - MeterTypeTemperature
              - MeterTypeMBusGateway
              - MeterTypeRS485Gateway
              - MeterTypeCustomDevice
              - MeterTypeCompressedAir
              - MeterTypeSolarLog
              - MeterTypeVirtualMeter
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Device'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/Device'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Device'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Device'
                type: array
      summary: Gets all Devices for an Energy Type
      tags:
        - DevicesByEnergy
  /api/DevicesBySubType:
    get:
      deprecated: false
      description: Gets all Devices by it's Sub Type (e.g. E-Charging Station)
      operationId: DevicesBySubType_Get
      parameters:
        - in: query
          name: meterSubType
          required: true
          schema:
            type: string
            enum:
              - MeterSubTypeUnknown
              - MeterSubTypeCold
              - MeterSubTypeHeat
              - MeterSubTypeChargingStation
              - MeterSubTypeElectricity
              - MeterSubTypeWater
              - MeterSubTypeGas
              - MeterSubTypeElectricityHeat
              - MeterSubTypeTemperature
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Device'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/Device'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Device'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Device'
                type: array
      summary: Gets all Devices by it's Sub Type (e.g. E-Charging Station)
      tags:
        - DevicesBySubType
  /api/MBus:
    post:
      deprecated: false
      description: "M-BUS API: Adds data of a M-BUS Meter to the smart-me Cloud.\r\n            Just send us the M-BUS Telegram (RSP_UD) and we will do the Rest."
      operationId: MBus_Post
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Object'
            text/json:
              schema:
                $ref: '#/components/schemas/Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/Object'
        '400':
          description: BadRequest
        '401':
          description: Unauthorized
      summary: "M-BUS API: Adds data of a M-BUS Meter to the smart-me Cloud.\r\n            Just send us the M-BUS Telegram (RSP_UD) and we will do the Rest."
      tags:
        - MBus
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MBusData'
          text/json:
            schema:
              $ref: '#/components/schemas/MBusData'
          application/xml:
            schema:
              $ref: '#/components/schemas/MBusData'
          text/xml:
            schema:
              $ref: '#/components/schemas/MBusData'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MBusData'
        description: The M-BUS Telegram
        required: true
  /api/MeterFolderInformation:
    post:
      deprecated: false
      description: Sets the Name of a Meter or a Folder
      operationId: MeterFolderInformation_Post
      responses:
        '204':
          description: No Content
      summary: Sets the Name of a Meter or a Folder
      tags:
        - MeterFolderInformation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MeterFolderInformationToPost'
          text/json:
            schema:
              $ref: '#/components/schemas/MeterFolderInformationToPost'
          application/xml:
            schema:
              $ref: '#/components/schemas/MeterFolderInformationToPost'
          text/xml:
            schema:
              $ref: '#/components/schemas/MeterFolderInformationToPost'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MeterFolderInformationToPost'
        required: true
  '/api/MeterFolderInformation/{id}':
    get:
      deprecated: false
      description: 'Beta: Gets the General Information for a Meter or a Folder'
      operationId: MeterFolderInformation_Get
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeterFolderInformation'
            text/json:
              schema:
                $ref: '#/components/schemas/MeterFolderInformation'
            application/xml:
              schema:
                $ref: '#/components/schemas/MeterFolderInformation'
            text/xml:
              schema:
                $ref: '#/components/schemas/MeterFolderInformation'
      summary: 'Beta: Gets the General Information for a Meter or a Folder'
      tags:
        - MeterFolderInformation
  '/api/MeterValues/{id}':
    get:
      deprecated: false
      description: Gets the Values for a Meter at a given Date. The first Value found before the given Date is returned.
      operationId: MeterValues_Get
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
        - in: query
          name: date
          required: true
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceInPast'
            text/json:
              schema:
                $ref: '#/components/schemas/DeviceInPast'
            application/xml:
              schema:
                $ref: '#/components/schemas/DeviceInPast'
            text/xml:
              schema:
                $ref: '#/components/schemas/DeviceInPast'
      summary: "Gets the Values for a Meter at a given Date. \r\n            The first Value found before the given Date is returned."
      tags:
        - MeterValues
  /api/SignUp:
    post:
      deprecated: false
      description: "Sign up a new User.\r\n            The sign up is done on the smart-me Cloud."
      operationId: SignUp_Post
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
            text/json:
              schema:
                $ref: '#/components/schemas/User'
            application/xml:
              schema:
                $ref: '#/components/schemas/User'
            text/xml:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: BadRequest
        '500':
          description: InternalServerError
      summary: "Sign up a new User.\r\n            The sign up is done on the smart-me Cloud."
      tags:
        - SignUp
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignUpData'
          text/json:
            schema:
              $ref: '#/components/schemas/SignUpData'
          application/xml:
            schema:
              $ref: '#/components/schemas/SignUpData'
          text/xml:
            schema:
              $ref: '#/components/schemas/SignUpData'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SignUpData'
        description: The user data
        required: true
  /api/User:
    get:
      deprecated: false
      description: Gets the informations for the user.
      operationId: User_Get
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
            text/json:
              schema:
                $ref: '#/components/schemas/User'
            application/xml:
              schema:
                $ref: '#/components/schemas/User'
            text/xml:
              schema:
                $ref: '#/components/schemas/User'
      summary: Gets the informations for the user.
      tags:
        - User
  /api/VirtualBillingMeterActive:
    get:
      deprecated: false
      description: 'Beta: Gets all active virtual meters.'
      operationId: VirtualBillingMeterActive_Get
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Device'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/Device'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Device'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Device'
                type: array
      summary: 'Beta: Gets all active virtual meters'
      tags:
        - VirtualBillingMeterActive
    post:
      deprecated: false
      description: 'Beta: Virtual Meter API: Activates a Meter and add the Consumption to a Virtual Meter assosiated with the User.'
      operationId: VirtualBillingMeterActive_Post
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
            text/json:
              schema:
                $ref: '#/components/schemas/Device'
            application/xml:
              schema:
                $ref: '#/components/schemas/Device'
            text/xml:
              schema:
                $ref: '#/components/schemas/Device'
        '400':
          description: BadRequest
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      summary: 'Beta: Virtual Meter API: Activates a Meter and add the Consumption to a Virtual Meter assosiated with the User.'
      tags:
        - VirtualBillingMeterActive
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VMeterToActivate'
          text/json:
            schema:
              $ref: '#/components/schemas/VMeterToActivate'
          application/xml:
            schema:
              $ref: '#/components/schemas/VMeterToActivate'
          text/xml:
            schema:
              $ref: '#/components/schemas/VMeterToActivate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VMeterToActivate'
        description: The Meter to activate
        required: true
  /api/VirtualBillingMeterDeactivate:
    post:
      deprecated: false
      description: 'Beta: Virtual Meter API: Deactivates a Virtual Meter.'
      operationId: VirtualBillingMeterDeactivate_Post
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Object'
            text/json:
              schema:
                $ref: '#/components/schemas/Object'
            application/xml:
              schema:
                $ref: '#/components/schemas/Object'
            text/xml:
              schema:
                $ref: '#/components/schemas/Object'
        '400':
          description: BadRequest
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      summary: 'Beta: Virtual Meter API: Deactivates a Virtual Meter.'
      tags:
        - VirtualBillingMeterDeactivate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VMeterToDeactivate'
          text/json:
            schema:
              $ref: '#/components/schemas/VMeterToDeactivate'
          application/xml:
            schema:
              $ref: '#/components/schemas/VMeterToDeactivate'
          text/xml:
            schema:
              $ref: '#/components/schemas/VMeterToDeactivate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VMeterToDeactivate'
        description: The Meter to activate
        required: true
  /api/VirtualBillingMeters:
    get:
      deprecated: false
      description: 'Beta: Gets all Meters available to activate as a Virtual Meter.'
      operationId: VirtualBillingMeters_Get
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Device'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/Device'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Device'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Device'
                type: array
      summary: 'Beta: Gets all Meters available to activate as a Virtual Meter.'
      tags:
        - VirtualBillingMeters
  /api/VirtualMeterCalculateFormula:
    get:
      deprecated: false
      description: "Calculates a virtual meter from a formula.\r\n            \r\n            A meter is coded as ID(\"METERID\")\r\n            Ariphmetical operators:\r\n             ()  parentheses;  \r\n             +   plus (a + b); \r\n             -  minus (a - b); \r\n             *  multiplycation symbol (a * b); \r\n             /  divide symbol (a / b); \r\n            Example: (ID(\"63ac09cb-4e5f-4f3e-bd27-ad8c30bdfc0c\") + ID(\"0209555e-9dc4-4e84-a166-a864488b4b12\")) * 2"
      operationId: VirtualMeterCalculateFormula_Get
      parameters:
        - in: query
          name: formula
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
            text/json:
              schema:
                $ref: '#/components/schemas/Device'
            application/xml:
              schema:
                $ref: '#/components/schemas/Device'
            text/xml:
              schema:
                $ref: '#/components/schemas/Device'
      summary: "Calculates a virtual meter from a formula. \r\n            A meter is coded as ID(\"METERID\")"
      tags:
        - VirtualMeterCalculateFormula
components:
  schemas:
    AccessTokenToPut:
      description: Container Class for the Put action of an Access Token
      properties:
        CardId:
          description: The ID of the Card
          format: int64
          type: integer
        UserId:
          description: "The ID of the User. The credentials provided must have permission to edit the user.\r\n            If no ID is provided, the user in the credentials is taken."
          format: int64
          type: integer
      type: object
    ActionInformation:
      description: The Information about an Action of a device
      properties:
        ActionType:
          description: The Type of this action.
          enum:
            - OnOffAction
            - AnalogAction
          type: string
        MaxValue:
          description: The maximum value of this action (e.g. for an AnalogAction)
          format: double
          type: number
        MinValue:
          description: The minimum value of this action (e.g. for an AnalogAction)
          format: double
          type: number
        Name:
          description: The Name of this action
          type: string
        ObisCode:
          description: The Obis Code of this action. This is used as ID.
          type: string
      type: object
    ActionToPost:
      description: Container Class for an action to post
      properties:
        Actions:
          description: List with all Actions for this device
          items:
            $ref: '#/components/schemas/ActionToPostItem'
          type: array
        DeviceID:
          description: The ID of the Device
          type: string
      type: object
    ActionToPostItem:
      description: Container class for an action item
      properties:
        ObisCode:
          description: The ObisCode (ID) of the Action
          type: string
        Value:
          description: The Value to Post
          format: double
          type: number
      type: object
    CustomDeviceToPost:
      description: Container Class for the Web API
      properties:
        Id:
          description: The ID of the device
          type: string
        Name:
          description: The Name of the Device
          type: string
        Serial:
          description: The Serial number
          format: int64
          type: integer
        ValueDate:
          description: The Date of the Value (in UTC). If this is null the Server Time is used.
          format: date-time
          type: string
        Values:
          description: The Values of the custom Device
          items:
            $ref: '#/components/schemas/CustomDeviceValues'
          type: array
      type: object
    CustomDeviceValues:
      description: Container Class for the Custom Device Values
      properties:
        Name:
          description: The Name of the Value.
          type: string
        Value:
          description: The Value
          format: double
          type: number
      type: object
    Device:
      description: Container Class for the Web API
      properties:
        ActivePower:
          description: The Actvie Power or current flow rate
          format: double
          type: number
        ActivePowerL1:
          description: The Actvie Power Phase L1
          format: double
          type: number
        ActivePowerL2:
          description: The Actvie Power Phase L2
          format: double
          type: number
        ActivePowerL3:
          description: The Actvie Power Phase L3
          format: double
          type: number
        ActivePowerUnit:
          description: The Unit of the Active Power Value
          type: string
        ActiveTariff:
          description: The Number of the Active Tariff
          format: int32
          type: integer
        CounterReading:
          description: The Meter Counter Reading (Total Energy used)
          format: double
          type: number
        CounterReadingT1:
          description: The Meter Counter Reading Tariff 1
          format: double
          type: number
        CounterReadingT2:
          description: The Meter Counter Reading Tariff 2
          format: double
          type: number
        CounterReadingT3:
          description: The Meter Counter Reading Tariff 3
          format: double
          type: number
        CounterReadingT4:
          description: The Meter Counter Reading Tariff 4
          format: double
          type: number
        CounterReadingUnit:
          description: The Unit of the Counter Reading
          type: string
        Current:
          description: The Current (in A)
          format: double
          type: number
        CurrentL1:
          description: The Current Phase L1 (in A)
          format: double
          type: number
        CurrentL2:
          description: The Current Phase L2 (in A)
          format: double
          type: number
        CurrentL3:
          description: The Current Phase L3 (in A)
          format: double
          type: number
        DeviceEnergyType:
          description: The Energy Type of this device
          enum:
            - MeterTypeUnknown
            - MeterTypeElectricity
            - MeterTypeWater
            - MeterTypeGas
            - MeterTypeHeat
            - MeterTypeHCA
            - MeterTypeAllMeters
            - MeterTypeTemperature
            - MeterTypeMBusGateway
            - MeterTypeRS485Gateway
            - MeterTypeCustomDevice
            - MeterTypeCompressedAir
            - MeterTypeSolarLog
            - MeterTypeVirtualMeter
          type: string
        FamilyType:
          description: The Family Type of the device.
          enum:
            - MeterFamilyTypeUnknown
            - MeterFamilyTypeSmartMeConnectV1
            - MeterFamiliyTypeSmartMeMeter
            - MeterFamiliyTypeSmartMeMeterWithSwitch
            - MeterFamilyTypeMBusGatewayV1
            - MeterFamilyTypeRS485GatewayV1
            - MeterFamilyTypeKamstrupModule
            - MeterFamilyTypeSmartMe3PhaseMeter80A
            - MeterFamilyTypeSmartMe3PhaseMeter32A
            - MeterFamilyTypeSmartMe3PhaseMeterTransformer
            - MeterFamilyTypeLandisGyrModule
            - MeterFamilyTypeRestApiMeter
            - MeterFamilyTypeVirtualBillingMeter
          type: string
        Id:
          description: The ID of the device
          type: string
        Name:
          description: The Name of the Device
          type: string
        PowerFactor:
          description: 'The Power Factor (cos phi). Range: 0 - 1'
          format: double
          type: number
        PowerFactorL1:
          description: 'The Power Factor (cos phi) Phase L1. Range: 0 - 1'
          format: double
          type: number
        PowerFactorL2:
          description: 'The Power Factor (cos phi) Phase L2. Range: 0 - 1'
          format: double
          type: number
        PowerFactorL3:
          description: 'The Power Factor (cos phi) Phase L3. Range: 0 - 1'
          format: double
          type: number
        Serial:
          description: The Serial number
          format: int64
          type: integer
        SwitchOn:
          description: Flag if the Switch is on on this device.
          type: boolean
        SwitchPhaseL1On:
          description: Flag if the Phase L1 is on on this device.
          type: boolean
        SwitchPhaseL2On:
          description: Flag if the Phase L2 is on on this device.
          type: boolean
        SwitchPhaseL3On:
          description: Flag if the Phase L3 is on on this device.
          type: boolean
        Temperature:
          description: The Temperature (in degree celsius)
          format: double
          type: number
        ValueDate:
          description: Time of last successful connection the the smart-me Cloud.
          format: date-time
          type: string
        Voltage:
          description: The Voltage (in V)
          format: double
          type: number
        VoltageL1:
          description: The Voltage Phase L1 (in V)
          format: double
          type: number
        VoltageL2:
          description: The Voltage Phase L2 (in V)
          format: double
          type: number
        VoltageL3:
          description: The Voltage Phase L3 (in V)
          format: double
          type: number
      type: object
    DeviceInPast:
      description: Container Class for the Web API. Conatinas the MeterValues in the Past
      properties:
        CounterReading:
          description: The Meter Counter Reading (Total Energy used)
          format: double
          type: number
        CounterReadingExport:
          description: The Meter Counter Reading Export
          format: double
          type: number
        CounterReadingExportT1:
          description: The Meter Counter Reading Export Tariff 1
          format: double
          type: number
        CounterReadingExportT2:
          description: The Meter Counter Reading Export Tariff 2
          format: double
          type: number
        CounterReadingExportT3:
          description: The Meter Counter Reading Export Tariff 3
          format: double
          type: number
        CounterReadingExportT4:
          description: The Meter Counter Reading Export Tariff 4
          format: double
          type: number
        CounterReadingImport:
          description: The Meter Counter Reading Import
          format: double
          type: number
        CounterReadingImportT1:
          description: The Meter Counter Reading Import Tariff 1
          format: double
          type: number
        CounterReadingImportT2:
          description: The Meter Counter Reading Import Tariff 2
          format: double
          type: number
        CounterReadingImportT3:
          description: The Meter Counter Reading Import Tariff 3
          format: double
          type: number
        CounterReadingImportT4:
          description: The Meter Counter Reading Import Tariff 4
          format: double
          type: number
        CounterReadingT1:
          description: The Meter Counter Reading Tariff 1
          format: double
          type: number
        CounterReadingT2:
          description: The Meter Counter Reading Tariff 2
          format: double
          type: number
        CounterReadingT3:
          description: The Meter Counter Reading Tariff 3
          format: double
          type: number
        CounterReadingT4:
          description: The Meter Counter Reading Tariff 4
          format: double
          type: number
        CounterReadingUnit:
          description: The Unit of the Counter Reading
          type: string
        Date:
          description: The Date of the Values
          format: date-time
          type: string
        Id:
          description: The ID of the device
          type: string
        Serial:
          description: The Serial number
          format: int64
          type: integer
      type: object
    DeviceToPost:
      description: Container Class for the Web API
      properties:
        ActivePower:
          description: The Active Power or current flow rate. In kW or m3/h
          format: double
          type: number
        CounterReading:
          description: The Meter Counter Reading (Total Energy used) in kWh or m3.
          format: double
          type: number
        CounterReadingT1:
          description: The Meter Counter Reading Tariff 1 in kWh or m3.
          format: double
          type: number
        CounterReadingT2:
          description: The Meter Counter Reading Tariff 2 in kWh or m3.
          format: double
          type: number
        DeviceEnergyType:
          description: The Energy Type of this device
          enum:
            - MeterTypeUnknown
            - MeterTypeElectricity
            - MeterTypeWater
            - MeterTypeGas
            - MeterTypeHeat
            - MeterTypeHCA
            - MeterTypeAllMeters
            - MeterTypeTemperature
            - MeterTypeMBusGateway
            - MeterTypeRS485Gateway
            - MeterTypeCustomDevice
            - MeterTypeCompressedAir
            - MeterTypeSolarLog
            - MeterTypeVirtualMeter
          type: string
        Id:
          description: The ID of the device
          type: string
        MeterSubType:
          description: The Sub Type of this Meter.
          enum:
            - MeterSubTypeUnknown
            - MeterSubTypeCold
            - MeterSubTypeHeat
            - MeterSubTypeChargingStation
            - MeterSubTypeElectricity
            - MeterSubTypeWater
            - MeterSubTypeGas
            - MeterSubTypeElectricityHeat
            - MeterSubTypeTemperature
          type: string
        Name:
          description: The Name of the Device
          type: string
        Serial:
          description: The Serial number
          format: int64
          type: integer
        Temperature:
          description: The Temperature (in degree celsius)
          format: double
          type: number
        ValueDate:
          description: The Date of the Value (in UTC). If this is null the Server Time is used.
          format: date-time
          type: string
      type: object
    InputInformation:
      description: Informations about the Inputs of a Meter or Folder
      properties:
        Name:
          description: The Name of the Input
          type: string
        Number:
          description: The Number of this Input. Use this as ID to switch it on or off.
          format: int32
          type: integer
      type: object
    MBusData:
      properties:
        Date:
          description: The Date of the M-BUS Telegram Readout (in UTC). If this is null the Server Time is used.
          format: date-time
          type: string
        Telegram:
          description: "The M-BUS Telegram as Hex string. \r\n            Example: 68 1F 1F 68 08 02 72 78 56 34 12 24 40 01 07 55 00 00 00 03 13 15 31 00 DA 02 3B 13 01 8B 60 04 37 18 02 18 16"
          type: string
      type: object
    MeterFolderInformation:
      description: Container Class for the Web API
      properties:
        FirmwareVersion:
          description: The Firmware Version of a Meter
          format: int32
          type: integer
        HardwareVersion:
          description: The Hardware Version of a Meter.
          format: int32
          type: integer
        InputInformations:
          description: Informations about the available Inputs
          items:
            $ref: '#/components/schemas/InputInformation'
          type: array
        IsFolder:
          description: Flag if it's a Folder or a Meter
          type: boolean
        Name:
          description: Name of the Meter or Folder
          type: string
        OutputInformations:
          description: Informations about the available Outputs
          items:
            $ref: '#/components/schemas/OutputInformation'
          type: array
      type: object
    MeterFolderInformationToPost:
      description: Container for a Meter or Folder Information to Post
      properties:
        Id:
          description: The ID of the device or folder
          type: string
        Name:
          description: Name of the Meter or Folder
          type: string
      type: object
    Object:
      properties: {}
      type: object
    OutputInformation:
      description: Informations about the Outputs of a Meter or Folder
      properties:
        Name:
          description: The Name of the Output
          type: string
        Number:
          description: The Number of this Output. Use this as ID to switch it on or off.
          format: int32
          type: integer
        ObisCode:
          description: The Obis Code for this Output
          type: string
      type: object
    SignUpData:
      description: Container for the Sign UP API
      properties:
        Email:
          description: The Email Address to register
          type: string
        Password:
          description: The Password to register
          type: string
      type: object
    User:
      description: Container Class for the Web API
      properties:
        ChildUsers:
          description: The Users created by this users.
          items:
            $ref: '#/components/schemas/User'
          type: array
        Email:
          description: The EMail Address of the User
          type: string
        Id:
          description: The ID of the User
          format: int64
          type: integer
        IsAdmin:
          description: Flag if this User is an Admin User
          type: boolean
        Username:
          description: The Username of the User
          type: string
      type: object
    VMeterToActivate:
      description: Actives a virtual Meter
      properties:
        SerialNumber:
          description: The Serialnumber of the Meter to activate.
          type: string
      type: object
    VMeterToDeactivate:
      description: Deactivates a virtual Meter
      properties:
        ID:
          description: The ID of the Virtual meter to deactivate
          type: string
      type: object
  securitySchemes:
    basic:
      description: Basic HTTP Authentication
      type: http
      scheme: basic
