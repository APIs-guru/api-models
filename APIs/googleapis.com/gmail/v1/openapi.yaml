openapi: 3.0.0
servers:
  - url: 'https://www.googleapis.com/gmail/v1/users'
info:
  contact:
    name: Google
    url: 'https://google.com'
  description: Access Gmail mailboxes including sending user email.
  license:
    name: Creative Commons Attribution 3.0
    url: 'http://creativecommons.org/licenses/by/3.0/'
  termsOfService: 'https://developers.google.com/terms/'
  title: Gmail
  version: v1
  x-apiClientRegistration:
    url: 'https://console.developers.google.com'
  x-apisguru-categories:
    - email
  x-logo:
    url: 'https://www.gstatic.com/images/icons/material/product/2x/gmail_64dp.png'
  x-origin:
    - converter:
        url: 'https://github.com/lucybot/api-spec-converter'
        version: 2.0.1
      format: google
      url: 'https://www.googleapis.com/discovery/v1/apis/gmail/v1/rest'
      version: v1
  x-preferred: true
  x-providerName: googleapis.com
  x-serviceName: gmail
externalDocs:
  url: 'https://developers.google.com/gmail/api/'
tags:
  - name: users
paths:
  '/{userId}/drafts':
    get:
      description: Lists the drafts in the user's mailbox.
      operationId: gmail.users.drafts.list
      parameters:
        - description: The user's email address. The special value me can be used to indicate the authenticated user.
          in: path
          name: userId
          required: true
          schema:
            type: string
            default: me
        - description: Include drafts from SPAM and TRASH in the results.
          in: query
          name: includeSpamTrash
          schema:
            type: boolean
            default: false
        - description: Maximum number of drafts to return.
          in: query
          name: maxResults
          schema:
            type: integer
            default: 100
        - description: Page token to retrieve a specific page of results in the list.
          in: query
          name: pageToken
          schema:
            type: string
        - description: 'Only return draft messages matching the specified query. Supports the same query format as the Gmail search box. For example, "from:someuser@example.com rfc822msgid: is:unread".'
          in: query
          name: q
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ListDraftsResponse'
      security:
        - Oauth2:
            - 'https://mail.google.com/'
          Oauth2c:
            - 'https://mail.google.com/'
        - Oauth2:
            - 'https://www.googleapis.com/auth/gmail.compose'
          Oauth2c:
            - 'https://www.googleapis.com/auth/gmail.compose'
        - Oauth2:
            - 'https://www.googleapis.com/auth/gmail.modify'
          Oauth2c:
            - 'https://www.googleapis.com/auth/gmail.modify'
        - Oauth2:
            - 'https://www.googleapis.com/auth/gmail.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/gmail.readonly'
      tags:
        - users
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/userIp'
    post:
      description: Creates a new draft with the DRAFT label.
      operationId: gmail.users.drafts.create
      parameters:
        - description: The user's email address. The special value me can be used to indicate the authenticated user.
          in: path
          name: userId
          required: true
          schema:
            type: string
            default: me
      responses:
        '200':
          description: Successful response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Draft'
      security:
        - Oauth2:
            - 'https://mail.google.com/'
          Oauth2c:
            - 'https://mail.google.com/'
        - Oauth2:
            - 'https://www.googleapis.com/auth/gmail.compose'
          Oauth2c:
            - 'https://www.googleapis.com/auth/gmail.compose'
        - Oauth2:
            - 'https://www.googleapis.com/auth/gmail.modify'
          Oauth2c:
            - 'https://www.googleapis.com/auth/gmail.modify'
      tags:
        - users
      requestBody:
        $ref: '#/components/requestBodies/Draft'
  '/{userId}/drafts/send':
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/userIp'
    post:
      description: 'Sends the specified, existing draft to the recipients in the To, Cc, and Bcc headers.'
      operationId: gmail.users.drafts.send
      parameters:
        - description: The user's email address. The special value me can be used to indicate the authenticated user.
          in: path
          name: userId
          required: true
          schema:
            type: string
            default: me
      responses:
        '200':
          description: Successful response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Message'
      security:
        - Oauth2:
            - 'https://mail.google.com/'
          Oauth2c:
            - 'https://mail.google.com/'
        - Oauth2:
            - 'https://www.googleapis.com/auth/gmail.compose'
          Oauth2c:
            - 'https://www.googleapis.com/auth/gmail.compose'
        - Oauth2:
            - 'https://www.googleapis.com/auth/gmail.modify'
          Oauth2c:
            - 'https://www.googleapis.com/auth/gmail.modify'
      tags:
        - users
      requestBody:
        $ref: '#/components/requestBodies/Draft'
  '/{userId}/drafts/{id}':
    delete:
      description: Immediately and permanently deletes the specified draft. Does not simply trash it.
      operationId: gmail.users.drafts.delete
      parameters:
        - description: The user's email address. The special value me can be used to indicate the authenticated user.
          in: path
          name: userId
          required: true
          schema:
            type: string
            default: me
        - description: The ID of the draft to delete.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
      security:
        - Oauth2:
            - 'https://mail.google.com/'
          Oauth2c:
            - 'https://mail.google.com/'
        - Oauth2:
            - 'https://www.googleapis.com/auth/gmail.compose'
          Oauth2c:
            - 'https://www.googleapis.com/auth/gmail.compose'
        - Oauth2:
            - 'https://www.googleapis.com/auth/gmail.modify'
          Oauth2c:
            - 'https://www.googleapis.com/auth/gmail.modify'
      tags:
        - users
    get:
      description: Gets the specified draft.
      operationId: gmail.users.drafts.get
      parameters:
        - description: The user's email address. The special value me can be used to indicate the authenticated user.
          in: path
          name: userId
          required: true
          schema:
            type: string
            default: me
        - description: The ID of the draft to retrieve.
          in: path
          name: id
          required: true
          schema:
            type: string
        - description: The format to return the draft in.
          in: query
          name: format
          schema:
            type: string
            enum:
              - full
              - metadata
              - minimal
              - raw
            default: full
      responses:
        '200':
          description: Successful response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Draft'
      security:
        - Oauth2:
            - 'https://mail.google.com/'
          Oauth2c:
            - 'https://mail.google.com/'
        - Oauth2:
            - 'https://www.googleapis.com/auth/gmail.compose'
          Oauth2c:
            - 'https://www.googleapis.com/auth/gmail.compose'
        - Oauth2:
            - 'https://www.googleapis.com/auth/gmail.modify'
          Oauth2c:
            - 'https://www.googleapis.com/auth/gmail.modify'
        - Oauth2:
            - 'https://www.googleapis.com/auth/gmail.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/gmail.readonly'
      tags:
        - users
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/userIp'
    put:
      description: Replaces a draft's content.
      operationId: gmail.users.drafts.update
      parameters:
        - description: The user's email address. The special value me can be used to indicate the authenticated user.
          in: path
          name: userId
          required: true
          schema:
            type: string
            default: me
        - description: The ID of the draft to update.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Draft'
      security:
        - Oauth2:
            - 'https://mail.google.com/'
          Oauth2c:
            - 'https://mail.google.com/'
        - Oauth2:
            - 'https://www.googleapis.com/auth/gmail.compose'
          Oauth2c:
            - 'https://www.googleapis.com/auth/gmail.compose'
        - Oauth2:
            - 'https://www.googleapis.com/auth/gmail.modify'
          Oauth2c:
            - 'https://www.googleapis.com/auth/gmail.modify'
      tags:
        - users
      requestBody:
        $ref: '#/components/requestBodies/Draft'
  '/{userId}/history':
    get:
      description: Lists the history of all changes to the given mailbox. History results are returned in chronological order (increasing historyId).
      operationId: gmail.users.history.list
      parameters:
        - description: The user's email address. The special value me can be used to indicate the authenticated user.
          in: path
          name: userId
          required: true
          schema:
            type: string
            default: me
        - description: History types to be returned by the function
          in: query
          name: historyTypes
          explode: true
          schema:
            type: array
            items:
              enum:
                - labelAdded
                - labelRemoved
                - messageAdded
                - messageDeleted
              type: string
        - description: Only return messages with a label matching the ID.
          in: query
          name: labelId
          schema:
            type: string
        - description: The maximum number of history records to return.
          in: query
          name: maxResults
          schema:
            type: integer
            default: 100
        - description: Page token to retrieve a specific page of results in the list.
          in: query
          name: pageToken
          schema:
            type: string
        - description: 'Required. Returns history records after the specified startHistoryId. The supplied startHistoryId should be obtained from the historyId of a message, thread, or previous list response. History IDs increase chronologically but are not contiguous with random gaps in between valid IDs. Supplying an invalid or out of date startHistoryId typically returns an HTTP 404 error code. A historyId is typically valid for at least a week, but in some rare circumstances may be valid for only a few hours. If you receive an HTTP 404 error response, your application should perform a full sync. If you receive no nextPageToken in the response, there are no updates to retrieve and you can store the returned historyId for a future request.'
          in: query
          name: startHistoryId
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ListHistoryResponse'
      security:
        - Oauth2:
            - 'https://mail.google.com/'
          Oauth2c:
            - 'https://mail.google.com/'
        - Oauth2:
            - 'https://www.googleapis.com/auth/gmail.metadata'
          Oauth2c:
            - 'https://www.googleapis.com/auth/gmail.metadata'
        - Oauth2:
            - 'https://www.googleapis.com/auth/gmail.modify'
          Oauth2c:
            - 'https://www.googleapis.com/auth/gmail.modify'
        - Oauth2:
            - 'https://www.googleapis.com/auth/gmail.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/gmail.readonly'
      tags:
        - users
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/userIp'
  '/{userId}/labels':
    get:
      description: Lists all labels in the user's mailbox.
      operationId: gmail.users.labels.list
      parameters:
        - description: The user's email address. The special value me can be used to indicate the authenticated user.
          in: path
          name: userId
          required: true
          schema:
            type: string
            default: me
      responses:
        '200':
          description: Successful response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ListLabelsResponse'
      security:
        - Oauth2:
            - 'https://mail.google.com/'
          Oauth2c:
            - 'https://mail.google.com/'
        - Oauth2:
            - 'https://www.googleapis.com/auth/gmail.labels'
          Oauth2c:
            - 'https://www.googleapis.com/auth/gmail.labels'
        - Oauth2:
            - 'https://www.googleapis.com/auth/gmail.metadata'
          Oauth2c:
            - 'https://www.googleapis.com/auth/gmail.metadata'
        - Oauth2:
            - 'https://www.googleapis.com/auth/gmail.modify'
          Oauth2c:
            - 'https://www.googleapis.com/auth/gmail.modify'
        - Oauth2:
            - 'https://www.googleapis.com/auth/gmail.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/gmail.readonly'
      tags:
        - users
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/userIp'
    post:
      description: Creates a new label.
      operationId: gmail.users.labels.create
      parameters:
        - description: The user's email address. The special value me can be used to indicate the authenticated user.
          in: path
          name: userId
          required: true
          schema:
            type: string
            default: me
      responses:
        '200':
          description: Successful response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Label'
      security:
        - Oauth2:
            - 'https://mail.google.com/'
          Oauth2c:
            - 'https://mail.google.com/'
        - Oauth2:
            - 'https://www.googleapis.com/auth/gmail.labels'
          Oauth2c:
            - 'https://www.googleapis.com/auth/gmail.labels'
        - Oauth2:
            - 'https://www.googleapis.com/auth/gmail.modify'
          Oauth2c:
            - 'https://www.googleapis.com/auth/gmail.modify'
      tags:
        - users
      requestBody:
        $ref: '#/components/requestBodies/Label'
  '/{userId}/labels/{id}':
    delete:
      description: Immediately and permanently deletes the specified label and removes it from any messages and threads that it is applied to.
      operationId: gmail.users.labels.delete
      parameters:
        - description: The user's email address. The special value me can be used to indicate the authenticated user.
          in: path
          name: userId
          required: true
          schema:
            type: string
            default: me
        - description: The ID of the label to delete.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
      security:
        - Oauth2:
            - 'https://mail.google.com/'
          Oauth2c:
            - 'https://mail.google.com/'
        - Oauth2:
            - 'https://www.googleapis.com/auth/gmail.labels'
          Oauth2c:
            - 'https://www.googleapis.com/auth/gmail.labels'
        - Oauth2:
            - 'https://www.googleapis.com/auth/gmail.modify'
          Oauth2c:
            - 'https://www.googleapis.com/auth/gmail.modify'
      tags:
        - users
    get:
      description: Gets the specified label.
      operationId: gmail.users.labels.get
      parameters:
        - description: The user's email address. The special value me can be used to indicate the authenticated user.
          in: path
          name: userId
          required: true
          schema:
            type: string
            default: me
        - description: The ID of the label to retrieve.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Label'
      security:
        - Oauth2:
            - 'https://mail.google.com/'
          Oauth2c:
            - 'https://mail.google.com/'
        - Oauth2:
            - 'https://www.googleapis.com/auth/gmail.labels'
          Oauth2c:
            - 'https://www.googleapis.com/auth/gmail.labels'
        - Oauth2:
            - 'https://www.googleapis.com/auth/gmail.metadata'
          Oauth2c:
            - 'https://www.googleapis.com/auth/gmail.metadata'
        - Oauth2:
            - 'https://www.googleapis.com/auth/gmail.modify'
          Oauth2c:
            - 'https://www.googleapis.com/auth/gmail.modify'
        - Oauth2:
            - 'https://www.googleapis.com/auth/gmail.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/gmail.readonly'
      tags:
        - users
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/userIp'
    patch:
      description: Updates the specified label. This method supports patch semantics.
      operationId: gmail.users.labels.patch
      parameters:
        - description: The user's email address. The special value me can be used to indicate the authenticated user.
          in: path
          name: userId
          required: true
          schema:
            type: string
            default: me
        - description: The ID of the label to update.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Label'
      security:
        - Oauth2:
            - 'https://mail.google.com/'
          Oauth2c:
            - 'https://mail.google.com/'
        - Oauth2:
            - 'https://www.googleapis.com/auth/gmail.labels'
          Oauth2c:
            - 'https://www.googleapis.com/auth/gmail.labels'
        - Oauth2:
            - 'https://www.googleapis.com/auth/gmail.modify'
          Oauth2c:
            - 'https://www.googleapis.com/auth/gmail.modify'
      tags:
        - users
      requestBody:
        $ref: '#/components/requestBodies/Label'
    put:
      description: Updates the specified label.
      operationId: gmail.users.labels.update
      parameters:
        - description: The user's email address. The special value me can be used to indicate the authenticated user.
          in: path
          name: userId
          required: true
          schema:
            type: string
            default: me
        - description: The ID of the label to update.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Label'
      security:
        - Oauth2:
            - 'https://mail.google.com/'
          Oauth2c:
            - 'https://mail.google.com/'
        - Oauth2:
            - 'https://www.googleapis.com/auth/gmail.labels'
          Oauth2c:
            - 'https://www.googleapis.com/auth/gmail.labels'
        - Oauth2:
            - 'https://www.googleapis.com/auth/gmail.modify'
          Oauth2c:
            - 'https://www.googleapis.com/auth/gmail.modify'
      tags:
        - users
      requestBody:
        $ref: '#/components/requestBodies/Label'
  '/{userId}/messages':
    get:
      description: Lists the messages in the user's mailbox.
      operationId: gmail.users.messages.list
      parameters:
        - description: Include messages from SPAM and TRASH in the results.
          in: query
          name: includeSpamTrash
          schema:
            type: boolean
            default: false
        - description: Only return messages with labels that match all of the specified label IDs.
          in: query
          name: labelIds
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: Maximum number of messages to return.
          in: query
          name: maxResults
          schema:
            type: integer
            default: 100
        - description: Page token to retrieve a specific page of results in the list.
          in: query
          name: pageToken
          schema:
            type: string
        - description: 'Only return messages matching the specified query. Supports the same query format as the Gmail search box. For example, "from:someuser@example.com rfc822msgid:<somemsgid@example.com> is:unread". Parameter cannot be used when accessing the api using the gmail.metadata scope.'
          in: query
          name: q
          schema:
            type: string
        - description: The user's email address. The special value me can be used to indicate the authenticated user.
          in: path
          name: userId
          required: true
          schema:
            type: string
            default: me
      responses:
        '200':
          description: Successful response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ListMessagesResponse'
      security:
        - Oauth2:
            - 'https://mail.google.com/'
          Oauth2c:
            - 'https://mail.google.com/'
        - Oauth2:
            - 'https://www.googleapis.com/auth/gmail.metadata'
          Oauth2c:
            - 'https://www.googleapis.com/auth/gmail.metadata'
        - Oauth2:
            - 'https://www.googleapis.com/auth/gmail.modify'
          Oauth2c:
            - 'https://www.googleapis.com/auth/gmail.modify'
        - Oauth2:
            - 'https://www.googleapis.com/auth/gmail.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/gmail.readonly'
      tags:
        - users
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/userIp'
    post:
      description: 'Directly inserts a message into only this user''s mailbox similar to IMAP APPEND, bypassing most scanning and classification. Does not send a message.'
      operationId: gmail.users.messages.insert
      parameters:
        - description: The user's email address. The special value me can be used to indicate the authenticated user.
          in: path
          name: userId
          required: true
          schema:
            type: string
            default: me
        - description: Mark the email as permanently deleted (not TRASH) and only visible in Google Vault to a Vault administrator. Only used for G Suite accounts.
          in: query
          name: deleted
          schema:
            type: boolean
            default: false
        - description: Source for Gmail's internal date of the message.
          in: query
          name: internalDateSource
          schema:
            type: string
            enum:
              - dateHeader
              - receivedTime
            default: receivedTime
      responses:
        '200':
          description: Successful response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Message'
      security:
        - Oauth2:
            - 'https://mail.google.com/'
          Oauth2c:
            - 'https://mail.google.com/'
        - Oauth2:
            - 'https://www.googleapis.com/auth/gmail.insert'
          Oauth2c:
            - 'https://www.googleapis.com/auth/gmail.insert'
        - Oauth2:
            - 'https://www.googleapis.com/auth/gmail.modify'
          Oauth2c:
            - 'https://www.googleapis.com/auth/gmail.modify'
      tags:
        - users
      requestBody:
        $ref: '#/components/requestBodies/Message'
  '/{userId}/messages/batchDelete':
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/userIp'
    post:
      description: Deletes many messages by message ID. Provides no guarantees that messages were not already deleted or even existed at all.
      operationId: gmail.users.messages.batchDelete
      parameters:
        - description: The user's email address. The special value me can be used to indicate the authenticated user.
          in: path
          name: userId
          required: true
          schema:
            type: string
            default: me
      responses:
        '200':
          description: Successful response
      security:
        - Oauth2:
            - 'https://mail.google.com/'
          Oauth2c:
            - 'https://mail.google.com/'
      tags:
        - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchDeleteMessagesRequest'
  '/{userId}/messages/batchModify':
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/userIp'
    post:
      description: Modifies the labels on the specified messages.
      operationId: gmail.users.messages.batchModify
      parameters:
        - description: The user's email address. The special value me can be used to indicate the authenticated user.
          in: path
          name: userId
          required: true
          schema:
            type: string
            default: me
      responses:
        '200':
          description: Successful response
      security:
        - Oauth2:
            - 'https://mail.google.com/'
          Oauth2c:
            - 'https://mail.google.com/'
        - Oauth2:
            - 'https://www.googleapis.com/auth/gmail.modify'
          Oauth2c:
            - 'https://www.googleapis.com/auth/gmail.modify'
      tags:
        - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchModifyMessagesRequest'
  '/{userId}/messages/import':
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/userIp'
    post:
      description: 'Imports a message into only this user''s mailbox, with standard email delivery scanning and classification similar to receiving via SMTP. Does not send a message.'
      operationId: gmail.users.messages.import
      parameters:
        - description: The user's email address. The special value me can be used to indicate the authenticated user.
          in: path
          name: userId
          required: true
          schema:
            type: string
            default: me
        - description: Mark the email as permanently deleted (not TRASH) and only visible in Google Vault to a Vault administrator. Only used for G Suite accounts.
          in: query
          name: deleted
          schema:
            type: boolean
            default: false
        - description: Source for Gmail's internal date of the message.
          in: query
          name: internalDateSource
          schema:
            type: string
            enum:
              - dateHeader
              - receivedTime
            default: dateHeader
        - description: Ignore the Gmail spam classifier decision and never mark this email as SPAM in the mailbox.
          in: query
          name: neverMarkSpam
          schema:
            type: boolean
            default: false
        - description: Process calendar invites in the email and add any extracted meetings to the Google Calendar for this user.
          in: query
          name: processForCalendar
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Successful response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Message'
      security:
        - Oauth2:
            - 'https://mail.google.com/'
          Oauth2c:
            - 'https://mail.google.com/'
        - Oauth2:
            - 'https://www.googleapis.com/auth/gmail.insert'
          Oauth2c:
            - 'https://www.googleapis.com/auth/gmail.insert'
        - Oauth2:
            - 'https://www.googleapis.com/auth/gmail.modify'
          Oauth2c:
            - 'https://www.googleapis.com/auth/gmail.modify'
      tags:
        - users
      requestBody:
        $ref: '#/components/requestBodies/Message'
  '/{userId}/messages/send':
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/userIp'
    post:
      description: 'Sends the specified message to the recipients in the To, Cc, and Bcc headers.'
      operationId: gmail.users.messages.send
      parameters:
        - description: The user's email address. The special value me can be used to indicate the authenticated user.
          in: path
          name: userId
          required: true
          schema:
            type: string
            default: me
      responses:
        '200':
          description: Successful response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Message'
      security:
        - Oauth2:
            - 'https://mail.google.com/'
          Oauth2c:
            - 'https://mail.google.com/'
        - Oauth2:
            - 'https://www.googleapis.com/auth/gmail.compose'
          Oauth2c:
            - 'https://www.googleapis.com/auth/gmail.compose'
        - Oauth2:
            - 'https://www.googleapis.com/auth/gmail.modify'
          Oauth2c:
            - 'https://www.googleapis.com/auth/gmail.modify'
        - Oauth2:
            - 'https://www.googleapis.com/auth/gmail.send'
          Oauth2c:
            - 'https://www.googleapis.com/auth/gmail.send'
      tags:
        - users
      requestBody:
        $ref: '#/components/requestBodies/Message'
  '/{userId}/messages/{id}':
    delete:
      description: Immediately and permanently deletes the specified message. This operation cannot be undone. Prefer messages.trash instead.
      operationId: gmail.users.messages.delete
      parameters:
        - description: The user's email address. The special value me can be used to indicate the authenticated user.
          in: path
          name: userId
          required: true
          schema:
            type: string
            default: me
        - description: The ID of the message to delete.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
      security:
        - Oauth2:
            - 'https://mail.google.com/'
          Oauth2c:
            - 'https://mail.google.com/'
      tags:
        - users
    get:
      description: Gets the specified message.
      operationId: gmail.users.messages.get
      parameters:
        - description: The user's email address. The special value me can be used to indicate the authenticated user.
          in: path
          name: userId
          required: true
          schema:
            type: string
            default: me
        - description: The ID of the message to retrieve.
          in: path
          name: id
          required: true
          schema:
            type: string
        - description: The format to return the message in.
          in: query
          name: format
          schema:
            type: string
            enum:
              - full
              - metadata
              - minimal
              - raw
            default: full
        - description: 'When given and format is METADATA, only include headers specified.'
          in: query
          name: metadataHeaders
          explode: true
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: Successful response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Message'
      security:
        - Oauth2:
            - 'https://mail.google.com/'
          Oauth2c:
            - 'https://mail.google.com/'
        - Oauth2:
            - 'https://www.googleapis.com/auth/gmail.metadata'
          Oauth2c:
            - 'https://www.googleapis.com/auth/gmail.metadata'
        - Oauth2:
            - 'https://www.googleapis.com/auth/gmail.modify'
          Oauth2c:
            - 'https://www.googleapis.com/auth/gmail.modify'
        - Oauth2:
            - 'https://www.googleapis.com/auth/gmail.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/gmail.readonly'
      tags:
        - users
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/userIp'
  '/{userId}/messages/{id}/modify':
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/userIp'
    post:
      description: Modifies the labels on the specified message.
      operationId: gmail.users.messages.modify
      parameters:
        - description: The user's email address. The special value me can be used to indicate the authenticated user.
          in: path
          name: userId
          required: true
          schema:
            type: string
            default: me
        - description: The ID of the message to modify.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Message'
      security:
        - Oauth2:
            - 'https://mail.google.com/'
          Oauth2c:
            - 'https://mail.google.com/'
        - Oauth2:
            - 'https://www.googleapis.com/auth/gmail.modify'
          Oauth2c:
            - 'https://www.googleapis.com/auth/gmail.modify'
      tags:
        - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifyMessageRequest'
  '/{userId}/messages/{id}/trash':
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/userIp'
    post:
      description: Moves the specified message to the trash.
      operationId: gmail.users.messages.trash
      parameters:
        - description: The user's email address. The special value me can be used to indicate the authenticated user.
          in: path
          name: userId
          required: true
          schema:
            type: string
            default: me
        - description: The ID of the message to Trash.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Message'
      security:
        - Oauth2:
            - 'https://mail.google.com/'
          Oauth2c:
            - 'https://mail.google.com/'
        - Oauth2:
            - 'https://www.googleapis.com/auth/gmail.modify'
          Oauth2c:
            - 'https://www.googleapis.com/auth/gmail.modify'
      tags:
        - users
  '/{userId}/messages/{id}/untrash':
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/userIp'
    post:
      description: Removes the specified message from the trash.
      operationId: gmail.users.messages.untrash
      parameters:
        - description: The user's email address. The special value me can be used to indicate the authenticated user.
          in: path
          name: userId
          required: true
          schema:
            type: string
            default: me
        - description: The ID of the message to remove from Trash.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Message'
      security:
        - Oauth2:
            - 'https://mail.google.com/'
          Oauth2c:
            - 'https://mail.google.com/'
        - Oauth2:
            - 'https://www.googleapis.com/auth/gmail.modify'
          Oauth2c:
            - 'https://www.googleapis.com/auth/gmail.modify'
      tags:
        - users
  '/{userId}/messages/{messageId}/attachments/{id}':
    get:
      description: Gets the specified message attachment.
      operationId: gmail.users.messages.attachments.get
      parameters:
        - description: The user's email address. The special value me can be used to indicate the authenticated user.
          in: path
          name: userId
          required: true
          schema:
            type: string
            default: me
        - description: The ID of the message containing the attachment.
          in: path
          name: messageId
          required: true
          schema:
            type: string
        - description: The ID of the attachment.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MessagePartBody'
      security:
        - Oauth2:
            - 'https://mail.google.com/'
          Oauth2c:
            - 'https://mail.google.com/'
        - Oauth2:
            - 'https://www.googleapis.com/auth/gmail.modify'
          Oauth2c:
            - 'https://www.googleapis.com/auth/gmail.modify'
        - Oauth2:
            - 'https://www.googleapis.com/auth/gmail.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/gmail.readonly'
      tags:
        - users
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/userIp'
  '/{userId}/profile':
    get:
      description: Gets the current user's Gmail profile.
      operationId: gmail.users.getProfile
      parameters:
        - description: The user's email address. The special value me can be used to indicate the authenticated user.
          in: path
          name: userId
          required: true
          schema:
            type: string
            default: me
      responses:
        '200':
          description: Successful response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Profile'
      security:
        - Oauth2:
            - 'https://mail.google.com/'
          Oauth2c:
            - 'https://mail.google.com/'
        - Oauth2:
            - 'https://www.googleapis.com/auth/gmail.compose'
          Oauth2c:
            - 'https://www.googleapis.com/auth/gmail.compose'
        - Oauth2:
            - 'https://www.googleapis.com/auth/gmail.metadata'
          Oauth2c:
            - 'https://www.googleapis.com/auth/gmail.metadata'
        - Oauth2:
            - 'https://www.googleapis.com/auth/gmail.modify'
          Oauth2c:
            - 'https://www.googleapis.com/auth/gmail.modify'
        - Oauth2:
            - 'https://www.googleapis.com/auth/gmail.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/gmail.readonly'
      tags:
        - users
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/userIp'
  '/{userId}/settings/autoForwarding':
    get:
      description: Gets the auto-forwarding setting for the specified account.
      operationId: gmail.users.settings.getAutoForwarding
      parameters:
        - description: User's email address. The special value "me" can be used to indicate the authenticated user.
          in: path
          name: userId
          required: true
          schema:
            type: string
            default: me
      responses:
        '200':
          description: Successful response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AutoForwarding'
      security:
        - Oauth2:
            - 'https://mail.google.com/'
          Oauth2c:
            - 'https://mail.google.com/'
        - Oauth2:
            - 'https://www.googleapis.com/auth/gmail.modify'
          Oauth2c:
            - 'https://www.googleapis.com/auth/gmail.modify'
        - Oauth2:
            - 'https://www.googleapis.com/auth/gmail.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/gmail.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/gmail.settings.basic'
          Oauth2c:
            - 'https://www.googleapis.com/auth/gmail.settings.basic'
      tags:
        - users
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/userIp'
    put:
      description: |-
        Updates the auto-forwarding setting for the specified account. A verified forwarding address must be specified when auto-forwarding is enabled.

        This method is only available to service account clients that have been delegated domain-wide authority.
      operationId: gmail.users.settings.updateAutoForwarding
      parameters:
        - description: User's email address. The special value "me" can be used to indicate the authenticated user.
          in: path
          name: userId
          required: true
          schema:
            type: string
            default: me
      responses:
        '200':
          description: Successful response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AutoForwarding'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/gmail.settings.sharing'
          Oauth2c:
            - 'https://www.googleapis.com/auth/gmail.settings.sharing'
      tags:
        - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AutoForwarding'
  '/{userId}/settings/filters':
    get:
      description: Lists the message filters of a Gmail user.
      operationId: gmail.users.settings.filters.list
      parameters:
        - description: User's email address. The special value "me" can be used to indicate the authenticated user.
          in: path
          name: userId
          required: true
          schema:
            type: string
            default: me
      responses:
        '200':
          description: Successful response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ListFiltersResponse'
      security:
        - Oauth2:
            - 'https://mail.google.com/'
          Oauth2c:
            - 'https://mail.google.com/'
        - Oauth2:
            - 'https://www.googleapis.com/auth/gmail.modify'
          Oauth2c:
            - 'https://www.googleapis.com/auth/gmail.modify'
        - Oauth2:
            - 'https://www.googleapis.com/auth/gmail.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/gmail.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/gmail.settings.basic'
          Oauth2c:
            - 'https://www.googleapis.com/auth/gmail.settings.basic'
      tags:
        - users
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/userIp'
    post:
      description: Creates a filter.
      operationId: gmail.users.settings.filters.create
      parameters:
        - description: User's email address. The special value "me" can be used to indicate the authenticated user.
          in: path
          name: userId
          required: true
          schema:
            type: string
            default: me
      responses:
        '200':
          description: Successful response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Filter'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/gmail.settings.basic'
          Oauth2c:
            - 'https://www.googleapis.com/auth/gmail.settings.basic'
      tags:
        - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Filter'
  '/{userId}/settings/filters/{id}':
    delete:
      description: Deletes a filter.
      operationId: gmail.users.settings.filters.delete
      parameters:
        - description: User's email address. The special value "me" can be used to indicate the authenticated user.
          in: path
          name: userId
          required: true
          schema:
            type: string
            default: me
        - description: The ID of the filter to be deleted.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/gmail.settings.basic'
          Oauth2c:
            - 'https://www.googleapis.com/auth/gmail.settings.basic'
      tags:
        - users
    get:
      description: Gets a filter.
      operationId: gmail.users.settings.filters.get
      parameters:
        - description: User's email address. The special value "me" can be used to indicate the authenticated user.
          in: path
          name: userId
          required: true
          schema:
            type: string
            default: me
        - description: The ID of the filter to be fetched.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Filter'
      security:
        - Oauth2:
            - 'https://mail.google.com/'
          Oauth2c:
            - 'https://mail.google.com/'
        - Oauth2:
            - 'https://www.googleapis.com/auth/gmail.modify'
          Oauth2c:
            - 'https://www.googleapis.com/auth/gmail.modify'
        - Oauth2:
            - 'https://www.googleapis.com/auth/gmail.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/gmail.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/gmail.settings.basic'
          Oauth2c:
            - 'https://www.googleapis.com/auth/gmail.settings.basic'
      tags:
        - users
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/userIp'
  '/{userId}/settings/forwardingAddresses':
    get:
      description: Lists the forwarding addresses for the specified account.
      operationId: gmail.users.settings.forwardingAddresses.list
      parameters:
        - description: User's email address. The special value "me" can be used to indicate the authenticated user.
          in: path
          name: userId
          required: true
          schema:
            type: string
            default: me
      responses:
        '200':
          description: Successful response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ListForwardingAddressesResponse'
      security:
        - Oauth2:
            - 'https://mail.google.com/'
          Oauth2c:
            - 'https://mail.google.com/'
        - Oauth2:
            - 'https://www.googleapis.com/auth/gmail.modify'
          Oauth2c:
            - 'https://www.googleapis.com/auth/gmail.modify'
        - Oauth2:
            - 'https://www.googleapis.com/auth/gmail.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/gmail.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/gmail.settings.basic'
          Oauth2c:
            - 'https://www.googleapis.com/auth/gmail.settings.basic'
      tags:
        - users
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/userIp'
    post:
      description: |-
        Creates a forwarding address. If ownership verification is required, a message will be sent to the recipient and the resource's verification status will be set to pending; otherwise, the resource will be created with verification status set to accepted.

        This method is only available to service account clients that have been delegated domain-wide authority.
      operationId: gmail.users.settings.forwardingAddresses.create
      parameters:
        - description: User's email address. The special value "me" can be used to indicate the authenticated user.
          in: path
          name: userId
          required: true
          schema:
            type: string
            default: me
      responses:
        '200':
          description: Successful response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ForwardingAddress'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/gmail.settings.sharing'
          Oauth2c:
            - 'https://www.googleapis.com/auth/gmail.settings.sharing'
      tags:
        - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ForwardingAddress'
  '/{userId}/settings/forwardingAddresses/{forwardingEmail}':
    delete:
      description: |-
        Deletes the specified forwarding address and revokes any verification that may have been required.

        This method is only available to service account clients that have been delegated domain-wide authority.
      operationId: gmail.users.settings.forwardingAddresses.delete
      parameters:
        - description: User's email address. The special value "me" can be used to indicate the authenticated user.
          in: path
          name: userId
          required: true
          schema:
            type: string
            default: me
        - description: The forwarding address to be deleted.
          in: path
          name: forwardingEmail
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/gmail.settings.sharing'
          Oauth2c:
            - 'https://www.googleapis.com/auth/gmail.settings.sharing'
      tags:
        - users
    get:
      description: Gets the specified forwarding address.
      operationId: gmail.users.settings.forwardingAddresses.get
      parameters:
        - description: User's email address. The special value "me" can be used to indicate the authenticated user.
          in: path
          name: userId
          required: true
          schema:
            type: string
            default: me
        - description: The forwarding address to be retrieved.
          in: path
          name: forwardingEmail
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ForwardingAddress'
      security:
        - Oauth2:
            - 'https://mail.google.com/'
          Oauth2c:
            - 'https://mail.google.com/'
        - Oauth2:
            - 'https://www.googleapis.com/auth/gmail.modify'
          Oauth2c:
            - 'https://www.googleapis.com/auth/gmail.modify'
        - Oauth2:
            - 'https://www.googleapis.com/auth/gmail.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/gmail.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/gmail.settings.basic'
          Oauth2c:
            - 'https://www.googleapis.com/auth/gmail.settings.basic'
      tags:
        - users
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/userIp'
  '/{userId}/settings/imap':
    get:
      description: Gets IMAP settings.
      operationId: gmail.users.settings.getImap
      parameters:
        - description: User's email address. The special value "me" can be used to indicate the authenticated user.
          in: path
          name: userId
          required: true
          schema:
            type: string
            default: me
      responses:
        '200':
          description: Successful response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ImapSettings'
      security:
        - Oauth2:
            - 'https://mail.google.com/'
          Oauth2c:
            - 'https://mail.google.com/'
        - Oauth2:
            - 'https://www.googleapis.com/auth/gmail.modify'
          Oauth2c:
            - 'https://www.googleapis.com/auth/gmail.modify'
        - Oauth2:
            - 'https://www.googleapis.com/auth/gmail.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/gmail.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/gmail.settings.basic'
          Oauth2c:
            - 'https://www.googleapis.com/auth/gmail.settings.basic'
      tags:
        - users
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/userIp'
    put:
      description: Updates IMAP settings.
      operationId: gmail.users.settings.updateImap
      parameters:
        - description: User's email address. The special value "me" can be used to indicate the authenticated user.
          in: path
          name: userId
          required: true
          schema:
            type: string
            default: me
      responses:
        '200':
          description: Successful response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ImapSettings'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/gmail.settings.basic'
          Oauth2c:
            - 'https://www.googleapis.com/auth/gmail.settings.basic'
      tags:
        - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImapSettings'
  '/{userId}/settings/pop':
    get:
      description: Gets POP settings.
      operationId: gmail.users.settings.getPop
      parameters:
        - description: User's email address. The special value "me" can be used to indicate the authenticated user.
          in: path
          name: userId
          required: true
          schema:
            type: string
            default: me
      responses:
        '200':
          description: Successful response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PopSettings'
      security:
        - Oauth2:
            - 'https://mail.google.com/'
          Oauth2c:
            - 'https://mail.google.com/'
        - Oauth2:
            - 'https://www.googleapis.com/auth/gmail.modify'
          Oauth2c:
            - 'https://www.googleapis.com/auth/gmail.modify'
        - Oauth2:
            - 'https://www.googleapis.com/auth/gmail.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/gmail.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/gmail.settings.basic'
          Oauth2c:
            - 'https://www.googleapis.com/auth/gmail.settings.basic'
      tags:
        - users
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/userIp'
    put:
      description: Updates POP settings.
      operationId: gmail.users.settings.updatePop
      parameters:
        - description: User's email address. The special value "me" can be used to indicate the authenticated user.
          in: path
          name: userId
          required: true
          schema:
            type: string
            default: me
      responses:
        '200':
          description: Successful response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PopSettings'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/gmail.settings.basic'
          Oauth2c:
            - 'https://www.googleapis.com/auth/gmail.settings.basic'
      tags:
        - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PopSettings'
  '/{userId}/settings/sendAs':
    get:
      description: Lists the send-as aliases for the specified account. The result includes the primary send-as address associated with the account as well as any custom "from" aliases.
      operationId: gmail.users.settings.sendAs.list
      parameters:
        - description: User's email address. The special value "me" can be used to indicate the authenticated user.
          in: path
          name: userId
          required: true
          schema:
            type: string
            default: me
      responses:
        '200':
          description: Successful response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ListSendAsResponse'
      security:
        - Oauth2:
            - 'https://mail.google.com/'
          Oauth2c:
            - 'https://mail.google.com/'
        - Oauth2:
            - 'https://www.googleapis.com/auth/gmail.modify'
          Oauth2c:
            - 'https://www.googleapis.com/auth/gmail.modify'
        - Oauth2:
            - 'https://www.googleapis.com/auth/gmail.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/gmail.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/gmail.settings.basic'
          Oauth2c:
            - 'https://www.googleapis.com/auth/gmail.settings.basic'
      tags:
        - users
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/userIp'
    post:
      description: |-
        Creates a custom "from" send-as alias. If an SMTP MSA is specified, Gmail will attempt to connect to the SMTP service to validate the configuration before creating the alias. If ownership verification is required for the alias, a message will be sent to the email address and the resource's verification status will be set to pending; otherwise, the resource will be created with verification status set to accepted. If a signature is provided, Gmail will sanitize the HTML before saving it with the alias.

        This method is only available to service account clients that have been delegated domain-wide authority.
      operationId: gmail.users.settings.sendAs.create
      parameters:
        - description: User's email address. The special value "me" can be used to indicate the authenticated user.
          in: path
          name: userId
          required: true
          schema:
            type: string
            default: me
      responses:
        '200':
          description: Successful response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SendAs'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/gmail.settings.sharing'
          Oauth2c:
            - 'https://www.googleapis.com/auth/gmail.settings.sharing'
      tags:
        - users
      requestBody:
        $ref: '#/components/requestBodies/SendAs'
  '/{userId}/settings/sendAs/{sendAsEmail}':
    delete:
      description: |-
        Deletes the specified send-as alias. Revokes any verification that may have been required for using it.

        This method is only available to service account clients that have been delegated domain-wide authority.
      operationId: gmail.users.settings.sendAs.delete
      parameters:
        - description: User's email address. The special value "me" can be used to indicate the authenticated user.
          in: path
          name: userId
          required: true
          schema:
            type: string
            default: me
        - description: The send-as alias to be deleted.
          in: path
          name: sendAsEmail
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/gmail.settings.sharing'
          Oauth2c:
            - 'https://www.googleapis.com/auth/gmail.settings.sharing'
      tags:
        - users
    get:
      description: Gets the specified send-as alias. Fails with an HTTP 404 error if the specified address is not a member of the collection.
      operationId: gmail.users.settings.sendAs.get
      parameters:
        - description: User's email address. The special value "me" can be used to indicate the authenticated user.
          in: path
          name: userId
          required: true
          schema:
            type: string
            default: me
        - description: The send-as alias to be retrieved.
          in: path
          name: sendAsEmail
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SendAs'
      security:
        - Oauth2:
            - 'https://mail.google.com/'
          Oauth2c:
            - 'https://mail.google.com/'
        - Oauth2:
            - 'https://www.googleapis.com/auth/gmail.modify'
          Oauth2c:
            - 'https://www.googleapis.com/auth/gmail.modify'
        - Oauth2:
            - 'https://www.googleapis.com/auth/gmail.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/gmail.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/gmail.settings.basic'
          Oauth2c:
            - 'https://www.googleapis.com/auth/gmail.settings.basic'
      tags:
        - users
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/userIp'
    patch:
      description: |-
        Updates a send-as alias. If a signature is provided, Gmail will sanitize the HTML before saving it with the alias.

        Addresses other than the primary address for the account can only be updated by service account clients that have been delegated domain-wide authority. This method supports patch semantics.
      operationId: gmail.users.settings.sendAs.patch
      parameters:
        - description: User's email address. The special value "me" can be used to indicate the authenticated user.
          in: path
          name: userId
          required: true
          schema:
            type: string
            default: me
        - description: The send-as alias to be updated.
          in: path
          name: sendAsEmail
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SendAs'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/gmail.settings.basic'
          Oauth2c:
            - 'https://www.googleapis.com/auth/gmail.settings.basic'
        - Oauth2:
            - 'https://www.googleapis.com/auth/gmail.settings.sharing'
          Oauth2c:
            - 'https://www.googleapis.com/auth/gmail.settings.sharing'
      tags:
        - users
      requestBody:
        $ref: '#/components/requestBodies/SendAs'
    put:
      description: |-
        Updates a send-as alias. If a signature is provided, Gmail will sanitize the HTML before saving it with the alias.

        Addresses other than the primary address for the account can only be updated by service account clients that have been delegated domain-wide authority.
      operationId: gmail.users.settings.sendAs.update
      parameters:
        - description: User's email address. The special value "me" can be used to indicate the authenticated user.
          in: path
          name: userId
          required: true
          schema:
            type: string
            default: me
        - description: The send-as alias to be updated.
          in: path
          name: sendAsEmail
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SendAs'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/gmail.settings.basic'
          Oauth2c:
            - 'https://www.googleapis.com/auth/gmail.settings.basic'
        - Oauth2:
            - 'https://www.googleapis.com/auth/gmail.settings.sharing'
          Oauth2c:
            - 'https://www.googleapis.com/auth/gmail.settings.sharing'
      tags:
        - users
      requestBody:
        $ref: '#/components/requestBodies/SendAs'
  '/{userId}/settings/sendAs/{sendAsEmail}/smimeInfo':
    get:
      description: Lists S/MIME configs for the specified send-as alias.
      operationId: gmail.users.settings.sendAs.smimeInfo.list
      parameters:
        - description: The user's email address. The special value me can be used to indicate the authenticated user.
          in: path
          name: userId
          required: true
          schema:
            type: string
            default: me
        - description: 'The email address that appears in the "From:" header for mail sent using this alias.'
          in: path
          name: sendAsEmail
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ListSmimeInfoResponse'
      security:
        - Oauth2:
            - 'https://mail.google.com/'
          Oauth2c:
            - 'https://mail.google.com/'
        - Oauth2:
            - 'https://www.googleapis.com/auth/gmail.modify'
          Oauth2c:
            - 'https://www.googleapis.com/auth/gmail.modify'
        - Oauth2:
            - 'https://www.googleapis.com/auth/gmail.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/gmail.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/gmail.settings.basic'
          Oauth2c:
            - 'https://www.googleapis.com/auth/gmail.settings.basic'
        - Oauth2:
            - 'https://www.googleapis.com/auth/gmail.settings.sharing'
          Oauth2c:
            - 'https://www.googleapis.com/auth/gmail.settings.sharing'
      tags:
        - users
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/userIp'
    post:
      description: Insert (upload) the given S/MIME config for the specified send-as alias. Note that pkcs12 format is required for the key.
      operationId: gmail.users.settings.sendAs.smimeInfo.insert
      parameters:
        - description: The user's email address. The special value me can be used to indicate the authenticated user.
          in: path
          name: userId
          required: true
          schema:
            type: string
            default: me
        - description: 'The email address that appears in the "From:" header for mail sent using this alias.'
          in: path
          name: sendAsEmail
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SmimeInfo'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/gmail.settings.basic'
          Oauth2c:
            - 'https://www.googleapis.com/auth/gmail.settings.basic'
        - Oauth2:
            - 'https://www.googleapis.com/auth/gmail.settings.sharing'
          Oauth2c:
            - 'https://www.googleapis.com/auth/gmail.settings.sharing'
      tags:
        - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SmimeInfo'
  '/{userId}/settings/sendAs/{sendAsEmail}/smimeInfo/{id}':
    delete:
      description: Deletes the specified S/MIME config for the specified send-as alias.
      operationId: gmail.users.settings.sendAs.smimeInfo.delete
      parameters:
        - description: The user's email address. The special value me can be used to indicate the authenticated user.
          in: path
          name: userId
          required: true
          schema:
            type: string
            default: me
        - description: 'The email address that appears in the "From:" header for mail sent using this alias.'
          in: path
          name: sendAsEmail
          required: true
          schema:
            type: string
        - description: The immutable ID for the SmimeInfo.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/gmail.settings.basic'
          Oauth2c:
            - 'https://www.googleapis.com/auth/gmail.settings.basic'
        - Oauth2:
            - 'https://www.googleapis.com/auth/gmail.settings.sharing'
          Oauth2c:
            - 'https://www.googleapis.com/auth/gmail.settings.sharing'
      tags:
        - users
    get:
      description: Gets the specified S/MIME config for the specified send-as alias.
      operationId: gmail.users.settings.sendAs.smimeInfo.get
      parameters:
        - description: The user's email address. The special value me can be used to indicate the authenticated user.
          in: path
          name: userId
          required: true
          schema:
            type: string
            default: me
        - description: 'The email address that appears in the "From:" header for mail sent using this alias.'
          in: path
          name: sendAsEmail
          required: true
          schema:
            type: string
        - description: The immutable ID for the SmimeInfo.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SmimeInfo'
      security:
        - Oauth2:
            - 'https://mail.google.com/'
          Oauth2c:
            - 'https://mail.google.com/'
        - Oauth2:
            - 'https://www.googleapis.com/auth/gmail.modify'
          Oauth2c:
            - 'https://www.googleapis.com/auth/gmail.modify'
        - Oauth2:
            - 'https://www.googleapis.com/auth/gmail.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/gmail.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/gmail.settings.basic'
          Oauth2c:
            - 'https://www.googleapis.com/auth/gmail.settings.basic'
        - Oauth2:
            - 'https://www.googleapis.com/auth/gmail.settings.sharing'
          Oauth2c:
            - 'https://www.googleapis.com/auth/gmail.settings.sharing'
      tags:
        - users
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/userIp'
  '/{userId}/settings/sendAs/{sendAsEmail}/smimeInfo/{id}/setDefault':
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/userIp'
    post:
      description: Sets the default S/MIME config for the specified send-as alias.
      operationId: gmail.users.settings.sendAs.smimeInfo.setDefault
      parameters:
        - description: The user's email address. The special value me can be used to indicate the authenticated user.
          in: path
          name: userId
          required: true
          schema:
            type: string
            default: me
        - description: 'The email address that appears in the "From:" header for mail sent using this alias.'
          in: path
          name: sendAsEmail
          required: true
          schema:
            type: string
        - description: The immutable ID for the SmimeInfo.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/gmail.settings.basic'
          Oauth2c:
            - 'https://www.googleapis.com/auth/gmail.settings.basic'
        - Oauth2:
            - 'https://www.googleapis.com/auth/gmail.settings.sharing'
          Oauth2c:
            - 'https://www.googleapis.com/auth/gmail.settings.sharing'
      tags:
        - users
  '/{userId}/settings/sendAs/{sendAsEmail}/verify':
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/userIp'
    post:
      description: |-
        Sends a verification email to the specified send-as alias address. The verification status must be pending.

        This method is only available to service account clients that have been delegated domain-wide authority.
      operationId: gmail.users.settings.sendAs.verify
      parameters:
        - description: User's email address. The special value "me" can be used to indicate the authenticated user.
          in: path
          name: userId
          required: true
          schema:
            type: string
            default: me
        - description: The send-as alias to be verified.
          in: path
          name: sendAsEmail
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/gmail.settings.sharing'
          Oauth2c:
            - 'https://www.googleapis.com/auth/gmail.settings.sharing'
      tags:
        - users
  '/{userId}/settings/vacation':
    get:
      description: Gets vacation responder settings.
      operationId: gmail.users.settings.getVacation
      parameters:
        - description: User's email address. The special value "me" can be used to indicate the authenticated user.
          in: path
          name: userId
          required: true
          schema:
            type: string
            default: me
      responses:
        '200':
          description: Successful response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/VacationSettings'
      security:
        - Oauth2:
            - 'https://mail.google.com/'
          Oauth2c:
            - 'https://mail.google.com/'
        - Oauth2:
            - 'https://www.googleapis.com/auth/gmail.modify'
          Oauth2c:
            - 'https://www.googleapis.com/auth/gmail.modify'
        - Oauth2:
            - 'https://www.googleapis.com/auth/gmail.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/gmail.readonly'
        - Oauth2:
            - 'https://www.googleapis.com/auth/gmail.settings.basic'
          Oauth2c:
            - 'https://www.googleapis.com/auth/gmail.settings.basic'
      tags:
        - users
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/userIp'
    put:
      description: Updates vacation responder settings.
      operationId: gmail.users.settings.updateVacation
      parameters:
        - description: User's email address. The special value "me" can be used to indicate the authenticated user.
          in: path
          name: userId
          required: true
          schema:
            type: string
            default: me
      responses:
        '200':
          description: Successful response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/VacationSettings'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/gmail.settings.basic'
          Oauth2c:
            - 'https://www.googleapis.com/auth/gmail.settings.basic'
      tags:
        - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VacationSettings'
  '/{userId}/stop':
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/userIp'
    post:
      description: Stop receiving push notifications for the given user mailbox.
      operationId: gmail.users.stop
      parameters:
        - description: The user's email address. The special value me can be used to indicate the authenticated user.
          in: path
          name: userId
          required: true
          schema:
            type: string
            default: me
      responses:
        '200':
          description: Successful response
      security:
        - Oauth2:
            - 'https://mail.google.com/'
          Oauth2c:
            - 'https://mail.google.com/'
        - Oauth2:
            - 'https://www.googleapis.com/auth/gmail.metadata'
          Oauth2c:
            - 'https://www.googleapis.com/auth/gmail.metadata'
        - Oauth2:
            - 'https://www.googleapis.com/auth/gmail.modify'
          Oauth2c:
            - 'https://www.googleapis.com/auth/gmail.modify'
        - Oauth2:
            - 'https://www.googleapis.com/auth/gmail.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/gmail.readonly'
      tags:
        - users
  '/{userId}/threads':
    get:
      description: Lists the threads in the user's mailbox.
      operationId: gmail.users.threads.list
      parameters:
        - description: The user's email address. The special value me can be used to indicate the authenticated user.
          in: path
          name: userId
          required: true
          schema:
            type: string
            default: me
        - description: Include threads from SPAM and TRASH in the results.
          in: query
          name: includeSpamTrash
          schema:
            type: boolean
            default: false
        - description: Only return threads with labels that match all of the specified label IDs.
          in: query
          name: labelIds
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: Maximum number of threads to return.
          in: query
          name: maxResults
          schema:
            type: integer
            default: 100
        - description: Page token to retrieve a specific page of results in the list.
          in: query
          name: pageToken
          schema:
            type: string
        - description: 'Only return threads matching the specified query. Supports the same query format as the Gmail search box. For example, "from:someuser@example.com rfc822msgid: is:unread". Parameter cannot be used when accessing the api using the gmail.metadata scope.'
          in: query
          name: q
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ListThreadsResponse'
      security:
        - Oauth2:
            - 'https://mail.google.com/'
          Oauth2c:
            - 'https://mail.google.com/'
        - Oauth2:
            - 'https://www.googleapis.com/auth/gmail.metadata'
          Oauth2c:
            - 'https://www.googleapis.com/auth/gmail.metadata'
        - Oauth2:
            - 'https://www.googleapis.com/auth/gmail.modify'
          Oauth2c:
            - 'https://www.googleapis.com/auth/gmail.modify'
        - Oauth2:
            - 'https://www.googleapis.com/auth/gmail.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/gmail.readonly'
      tags:
        - users
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/userIp'
  '/{userId}/threads/{id}':
    delete:
      description: Immediately and permanently deletes the specified thread. This operation cannot be undone. Prefer threads.trash instead.
      operationId: gmail.users.threads.delete
      parameters:
        - description: The user's email address. The special value me can be used to indicate the authenticated user.
          in: path
          name: userId
          required: true
          schema:
            type: string
            default: me
        - description: ID of the Thread to delete.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
      security:
        - Oauth2:
            - 'https://mail.google.com/'
          Oauth2c:
            - 'https://mail.google.com/'
      tags:
        - users
    get:
      description: Gets the specified thread.
      operationId: gmail.users.threads.get
      parameters:
        - description: The user's email address. The special value me can be used to indicate the authenticated user.
          in: path
          name: userId
          required: true
          schema:
            type: string
            default: me
        - description: The ID of the thread to retrieve.
          in: path
          name: id
          required: true
          schema:
            type: string
        - description: The format to return the messages in.
          in: query
          name: format
          schema:
            type: string
            enum:
              - full
              - metadata
              - minimal
            default: full
        - description: 'When given and format is METADATA, only include headers specified.'
          in: query
          name: metadataHeaders
          explode: true
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: Successful response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Thread'
      security:
        - Oauth2:
            - 'https://mail.google.com/'
          Oauth2c:
            - 'https://mail.google.com/'
        - Oauth2:
            - 'https://www.googleapis.com/auth/gmail.metadata'
          Oauth2c:
            - 'https://www.googleapis.com/auth/gmail.metadata'
        - Oauth2:
            - 'https://www.googleapis.com/auth/gmail.modify'
          Oauth2c:
            - 'https://www.googleapis.com/auth/gmail.modify'
        - Oauth2:
            - 'https://www.googleapis.com/auth/gmail.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/gmail.readonly'
      tags:
        - users
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/userIp'
  '/{userId}/threads/{id}/modify':
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/userIp'
    post:
      description: Modifies the labels applied to the thread. This applies to all messages in the thread.
      operationId: gmail.users.threads.modify
      parameters:
        - description: The user's email address. The special value me can be used to indicate the authenticated user.
          in: path
          name: userId
          required: true
          schema:
            type: string
            default: me
        - description: The ID of the thread to modify.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Thread'
      security:
        - Oauth2:
            - 'https://mail.google.com/'
          Oauth2c:
            - 'https://mail.google.com/'
        - Oauth2:
            - 'https://www.googleapis.com/auth/gmail.modify'
          Oauth2c:
            - 'https://www.googleapis.com/auth/gmail.modify'
      tags:
        - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifyThreadRequest'
  '/{userId}/threads/{id}/trash':
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/userIp'
    post:
      description: Moves the specified thread to the trash.
      operationId: gmail.users.threads.trash
      parameters:
        - description: The user's email address. The special value me can be used to indicate the authenticated user.
          in: path
          name: userId
          required: true
          schema:
            type: string
            default: me
        - description: The ID of the thread to Trash.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Thread'
      security:
        - Oauth2:
            - 'https://mail.google.com/'
          Oauth2c:
            - 'https://mail.google.com/'
        - Oauth2:
            - 'https://www.googleapis.com/auth/gmail.modify'
          Oauth2c:
            - 'https://www.googleapis.com/auth/gmail.modify'
      tags:
        - users
  '/{userId}/threads/{id}/untrash':
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/userIp'
    post:
      description: Removes the specified thread from the trash.
      operationId: gmail.users.threads.untrash
      parameters:
        - description: The user's email address. The special value me can be used to indicate the authenticated user.
          in: path
          name: userId
          required: true
          schema:
            type: string
            default: me
        - description: The ID of the thread to remove from Trash.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Thread'
      security:
        - Oauth2:
            - 'https://mail.google.com/'
          Oauth2c:
            - 'https://mail.google.com/'
        - Oauth2:
            - 'https://www.googleapis.com/auth/gmail.modify'
          Oauth2c:
            - 'https://www.googleapis.com/auth/gmail.modify'
      tags:
        - users
  '/{userId}/watch':
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/userIp'
    post:
      description: Set up or update a push notification watch on the given user mailbox.
      operationId: gmail.users.watch
      parameters:
        - description: The user's email address. The special value me can be used to indicate the authenticated user.
          in: path
          name: userId
          required: true
          schema:
            type: string
            default: me
      responses:
        '200':
          description: Successful response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/WatchResponse'
      security:
        - Oauth2:
            - 'https://mail.google.com/'
          Oauth2c:
            - 'https://mail.google.com/'
        - Oauth2:
            - 'https://www.googleapis.com/auth/gmail.metadata'
          Oauth2c:
            - 'https://www.googleapis.com/auth/gmail.metadata'
        - Oauth2:
            - 'https://www.googleapis.com/auth/gmail.modify'
          Oauth2c:
            - 'https://www.googleapis.com/auth/gmail.modify'
        - Oauth2:
            - 'https://www.googleapis.com/auth/gmail.readonly'
          Oauth2c:
            - 'https://www.googleapis.com/auth/gmail.readonly'
      tags:
        - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WatchRequest'
components:
  schemas:
    AutoForwarding:
      description: Auto-forwarding settings for an account.
      properties:
        disposition:
          description: The state that a message should be left in after it has been forwarded.
          enum:
            - archive
            - dispositionUnspecified
            - leaveInInbox
            - markRead
            - trash
          type: string
        emailAddress:
          description: Email address to which all incoming messages are forwarded. This email address must be a verified member of the forwarding addresses.
          type: string
        enabled:
          description: Whether all incoming mail is automatically forwarded to another address.
          type: boolean
      type: object
    BatchDeleteMessagesRequest:
      properties:
        ids:
          description: The IDs of the messages to delete.
          items:
            type: string
          type: array
      type: object
    BatchModifyMessagesRequest:
      properties:
        addLabelIds:
          description: A list of label IDs to add to messages.
          items:
            type: string
          type: array
        ids:
          description: The IDs of the messages to modify. There is a limit of 1000 ids per request.
          items:
            type: string
          type: array
        removeLabelIds:
          description: A list of label IDs to remove from messages.
          items:
            type: string
          type: array
      type: object
    Draft:
      description: A draft email in the user's mailbox.
      properties:
        id:
          description: The immutable ID of the draft.
          type: string
        message:
          $ref: '#/components/schemas/Message'
      type: object
    Filter:
      description: Resource definition for Gmail filters. Filters apply to specific messages instead of an entire email thread.
      properties:
        action:
          $ref: '#/components/schemas/FilterAction'
        criteria:
          $ref: '#/components/schemas/FilterCriteria'
        id:
          description: The server assigned ID of the filter.
          type: string
      type: object
    FilterAction:
      description: A set of actions to perform on a message.
      properties:
        addLabelIds:
          description: List of labels to add to the message.
          items:
            type: string
          type: array
        forward:
          description: Email address that the message should be forwarded to.
          type: string
        removeLabelIds:
          description: List of labels to remove from the message.
          items:
            type: string
          type: array
      type: object
    FilterCriteria:
      description: Message matching criteria.
      properties:
        excludeChats:
          description: Whether the response should exclude chats.
          type: boolean
        from:
          description: The sender's display name or email address.
          type: string
        hasAttachment:
          description: Whether the message has any attachment.
          type: boolean
        negatedQuery:
          description: 'Only return messages not matching the specified query. Supports the same query format as the Gmail search box. For example, "from:someuser@example.com rfc822msgid: is:unread".'
          type: string
        query:
          description: 'Only return messages matching the specified query. Supports the same query format as the Gmail search box. For example, "from:someuser@example.com rfc822msgid: is:unread".'
          type: string
        size:
          description: 'The size of the entire RFC822 message in bytes, including all headers and attachments.'
          format: int32
          type: integer
        sizeComparison:
          description: How the message size in bytes should be in relation to the size field.
          enum:
            - larger
            - smaller
            - unspecified
          type: string
        subject:
          description: Case-insensitive phrase found in the message's subject. Trailing and leading whitespace are be trimmed and adjacent spaces are collapsed.
          type: string
        to:
          description: 'The recipient''s display name or email address. Includes recipients in the "to", "cc", and "bcc" header fields. You can use simply the local part of the email address. For example, "example" and "example@" both match "example@gmail.com". This field is case-insensitive.'
          type: string
      type: object
    ForwardingAddress:
      description: Settings for a forwarding address.
      properties:
        forwardingEmail:
          description: An email address to which messages can be forwarded.
          type: string
        verificationStatus:
          description: Indicates whether this address has been verified and is usable for forwarding. Read-only.
          enum:
            - accepted
            - pending
            - verificationStatusUnspecified
          type: string
      type: object
    History:
      description: A record of a change to the user's mailbox. Each history change may affect multiple messages in multiple ways.
      properties:
        id:
          description: The mailbox sequence ID.
          format: uint64
          type: string
        labelsAdded:
          description: Labels added to messages in this history record.
          items:
            $ref: '#/components/schemas/HistoryLabelAdded'
          type: array
        labelsRemoved:
          description: Labels removed from messages in this history record.
          items:
            $ref: '#/components/schemas/HistoryLabelRemoved'
          type: array
        messages:
          description: 'List of messages changed in this history record. The fields for specific change types, such as messagesAdded may duplicate messages in this field. We recommend using the specific change-type fields instead of this.'
          items:
            $ref: '#/components/schemas/Message'
          type: array
        messagesAdded:
          description: Messages added to the mailbox in this history record.
          items:
            $ref: '#/components/schemas/HistoryMessageAdded'
          type: array
        messagesDeleted:
          description: Messages deleted (not Trashed) from the mailbox in this history record.
          items:
            $ref: '#/components/schemas/HistoryMessageDeleted'
          type: array
      type: object
    HistoryLabelAdded:
      properties:
        labelIds:
          description: Label IDs added to the message.
          items:
            type: string
          type: array
        message:
          $ref: '#/components/schemas/Message'
      type: object
    HistoryLabelRemoved:
      properties:
        labelIds:
          description: Label IDs removed from the message.
          items:
            type: string
          type: array
        message:
          $ref: '#/components/schemas/Message'
      type: object
    HistoryMessageAdded:
      properties:
        message:
          $ref: '#/components/schemas/Message'
      type: object
    HistoryMessageDeleted:
      properties:
        message:
          $ref: '#/components/schemas/Message'
      type: object
    ImapSettings:
      description: IMAP settings for an account.
      properties:
        autoExpunge:
          description: 'If this value is true, Gmail will immediately expunge a message when it is marked as deleted in IMAP. Otherwise, Gmail will wait for an update from the client before expunging messages marked as deleted.'
          type: boolean
        enabled:
          description: Whether IMAP is enabled for the account.
          type: boolean
        expungeBehavior:
          description: The action that will be executed on a message when it is marked as deleted and expunged from the last visible IMAP folder.
          enum:
            - archive
            - deleteForever
            - expungeBehaviorUnspecified
            - trash
          type: string
        maxFolderSize:
          description: 'An optional limit on the number of messages that an IMAP folder may contain. Legal values are 0, 1000, 2000, 5000 or 10000. A value of zero is interpreted to mean that there is no limit.'
          format: int32
          type: integer
      type: object
    Label:
      description: Labels are used to categorize messages and threads within the user's mailbox.
      properties:
        id:
          description: The immutable ID of the label.
          type: string
        labelListVisibility:
          description: The visibility of the label in the label list in the Gmail web interface.
          enum:
            - labelHide
            - labelShow
            - labelShowIfUnread
          type: string
        messageListVisibility:
          description: The visibility of the label in the message list in the Gmail web interface.
          enum:
            - hide
            - show
          type: string
        messagesTotal:
          description: The total number of messages with the label.
          format: int32
          type: integer
        messagesUnread:
          description: The number of unread messages with the label.
          format: int32
          type: integer
        name:
          description: The display name of the label.
          type: string
        threadsTotal:
          description: The total number of threads with the label.
          format: int32
          type: integer
        threadsUnread:
          description: The number of unread threads with the label.
          format: int32
          type: integer
        type:
          description: 'The owner type for the label. User labels are created by the user and can be modified and deleted by the user and can be applied to any message or thread. System labels are internally created and cannot be added, modified, or deleted. System labels may be able to be applied to or removed from messages and threads under some circumstances but this is not guaranteed. For example, users can apply and remove the INBOX and UNREAD labels from messages and threads, but cannot apply or remove the DRAFTS or SENT labels from messages or threads.'
          enum:
            - system
            - user
          type: string
      type: object
    ListDraftsResponse:
      properties:
        drafts:
          description: List of drafts.
          items:
            $ref: '#/components/schemas/Draft'
          type: array
        nextPageToken:
          description: Token to retrieve the next page of results in the list.
          type: string
        resultSizeEstimate:
          description: Estimated total number of results.
          format: uint32
          type: integer
      type: object
    ListFiltersResponse:
      description: Response for the ListFilters method.
      properties:
        filter:
          description: List of a user's filters.
          items:
            $ref: '#/components/schemas/Filter'
          type: array
      type: object
    ListForwardingAddressesResponse:
      description: Response for the ListForwardingAddresses method.
      properties:
        forwardingAddresses:
          description: List of addresses that may be used for forwarding.
          items:
            $ref: '#/components/schemas/ForwardingAddress'
          type: array
      type: object
    ListHistoryResponse:
      properties:
        history:
          description: List of history records. Any messages contained in the response will typically only have id and threadId fields populated.
          items:
            $ref: '#/components/schemas/History'
          type: array
        historyId:
          description: The ID of the mailbox's current history record.
          format: uint64
          type: string
        nextPageToken:
          description: Page token to retrieve the next page of results in the list.
          type: string
      type: object
    ListLabelsResponse:
      properties:
        labels:
          description: List of labels.
          items:
            $ref: '#/components/schemas/Label'
          type: array
      type: object
    ListMessagesResponse:
      properties:
        messages:
          description: List of messages.
          items:
            $ref: '#/components/schemas/Message'
          type: array
        nextPageToken:
          description: Token to retrieve the next page of results in the list.
          type: string
        resultSizeEstimate:
          description: Estimated total number of results.
          format: uint32
          type: integer
      type: object
    ListSendAsResponse:
      description: Response for the ListSendAs method.
      properties:
        sendAs:
          description: List of send-as aliases.
          items:
            $ref: '#/components/schemas/SendAs'
          type: array
      type: object
    ListSmimeInfoResponse:
      properties:
        smimeInfo:
          description: List of SmimeInfo.
          items:
            $ref: '#/components/schemas/SmimeInfo'
          type: array
      type: object
    ListThreadsResponse:
      properties:
        nextPageToken:
          description: Page token to retrieve the next page of results in the list.
          type: string
        resultSizeEstimate:
          description: Estimated total number of results.
          format: uint32
          type: integer
        threads:
          description: List of threads.
          items:
            $ref: '#/components/schemas/Thread'
          type: array
      type: object
    Message:
      description: An email message.
      properties:
        historyId:
          description: The ID of the last history record that modified this message.
          format: uint64
          type: string
        id:
          description: The immutable ID of the message.
          type: string
        internalDate:
          description: 'The internal message creation timestamp (epoch ms), which determines ordering in the inbox. For normal SMTP-received email, this represents the time the message was originally accepted by Google, which is more reliable than the Date header. However, for API-migrated mail, it can be configured by client to be based on the Date header.'
          format: int64
          type: string
        labelIds:
          description: List of IDs of labels applied to this message.
          items:
            type: string
          type: array
        payload:
          $ref: '#/components/schemas/MessagePart'
        raw:
          description: The entire email message in an RFC 2822 formatted and base64url encoded string. Returned in messages.get and drafts.get responses when the format=RAW parameter is supplied.
          format: byte
          type: string
        sizeEstimate:
          description: Estimated size in bytes of the message.
          format: int32
          type: integer
        snippet:
          description: A short part of the message text.
          type: string
        threadId:
          description: |-
            The ID of the thread the message belongs to. To add a message or draft to a thread, the following criteria must be met: 
            - The requested threadId must be specified on the Message or Draft.Message you supply with your request. 
            - The References and In-Reply-To headers must be set in compliance with the RFC 2822 standard. 
            - The Subject headers must match.
          type: string
      type: object
    MessagePart:
      description: A single MIME message part.
      properties:
        body:
          $ref: '#/components/schemas/MessagePartBody'
        filename:
          description: The filename of the attachment. Only present if this message part represents an attachment.
          type: string
        headers:
          description: 'List of headers on this message part. For the top-level message part, representing the entire message payload, it will contain the standard RFC 2822 email headers such as To, From, and Subject.'
          items:
            $ref: '#/components/schemas/MessagePartHeader'
          type: array
        mimeType:
          description: The MIME type of the message part.
          type: string
        partId:
          description: The immutable ID of the message part.
          type: string
        parts:
          description: 'The child MIME message parts of this part. This only applies to container MIME message parts, for example multipart/*. For non- container MIME message part types, such as text/plain, this field is empty. For more information, see RFC 1521.'
          items:
            $ref: '#/components/schemas/MessagePart'
          type: array
      type: object
    MessagePartBody:
      description: The body of a single MIME message part.
      properties:
        attachmentId:
          description: 'When present, contains the ID of an external attachment that can be retrieved in a separate messages.attachments.get request. When not present, the entire content of the message part body is contained in the data field.'
          type: string
        data:
          description: The body data of a MIME message part as a base64url encoded string. May be empty for MIME container types that have no message body or when the body data is sent as a separate attachment. An attachment ID is present if the body data is contained in a separate attachment.
          format: byte
          type: string
        size:
          description: Number of bytes for the message part data (encoding notwithstanding).
          format: int32
          type: integer
      type: object
    MessagePartHeader:
      properties:
        name:
          description: 'The name of the header before the : separator. For example, To.'
          type: string
        value:
          description: 'The value of the header after the : separator. For example, someuser@example.com.'
          type: string
      type: object
    ModifyMessageRequest:
      properties:
        addLabelIds:
          description: A list of IDs of labels to add to this message.
          items:
            type: string
          type: array
        removeLabelIds:
          description: A list IDs of labels to remove from this message.
          items:
            type: string
          type: array
      type: object
    ModifyThreadRequest:
      properties:
        addLabelIds:
          description: A list of IDs of labels to add to this thread.
          items:
            type: string
          type: array
        removeLabelIds:
          description: A list of IDs of labels to remove from this thread.
          items:
            type: string
          type: array
      type: object
    PopSettings:
      description: POP settings for an account.
      properties:
        accessWindow:
          description: The range of messages which are accessible via POP.
          enum:
            - accessWindowUnspecified
            - allMail
            - disabled
            - fromNowOn
          type: string
        disposition:
          description: The action that will be executed on a message after it has been fetched via POP.
          enum:
            - archive
            - dispositionUnspecified
            - leaveInInbox
            - markRead
            - trash
          type: string
      type: object
    Profile:
      description: Profile for a Gmail user.
      properties:
        emailAddress:
          description: The user's email address.
          type: string
        historyId:
          description: The ID of the mailbox's current history record.
          format: uint64
          type: string
        messagesTotal:
          description: The total number of messages in the mailbox.
          format: int32
          type: integer
        threadsTotal:
          description: The total number of threads in the mailbox.
          format: int32
          type: integer
      type: object
    SendAs:
      description: 'Settings associated with a send-as alias, which can be either the primary login address associated with the account or a custom "from" address. Send-as aliases correspond to the "Send Mail As" feature in the web interface.'
      properties:
        displayName:
          description: 'A name that appears in the "From:" header for mail sent using this alias. For custom "from" addresses, when this is empty, Gmail will populate the "From:" header with the name that is used for the primary address associated with the account.'
          type: string
        isDefault:
          description: 'Whether this address is selected as the default "From:" address in situations such as composing a new message or sending a vacation auto-reply. Every Gmail account has exactly one default send-as address, so the only legal value that clients may write to this field is true. Changing this from false to true for an address will result in this field becoming false for the other previous default address.'
          type: boolean
        isPrimary:
          description: 'Whether this address is the primary address used to login to the account. Every Gmail account has exactly one primary address, and it cannot be deleted from the collection of send-as aliases. This field is read-only.'
          type: boolean
        replyToAddress:
          description: 'An optional email address that is included in a "Reply-To:" header for mail sent using this alias. If this is empty, Gmail will not generate a "Reply-To:" header.'
          type: string
        sendAsEmail:
          description: 'The email address that appears in the "From:" header for mail sent using this alias. This is read-only for all operations except create.'
          type: string
        signature:
          description: An optional HTML signature that is included in messages composed with this alias in the Gmail web UI.
          type: string
        smtpMsa:
          $ref: '#/components/schemas/SmtpMsa'
        treatAsAlias:
          description: Whether Gmail should  treat this address as an alias for the user's primary email address. This setting only applies to custom "from" aliases.
          type: boolean
        verificationStatus:
          description: Indicates whether this address has been verified for use as a send-as alias. Read-only. This setting only applies to custom "from" aliases.
          enum:
            - accepted
            - pending
            - verificationStatusUnspecified
          type: string
      type: object
    SmimeInfo:
      description: An S/MIME email config.
      properties:
        encryptedKeyPassword:
          description: 'Encrypted key password, when key is encrypted.'
          type: string
        expiration:
          description: When the certificate expires (in milliseconds since epoch).
          format: int64
          type: string
        id:
          description: The immutable ID for the SmimeInfo.
          type: string
        isDefault:
          description: Whether this SmimeInfo is the default one for this user's send-as address.
          type: boolean
        issuerCn:
          description: The S/MIME certificate issuer's common name.
          type: string
        pem:
          description: 'PEM formatted X509 concatenated certificate string (standard base64 encoding). Format used for returning key, which includes public key as well as certificate chain (not private key).'
          type: string
        pkcs12:
          description: 'PKCS#12 format containing a single private/public key pair and certificate chain. This format is only accepted from client for creating a new SmimeInfo and is never returned, because the private key is not intended to be exported. PKCS#12 may be encrypted, in which case encryptedKeyPassword should be set appropriately.'
          format: byte
          type: string
      type: object
    SmtpMsa:
      description: Configuration for communication with an SMTP service.
      properties:
        host:
          description: The hostname of the SMTP service. Required.
          type: string
        password:
          description: The password that will be used for authentication with the SMTP service. This is a write-only field that can be specified in requests to create or update SendAs settings; it is never populated in responses.
          type: string
        port:
          description: The port of the SMTP service. Required.
          format: int32
          type: integer
        securityMode:
          description: The protocol that will be used to secure communication with the SMTP service. Required.
          enum:
            - none
            - securityModeUnspecified
            - ssl
            - starttls
          type: string
        username:
          description: The username that will be used for authentication with the SMTP service. This is a write-only field that can be specified in requests to create or update SendAs settings; it is never populated in responses.
          type: string
      type: object
    Thread:
      description: A collection of messages representing a conversation.
      properties:
        historyId:
          description: The ID of the last history record that modified this thread.
          format: uint64
          type: string
        id:
          description: The unique ID of the thread.
          type: string
        messages:
          description: The list of messages in the thread.
          items:
            $ref: '#/components/schemas/Message'
          type: array
        snippet:
          description: A short part of the message text.
          type: string
      type: object
    VacationSettings:
      description: Vacation auto-reply settings for an account. These settings correspond to the "Vacation responder" feature in the web interface.
      properties:
        enableAutoReply:
          description: Flag that controls whether Gmail automatically replies to messages.
          type: boolean
        endTime:
          description: 'An optional end time for sending auto-replies (epoch ms). When this is specified, Gmail will automatically reply only to messages that it receives before the end time. If both startTime and endTime are specified, startTime must precede endTime.'
          format: int64
          type: string
        responseBodyHtml:
          description: Response body in HTML format. Gmail will sanitize the HTML before storing it.
          type: string
        responseBodyPlainText:
          description: Response body in plain text format.
          type: string
        responseSubject:
          description: 'Optional text to prepend to the subject line in vacation responses. In order to enable auto-replies, either the response subject or the response body must be nonempty.'
          type: string
        restrictToContacts:
          description: Flag that determines whether responses are sent to recipients who are not in the user's list of contacts.
          type: boolean
        restrictToDomain:
          description: Flag that determines whether responses are sent to recipients who are outside of the user's domain. This feature is only available for G Suite users.
          type: boolean
        startTime:
          description: 'An optional start time for sending auto-replies (epoch ms). When this is specified, Gmail will automatically reply only to messages that it receives after the start time. If both startTime and endTime are specified, startTime must precede endTime.'
          format: int64
          type: string
      type: object
    WatchRequest:
      description: Set up or update a new push notification watch on this user's mailbox.
      properties:
        labelFilterAction:
          description: Filtering behavior of labelIds list specified.
          enum:
            - exclude
            - include
          type: string
        labelIds:
          description: 'List of label_ids to restrict notifications about. By default, if unspecified, all changes are pushed out. If specified then dictates which labels are required for a push notification to be generated.'
          items:
            type: string
          type: array
        topicName:
          description: |-
            A fully qualified Google Cloud Pub/Sub API topic name to publish the events to. This topic name **must** already exist in Cloud Pub/Sub and you **must** have already granted gmail "publish" permission on it. For example, "projects/my-project-identifier/topics/my-topic-name" (using the Cloud Pub/Sub "v1" topic naming format).

            Note that the "my-project-identifier" portion must exactly match your Google developer project id (the one executing this watch request).
          type: string
      type: object
    WatchResponse:
      description: Push notification watch response.
      properties:
        expiration:
          description: When Gmail will stop sending notifications for mailbox updates (epoch millis). Call watch again before this time to renew the watch.
          format: int64
          type: string
        historyId:
          description: The ID of the mailbox's current history record.
          format: uint64
          type: string
      type: object
  parameters:
    alt:
      description: Data format for the response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
        default: json
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
        default: true
    quotaUser:
      description: 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.'
      in: query
      name: quotaUser
      schema:
        type: string
    userIp:
      description: IP address of the site where the request originates. Use this if you want to enforce per-user limits.
      in: query
      name: userIp
      schema:
        type: string
  requestBodies:
    Draft:
      content:
        message/rfc822:
          schema:
            $ref: '#/components/schemas/Draft'
    Label:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Label'
    Message:
      content:
        message/rfc822:
          schema:
            $ref: '#/components/schemas/Message'
    SendAs:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SendAs'
  securitySchemes:
    Oauth2:
      description: Oauth 2.0 implicit authentication
      type: oauth2
      flows:
        implicit:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          scopes:
            'https://mail.google.com/': 'Read, send, delete, and manage your email'
            'https://www.googleapis.com/auth/gmail.compose': Manage drafts and send emails
            'https://www.googleapis.com/auth/gmail.insert': Insert mail into your mailbox
            'https://www.googleapis.com/auth/gmail.labels': Manage mailbox labels
            'https://www.googleapis.com/auth/gmail.metadata': 'View your email message metadata such as labels and headers, but not the email body'
            'https://www.googleapis.com/auth/gmail.modify': View and modify but not delete your email
            'https://www.googleapis.com/auth/gmail.readonly': View your emails messages and settings
            'https://www.googleapis.com/auth/gmail.send': Send email on your behalf
            'https://www.googleapis.com/auth/gmail.settings.basic': Manage your basic mail settings
            'https://www.googleapis.com/auth/gmail.settings.sharing': 'Manage your sensitive mail settings, including who can manage your mail'
    Oauth2c:
      description: Oauth 2.0 accessCode authentication
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          tokenUrl: 'https://accounts.google.com/o/oauth2/token'
          scopes:
            'https://mail.google.com/': 'Read, send, delete, and manage your email'
            'https://www.googleapis.com/auth/gmail.compose': Manage drafts and send emails
            'https://www.googleapis.com/auth/gmail.insert': Insert mail into your mailbox
            'https://www.googleapis.com/auth/gmail.labels': Manage mailbox labels
            'https://www.googleapis.com/auth/gmail.metadata': 'View your email message metadata such as labels and headers, but not the email body'
            'https://www.googleapis.com/auth/gmail.modify': View and modify but not delete your email
            'https://www.googleapis.com/auth/gmail.readonly': View your emails messages and settings
            'https://www.googleapis.com/auth/gmail.send': Send email on your behalf
            'https://www.googleapis.com/auth/gmail.settings.basic': Manage your basic mail settings
            'https://www.googleapis.com/auth/gmail.settings.sharing': 'Manage your sensitive mail settings, including who can manage your mail'
