openapi: 3.0.0
servers:
  - url: 'https://www.googleapis.com/content/v2'
info:
  contact:
    name: Google
    url: 'https://google.com'
  description: 'Manages product items, inventory, and Merchant Center accounts for Google Shopping.'
  license:
    name: Creative Commons Attribution 3.0
    url: 'http://creativecommons.org/licenses/by/3.0/'
  termsOfService: 'https://developers.google.com/terms/'
  title: Content API for Shopping
  version: v2
  x-apiClientRegistration:
    url: 'https://console.developers.google.com'
  x-apisguru-categories:
    - ecommerce
  x-logo:
    url: 'https://cloud.google.com/_static/images/new-gcp-logo.png'
  x-origin:
    - converter:
        url: 'https://github.com/lucybot/api-spec-converter'
        version: 2.0.1
      format: google
      url: 'https://www.googleapis.com/discovery/v1/apis/content/v2/rest'
      version: v1
  x-preferred: true
  x-providerName: googleapis.com
  x-serviceName: content
externalDocs:
  url: 'https://developers.google.com/shopping-content'
tags:
  - name: accounts
  - name: accountstatuses
  - name: accounttax
  - name: datafeeds
  - name: datafeedstatuses
  - name: inventory
  - name: orders
  - name: products
  - name: productstatuses
  - name: shippingsettings
paths:
  /accounts/authinfo:
    get:
      description: Returns information about the authenticated user.
      operationId: content.accounts.authinfo
      responses:
        '200':
          description: Successful response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AccountsAuthInfoResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
          Oauth2c:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - accounts
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/userIp'
  /accounts/batch:
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/userIp'
    post:
      description: 'Retrieves, inserts, updates, and deletes multiple Merchant Center (sub-)accounts in a single request.'
      operationId: content.accounts.custombatch
      parameters:
        - description: Flag to run the request in dry-run mode.
          in: query
          name: dryRun
          schema:
            type: boolean
      responses:
        '200':
          description: Successful response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AccountsCustomBatchResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
          Oauth2c:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountsCustomBatchRequest'
  /accountstatuses/batch:
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/userIp'
    post:
      operationId: content.accountstatuses.custombatch
      responses:
        '200':
          description: Successful response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AccountstatusesCustomBatchResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
          Oauth2c:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - accountstatuses
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountstatusesCustomBatchRequest'
  /accounttax/batch:
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/userIp'
    post:
      description: Retrieves and updates tax settings of multiple accounts in a single request.
      operationId: content.accounttax.custombatch
      parameters:
        - description: Flag to run the request in dry-run mode.
          in: query
          name: dryRun
          schema:
            type: boolean
      responses:
        '200':
          description: Successful response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AccounttaxCustomBatchResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
          Oauth2c:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - accounttax
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccounttaxCustomBatchRequest'
  /datafeeds/batch:
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/userIp'
    post:
      operationId: content.datafeeds.custombatch
      parameters:
        - description: Flag to run the request in dry-run mode.
          in: query
          name: dryRun
          schema:
            type: boolean
      responses:
        '200':
          description: Successful response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DatafeedsCustomBatchResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
          Oauth2c:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - datafeeds
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DatafeedsCustomBatchRequest'
  /datafeedstatuses/batch:
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/userIp'
    post:
      operationId: content.datafeedstatuses.custombatch
      responses:
        '200':
          description: Successful response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DatafeedstatusesCustomBatchResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
          Oauth2c:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - datafeedstatuses
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DatafeedstatusesCustomBatchRequest'
  /inventory/batch:
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/userIp'
    post:
      description: Updates price and availability for multiple products or stores in a single request. This operation does not update the expiration date of the products. This method can only be called for non-multi-client accounts.
      operationId: content.inventory.custombatch
      parameters:
        - description: Flag to run the request in dry-run mode.
          in: query
          name: dryRun
          schema:
            type: boolean
      responses:
        '200':
          description: Successful response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InventoryCustomBatchResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
          Oauth2c:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - inventory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InventoryCustomBatchRequest'
  /orders/batch:
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/userIp'
    post:
      description: Retrieves or modifies multiple orders in a single request. This method can only be called for non-multi-client accounts.
      operationId: content.orders.custombatch
      responses:
        '200':
          description: Successful response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OrdersCustomBatchResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
          Oauth2c:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - orders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrdersCustomBatchRequest'
  /products/batch:
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/userIp'
    post:
      description: 'Retrieves, inserts, and deletes multiple products in a single request. This method can only be called for non-multi-client accounts.'
      operationId: content.products.custombatch
      parameters:
        - description: Flag to run the request in dry-run mode.
          in: query
          name: dryRun
          schema:
            type: boolean
      responses:
        '200':
          description: Successful response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProductsCustomBatchResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
          Oauth2c:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - products
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductsCustomBatchRequest'
  /productstatuses/batch:
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/userIp'
    post:
      description: Gets the statuses of multiple products in a single request. This method can only be called for non-multi-client accounts.
      operationId: content.productstatuses.custombatch
      parameters:
        - description: Flag to include full product data in the results of this request. The default value is false.
          in: query
          name: includeAttributes
          schema:
            type: boolean
      responses:
        '200':
          description: Successful response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProductstatusesCustomBatchResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
          Oauth2c:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - productstatuses
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductstatusesCustomBatchRequest'
  /shippingsettings/batch:
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/userIp'
    post:
      description: Retrieves and updates the shipping settings of multiple accounts in a single request.
      operationId: content.shippingsettings.custombatch
      parameters:
        - description: Flag to run the request in dry-run mode.
          in: query
          name: dryRun
          schema:
            type: boolean
      responses:
        '200':
          description: Successful response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ShippingsettingsCustomBatchResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
          Oauth2c:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - shippingsettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShippingsettingsCustomBatchRequest'
  '/{merchantId}/accounts':
    get:
      description: Lists the sub-accounts in your Merchant Center account. This method can only be called for multi-client accounts.
      operationId: content.accounts.list
      parameters:
        - description: The ID of the managing account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: 'The maximum number of accounts to return in the response, used for paging.'
          in: query
          name: maxResults
          schema:
            type: integer
        - description: The token returned by the previous request.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AccountsListResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
          Oauth2c:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - accounts
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/userIp'
    post:
      description: Creates a Merchant Center sub-account. This method can only be called for multi-client accounts.
      operationId: content.accounts.insert
      parameters:
        - description: The ID of the managing account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: Flag to run the request in dry-run mode.
          in: query
          name: dryRun
          schema:
            type: boolean
      responses:
        '200':
          description: Successful response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Account'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
          Oauth2c:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - accounts
      requestBody:
        $ref: '#/components/requestBodies/Account'
  '/{merchantId}/accounts/{accountId}':
    delete:
      description: Deletes a Merchant Center sub-account. This method can only be called for multi-client accounts.
      operationId: content.accounts.delete
      parameters:
        - description: The ID of the managing account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the account.
          in: path
          name: accountId
          required: true
          schema:
            type: string
        - description: Flag to run the request in dry-run mode.
          in: query
          name: dryRun
          schema:
            type: boolean
      responses:
        '200':
          description: Successful response
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
          Oauth2c:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - accounts
    get:
      description: 'Retrieves a Merchant Center account. This method can only be called for accounts to which the managing account has access: either the managing account itself or sub-accounts if the managing account is a multi-client account.'
      operationId: content.accounts.get
      parameters:
        - description: The ID of the managing account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the account.
          in: path
          name: accountId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Account'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
          Oauth2c:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - accounts
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/userIp'
    patch:
      description: 'Updates a Merchant Center account. This method can only be called for accounts to which the managing account has access: either the managing account itself or sub-accounts if the managing account is a multi-client account. This method supports patch semantics.'
      operationId: content.accounts.patch
      parameters:
        - description: The ID of the managing account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the account.
          in: path
          name: accountId
          required: true
          schema:
            type: string
        - description: Flag to run the request in dry-run mode.
          in: query
          name: dryRun
          schema:
            type: boolean
      responses:
        '200':
          description: Successful response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Account'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
          Oauth2c:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - accounts
      requestBody:
        $ref: '#/components/requestBodies/Account'
    put:
      description: 'Updates a Merchant Center account. This method can only be called for accounts to which the managing account has access: either the managing account itself or sub-accounts if the managing account is a multi-client account.'
      operationId: content.accounts.update
      parameters:
        - description: The ID of the managing account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the account.
          in: path
          name: accountId
          required: true
          schema:
            type: string
        - description: Flag to run the request in dry-run mode.
          in: query
          name: dryRun
          schema:
            type: boolean
      responses:
        '200':
          description: Successful response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Account'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
          Oauth2c:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - accounts
      requestBody:
        $ref: '#/components/requestBodies/Account'
  '/{merchantId}/accounts/{accountId}/claimwebsite':
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/userIp'
    post:
      description: 'Claims the website of a Merchant Center sub-account. This method can only be called for accounts to which the managing account has access: either the managing account itself or sub-accounts if the managing account is a multi-client account.'
      operationId: content.accounts.claimwebsite
      parameters:
        - description: The ID of the account whose website is claimed.
          in: path
          name: accountId
          required: true
          schema:
            type: string
        - description: The ID of the managing account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: Flag to remove any existing claim on the requested website by another account and replace it with a claim from this account.
          in: query
          name: overwrite
          schema:
            type: boolean
      responses:
        '200':
          description: Successful response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AccountsClaimWebsiteResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
          Oauth2c:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - accounts
  '/{merchantId}/accountstatuses':
    get:
      description: Lists the statuses of the sub-accounts in your Merchant Center account. This method can only be called for multi-client accounts.
      operationId: content.accountstatuses.list
      parameters:
        - description: The ID of the managing account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: 'The maximum number of account statuses to return in the response, used for paging.'
          in: query
          name: maxResults
          schema:
            type: integer
        - description: The token returned by the previous request.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AccountstatusesListResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
          Oauth2c:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - accountstatuses
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/userIp'
  '/{merchantId}/accountstatuses/{accountId}':
    get:
      description: 'Retrieves the status of a Merchant Center account. This method can only be called for accounts to which the managing account has access: either the managing account itself or sub-accounts if the managing account is a multi-client account.'
      operationId: content.accountstatuses.get
      parameters:
        - description: The ID of the managing account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the account.
          in: path
          name: accountId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AccountStatus'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
          Oauth2c:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - accountstatuses
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/userIp'
  '/{merchantId}/accounttax':
    get:
      description: Lists the tax settings of the sub-accounts in your Merchant Center account. This method can only be called for multi-client accounts.
      operationId: content.accounttax.list
      parameters:
        - description: The ID of the managing account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: 'The maximum number of tax settings to return in the response, used for paging.'
          in: query
          name: maxResults
          schema:
            type: integer
        - description: The token returned by the previous request.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AccounttaxListResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
          Oauth2c:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - accounttax
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/userIp'
  '/{merchantId}/accounttax/{accountId}':
    get:
      description: 'Retrieves the tax settings of the account. This method can only be called for accounts to which the managing account has access: either the managing account itself or sub-accounts if the managing account is a multi-client account.'
      operationId: content.accounttax.get
      parameters:
        - description: The ID of the managing account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the account for which to get/update account tax settings.
          in: path
          name: accountId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AccountTax'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
          Oauth2c:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - accounttax
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/userIp'
    patch:
      description: 'Updates the tax settings of the account. This method can only be called for accounts to which the managing account has access: either the managing account itself or sub-accounts if the managing account is a multi-client account. This method supports patch semantics.'
      operationId: content.accounttax.patch
      parameters:
        - description: The ID of the managing account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the account for which to get/update account tax settings.
          in: path
          name: accountId
          required: true
          schema:
            type: string
        - description: Flag to run the request in dry-run mode.
          in: query
          name: dryRun
          schema:
            type: boolean
      responses:
        '200':
          description: Successful response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AccountTax'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
          Oauth2c:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - accounttax
      requestBody:
        $ref: '#/components/requestBodies/AccountTax'
    put:
      description: 'Updates the tax settings of the account. This method can only be called for accounts to which the managing account has access: either the managing account itself or sub-accounts if the managing account is a multi-client account.'
      operationId: content.accounttax.update
      parameters:
        - description: The ID of the managing account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the account for which to get/update account tax settings.
          in: path
          name: accountId
          required: true
          schema:
            type: string
        - description: Flag to run the request in dry-run mode.
          in: query
          name: dryRun
          schema:
            type: boolean
      responses:
        '200':
          description: Successful response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AccountTax'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
          Oauth2c:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - accounttax
      requestBody:
        $ref: '#/components/requestBodies/AccountTax'
  '/{merchantId}/datafeeds':
    get:
      description: Lists the datafeeds in your Merchant Center account. This method can only be called for non-multi-client accounts.
      operationId: content.datafeeds.list
      parameters:
        - description: The ID of the managing account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: 'The maximum number of products to return in the response, used for paging.'
          in: query
          name: maxResults
          schema:
            type: integer
        - description: The token returned by the previous request.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DatafeedsListResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
          Oauth2c:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - datafeeds
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/userIp'
    post:
      description: Registers a datafeed configuration with your Merchant Center account. This method can only be called for non-multi-client accounts.
      operationId: content.datafeeds.insert
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: Flag to run the request in dry-run mode.
          in: query
          name: dryRun
          schema:
            type: boolean
      responses:
        '200':
          description: Successful response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Datafeed'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
          Oauth2c:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - datafeeds
      requestBody:
        $ref: '#/components/requestBodies/Datafeed'
  '/{merchantId}/datafeeds/{datafeedId}':
    delete:
      description: Deletes a datafeed configuration from your Merchant Center account. This method can only be called for non-multi-client accounts.
      operationId: content.datafeeds.delete
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: datafeedId
          required: true
          schema:
            type: string
        - description: Flag to run the request in dry-run mode.
          in: query
          name: dryRun
          schema:
            type: boolean
      responses:
        '200':
          description: Successful response
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
          Oauth2c:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - datafeeds
    get:
      description: Retrieves a datafeed configuration from your Merchant Center account. This method can only be called for non-multi-client accounts.
      operationId: content.datafeeds.get
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: datafeedId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Datafeed'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
          Oauth2c:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - datafeeds
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/userIp'
    patch:
      description: Updates a datafeed configuration of your Merchant Center account. This method can only be called for non-multi-client accounts. This method supports patch semantics.
      operationId: content.datafeeds.patch
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: datafeedId
          required: true
          schema:
            type: string
        - description: Flag to run the request in dry-run mode.
          in: query
          name: dryRun
          schema:
            type: boolean
      responses:
        '200':
          description: Successful response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Datafeed'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
          Oauth2c:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - datafeeds
      requestBody:
        $ref: '#/components/requestBodies/Datafeed'
    put:
      description: Updates a datafeed configuration of your Merchant Center account. This method can only be called for non-multi-client accounts.
      operationId: content.datafeeds.update
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: datafeedId
          required: true
          schema:
            type: string
        - description: Flag to run the request in dry-run mode.
          in: query
          name: dryRun
          schema:
            type: boolean
      responses:
        '200':
          description: Successful response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Datafeed'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
          Oauth2c:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - datafeeds
      requestBody:
        $ref: '#/components/requestBodies/Datafeed'
  '/{merchantId}/datafeedstatuses':
    get:
      description: Lists the statuses of the datafeeds in your Merchant Center account. This method can only be called for non-multi-client accounts.
      operationId: content.datafeedstatuses.list
      parameters:
        - description: The ID of the managing account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: 'The maximum number of products to return in the response, used for paging.'
          in: query
          name: maxResults
          schema:
            type: integer
        - description: The token returned by the previous request.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DatafeedstatusesListResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
          Oauth2c:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - datafeedstatuses
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/userIp'
  '/{merchantId}/datafeedstatuses/{datafeedId}':
    get:
      description: Retrieves the status of a datafeed from your Merchant Center account. This method can only be called for non-multi-client accounts.
      operationId: content.datafeedstatuses.get
      parameters:
        - in: path
          name: merchantId
          required: true
          schema:
            type: string
        - in: path
          name: datafeedId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DatafeedStatus'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
          Oauth2c:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - datafeedstatuses
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/userIp'
  '/{merchantId}/inventory/{storeCode}/products/{productId}':
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/userIp'
    post:
      description: Updates price and availability of a product in your Merchant Center account. This operation does not update the expiration date of the product. This method can only be called for non-multi-client accounts.
      operationId: content.inventory.set
      parameters:
        - description: The ID of the managing account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The code of the store for which to update price and availability. Use online to update price and availability of an online product.
          in: path
          name: storeCode
          required: true
          schema:
            type: string
        - description: The ID of the product for which to update price and availability.
          in: path
          name: productId
          required: true
          schema:
            type: string
        - description: Flag to run the request in dry-run mode.
          in: query
          name: dryRun
          schema:
            type: boolean
      responses:
        '200':
          description: Successful response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InventorySetResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
          Oauth2c:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - inventory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InventorySetRequest'
  '/{merchantId}/orders':
    get:
      description: Lists the orders in your Merchant Center account. This method can only be called for non-multi-client accounts.
      operationId: content.orders.list
      parameters:
        - description: The ID of the managing account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: |-
            Obtains orders that match the acknowledgement status. When set to true, obtains orders that have been acknowledged. When false, obtains orders that have not been acknowledged.
            We recommend using this filter set to false, in conjunction with the acknowledge call, such that only un-acknowledged orders are returned.
          in: query
          name: acknowledged
          schema:
            type: boolean
        - description: |-
            The maximum number of orders to return in the response, used for paging. The default value is 25 orders per page, and the maximum allowed value is 250 orders per page.
            Known issue: All List calls will return all Orders without limit regardless of the value of this field.
          in: query
          name: maxResults
          schema:
            type: integer
        - description: 'The ordering of the returned list. The only supported value are placedDate desc and placedDate asc for now, which returns orders sorted by placement date. "placedDate desc" stands for listing orders by placement date, from oldest to most recent. "placedDate asc" stands for listing orders by placement date, from most recent to oldest. In future releases we''ll support other sorting criteria.'
          in: query
          name: orderBy
          schema:
            type: string
            enum:
              - placedDate asc
              - placedDate desc
        - description: The token returned by the previous request.
          in: query
          name: pageToken
          schema:
            type: string
        - description: 'Obtains orders placed before this date (exclusively), in ISO 8601 format.'
          in: query
          name: placedDateEnd
          schema:
            type: string
        - description: 'Obtains orders placed after this date (inclusively), in ISO 8601 format.'
          in: query
          name: placedDateStart
          schema:
            type: string
        - description: 'Obtains orders that match any of the specified statuses. Multiple values can be specified with comma separation. Additionally, please note that active is a shortcut for pendingShipment and partiallyShipped, and completed is a shortcut for shipped , partiallyDelivered, delivered, partiallyReturned, returned, and canceled.'
          in: query
          name: statuses
          explode: true
          schema:
            type: array
            items:
              enum:
                - active
                - canceled
                - completed
                - delivered
                - inProgress
                - partiallyDelivered
                - partiallyReturned
                - partiallyShipped
                - pendingShipment
                - returned
                - shipped
              type: string
      responses:
        '200':
          description: Successful response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OrdersListResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
          Oauth2c:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - orders
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/userIp'
  '/{merchantId}/orders/{orderId}':
    get:
      description: Retrieves an order from your Merchant Center account. This method can only be called for non-multi-client accounts.
      operationId: content.orders.get
      parameters:
        - description: The ID of the managing account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the order.
          in: path
          name: orderId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Order'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
          Oauth2c:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - orders
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/userIp'
  '/{merchantId}/orders/{orderId}/acknowledge':
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/userIp'
    post:
      description: Marks an order as acknowledged. This method can only be called for non-multi-client accounts.
      operationId: content.orders.acknowledge
      parameters:
        - description: The ID of the managing account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the order.
          in: path
          name: orderId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OrdersAcknowledgeResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
          Oauth2c:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - orders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrdersAcknowledgeRequest'
  '/{merchantId}/orders/{orderId}/cancel':
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/userIp'
    post:
      description: 'Cancels all line items in an order, making a full refund. This method can only be called for non-multi-client accounts.'
      operationId: content.orders.cancel
      parameters:
        - description: The ID of the managing account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the order to cancel.
          in: path
          name: orderId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OrdersCancelResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
          Oauth2c:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - orders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrdersCancelRequest'
  '/{merchantId}/orders/{orderId}/cancelLineItem':
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/userIp'
    post:
      description: 'Cancels a line item, making a full refund. This method can only be called for non-multi-client accounts.'
      operationId: content.orders.cancellineitem
      parameters:
        - description: The ID of the managing account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the order.
          in: path
          name: orderId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OrdersCancelLineItemResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
          Oauth2c:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - orders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrdersCancelLineItemRequest'
  '/{merchantId}/orders/{orderId}/refund':
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/userIp'
    post:
      description: 'Refund a portion of the order, up to the full amount paid. This method can only be called for non-multi-client accounts.'
      operationId: content.orders.refund
      parameters:
        - description: The ID of the managing account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the order to refund.
          in: path
          name: orderId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OrdersRefundResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
          Oauth2c:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - orders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrdersRefundRequest'
  '/{merchantId}/orders/{orderId}/returnLineItem':
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/userIp'
    post:
      description: Returns a line item. This method can only be called for non-multi-client accounts.
      operationId: content.orders.returnlineitem
      parameters:
        - description: The ID of the managing account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the order.
          in: path
          name: orderId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OrdersReturnLineItemResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
          Oauth2c:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - orders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrdersReturnLineItemRequest'
  '/{merchantId}/orders/{orderId}/shipLineItems':
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/userIp'
    post:
      description: Marks line item(s) as shipped. This method can only be called for non-multi-client accounts.
      operationId: content.orders.shiplineitems
      parameters:
        - description: The ID of the managing account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the order.
          in: path
          name: orderId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OrdersShipLineItemsResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
          Oauth2c:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - orders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrdersShipLineItemsRequest'
  '/{merchantId}/orders/{orderId}/updateMerchantOrderId':
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/userIp'
    post:
      description: Updates the merchant order ID for a given order. This method can only be called for non-multi-client accounts.
      operationId: content.orders.updatemerchantorderid
      parameters:
        - description: The ID of the managing account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the order.
          in: path
          name: orderId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OrdersUpdateMerchantOrderIdResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
          Oauth2c:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - orders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrdersUpdateMerchantOrderIdRequest'
  '/{merchantId}/orders/{orderId}/updateShipment':
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/userIp'
    post:
      description: 'Updates a shipment''s status, carrier, and/or tracking ID. This method can only be called for non-multi-client accounts.'
      operationId: content.orders.updateshipment
      parameters:
        - description: The ID of the managing account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the order.
          in: path
          name: orderId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OrdersUpdateShipmentResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
          Oauth2c:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - orders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrdersUpdateShipmentRequest'
  '/{merchantId}/ordersbymerchantid/{merchantOrderId}':
    get:
      description: Retrieves an order using merchant order id. This method can only be called for non-multi-client accounts.
      operationId: content.orders.getbymerchantorderid
      parameters:
        - description: The ID of the managing account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The merchant order id to be looked for.
          in: path
          name: merchantOrderId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OrdersGetByMerchantOrderIdResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
          Oauth2c:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - orders
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/userIp'
  '/{merchantId}/products':
    get:
      description: Lists the products in your Merchant Center account. This method can only be called for non-multi-client accounts.
      operationId: content.products.list
      parameters:
        - description: The ID of the managing account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: Flag to include the invalid inserted items in the result of the list request. By default the invalid items are not shown (the default value is false).
          in: query
          name: includeInvalidInsertedItems
          schema:
            type: boolean
        - description: 'The maximum number of products to return in the response, used for paging.'
          in: query
          name: maxResults
          schema:
            type: integer
        - description: The token returned by the previous request.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProductsListResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
          Oauth2c:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - products
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/userIp'
    post:
      description: 'Uploads a product to your Merchant Center account. If an item with the same channel, contentLanguage, offerId, and targetCountry already exists, this method updates that entry. This method can only be called for non-multi-client accounts.'
      operationId: content.products.insert
      parameters:
        - description: The ID of the managing account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: Flag to run the request in dry-run mode.
          in: query
          name: dryRun
          schema:
            type: boolean
      responses:
        '200':
          description: Successful response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Product'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
          Oauth2c:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - products
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
  '/{merchantId}/products/{productId}':
    delete:
      description: Deletes a product from your Merchant Center account. This method can only be called for non-multi-client accounts.
      operationId: content.products.delete
      parameters:
        - description: The ID of the managing account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the product.
          in: path
          name: productId
          required: true
          schema:
            type: string
        - description: Flag to run the request in dry-run mode.
          in: query
          name: dryRun
          schema:
            type: boolean
      responses:
        '200':
          description: Successful response
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
          Oauth2c:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - products
    get:
      description: Retrieves a product from your Merchant Center account. This method can only be called for non-multi-client accounts.
      operationId: content.products.get
      parameters:
        - description: The ID of the managing account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the product.
          in: path
          name: productId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Product'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
          Oauth2c:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - products
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/userIp'
  '/{merchantId}/productstatuses':
    get:
      description: Lists the statuses of the products in your Merchant Center account. This method can only be called for non-multi-client accounts.
      operationId: content.productstatuses.list
      parameters:
        - description: Flag to include full product data in the results of the list request. The default value is false.
          in: query
          name: includeAttributes
          schema:
            type: boolean
        - description: Flag to include the invalid inserted items in the result of the list request. By default the invalid items are not shown (the default value is false).
          in: query
          name: includeInvalidInsertedItems
          schema:
            type: boolean
        - description: 'The maximum number of product statuses to return in the response, used for paging.'
          in: query
          name: maxResults
          schema:
            type: integer
        - description: The ID of the managing account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The token returned by the previous request.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProductstatusesListResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
          Oauth2c:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - productstatuses
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/userIp'
  '/{merchantId}/productstatuses/{productId}':
    get:
      description: Gets the status of a product from your Merchant Center account. This method can only be called for non-multi-client accounts.
      operationId: content.productstatuses.get
      parameters:
        - description: Flag to include full product data in the result of this get request. The default value is false.
          in: query
          name: includeAttributes
          schema:
            type: boolean
        - description: The ID of the managing account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the product.
          in: path
          name: productId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProductStatus'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
          Oauth2c:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - productstatuses
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/userIp'
  '/{merchantId}/shippingsettings':
    get:
      description: Lists the shipping settings of the sub-accounts in your Merchant Center account. This method can only be called for multi-client accounts.
      operationId: content.shippingsettings.list
      parameters:
        - description: The ID of the managing account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: 'The maximum number of shipping settings to return in the response, used for paging.'
          in: query
          name: maxResults
          schema:
            type: integer
        - description: The token returned by the previous request.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ShippingsettingsListResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
          Oauth2c:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - shippingsettings
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/userIp'
  '/{merchantId}/shippingsettings/{accountId}':
    get:
      description: 'Retrieves the shipping settings of the account. This method can only be called for accounts to which the managing account has access: either the managing account itself or sub-accounts if the managing account is a multi-client account.'
      operationId: content.shippingsettings.get
      parameters:
        - description: The ID of the managing account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the account for which to get/update shipping settings.
          in: path
          name: accountId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ShippingSettings'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
          Oauth2c:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - shippingsettings
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/userIp'
    patch:
      description: 'Updates the shipping settings of the account. This method can only be called for accounts to which the managing account has access: either the managing account itself or sub-accounts if the managing account is a multi-client account. This method supports patch semantics.'
      operationId: content.shippingsettings.patch
      parameters:
        - description: The ID of the managing account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the account for which to get/update shipping settings.
          in: path
          name: accountId
          required: true
          schema:
            type: string
        - description: Flag to run the request in dry-run mode.
          in: query
          name: dryRun
          schema:
            type: boolean
      responses:
        '200':
          description: Successful response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ShippingSettings'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
          Oauth2c:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - shippingsettings
      requestBody:
        $ref: '#/components/requestBodies/ShippingSettings'
    put:
      description: 'Updates the shipping settings of the account. This method can only be called for accounts to which the managing account has access: either the managing account itself or sub-accounts if the managing account is a multi-client account.'
      operationId: content.shippingsettings.update
      parameters:
        - description: The ID of the managing account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the account for which to get/update shipping settings.
          in: path
          name: accountId
          required: true
          schema:
            type: string
        - description: Flag to run the request in dry-run mode.
          in: query
          name: dryRun
          schema:
            type: boolean
      responses:
        '200':
          description: Successful response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ShippingSettings'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
          Oauth2c:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - shippingsettings
      requestBody:
        $ref: '#/components/requestBodies/ShippingSettings'
  '/{merchantId}/supportedCarriers':
    get:
      description: Retrieves supported carriers and carrier services for an account.
      operationId: content.shippingsettings.getsupportedcarriers
      parameters:
        - description: The ID of the account for which to retrieve the supported carriers.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ShippingsettingsGetSupportedCarriersResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
          Oauth2c:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - shippingsettings
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/userIp'
  '/{merchantId}/testorders':
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/userIp'
    post:
      description: Sandbox only. Creates a test order. This method can only be called for non-multi-client accounts.
      operationId: content.orders.createtestorder
      parameters:
        - description: The ID of the managing account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OrdersCreateTestOrderResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
          Oauth2c:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - orders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrdersCreateTestOrderRequest'
  '/{merchantId}/testorders/{orderId}/advance':
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/userIp'
    post:
      description: Sandbox only. Moves a test order from state "inProgress" to state "pendingShipment". This method can only be called for non-multi-client accounts.
      operationId: content.orders.advancetestorder
      parameters:
        - description: The ID of the managing account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the test order to modify.
          in: path
          name: orderId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OrdersAdvanceTestOrderResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
          Oauth2c:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - orders
  '/{merchantId}/testordertemplates/{templateName}':
    get:
      description: Sandbox only. Retrieves an order template that can be used to quickly create a new order in sandbox. This method can only be called for non-multi-client accounts.
      operationId: content.orders.gettestordertemplate
      parameters:
        - description: The ID of the managing account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The name of the template to retrieve.
          in: path
          name: templateName
          required: true
          schema:
            type: string
            enum:
              - template1
              - template1a
              - template1b
              - template2
      responses:
        '200':
          description: Successful response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OrdersGetTestOrderTemplateResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/content'
          Oauth2c:
            - 'https://www.googleapis.com/auth/content'
      tags:
        - orders
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/userIp'
components:
  schemas:
    Account:
      description: Account data.
      properties:
        adultContent:
          description: Indicates whether the merchant sells adult content.
          type: boolean
        adwordsLinks:
          description: 'List of linked AdWords accounts that are active or pending approval. To create a new link request, add a new link with status active to the list. It will remain in a pending state until approved or rejected either in the AdWords interface or through the  AdWords API. To delete an active link, or to cancel a link request, remove it from the list.'
          items:
            $ref: '#/components/schemas/AccountAdwordsLink'
          type: array
        id:
          description: Merchant Center account ID.
          format: uint64
          type: string
        kind:
          default: 'content#account'
          description: 'Identifies what kind of resource this is. Value: the fixed string "content#account".'
          type: string
        name:
          description: Display name for the account.
          type: string
        reviewsUrl:
          description: 'URL for individual seller reviews, i.e., reviews for each child account.'
          type: string
        sellerId:
          description: 'Client-specific, locally-unique, internal ID for the child account.'
          type: string
        users:
          description: Users with access to the account. Every account (except for subaccounts) must have at least one admin user.
          items:
            $ref: '#/components/schemas/AccountUser'
          type: array
        websiteUrl:
          description: The merchant's website.
          type: string
      type: object
    AccountAdwordsLink:
      properties:
        adwordsId:
          description: Customer ID of the AdWords account.
          format: uint64
          type: string
        status:
          description: 'Status of the link between this Merchant Center account and the AdWords account. Upon retrieval, it represents the actual status of the link and can be either active if it was approved in Google AdWords or pending if it''s pending approval. Upon insertion, it represents the intended status of the link. Re-uploading a link with status active when it''s still pending or with status pending when it''s already active will have no effect: the status will remain unchanged. Re-uploading a link with deprecated status inactive is equivalent to not submitting the link at all and will delete the link if it was active or cancel the link request if it was pending.'
          type: string
      type: object
    AccountIdentifier:
      properties:
        aggregatorId:
          description: 'The aggregator ID, set for aggregators and subaccounts (in that case, it represents the aggregator of the subaccount).'
          format: uint64
          type: string
        merchantId:
          description: 'The merchant account ID, set for individual accounts and subaccounts.'
          format: uint64
          type: string
      type: object
    AccountStatus:
      description: 'The status of an account, i.e., information about its products, which is computed offline and not returned immediately at insertion time.'
      properties:
        accountId:
          description: The ID of the account for which the status is reported.
          type: string
        dataQualityIssues:
          description: A list of data quality issues.
          items:
            $ref: '#/components/schemas/AccountStatusDataQualityIssue'
          type: array
        kind:
          default: 'content#accountStatus'
          description: 'Identifies what kind of resource this is. Value: the fixed string "content#accountStatus".'
          type: string
        websiteClaimed:
          description: Whether the account's website is claimed or not.
          type: boolean
      type: object
    AccountStatusDataQualityIssue:
      properties:
        country:
          description: Country for which this issue is reported.
          type: string
        detail:
          description: A more detailed description of the issue.
          type: string
        displayedValue:
          description: Actual value displayed on the landing page.
          type: string
        exampleItems:
          description: Example items featuring the issue.
          items:
            $ref: '#/components/schemas/AccountStatusExampleItem'
          type: array
        id:
          description: Issue identifier.
          type: string
        lastChecked:
          description: Last time the account was checked for this issue.
          type: string
        location:
          description: The attribute name that is relevant for the issue.
          type: string
        numItems:
          description: Number of items in the account found to have the said issue.
          format: uint32
          type: integer
        severity:
          description: Severity of the problem.
          type: string
        submittedValue:
          description: Submitted value that causes the issue.
          type: string
      type: object
    AccountStatusExampleItem:
      description: 'An example of an item that has poor data quality. An item value on the landing page differs from what is submitted, or conflicts with a policy.'
      properties:
        itemId:
          description: Unique item ID as specified in the uploaded product data.
          type: string
        link:
          description: Landing page of the item.
          type: string
        submittedValue:
          description: The item value that was submitted.
          type: string
        title:
          description: Title of the item.
          type: string
        valueOnLandingPage:
          description: The actual value on the landing page.
          type: string
      type: object
    AccountTax:
      description: The tax settings of a merchant account.
      properties:
        accountId:
          description: The ID of the account to which these account tax settings belong.
          format: uint64
          type: string
        kind:
          default: 'content#accountTax'
          description: 'Identifies what kind of resource this is. Value: the fixed string "content#accountTax".'
          type: string
        rules:
          description: Tax rules. Updating the tax rules will enable US taxes (not reversible). Defining no rules is equivalent to not charging tax at all.
          items:
            $ref: '#/components/schemas/AccountTaxTaxRule'
          type: array
      type: object
    AccountTaxTaxRule:
      description: Tax calculation rule to apply in a state or province (USA only).
      properties:
        country:
          description: Country code in which tax is applicable.
          type: string
        locationId:
          description: 'State (or province) is which the tax is applicable, described by its location id (also called criteria id).'
          format: uint64
          type: string
        ratePercent:
          description: 'Explicit tax rate in percent, represented as a floating point number without the percentage character. Must not be negative.'
          type: string
        shippingTaxed:
          description: 'If true, shipping charges are also taxed.'
          type: boolean
        useGlobalRate:
          description: Whether the tax rate is taken from a global tax table or specified explicitly.
          type: boolean
      type: object
    AccountUser:
      properties:
        admin:
          description: Whether user is an admin.
          type: boolean
        emailAddress:
          description: User's email address.
          type: string
      type: object
    AccountsAuthInfoResponse:
      properties:
        accountIdentifiers:
          description: |-
            The account identifiers corresponding to the authenticated user.
            - For an individual account: only the merchant ID is defined
            - For an aggregator: only the aggregator ID is defined
            - For a subaccount of an MCA: both the merchant ID and the aggregator ID are defined.
          items:
            $ref: '#/components/schemas/AccountIdentifier'
          type: array
        kind:
          default: 'content#accountsAuthInfoResponse'
          description: 'Identifies what kind of resource this is. Value: the fixed string "content#accountsAuthInfoResponse".'
          type: string
      type: object
    AccountsClaimWebsiteResponse:
      properties:
        kind:
          default: 'content#accountsClaimWebsiteResponse'
          description: 'Identifies what kind of resource this is. Value: the fixed string "content#accountsClaimWebsiteResponse".'
          type: string
      type: object
    AccountsCustomBatchRequest:
      properties:
        entries:
          description: The request entries to be processed in the batch.
          items:
            $ref: '#/components/schemas/AccountsCustomBatchRequestEntry'
          type: array
      type: object
    AccountsCustomBatchRequestEntry:
      description: A batch entry encoding a single non-batch accounts request.
      properties:
        account:
          $ref: '#/components/schemas/Account'
        accountId:
          description: 'The ID of the targeted account. Only defined if the method is get, delete or claimwebsite.'
          format: uint64
          type: string
        batchId:
          description: 'An entry ID, unique within the batch request.'
          format: uint32
          type: integer
        merchantId:
          description: The ID of the managing account.
          format: uint64
          type: string
        method:
          type: string
        overwrite:
          description: Only applicable if the method is claimwebsite. Indicates whether or not to take the claim from another account in case there is a conflict.
          type: boolean
      type: object
    AccountsCustomBatchResponse:
      properties:
        entries:
          description: The result of the execution of the batch requests.
          items:
            $ref: '#/components/schemas/AccountsCustomBatchResponseEntry'
          type: array
        kind:
          default: 'content#accountsCustomBatchResponse'
          description: 'Identifies what kind of resource this is. Value: the fixed string "content#accountsCustomBatchResponse".'
          type: string
      type: object
    AccountsCustomBatchResponseEntry:
      description: A batch entry encoding a single non-batch accounts response.
      properties:
        account:
          $ref: '#/components/schemas/Account'
        batchId:
          description: The ID of the request entry this entry responds to.
          format: uint32
          type: integer
        errors:
          $ref: '#/components/schemas/Errors'
        kind:
          default: 'content#accountsCustomBatchResponseEntry'
          description: 'Identifies what kind of resource this is. Value: the fixed string "content#accountsCustomBatchResponseEntry".'
          type: string
      type: object
    AccountsListResponse:
      properties:
        kind:
          default: 'content#accountsListResponse'
          description: 'Identifies what kind of resource this is. Value: the fixed string "content#accountsListResponse".'
          type: string
        nextPageToken:
          description: The token for the retrieval of the next page of accounts.
          type: string
        resources:
          items:
            $ref: '#/components/schemas/Account'
          type: array
      type: object
    AccountstatusesCustomBatchRequest:
      properties:
        entries:
          description: The request entries to be processed in the batch.
          items:
            $ref: '#/components/schemas/AccountstatusesCustomBatchRequestEntry'
          type: array
      type: object
    AccountstatusesCustomBatchRequestEntry:
      description: A batch entry encoding a single non-batch accountstatuses request.
      properties:
        accountId:
          description: The ID of the (sub-)account whose status to get.
          format: uint64
          type: string
        batchId:
          description: 'An entry ID, unique within the batch request.'
          format: uint32
          type: integer
        merchantId:
          description: The ID of the managing account.
          format: uint64
          type: string
        method:
          description: The method (get).
          type: string
      type: object
    AccountstatusesCustomBatchResponse:
      properties:
        entries:
          description: The result of the execution of the batch requests.
          items:
            $ref: '#/components/schemas/AccountstatusesCustomBatchResponseEntry'
          type: array
        kind:
          default: 'content#accountstatusesCustomBatchResponse'
          description: 'Identifies what kind of resource this is. Value: the fixed string "content#accountstatusesCustomBatchResponse".'
          type: string
      type: object
    AccountstatusesCustomBatchResponseEntry:
      description: A batch entry encoding a single non-batch accountstatuses response.
      properties:
        accountStatus:
          $ref: '#/components/schemas/AccountStatus'
        batchId:
          description: The ID of the request entry this entry responds to.
          format: uint32
          type: integer
        errors:
          $ref: '#/components/schemas/Errors'
      type: object
    AccountstatusesListResponse:
      properties:
        kind:
          default: 'content#accountstatusesListResponse'
          description: 'Identifies what kind of resource this is. Value: the fixed string "content#accountstatusesListResponse".'
          type: string
        nextPageToken:
          description: The token for the retrieval of the next page of account statuses.
          type: string
        resources:
          items:
            $ref: '#/components/schemas/AccountStatus'
          type: array
      type: object
    AccounttaxCustomBatchRequest:
      properties:
        entries:
          description: The request entries to be processed in the batch.
          items:
            $ref: '#/components/schemas/AccounttaxCustomBatchRequestEntry'
          type: array
      type: object
    AccounttaxCustomBatchRequestEntry:
      description: A batch entry encoding a single non-batch accounttax request.
      properties:
        accountId:
          description: The ID of the account for which to get/update account tax settings.
          format: uint64
          type: string
        accountTax:
          $ref: '#/components/schemas/AccountTax'
        batchId:
          description: 'An entry ID, unique within the batch request.'
          format: uint32
          type: integer
        merchantId:
          description: The ID of the managing account.
          format: uint64
          type: string
        method:
          type: string
      type: object
    AccounttaxCustomBatchResponse:
      properties:
        entries:
          description: The result of the execution of the batch requests.
          items:
            $ref: '#/components/schemas/AccounttaxCustomBatchResponseEntry'
          type: array
        kind:
          default: 'content#accounttaxCustomBatchResponse'
          description: 'Identifies what kind of resource this is. Value: the fixed string "content#accounttaxCustomBatchResponse".'
          type: string
      type: object
    AccounttaxCustomBatchResponseEntry:
      description: A batch entry encoding a single non-batch accounttax response.
      properties:
        accountTax:
          $ref: '#/components/schemas/AccountTax'
        batchId:
          description: The ID of the request entry this entry responds to.
          format: uint32
          type: integer
        errors:
          $ref: '#/components/schemas/Errors'
        kind:
          default: 'content#accounttaxCustomBatchResponseEntry'
          description: 'Identifies what kind of resource this is. Value: the fixed string "content#accounttaxCustomBatchResponseEntry".'
          type: string
      type: object
    AccounttaxListResponse:
      properties:
        kind:
          default: 'content#accounttaxListResponse'
          description: 'Identifies what kind of resource this is. Value: the fixed string "content#accounttaxListResponse".'
          type: string
        nextPageToken:
          description: The token for the retrieval of the next page of account tax settings.
          type: string
        resources:
          items:
            $ref: '#/components/schemas/AccountTax'
          type: array
      type: object
    CarrierRate:
      properties:
        carrierName:
          description: 'Carrier service, such as "UPS" or "Fedex". The list of supported carriers can be retrieved via the getSupportedCarriers method. Required.'
          type: string
        carrierService:
          description: 'Carrier service, such as "ground" or "2 days". The list of supported services for a carrier can be retrieved via the getSupportedCarriers method. Required.'
          type: string
        flatAdjustment:
          $ref: '#/components/schemas/Price'
        name:
          description: Name of the carrier rate. Must be unique per rate group. Required.
          type: string
        originPostalCode:
          description: Shipping origin for this carrier rate. Required.
          type: string
        percentageAdjustment:
          description: 'Multiplicative shipping rate modifier as a number in decimal notation. Can be negative. For example "5.4" increases the rate by 5.4%, "-3" decreases the rate by 3%. Optional.'
          type: string
      type: object
    CarriersCarrier:
      properties:
        country:
          description: 'The CLDR country code of the carrier (e.g., "US"). Always present.'
          type: string
        name:
          description: 'The name of the carrier (e.g., "UPS"). Always present.'
          type: string
        services:
          description: 'A list of supported services (e.g., "ground") for that carrier. Contains at least one service.'
          items:
            type: string
          type: array
      type: object
    Datafeed:
      description: Datafeed configuration data.
      properties:
        attributeLanguage:
          description: The two-letter ISO 639-1 language in which the attributes are defined in the data feed.
          type: string
        contentLanguage:
          description: The two-letter ISO 639-1 language of the items in the feed. Must be a valid language for targetCountry.
          type: string
        contentType:
          description: 'The type of data feed. For product inventory feeds, only feeds for local stores, not online stores, are supported.'
          type: string
        fetchSchedule:
          $ref: '#/components/schemas/DatafeedFetchSchedule'
        fileName:
          description: The filename of the feed. All feeds must have a unique file name.
          type: string
        format:
          $ref: '#/components/schemas/DatafeedFormat'
        id:
          description: The ID of the data feed.
          format: int64
          type: string
        intendedDestinations:
          description: The list of intended destinations (corresponds to checked check boxes in Merchant Center).
          items:
            type: string
          type: array
        kind:
          default: 'content#datafeed'
          description: 'Identifies what kind of resource this is. Value: the fixed string "content#datafeed".'
          type: string
        name:
          description: A descriptive name of the data feed.
          type: string
        targetCountry:
          description: 'The country where the items in the feed will be included in the search index, represented as a CLDR territory code.'
          type: string
      type: object
    DatafeedFetchSchedule:
      description: 'The required fields vary based on the frequency of fetching. For a monthly fetch schedule, day_of_month and hour are required. For a weekly fetch schedule, weekday and hour are required. For a daily fetch schedule, only hour is required.'
      properties:
        dayOfMonth:
          description: The day of the month the feed file should be fetched (1-31).
          format: uint32
          type: integer
        fetchUrl:
          description: 'The URL where the feed file can be fetched. Google Merchant Center will support automatic scheduled uploads using the HTTP, HTTPS, FTP, or SFTP protocols, so the value will need to be a valid link using one of those four protocols.'
          type: string
        hour:
          description: The hour of the day the feed file should be fetched (0-23).
          format: uint32
          type: integer
        minuteOfHour:
          description: The minute of the hour the feed file should be fetched (0-59). Read-only.
          format: uint32
          type: integer
        password:
          description: An optional password for fetch_url.
          type: string
        timeZone:
          description: 'Time zone used for schedule. UTC by default. E.g., "America/Los_Angeles".'
          type: string
        username:
          description: An optional user name for fetch_url.
          type: string
        weekday:
          description: The day of the week the feed file should be fetched.
          type: string
      type: object
    DatafeedFormat:
      properties:
        columnDelimiter:
          description: 'Delimiter for the separation of values in a delimiter-separated values feed. If not specified, the delimiter will be auto-detected. Ignored for non-DSV data feeds.'
          type: string
        fileEncoding:
          description: 'Character encoding scheme of the data feed. If not specified, the encoding will be auto-detected.'
          type: string
        quotingMode:
          description: 'Specifies how double quotes are interpreted. If not specified, the mode will be auto-detected. Ignored for non-DSV data feeds.'
          type: string
      type: object
    DatafeedStatus:
      description: 'The status of a datafeed, i.e., the result of the last retrieval of the datafeed computed asynchronously when the feed processing is finished.'
      properties:
        datafeedId:
          description: The ID of the feed for which the status is reported.
          format: uint64
          type: string
        errors:
          description: The list of errors occurring in the feed.
          items:
            $ref: '#/components/schemas/DatafeedStatusError'
          type: array
        itemsTotal:
          description: The number of items in the feed that were processed.
          format: uint64
          type: string
        itemsValid:
          description: The number of items in the feed that were valid.
          format: uint64
          type: string
        kind:
          default: 'content#datafeedStatus'
          description: 'Identifies what kind of resource this is. Value: the fixed string "content#datafeedStatus".'
          type: string
        lastUploadDate:
          description: The last date at which the feed was uploaded.
          type: string
        processingStatus:
          description: The processing status of the feed.
          type: string
        warnings:
          description: The list of errors occurring in the feed.
          items:
            $ref: '#/components/schemas/DatafeedStatusError'
          type: array
      type: object
    DatafeedStatusError:
      description: 'An error occurring in the feed, like "invalid price".'
      properties:
        code:
          description: 'The code of the error, e.g., "validation/invalid_value".'
          type: string
        count:
          description: The number of occurrences of the error in the feed.
          format: uint64
          type: string
        examples:
          description: 'A list of example occurrences of the error, grouped by product.'
          items:
            $ref: '#/components/schemas/DatafeedStatusExample'
          type: array
        message:
          description: 'The error message, e.g., "Invalid price".'
          type: string
      type: object
    DatafeedStatusExample:
      description: An example occurrence for a particular error.
      properties:
        itemId:
          description: The ID of the example item.
          type: string
        lineNumber:
          description: Line number in the data feed where the example is found.
          format: uint64
          type: string
        value:
          description: The problematic value.
          type: string
      type: object
    DatafeedsCustomBatchRequest:
      properties:
        entries:
          description: The request entries to be processed in the batch.
          items:
            $ref: '#/components/schemas/DatafeedsCustomBatchRequestEntry'
          type: array
      type: object
    DatafeedsCustomBatchRequestEntry:
      description: A batch entry encoding a single non-batch datafeeds request.
      properties:
        batchId:
          description: 'An entry ID, unique within the batch request.'
          format: uint32
          type: integer
        datafeed:
          $ref: '#/components/schemas/Datafeed'
        datafeedId:
          description: The ID of the data feed to get or delete.
          format: uint64
          type: string
        merchantId:
          description: The ID of the managing account.
          format: uint64
          type: string
        method:
          type: string
      type: object
    DatafeedsCustomBatchResponse:
      properties:
        entries:
          description: The result of the execution of the batch requests.
          items:
            $ref: '#/components/schemas/DatafeedsCustomBatchResponseEntry'
          type: array
        kind:
          default: 'content#datafeedsCustomBatchResponse'
          description: 'Identifies what kind of resource this is. Value: the fixed string "content#datafeedsCustomBatchResponse".'
          type: string
      type: object
    DatafeedsCustomBatchResponseEntry:
      description: A batch entry encoding a single non-batch datafeeds response.
      properties:
        batchId:
          description: The ID of the request entry this entry responds to.
          format: uint32
          type: integer
        datafeed:
          $ref: '#/components/schemas/Datafeed'
        errors:
          $ref: '#/components/schemas/Errors'
      type: object
    DatafeedsListResponse:
      properties:
        kind:
          default: 'content#datafeedsListResponse'
          description: 'Identifies what kind of resource this is. Value: the fixed string "content#datafeedsListResponse".'
          type: string
        nextPageToken:
          description: The token for the retrieval of the next page of datafeeds.
          type: string
        resources:
          items:
            $ref: '#/components/schemas/Datafeed'
          type: array
      type: object
    DatafeedstatusesCustomBatchRequest:
      properties:
        entries:
          description: The request entries to be processed in the batch.
          items:
            $ref: '#/components/schemas/DatafeedstatusesCustomBatchRequestEntry'
          type: array
      type: object
    DatafeedstatusesCustomBatchRequestEntry:
      description: A batch entry encoding a single non-batch datafeedstatuses request.
      properties:
        batchId:
          description: 'An entry ID, unique within the batch request.'
          format: uint32
          type: integer
        datafeedId:
          description: The ID of the data feed to get or delete.
          format: uint64
          type: string
        merchantId:
          description: The ID of the managing account.
          format: uint64
          type: string
        method:
          type: string
      type: object
    DatafeedstatusesCustomBatchResponse:
      properties:
        entries:
          description: The result of the execution of the batch requests.
          items:
            $ref: '#/components/schemas/DatafeedstatusesCustomBatchResponseEntry'
          type: array
        kind:
          default: 'content#datafeedstatusesCustomBatchResponse'
          description: 'Identifies what kind of resource this is. Value: the fixed string "content#datafeedstatusesCustomBatchResponse".'
          type: string
      type: object
    DatafeedstatusesCustomBatchResponseEntry:
      description: A batch entry encoding a single non-batch datafeedstatuses response.
      properties:
        batchId:
          description: The ID of the request entry this entry responds to.
          format: uint32
          type: integer
        datafeedStatus:
          $ref: '#/components/schemas/DatafeedStatus'
        errors:
          $ref: '#/components/schemas/Errors'
      type: object
    DatafeedstatusesListResponse:
      properties:
        kind:
          default: 'content#datafeedstatusesListResponse'
          description: 'Identifies what kind of resource this is. Value: the fixed string "content#datafeedstatusesListResponse".'
          type: string
        nextPageToken:
          description: The token for the retrieval of the next page of datafeed statuses.
          type: string
        resources:
          items:
            $ref: '#/components/schemas/DatafeedStatus'
          type: array
      type: object
    DeliveryTime:
      properties:
        maxTransitTimeInDays:
          description: 'Maximum number of business days that is spent in transit. 0 means same day delivery, 1 means next day delivery. Must be greater than or equal to minTransitTimeInDays. Required.'
          format: uint32
          type: integer
        minTransitTimeInDays:
          description: 'Minimum number of business days that is spent in transit. 0 means same day delivery, 1 means next day delivery. Required.'
          format: uint32
          type: integer
      type: object
    Error:
      description: An error returned by the API.
      properties:
        domain:
          description: The domain of the error.
          type: string
        message:
          description: A description of the error.
          type: string
        reason:
          description: The error code.
          type: string
      type: object
    Errors:
      description: A list of errors returned by a failed batch entry.
      properties:
        code:
          description: The HTTP status of the first error in errors.
          format: uint32
          type: integer
        errors:
          description: A list of errors.
          items:
            $ref: '#/components/schemas/Error'
          type: array
        message:
          description: The message of the first error in errors.
          type: string
      type: object
    Headers:
      description: 'A non-empty list of row or column headers for a table. Exactly one of prices, weights, numItems, postalCodeGroupNames, or locations must be set.'
      properties:
        locations:
          description: A list of location ID sets. Must be non-empty. Can only be set if all other fields are not set.
          items:
            $ref: '#/components/schemas/LocationIdSet'
          type: array
        numberOfItems:
          description: 'A list of inclusive number of items upper bounds. The last value can be "infinity". For example ["10", "50", "infinity"] represents the headers "<= 10 items", " 50 items". Must be non-empty. Can only be set if all other fields are not set.'
          items:
            type: string
          type: array
        postalCodeGroupNames:
          description: 'A list of postal group names. The last value can be "all other locations". Example: ["zone 1", "zone 2", "all other locations"]. The referred postal code groups must match the delivery country of the service. Must be non-empty. Can only be set if all other fields are not set.'
          items:
            type: string
          type: array
        prices:
          description: 'be "infinity". For example [{"value": "10", "currency": "USD"}, {"value": "500", "currency": "USD"}, {"value": "infinity", "currency": "USD"}] represents the headers "<= $10", " $500". All prices within a service must have the same currency. Must be non-empty. Can only be set if all other fields are not set.'
          items:
            $ref: '#/components/schemas/Price'
          type: array
        weights:
          description: 'be "infinity". For example [{"value": "10", "unit": "kg"}, {"value": "50", "unit": "kg"}, {"value": "infinity", "unit": "kg"}] represents the headers "<= 10kg", " 50kg". All weights within a service must have the same unit. Must be non-empty. Can only be set if all other fields are not set.'
          items:
            $ref: '#/components/schemas/Weight'
          type: array
      type: object
    Installment:
      properties:
        amount:
          $ref: '#/components/schemas/Price'
        months:
          description: The number of installments the buyer has to pay.
          format: int64
          type: string
      type: object
    Inventory:
      properties:
        availability:
          description: The availability of the product.
          type: string
        installment:
          $ref: '#/components/schemas/Installment'
        kind:
          default: 'content#inventory'
          description: 'Identifies what kind of resource this is. Value: the fixed string "content#inventory".'
          type: string
        loyaltyPoints:
          $ref: '#/components/schemas/LoyaltyPoints'
        pickup:
          $ref: '#/components/schemas/InventoryPickup'
        price:
          $ref: '#/components/schemas/Price'
        quantity:
          description: The quantity of the product. Must be equal to or greater than zero. Supported only for local products.
          format: uint32
          type: integer
        salePrice:
          $ref: '#/components/schemas/Price'
        salePriceEffectiveDate:
          description: 'A date range represented by a pair of ISO 8601 dates separated by a space, comma, or slash. Both dates might be specified as ''null'' if undecided.'
          type: string
        sellOnGoogleQuantity:
          description: The quantity of the product that is reserved for sell-on-google ads. Supported only for online products.
          format: uint32
          type: integer
      type: object
    InventoryCustomBatchRequest:
      properties:
        entries:
          description: The request entries to be processed in the batch.
          items:
            $ref: '#/components/schemas/InventoryCustomBatchRequestEntry'
          type: array
      type: object
    InventoryCustomBatchRequestEntry:
      description: A batch entry encoding a single non-batch inventory request.
      properties:
        batchId:
          description: 'An entry ID, unique within the batch request.'
          format: uint32
          type: integer
        inventory:
          $ref: '#/components/schemas/Inventory'
        merchantId:
          description: The ID of the managing account.
          format: uint64
          type: string
        productId:
          description: The ID of the product for which to update price and availability.
          type: string
        storeCode:
          description: The code of the store for which to update price and availability. Use online to update price and availability of an online product.
          type: string
      type: object
    InventoryCustomBatchResponse:
      properties:
        entries:
          description: The result of the execution of the batch requests.
          items:
            $ref: '#/components/schemas/InventoryCustomBatchResponseEntry'
          type: array
        kind:
          default: 'content#inventoryCustomBatchResponse'
          description: 'Identifies what kind of resource this is. Value: the fixed string "content#inventoryCustomBatchResponse".'
          type: string
      type: object
    InventoryCustomBatchResponseEntry:
      description: A batch entry encoding a single non-batch inventory response.
      properties:
        batchId:
          description: The ID of the request entry this entry responds to.
          format: uint32
          type: integer
        errors:
          $ref: '#/components/schemas/Errors'
        kind:
          default: 'content#inventoryCustomBatchResponseEntry'
          description: 'Identifies what kind of resource this is. Value: the fixed string "content#inventoryCustomBatchResponseEntry".'
          type: string
      type: object
    InventoryPickup:
      properties:
        pickupMethod:
          description: 'Whether store pickup is available for this offer and whether the pickup option should be shown as buy, reserve, or not supported. Only supported for local inventory. Unless the value is "not supported", must be submitted together with pickupSla.'
          type: string
        pickupSla:
          description: 'The expected date that an order will be ready for pickup, relative to when the order is placed. Only supported for local inventory. Must be submitted together with pickupMethod.'
          type: string
      type: object
    InventorySetRequest:
      properties:
        availability:
          description: The availability of the product.
          type: string
        installment:
          $ref: '#/components/schemas/Installment'
        loyaltyPoints:
          $ref: '#/components/schemas/LoyaltyPoints'
        pickup:
          $ref: '#/components/schemas/InventoryPickup'
        price:
          $ref: '#/components/schemas/Price'
        quantity:
          description: The quantity of the product. Must be equal to or greater than zero. Supported only for local products.
          format: uint32
          type: integer
        salePrice:
          $ref: '#/components/schemas/Price'
        salePriceEffectiveDate:
          description: 'A date range represented by a pair of ISO 8601 dates separated by a space, comma, or slash. Both dates might be specified as ''null'' if undecided.'
          type: string
        sellOnGoogleQuantity:
          description: The quantity of the product that is reserved for sell-on-google ads. Supported only for online products.
          format: uint32
          type: integer
      type: object
    InventorySetResponse:
      properties:
        kind:
          default: 'content#inventorySetResponse'
          description: 'Identifies what kind of resource this is. Value: the fixed string "content#inventorySetResponse".'
          type: string
      type: object
    LocationIdSet:
      properties:
        locationIds:
          description: 'A non-empty list of location IDs. They must all be of the same location type (e.g., state).'
          items:
            type: string
          type: array
      type: object
    LoyaltyPoints:
      properties:
        name:
          description: Name of loyalty points program. It is recommended to limit the name to 12 full-width characters or 24 Roman characters.
          type: string
        pointsValue:
          description: The retailer's loyalty points in absolute value.
          format: int64
          type: string
        ratio:
          description: 'The ratio of a point when converted to currency. Google assumes currency based on Merchant Center settings. If ratio is left out, it defaults to 1.0.'
          format: double
          type: number
      type: object
    Order:
      properties:
        acknowledged:
          description: Whether the order was acknowledged.
          type: boolean
        channelType:
          description: 'The channel type of the order: "purchaseOnGoogle" or "googleExpress".'
          type: string
        customer:
          $ref: '#/components/schemas/OrderCustomer'
        deliveryDetails:
          $ref: '#/components/schemas/OrderDeliveryDetails'
        id:
          description: The REST id of the order. Globally unique.
          type: string
        kind:
          default: 'content#order'
          description: 'Identifies what kind of resource this is. Value: the fixed string "content#order".'
          type: string
        lineItems:
          description: Line items that are ordered.
          items:
            $ref: '#/components/schemas/OrderLineItem'
          type: array
        merchantId:
          format: uint64
          type: string
        merchantOrderId:
          description: Merchant-provided id of the order.
          type: string
        netAmount:
          $ref: '#/components/schemas/Price'
        paymentMethod:
          $ref: '#/components/schemas/OrderPaymentMethod'
        paymentStatus:
          description: The status of the payment.
          type: string
        placedDate:
          description: 'The date when the order was placed, in ISO 8601 format.'
          type: string
        promotions:
          description: The details of the merchant provided promotions applied to the order. More details about the program are  here.
          items:
            $ref: '#/components/schemas/OrderPromotion'
          type: array
        refunds:
          description: Refunds for the order.
          items:
            $ref: '#/components/schemas/OrderRefund'
          type: array
        shipments:
          description: Shipments of the order.
          items:
            $ref: '#/components/schemas/OrderShipment'
          type: array
        shippingCost:
          $ref: '#/components/schemas/Price'
        shippingCostTax:
          $ref: '#/components/schemas/Price'
        shippingOption:
          description: The requested shipping option.
          type: string
        status:
          description: The status of the order.
          type: string
      type: object
    OrderAddress:
      properties:
        country:
          description: CLDR country code (e.g. "US").
          type: string
        fullAddress:
          description: |-
            Strings representing the lines of the printed label for mailing the order, for example:
            John Smith
            1600 Amphitheatre Parkway
            Mountain View, CA, 94043
            United States
          items:
            type: string
          type: array
        isPostOfficeBox:
          description: Whether the address is a post office box.
          type: boolean
        locality:
          description: 'City, town or commune. May also include dependent localities or sublocalities (e.g. neighborhoods or suburbs).'
          type: string
        postalCode:
          description: Postal Code or ZIP (e.g. "94043").
          type: string
        recipientName:
          description: Name of the recipient.
          type: string
        region:
          description: Top-level administrative subdivision of the country (e.g. "CA").
          type: string
        streetAddress:
          description: Street-level part of the address.
          items:
            type: string
          type: array
      type: object
    OrderCancellation:
      properties:
        actor:
          description: The actor that created the cancellation.
          type: string
        creationDate:
          description: 'Date on which the cancellation has been created, in ISO 8601 format.'
          type: string
        quantity:
          description: The quantity that was canceled.
          format: uint32
          type: integer
        reason:
          description: The reason for the cancellation. Orders that are cancelled with a noInventory reason will lead to the removal of the product from POG until you make an update to that product. This will not affect your Shopping ads.
          type: string
        reasonText:
          description: The explanation of the reason.
          type: string
      type: object
    OrderCustomer:
      properties:
        email:
          description: Email address of the customer.
          type: string
        explicitMarketingPreference:
          description: 'If set, this indicates the user explicitly chose to opt in or out of providing marketing rights to the merchant. If unset, this indicates the user has already made this choice in a previous purchase, and was thus not shown the marketing right opt in/out checkbox during the checkout flow.'
          type: boolean
        fullName:
          description: Full name of the customer.
          type: string
      type: object
    OrderDeliveryDetails:
      properties:
        address:
          $ref: '#/components/schemas/OrderAddress'
        phoneNumber:
          description: The phone number of the person receiving the delivery.
          type: string
      type: object
    OrderLineItem:
      properties:
        cancellations:
          description: Cancellations of the line item.
          items:
            $ref: '#/components/schemas/OrderCancellation'
          type: array
        id:
          description: The id of the line item.
          type: string
        price:
          $ref: '#/components/schemas/Price'
        product:
          $ref: '#/components/schemas/OrderLineItemProduct'
        quantityCanceled:
          description: Number of items canceled.
          format: uint32
          type: integer
        quantityDelivered:
          description: Number of items delivered.
          format: uint32
          type: integer
        quantityOrdered:
          description: Number of items ordered.
          format: uint32
          type: integer
        quantityPending:
          description: Number of items pending.
          format: uint32
          type: integer
        quantityReturned:
          description: Number of items returned.
          format: uint32
          type: integer
        quantityShipped:
          description: Number of items shipped.
          format: uint32
          type: integer
        returnInfo:
          $ref: '#/components/schemas/OrderLineItemReturnInfo'
        returns:
          description: Returns of the line item.
          items:
            $ref: '#/components/schemas/OrderReturn'
          type: array
        shippingDetails:
          $ref: '#/components/schemas/OrderLineItemShippingDetails'
        tax:
          $ref: '#/components/schemas/Price'
      type: object
    OrderLineItemProduct:
      properties:
        brand:
          description: Brand of the item.
          type: string
        channel:
          description: The item's channel (online or local).
          type: string
        condition:
          description: Condition or state of the item.
          type: string
        contentLanguage:
          description: The two-letter ISO 639-1 language code for the item.
          type: string
        gtin:
          description: Global Trade Item Number (GTIN) of the item.
          type: string
        id:
          description: The REST id of the product.
          type: string
        imageLink:
          description: URL of an image of the item.
          type: string
        itemGroupId:
          description: Shared identifier for all variants of the same product.
          type: string
        mpn:
          description: Manufacturer Part Number (MPN) of the item.
          type: string
        offerId:
          description: An identifier of the item.
          type: string
        price:
          $ref: '#/components/schemas/Price'
        shownImage:
          description: URL to the cached image shown to the user when order was placed.
          type: string
        targetCountry:
          description: The CLDR territory code of the target country of the product.
          type: string
        title:
          description: The title of the product.
          type: string
        variantAttributes:
          description: 'Variant attributes for the item. These are dimensions of the product, such as color, gender, material, pattern, and size. You can find a comprehensive list of variant attributes here.'
          items:
            $ref: '#/components/schemas/OrderLineItemProductVariantAttribute'
          type: array
      type: object
    OrderLineItemProductVariantAttribute:
      properties:
        dimension:
          description: The dimension of the variant.
          type: string
        value:
          description: The value for the dimension.
          type: string
      type: object
    OrderLineItemReturnInfo:
      properties:
        daysToReturn:
          description: How many days later the item can be returned.
          format: int32
          type: integer
        isReturnable:
          description: Whether the item is returnable.
          type: boolean
        policyUrl:
          description: URL of the item return policy.
          type: string
      type: object
    OrderLineItemShippingDetails:
      properties:
        deliverByDate:
          description: 'The delivery by date, in ISO 8601 format.'
          type: string
        method:
          $ref: '#/components/schemas/OrderLineItemShippingDetailsMethod'
        shipByDate:
          description: 'The ship by date, in ISO 8601 format.'
          type: string
      type: object
    OrderLineItemShippingDetailsMethod:
      properties:
        carrier:
          description: The carrier for the shipping. Optional.
          type: string
        maxDaysInTransit:
          description: Maximum transit time.
          format: uint32
          type: integer
        methodName:
          description: The name of the shipping method.
          type: string
        minDaysInTransit:
          description: Minimum transit time.
          format: uint32
          type: integer
      type: object
    OrderPaymentMethod:
      properties:
        billingAddress:
          $ref: '#/components/schemas/OrderAddress'
        expirationMonth:
          description: 'The card expiration month (January = 1, February = 2 etc.).'
          format: int32
          type: integer
        expirationYear:
          description: 'The card expiration year (4-digit, e.g. 2015).'
          format: int32
          type: integer
        lastFourDigits:
          description: The last four digits of the card number.
          type: string
        phoneNumber:
          description: The billing phone number.
          type: string
        type:
          description: 'The type of instrument (VISA, Mastercard, etc).'
          type: string
      type: object
    OrderPromotion:
      properties:
        benefits:
          items:
            $ref: '#/components/schemas/OrderPromotionBenefit'
          type: array
        effectiveDates:
          description: |-
            The date and time frame when the promotion is active and ready for validation review. Note that the promotion live time may be delayed for a few hours due to the validation review.
            Start date and end date are separated by a forward slash (/). The start date is specified by the format (YYYY-MM-DD), followed by the letter ?T?, the time of the day when the sale starts (in Greenwich Mean Time, GMT), followed by an expression of the time zone for the sale. The end date is in the same format.
          type: string
        genericRedemptionCode:
          description: Optional. The text code that corresponds to the promotion when applied on the retailer?s website.
          type: string
        id:
          description: The unique ID of the promotion.
          type: string
        longTitle:
          description: The full title of the promotion.
          type: string
        productApplicability:
          description: Whether the promotion is applicable to all products or only specific products.
          type: string
        redemptionChannel:
          description: Indicates that the promotion is valid online.
          type: string
      type: object
    OrderPromotionBenefit:
      properties:
        discount:
          $ref: '#/components/schemas/Price'
        offerIds:
          description: The OfferId(s) that were purchased in this order and map to this specific benefit of the promotion.
          items:
            type: string
          type: array
        subType:
          description: Further describes the benefit of the promotion. Note that we will expand on this enumeration as we support new promotion sub-types.
          type: string
        taxImpact:
          $ref: '#/components/schemas/Price'
        type:
          description: Describes whether the promotion applies to products (e.g. 20% off) or to shipping (e.g. Free Shipping).
          type: string
      type: object
    OrderRefund:
      properties:
        actor:
          description: The actor that created the refund.
          type: string
        amount:
          $ref: '#/components/schemas/Price'
        creationDate:
          description: 'Date on which the item has been created, in ISO 8601 format.'
          type: string
        reason:
          description: The reason for the refund.
          type: string
        reasonText:
          description: The explanation of the reason.
          type: string
      type: object
    OrderReturn:
      properties:
        actor:
          description: The actor that created the refund.
          type: string
        creationDate:
          description: 'Date on which the item has been created, in ISO 8601 format.'
          type: string
        quantity:
          description: Quantity that is returned.
          format: uint32
          type: integer
        reason:
          description: The reason for the return.
          type: string
        reasonText:
          description: The explanation of the reason.
          type: string
      type: object
    OrderShipment:
      properties:
        carrier:
          description: The carrier handling the shipment.
          type: string
        creationDate:
          description: 'Date on which the shipment has been created, in ISO 8601 format.'
          type: string
        deliveryDate:
          description: 'Date on which the shipment has been delivered, in ISO 8601 format. Present only if status is delievered'
          type: string
        id:
          description: The id of the shipment.
          type: string
        lineItems:
          description: The line items that are shipped.
          items:
            $ref: '#/components/schemas/OrderShipmentLineItemShipment'
          type: array
        status:
          description: The status of the shipment.
          type: string
        trackingId:
          description: The tracking id for the shipment.
          type: string
      type: object
    OrderShipmentLineItemShipment:
      properties:
        lineItemId:
          description: The id of the line item that is shipped.
          type: string
        quantity:
          description: The quantity that is shipped.
          format: uint32
          type: integer
      type: object
    OrdersAcknowledgeRequest:
      properties:
        operationId:
          description: The ID of the operation. Unique across all operations for a given order.
          type: string
      type: object
    OrdersAcknowledgeResponse:
      properties:
        executionStatus:
          description: The status of the execution.
          type: string
        kind:
          default: 'content#ordersAcknowledgeResponse'
          description: 'Identifies what kind of resource this is. Value: the fixed string "content#ordersAcknowledgeResponse".'
          type: string
      type: object
    OrdersAdvanceTestOrderResponse:
      properties:
        kind:
          default: 'content#ordersAdvanceTestOrderResponse'
          description: 'Identifies what kind of resource this is. Value: the fixed string "content#ordersAdvanceTestOrderResponse".'
          type: string
      type: object
    OrdersCancelLineItemRequest:
      properties:
        amount:
          $ref: '#/components/schemas/Price'
        lineItemId:
          description: The ID of the line item to cancel.
          type: string
        operationId:
          description: The ID of the operation. Unique across all operations for a given order.
          type: string
        quantity:
          description: The quantity to cancel.
          format: uint32
          type: integer
        reason:
          description: The reason for the cancellation.
          type: string
        reasonText:
          description: The explanation of the reason.
          type: string
      type: object
    OrdersCancelLineItemResponse:
      properties:
        executionStatus:
          description: The status of the execution.
          type: string
        kind:
          default: 'content#ordersCancelLineItemResponse'
          description: 'Identifies what kind of resource this is. Value: the fixed string "content#ordersCancelLineItemResponse".'
          type: string
      type: object
    OrdersCancelRequest:
      properties:
        operationId:
          description: The ID of the operation. Unique across all operations for a given order.
          type: string
        reason:
          description: The reason for the cancellation.
          type: string
        reasonText:
          description: The explanation of the reason.
          type: string
      type: object
    OrdersCancelResponse:
      properties:
        executionStatus:
          description: The status of the execution.
          type: string
        kind:
          default: 'content#ordersCancelResponse'
          description: 'Identifies what kind of resource this is. Value: the fixed string "content#ordersCancelResponse".'
          type: string
      type: object
    OrdersCreateTestOrderRequest:
      properties:
        templateName:
          description: The test order template to use. Specify as an alternative to testOrder as a shortcut for retrieving a template and then creating an order using that template.
          type: string
        testOrder:
          $ref: '#/components/schemas/TestOrder'
      type: object
    OrdersCreateTestOrderResponse:
      properties:
        kind:
          default: 'content#ordersCreateTestOrderResponse'
          description: 'Identifies what kind of resource this is. Value: the fixed string "content#ordersCreateTestOrderResponse".'
          type: string
        orderId:
          description: The ID of the newly created test order.
          type: string
      type: object
    OrdersCustomBatchRequest:
      properties:
        entries:
          description: The request entries to be processed in the batch.
          items:
            $ref: '#/components/schemas/OrdersCustomBatchRequestEntry'
          type: array
      type: object
    OrdersCustomBatchRequestEntry:
      properties:
        batchId:
          description: 'An entry ID, unique within the batch request.'
          format: uint32
          type: integer
        cancel:
          $ref: '#/components/schemas/OrdersCustomBatchRequestEntryCancel'
        cancelLineItem:
          $ref: '#/components/schemas/OrdersCustomBatchRequestEntryCancelLineItem'
        merchantId:
          description: The ID of the managing account.
          format: uint64
          type: string
        merchantOrderId:
          description: The merchant order id. Required for updateMerchantOrderId and getByMerchantOrderId methods.
          type: string
        method:
          description: The method to apply.
          type: string
        operationId:
          description: The ID of the operation. Unique across all operations for a given order. Required for all methods beside get and getByMerchantOrderId.
          type: string
        orderId:
          description: The ID of the order. Required for all methods beside getByMerchantOrderId.
          type: string
        refund:
          $ref: '#/components/schemas/OrdersCustomBatchRequestEntryRefund'
        returnLineItem:
          $ref: '#/components/schemas/OrdersCustomBatchRequestEntryReturnLineItem'
        shipLineItems:
          $ref: '#/components/schemas/OrdersCustomBatchRequestEntryShipLineItems'
        updateShipment:
          $ref: '#/components/schemas/OrdersCustomBatchRequestEntryUpdateShipment'
      type: object
    OrdersCustomBatchRequestEntryCancel:
      properties:
        reason:
          description: The reason for the cancellation.
          type: string
        reasonText:
          description: The explanation of the reason.
          type: string
      type: object
    OrdersCustomBatchRequestEntryCancelLineItem:
      properties:
        amount:
          $ref: '#/components/schemas/Price'
        lineItemId:
          description: The ID of the line item to cancel.
          type: string
        quantity:
          description: The quantity to cancel.
          format: uint32
          type: integer
        reason:
          description: The reason for the cancellation.
          type: string
        reasonText:
          description: The explanation of the reason.
          type: string
      type: object
    OrdersCustomBatchRequestEntryRefund:
      properties:
        amount:
          $ref: '#/components/schemas/Price'
        reason:
          description: The reason for the refund.
          type: string
        reasonText:
          description: The explanation of the reason.
          type: string
      type: object
    OrdersCustomBatchRequestEntryReturnLineItem:
      properties:
        lineItemId:
          description: The ID of the line item to return.
          type: string
        quantity:
          description: The quantity to return.
          format: uint32
          type: integer
        reason:
          description: The reason for the return.
          type: string
        reasonText:
          description: The explanation of the reason.
          type: string
      type: object
    OrdersCustomBatchRequestEntryShipLineItems:
      properties:
        carrier:
          description: The carrier handling the shipment.
          type: string
        lineItems:
          description: Line items to ship.
          items:
            $ref: '#/components/schemas/OrderShipmentLineItemShipment'
          type: array
        shipmentId:
          description: The ID of the shipment.
          type: string
        trackingId:
          description: The tracking id for the shipment.
          type: string
      type: object
    OrdersCustomBatchRequestEntryUpdateShipment:
      properties:
        carrier:
          description: The carrier handling the shipment. Not updated if missing.
          type: string
        shipmentId:
          description: The ID of the shipment.
          type: string
        status:
          description: New status for the shipment. Not updated if missing.
          type: string
        trackingId:
          description: The tracking id for the shipment. Not updated if missing.
          type: string
      type: object
    OrdersCustomBatchResponse:
      properties:
        entries:
          description: The result of the execution of the batch requests.
          items:
            $ref: '#/components/schemas/OrdersCustomBatchResponseEntry'
          type: array
        kind:
          default: 'content#ordersCustomBatchResponse'
          description: 'Identifies what kind of resource this is. Value: the fixed string "content#ordersCustomBatchResponse".'
          type: string
      type: object
    OrdersCustomBatchResponseEntry:
      properties:
        batchId:
          description: The ID of the request entry this entry responds to.
          format: uint32
          type: integer
        errors:
          $ref: '#/components/schemas/Errors'
        executionStatus:
          description: The status of the execution. Only defined if the method is not get or getByMerchantOrderId and if the request was successful.
          type: string
        kind:
          default: 'content#ordersCustomBatchResponseEntry'
          description: 'Identifies what kind of resource this is. Value: the fixed string "content#ordersCustomBatchResponseEntry".'
          type: string
        order:
          $ref: '#/components/schemas/Order'
      type: object
    OrdersGetByMerchantOrderIdResponse:
      properties:
        kind:
          default: 'content#ordersGetByMerchantOrderIdResponse'
          description: 'Identifies what kind of resource this is. Value: the fixed string "content#ordersGetByMerchantOrderIdResponse".'
          type: string
        order:
          $ref: '#/components/schemas/Order'
      type: object
    OrdersGetTestOrderTemplateResponse:
      properties:
        kind:
          default: 'content#ordersGetTestOrderTemplateResponse'
          description: 'Identifies what kind of resource this is. Value: the fixed string "content#ordersGetTestOrderTemplateResponse".'
          type: string
        template:
          $ref: '#/components/schemas/TestOrder'
      type: object
    OrdersListResponse:
      properties:
        kind:
          default: 'content#ordersListResponse'
          description: 'Identifies what kind of resource this is. Value: the fixed string "content#ordersListResponse".'
          type: string
        nextPageToken:
          description: The token for the retrieval of the next page of orders.
          type: string
        resources:
          items:
            $ref: '#/components/schemas/Order'
          type: array
      type: object
    OrdersRefundRequest:
      properties:
        amount:
          $ref: '#/components/schemas/Price'
        operationId:
          description: The ID of the operation. Unique across all operations for a given order.
          type: string
        reason:
          description: The reason for the refund.
          type: string
        reasonText:
          description: The explanation of the reason.
          type: string
      type: object
    OrdersRefundResponse:
      properties:
        executionStatus:
          description: The status of the execution.
          type: string
        kind:
          default: 'content#ordersRefundResponse'
          description: 'Identifies what kind of resource this is. Value: the fixed string "content#ordersRefundResponse".'
          type: string
      type: object
    OrdersReturnLineItemRequest:
      properties:
        lineItemId:
          description: The ID of the line item to return.
          type: string
        operationId:
          description: The ID of the operation. Unique across all operations for a given order.
          type: string
        quantity:
          description: The quantity to return.
          format: uint32
          type: integer
        reason:
          description: The reason for the return.
          type: string
        reasonText:
          description: The explanation of the reason.
          type: string
      type: object
    OrdersReturnLineItemResponse:
      properties:
        executionStatus:
          description: The status of the execution.
          type: string
        kind:
          default: 'content#ordersReturnLineItemResponse'
          description: 'Identifies what kind of resource this is. Value: the fixed string "content#ordersReturnLineItemResponse".'
          type: string
      type: object
    OrdersShipLineItemsRequest:
      properties:
        carrier:
          description: The carrier handling the shipment.
          type: string
        lineItems:
          description: Line items to ship.
          items:
            $ref: '#/components/schemas/OrderShipmentLineItemShipment'
          type: array
        operationId:
          description: The ID of the operation. Unique across all operations for a given order.
          type: string
        shipmentId:
          description: The ID of the shipment.
          type: string
        trackingId:
          description: The tracking id for the shipment.
          type: string
      type: object
    OrdersShipLineItemsResponse:
      properties:
        executionStatus:
          description: The status of the execution.
          type: string
        kind:
          default: 'content#ordersShipLineItemsResponse'
          description: 'Identifies what kind of resource this is. Value: the fixed string "content#ordersShipLineItemsResponse".'
          type: string
      type: object
    OrdersUpdateMerchantOrderIdRequest:
      properties:
        merchantOrderId:
          description: The merchant order id to be assigned to the order. Must be unique per merchant.
          type: string
        operationId:
          description: The ID of the operation. Unique across all operations for a given order.
          type: string
      type: object
    OrdersUpdateMerchantOrderIdResponse:
      properties:
        executionStatus:
          description: The status of the execution.
          type: string
        kind:
          default: 'content#ordersUpdateMerchantOrderIdResponse'
          description: 'Identifies what kind of resource this is. Value: the fixed string "content#ordersUpdateMerchantOrderIdResponse".'
          type: string
      type: object
    OrdersUpdateShipmentRequest:
      properties:
        carrier:
          description: The carrier handling the shipment. Not updated if missing.
          type: string
        operationId:
          description: The ID of the operation. Unique across all operations for a given order.
          type: string
        shipmentId:
          description: The ID of the shipment.
          type: string
        status:
          description: New status for the shipment. Not updated if missing.
          type: string
        trackingId:
          description: The tracking id for the shipment. Not updated if missing.
          type: string
      type: object
    OrdersUpdateShipmentResponse:
      properties:
        executionStatus:
          description: The status of the execution.
          type: string
        kind:
          default: 'content#ordersUpdateShipmentResponse'
          description: 'Identifies what kind of resource this is. Value: the fixed string "content#ordersUpdateShipmentResponse".'
          type: string
      type: object
    PostalCodeGroup:
      properties:
        country:
          description: The CLDR territory code of the country the postal code group applies to. Required.
          type: string
        name:
          description: 'The name of the postal code group, referred to in headers. Required.'
          type: string
        postalCodeRanges:
          description: A range of postal codes. Required.
          items:
            $ref: '#/components/schemas/PostalCodeRange'
          type: array
      type: object
    PostalCodeRange:
      properties:
        postalCodeRangeBegin:
          description: 'A postal code or a pattern of the form prefix* denoting the inclusive lower bound of the range defining the area. Examples values: "94108", "9410*", "9*". Required.'
          type: string
        postalCodeRangeEnd:
          description: 'A postal code or a pattern of the form prefix* denoting the inclusive upper bound of the range defining the area. It must have the same length as postalCodeRangeBegin: if postalCodeRangeBegin is a postal code then postalCodeRangeEnd must be a postal code too; if postalCodeRangeBegin is a pattern then postalCodeRangeEnd must be a pattern with the same prefix length. Optional: if not set, then the area is defined as being all the postal codes matching postalCodeRangeBegin.'
          type: string
      type: object
    Price:
      properties:
        currency:
          description: The currency of the price.
          type: string
        value:
          description: The price represented as a number.
          type: string
      type: object
    Product:
      description: Product data.
      properties:
        additionalImageLinks:
          description: Additional URLs of images of the item.
          items:
            type: string
          type: array
        additionalProductTypes:
          description: Additional categories of the item (formatted as in products feed specification).
          items:
            type: string
          type: array
        adult:
          description: Set to true if the item is targeted towards adults.
          type: boolean
        adwordsGrouping:
          description: 'Used to group items in an arbitrary way. Only for CPA%, discouraged otherwise.'
          type: string
        adwordsLabels:
          description: 'Similar to adwords_grouping, but only works on CPC.'
          items:
            type: string
          type: array
        adwordsRedirect:
          description: Allows advertisers to override the item URL when the product is shown within the context of Product Ads.
          type: string
        ageGroup:
          description: Target age group of the item.
          type: string
        aspects:
          description: Specifies the intended aspects for the product.
          items:
            $ref: '#/components/schemas/ProductAspect'
          type: array
        availability:
          description: Availability status of the item.
          type: string
        availabilityDate:
          description: 'The day a pre-ordered product becomes available for delivery, in ISO 8601 format.'
          type: string
        brand:
          description: Brand of the item.
          type: string
        channel:
          description: The item's channel (online or local).
          type: string
        color:
          description: Color of the item.
          type: string
        condition:
          description: Condition or state of the item.
          type: string
        contentLanguage:
          description: The two-letter ISO 639-1 language code for the item.
          type: string
        customAttributes:
          description: 'A list of custom (merchant-provided) attributes. It can also be used for submitting any attribute of the feed specification in its generic form (e.g., { "name": "size type", "type": "text", "value": "regular" }). This is useful for submitting attributes not explicitly exposed by the API.'
          items:
            $ref: '#/components/schemas/ProductCustomAttribute'
          type: array
        customGroups:
          description: A list of custom (merchant-provided) custom attribute groups.
          items:
            $ref: '#/components/schemas/ProductCustomGroup'
          type: array
        customLabel0:
          description: Custom label 0 for custom grouping of items in a Shopping campaign.
          type: string
        customLabel1:
          description: Custom label 1 for custom grouping of items in a Shopping campaign.
          type: string
        customLabel2:
          description: Custom label 2 for custom grouping of items in a Shopping campaign.
          type: string
        customLabel3:
          description: Custom label 3 for custom grouping of items in a Shopping campaign.
          type: string
        customLabel4:
          description: Custom label 4 for custom grouping of items in a Shopping campaign.
          type: string
        description:
          description: Description of the item.
          type: string
        destinations:
          description: Specifies the intended destinations for the product.
          items:
            $ref: '#/components/schemas/ProductDestination'
          type: array
        displayAdsId:
          description: An identifier for an item for dynamic remarketing campaigns.
          type: string
        displayAdsLink:
          description: URL directly to your item's landing page for dynamic remarketing campaigns.
          type: string
        displayAdsSimilarIds:
          description: Advertiser-specified recommendations.
          items:
            type: string
          type: array
        displayAdsTitle:
          description: Title of an item for dynamic remarketing campaigns.
          type: string
        displayAdsValue:
          description: Offer margin for dynamic remarketing campaigns.
          format: double
          type: number
        energyEfficiencyClass:
          description: The energy efficiency class as defined in EU directive 2010/30/EU.
          type: string
        expirationDate:
          description: 'Date on which the item should expire, as specified upon insertion, in ISO 8601 format. The actual expiration date in Google Shopping is exposed in productstatuses as googleExpirationDate and might be earlier if expirationDate is too far in the future.'
          type: string
        gender:
          description: Target gender of the item.
          type: string
        googleProductCategory:
          description: Google's category of the item (see Google product taxonomy).
          type: string
        gtin:
          description: Global Trade Item Number (GTIN) of the item.
          type: string
        id:
          description: The REST id of the product.
          type: string
        identifierExists:
          description: 'False when the item does not have unique product identifiers appropriate to its category, such as GTIN, MPN, and brand. Required according to the Unique Product Identifier Rules for all target countries except for Canada.'
          type: boolean
        imageLink:
          description: URL of an image of the item.
          type: string
        installment:
          $ref: '#/components/schemas/Installment'
        isBundle:
          description: Whether the item is a merchant-defined bundle. A bundle is a custom grouping of different products sold by a merchant for a single price.
          type: boolean
        itemGroupId:
          description: Shared identifier for all variants of the same product.
          type: string
        kind:
          default: 'content#product'
          description: 'Identifies what kind of resource this is. Value: the fixed string "content#product".'
          type: string
        link:
          description: URL directly linking to your item's page on your website.
          type: string
        loyaltyPoints:
          $ref: '#/components/schemas/LoyaltyPoints'
        material:
          description: The material of which the item is made.
          type: string
        maxHandlingTime:
          description: Maximal product handling time (in business days).
          format: int64
          type: string
        minHandlingTime:
          description: Minimal product handling time (in business days).
          format: int64
          type: string
        mobileLink:
          description: Link to a mobile-optimized version of the landing page.
          type: string
        mpn:
          description: Manufacturer Part Number (MPN) of the item.
          type: string
        multipack:
          description: The number of identical products in a merchant-defined multipack.
          format: int64
          type: string
        offerId:
          description: An identifier of the item. Leading and trailing whitespaces are stripped and multiple whitespaces are replaced by a single whitespace upon submission. Only valid unicode characters are accepted. See the products feed specification for details.
          type: string
        onlineOnly:
          description: Whether an item is available for purchase only online.
          type: boolean
        pattern:
          description: The item's pattern (e.g. polka dots).
          type: string
        price:
          $ref: '#/components/schemas/Price'
        productType:
          description: Your category of the item (formatted as in products feed specification).
          type: string
        promotionIds:
          description: The unique ID of a promotion.
          items:
            type: string
          type: array
        salePrice:
          $ref: '#/components/schemas/Price'
        salePriceEffectiveDate:
          description: Date range during which the item is on sale (see products feed specification).
          type: string
        sellOnGoogleQuantity:
          description: The quantity of the product that is reserved for sell-on-google ads.
          format: int64
          type: string
        shipping:
          description: Shipping rules.
          items:
            $ref: '#/components/schemas/ProductShipping'
          type: array
        shippingHeight:
          $ref: '#/components/schemas/ProductShippingDimension'
        shippingLabel:
          description: 'The shipping label of the product, used to group product in account-level shipping rules.'
          type: string
        shippingLength:
          $ref: '#/components/schemas/ProductShippingDimension'
        shippingWeight:
          $ref: '#/components/schemas/ProductShippingWeight'
        shippingWidth:
          $ref: '#/components/schemas/ProductShippingDimension'
        sizeSystem:
          description: System in which the size is specified. Recommended for apparel items.
          type: string
        sizeType:
          description: The cut of the item. Recommended for apparel items.
          type: string
        sizes:
          description: Size of the item.
          items:
            type: string
          type: array
        targetCountry:
          description: The CLDR territory code for the item.
          type: string
        taxes:
          description: Tax information.
          items:
            $ref: '#/components/schemas/ProductTax'
          type: array
        title:
          description: Title of the item.
          type: string
        unitPricingBaseMeasure:
          $ref: '#/components/schemas/ProductUnitPricingBaseMeasure'
        unitPricingMeasure:
          $ref: '#/components/schemas/ProductUnitPricingMeasure'
        validatedDestinations:
          description: The read-only list of intended destinations which passed validation.
          items:
            type: string
          type: array
        warnings:
          description: Read-only warnings.
          items:
            $ref: '#/components/schemas/Error'
          type: array
      type: object
    ProductAspect:
      properties:
        aspectName:
          description: The name of the aspect.
          type: string
        destinationName:
          description: The name of the destination. Leave out to apply to all destinations.
          type: string
        intention:
          description: 'Whether the aspect is required, excluded or should be validated.'
          type: string
      type: object
    ProductCustomAttribute:
      properties:
        name:
          description: The name of the attribute. Underscores will be replaced by spaces upon insertion.
          type: string
        type:
          description: The type of the attribute.
          type: string
        unit:
          description: Free-form unit of the attribute. Unit can only be used for values of type INT or FLOAT.
          type: string
        value:
          description: The value of the attribute.
          type: string
      type: object
    ProductCustomGroup:
      properties:
        attributes:
          description: The sub-attributes.
          items:
            $ref: '#/components/schemas/ProductCustomAttribute'
          type: array
        name:
          description: The name of the group. Underscores will be replaced by spaces upon insertion.
          type: string
      type: object
    ProductDestination:
      properties:
        destinationName:
          description: The name of the destination.
          type: string
        intention:
          description: 'Whether the destination is required, excluded or should be validated.'
          type: string
      type: object
    ProductShipping:
      properties:
        country:
          description: The CLDR territory code of the country to which an item will ship.
          type: string
        locationGroupName:
          description: 'The location where the shipping is applicable, represented by a location group name.'
          type: string
        locationId:
          description: The numeric id of a location that the shipping rate applies to as defined in the AdWords API.
          format: int64
          type: string
        postalCode:
          description: 'The postal code range that the shipping rate applies to, represented by a postal code, a postal code prefix followed by a * wildcard, a range between two postal codes or two postal code prefixes of equal length.'
          type: string
        price:
          $ref: '#/components/schemas/Price'
        region:
          description: The geographic region to which a shipping rate applies (e.g. zip code).
          type: string
        service:
          description: A free-form description of the service class or delivery speed.
          type: string
      type: object
    ProductShippingDimension:
      properties:
        unit:
          description: |-
            The unit of value.

            Acceptable values are:  
            - "cm" 
            - "in"
          type: string
        value:
          description: The dimension of the product used to calculate the shipping cost of the item.
          format: double
          type: number
      type: object
    ProductShippingWeight:
      properties:
        unit:
          description: The unit of value.
          type: string
        value:
          description: The weight of the product used to calculate the shipping cost of the item.
          format: double
          type: number
      type: object
    ProductStatus:
      description: 'The status of a product, i.e., information about a product computed asynchronously by the data quality analysis.'
      properties:
        creationDate:
          description: 'Date on which the item has been created, in ISO 8601 format.'
          type: string
        dataQualityIssues:
          description: A list of data quality issues associated with the product.
          items:
            $ref: '#/components/schemas/ProductStatusDataQualityIssue'
          type: array
        destinationStatuses:
          description: The intended destinations for the product.
          items:
            $ref: '#/components/schemas/ProductStatusDestinationStatus'
          type: array
        googleExpirationDate:
          description: 'Date on which the item expires in Google Shopping, in ISO 8601 format.'
          type: string
        kind:
          default: 'content#productStatus'
          description: 'Identifies what kind of resource this is. Value: the fixed string "content#productStatus".'
          type: string
        lastUpdateDate:
          description: 'Date on which the item has been last updated, in ISO 8601 format.'
          type: string
        link:
          description: The link to the product.
          type: string
        productId:
          description: The id of the product for which status is reported.
          type: string
        title:
          description: The title of the product.
          type: string
      type: object
    ProductStatusDataQualityIssue:
      properties:
        detail:
          description: A more detailed error string.
          type: string
        fetchStatus:
          description: The fetch status for landing_page_errors.
          type: string
        id:
          description: The id of the data quality issue.
          type: string
        location:
          description: The attribute name that is relevant for the issue.
          type: string
        severity:
          description: The severity of the data quality issue.
          type: string
        timestamp:
          description: The time stamp of the data quality issue.
          type: string
        valueOnLandingPage:
          description: The value of that attribute that was found on the landing page
          type: string
        valueProvided:
          description: The value the attribute had at time of evaluation.
          type: string
      type: object
    ProductStatusDestinationStatus:
      properties:
        approvalStatus:
          description: The destination's approval status.
          type: string
        destination:
          description: The name of the destination
          type: string
        intention:
          description: 'Whether the destination is required, excluded, selected by default or should be validated.'
          type: string
      type: object
    ProductTax:
      properties:
        country:
          description: 'The country within which the item is taxed, specified as a CLDR territory code.'
          type: string
        locationId:
          description: The numeric id of a location that the tax rate applies to as defined in the AdWords API.
          format: int64
          type: string
        postalCode:
          description: 'The postal code range that the tax rate applies to, represented by a ZIP code, a ZIP code prefix using * wildcard, a range between two ZIP codes or two ZIP code prefixes of equal length. Examples: 94114, 94*, 94002-95460, 94*-95*.'
          type: string
        rate:
          description: The percentage of tax rate that applies to the item price.
          format: double
          type: number
        region:
          description: The geographic region to which the tax rate applies.
          type: string
        taxShip:
          description: Set to true if tax is charged on shipping.
          type: boolean
      type: object
    ProductUnitPricingBaseMeasure:
      properties:
        unit:
          description: The unit of the denominator.
          type: string
        value:
          description: The denominator of the unit price.
          format: int64
          type: string
      type: object
    ProductUnitPricingMeasure:
      properties:
        unit:
          description: The unit of the measure.
          type: string
        value:
          description: The measure of an item.
          format: double
          type: number
      type: object
    ProductsCustomBatchRequest:
      properties:
        entries:
          description: The request entries to be processed in the batch.
          items:
            $ref: '#/components/schemas/ProductsCustomBatchRequestEntry'
          type: array
      type: object
    ProductsCustomBatchRequestEntry:
      description: A batch entry encoding a single non-batch products request.
      properties:
        batchId:
          description: 'An entry ID, unique within the batch request.'
          format: uint32
          type: integer
        merchantId:
          description: The ID of the managing account.
          format: uint64
          type: string
        method:
          type: string
        product:
          $ref: '#/components/schemas/Product'
        productId:
          description: The ID of the product to get or delete. Only defined if the method is get or delete.
          type: string
      type: object
    ProductsCustomBatchResponse:
      properties:
        entries:
          description: The result of the execution of the batch requests.
          items:
            $ref: '#/components/schemas/ProductsCustomBatchResponseEntry'
          type: array
        kind:
          default: 'content#productsCustomBatchResponse'
          description: 'Identifies what kind of resource this is. Value: the fixed string "content#productsCustomBatchResponse".'
          type: string
      type: object
    ProductsCustomBatchResponseEntry:
      description: A batch entry encoding a single non-batch products response.
      properties:
        batchId:
          description: The ID of the request entry this entry responds to.
          format: uint32
          type: integer
        errors:
          $ref: '#/components/schemas/Errors'
        kind:
          default: 'content#productsCustomBatchResponseEntry'
          description: 'Identifies what kind of resource this is. Value: the fixed string "content#productsCustomBatchResponseEntry".'
          type: string
        product:
          $ref: '#/components/schemas/Product'
      type: object
    ProductsListResponse:
      properties:
        kind:
          default: 'content#productsListResponse'
          description: 'Identifies what kind of resource this is. Value: the fixed string "content#productsListResponse".'
          type: string
        nextPageToken:
          description: The token for the retrieval of the next page of products.
          type: string
        resources:
          items:
            $ref: '#/components/schemas/Product'
          type: array
      type: object
    ProductstatusesCustomBatchRequest:
      properties:
        entries:
          description: The request entries to be processed in the batch.
          items:
            $ref: '#/components/schemas/ProductstatusesCustomBatchRequestEntry'
          type: array
      type: object
    ProductstatusesCustomBatchRequestEntry:
      description: A batch entry encoding a single non-batch productstatuses request.
      properties:
        batchId:
          description: 'An entry ID, unique within the batch request.'
          format: uint32
          type: integer
        merchantId:
          description: The ID of the managing account.
          format: uint64
          type: string
        method:
          type: string
        productId:
          description: The ID of the product whose status to get.
          type: string
      type: object
    ProductstatusesCustomBatchResponse:
      properties:
        entries:
          description: The result of the execution of the batch requests.
          items:
            $ref: '#/components/schemas/ProductstatusesCustomBatchResponseEntry'
          type: array
        kind:
          default: 'content#productstatusesCustomBatchResponse'
          description: 'Identifies what kind of resource this is. Value: the fixed string "content#productstatusesCustomBatchResponse".'
          type: string
      type: object
    ProductstatusesCustomBatchResponseEntry:
      description: A batch entry encoding a single non-batch productstatuses response.
      properties:
        batchId:
          description: The ID of the request entry this entry responds to.
          format: uint32
          type: integer
        errors:
          $ref: '#/components/schemas/Errors'
        kind:
          default: 'content#productstatusesCustomBatchResponseEntry'
          description: 'Identifies what kind of resource this is. Value: the fixed string "content#productstatusesCustomBatchResponseEntry".'
          type: string
        productStatus:
          $ref: '#/components/schemas/ProductStatus'
      type: object
    ProductstatusesListResponse:
      properties:
        kind:
          default: 'content#productstatusesListResponse'
          description: 'Identifies what kind of resource this is. Value: the fixed string "content#productstatusesListResponse".'
          type: string
        nextPageToken:
          description: The token for the retrieval of the next page of products statuses.
          type: string
        resources:
          items:
            $ref: '#/components/schemas/ProductStatus'
          type: array
      type: object
    RateGroup:
      properties:
        applicableShippingLabels:
          description: 'A list of shipping labels defining the products to which this rate group applies to. This is a disjunction: only one of the labels has to match for the rate group to apply. May only be empty for the last rate group of a service. Required.'
          items:
            type: string
          type: array
        carrierRates:
          description: A list of carrier rates that can be referred to by mainTable or singleValue.
          items:
            $ref: '#/components/schemas/CarrierRate'
          type: array
        mainTable:
          $ref: '#/components/schemas/Table'
        singleValue:
          $ref: '#/components/schemas/Value'
        subtables:
          description: A list of subtables referred to by mainTable. Can only be set if mainTable is set.
          items:
            $ref: '#/components/schemas/Table'
          type: array
      type: object
    Row:
      properties:
        cells:
          description: 'The list of cells that constitute the row. Must have the same length as columnHeaders for two-dimensional tables, a length of 1 for one-dimensional tables. Required.'
          items:
            $ref: '#/components/schemas/Value'
          type: array
      type: object
    Service:
      properties:
        active:
          description: A boolean exposing the active status of the shipping service. Required.
          type: boolean
        currency:
          description: The CLDR code of the currency to which this service applies. Must match that of the prices in rate groups.
          type: string
        deliveryCountry:
          description: The CLDR territory code of the country to which the service applies. Required.
          type: string
        deliveryTime:
          $ref: '#/components/schemas/DeliveryTime'
        name:
          description: Free-form name of the service. Must be unique within target account. Required.
          type: string
        rateGroups:
          description: 'Shipping rate group definitions. Only the last one is allowed to have an empty applicableShippingLabels, which means "everything else". The other applicableShippingLabels must not overlap.'
          items:
            $ref: '#/components/schemas/RateGroup'
          type: array
      type: object
    ShippingSettings:
      description: The merchant account's shipping settings.
      properties:
        accountId:
          description: 'The ID of the account to which these account shipping settings belong. Ignored upon update, always present in get request responses.'
          format: uint64
          type: string
        postalCodeGroups:
          description: A list of postal code groups that can be referred to in services. Optional.
          items:
            $ref: '#/components/schemas/PostalCodeGroup'
          type: array
        services:
          description: The target account's list of services. Optional.
          items:
            $ref: '#/components/schemas/Service'
          type: array
      type: object
    ShippingsettingsCustomBatchRequest:
      properties:
        entries:
          description: The request entries to be processed in the batch.
          items:
            $ref: '#/components/schemas/ShippingsettingsCustomBatchRequestEntry'
          type: array
      type: object
    ShippingsettingsCustomBatchRequestEntry:
      description: A batch entry encoding a single non-batch shippingsettings request.
      properties:
        accountId:
          description: The ID of the account for which to get/update account shipping settings.
          format: uint64
          type: string
        batchId:
          description: 'An entry ID, unique within the batch request.'
          format: uint32
          type: integer
        merchantId:
          description: The ID of the managing account.
          format: uint64
          type: string
        method:
          type: string
        shippingSettings:
          $ref: '#/components/schemas/ShippingSettings'
      type: object
    ShippingsettingsCustomBatchResponse:
      properties:
        entries:
          description: The result of the execution of the batch requests.
          items:
            $ref: '#/components/schemas/ShippingsettingsCustomBatchResponseEntry'
          type: array
        kind:
          default: 'content#shippingsettingsCustomBatchResponse'
          description: 'Identifies what kind of resource this is. Value: the fixed string "content#shippingsettingsCustomBatchResponse".'
          type: string
      type: object
    ShippingsettingsCustomBatchResponseEntry:
      description: A batch entry encoding a single non-batch shipping settings response.
      properties:
        batchId:
          description: The ID of the request entry to which this entry responds.
          format: uint32
          type: integer
        errors:
          $ref: '#/components/schemas/Errors'
        kind:
          default: 'content#shippingsettingsCustomBatchResponseEntry'
          description: 'Identifies what kind of resource this is. Value: the fixed string "content#shippingsettingsCustomBatchResponseEntry".'
          type: string
        shippingSettings:
          $ref: '#/components/schemas/ShippingSettings'
      type: object
    ShippingsettingsGetSupportedCarriersResponse:
      properties:
        carriers:
          description: A list of supported carriers. May be empty.
          items:
            $ref: '#/components/schemas/CarriersCarrier'
          type: array
        kind:
          default: 'content#shippingsettingsGetSupportedCarriersResponse'
          description: 'Identifies what kind of resource this is. Value: the fixed string "content#shippingsettingsGetSupportedCarriersResponse".'
          type: string
      type: object
    ShippingsettingsListResponse:
      properties:
        kind:
          default: 'content#shippingsettingsListResponse'
          description: 'Identifies what kind of resource this is. Value: the fixed string "content#shippingsettingsListResponse".'
          type: string
        nextPageToken:
          description: The token for the retrieval of the next page of shipping settings.
          type: string
        resources:
          items:
            $ref: '#/components/schemas/ShippingSettings'
          type: array
      type: object
    Table:
      properties:
        columnHeaders:
          $ref: '#/components/schemas/Headers'
        name:
          description: 'Name of the table. Required for subtables, ignored for the main table.'
          type: string
        rowHeaders:
          $ref: '#/components/schemas/Headers'
        rows:
          description: The list of rows that constitute the table. Must have the same length as rowHeaders. Required.
          items:
            $ref: '#/components/schemas/Row'
          type: array
      type: object
    TestOrder:
      properties:
        customer:
          $ref: '#/components/schemas/TestOrderCustomer'
        kind:
          default: 'content#testOrder'
          description: 'Identifies what kind of resource this is. Value: the fixed string "content#testOrder".'
          type: string
        lineItems:
          description: Line items that are ordered. At least one line item must be provided.
          items:
            $ref: '#/components/schemas/TestOrderLineItem'
          type: array
        paymentMethod:
          $ref: '#/components/schemas/TestOrderPaymentMethod'
        predefinedDeliveryAddress:
          description: Identifier of one of the predefined delivery addresses for the delivery.
          type: string
        promotions:
          description: The details of the merchant provided promotions applied to the order. More details about the program are  here.
          items:
            $ref: '#/components/schemas/OrderPromotion'
          type: array
        shippingCost:
          $ref: '#/components/schemas/Price'
        shippingCostTax:
          $ref: '#/components/schemas/Price'
        shippingOption:
          description: The requested shipping option.
          type: string
      type: object
    TestOrderCustomer:
      properties:
        email:
          description: Email address of the customer.
          type: string
        explicitMarketingPreference:
          description: 'If set, this indicates the user explicitly chose to opt in or out of providing marketing rights to the merchant. If unset, this indicates the user has already made this choice in a previous purchase, and was thus not shown the marketing right opt in/out checkbox during the checkout flow. Optional.'
          type: boolean
        fullName:
          description: Full name of the customer.
          type: string
      type: object
    TestOrderLineItem:
      properties:
        product:
          $ref: '#/components/schemas/TestOrderLineItemProduct'
        quantityOrdered:
          description: Number of items ordered.
          format: uint32
          type: integer
        returnInfo:
          $ref: '#/components/schemas/OrderLineItemReturnInfo'
        shippingDetails:
          $ref: '#/components/schemas/OrderLineItemShippingDetails'
        unitTax:
          $ref: '#/components/schemas/Price'
      type: object
    TestOrderLineItemProduct:
      properties:
        brand:
          description: Brand of the item.
          type: string
        channel:
          description: The item's channel.
          type: string
        condition:
          description: Condition or state of the item.
          type: string
        contentLanguage:
          description: The two-letter ISO 639-1 language code for the item.
          type: string
        gtin:
          description: Global Trade Item Number (GTIN) of the item. Optional.
          type: string
        imageLink:
          description: URL of an image of the item.
          type: string
        itemGroupId:
          description: Shared identifier for all variants of the same product. Optional.
          type: string
        mpn:
          description: Manufacturer Part Number (MPN) of the item. Optional.
          type: string
        offerId:
          description: An identifier of the item.
          type: string
        price:
          $ref: '#/components/schemas/Price'
        targetCountry:
          description: The CLDR territory code of the target country of the product.
          type: string
        title:
          description: The title of the product.
          type: string
        variantAttributes:
          description: Variant attributes for the item. Optional.
          items:
            $ref: '#/components/schemas/OrderLineItemProductVariantAttribute'
          type: array
      type: object
    TestOrderPaymentMethod:
      properties:
        expirationMonth:
          description: 'The card expiration month (January = 1, February = 2 etc.).'
          format: int32
          type: integer
        expirationYear:
          description: 'The card expiration year (4-digit, e.g. 2015).'
          format: int32
          type: integer
        lastFourDigits:
          description: The last four digits of the card number.
          type: string
        predefinedBillingAddress:
          description: The billing address.
          type: string
        type:
          description: The type of instrument. Note that real orders might have different values than the four values accepted by createTestOrder.
          type: string
      type: object
    Value:
      description: 'The single value of a rate group or the value of a rate group table''s cell. Exactly one of noShipping, flatRate, pricePercentage, carrierRateName, subtableName must be set.'
      properties:
        carrierRateName:
          description: The name of a carrier rate referring to a carrier rate defined in the same rate group. Can only be set if all other fields are not set.
          type: string
        flatRate:
          $ref: '#/components/schemas/Price'
        noShipping:
          description: 'If true, then the product can''t ship. Must be true when set, can only be set if all other fields are not set.'
          type: boolean
        pricePercentage:
          description: 'A percentage of the price represented as a number in decimal notation (e.g., "5.4"). Can only be set if all other fields are not set.'
          type: string
        subtableName:
          description: 'The name of a subtable. Can only be set in table cells (i.e., not for single values), and only if all other fields are not set.'
          type: string
      type: object
    Weight:
      properties:
        unit:
          description: The weight unit.
          type: string
        value:
          description: The weight represented as a number.
          type: string
      type: object
  parameters:
    alt:
      description: Data format for the response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
        default: json
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
        default: true
    quotaUser:
      description: 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.'
      in: query
      name: quotaUser
      schema:
        type: string
    userIp:
      description: IP address of the site where the request originates. Use this if you want to enforce per-user limits.
      in: query
      name: userIp
      schema:
        type: string
  requestBodies:
    Account:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Account'
    AccountTax:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AccountTax'
    Datafeed:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Datafeed'
    ShippingSettings:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ShippingSettings'
  securitySchemes:
    Oauth2:
      description: Oauth 2.0 implicit authentication
      type: oauth2
      flows:
        implicit:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          scopes:
            'https://www.googleapis.com/auth/content': Manage your product listings and accounts for Google Shopping
    Oauth2c:
      description: Oauth 2.0 accessCode authentication
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          tokenUrl: 'https://accounts.google.com/o/oauth2/token'
          scopes:
            'https://www.googleapis.com/auth/content': Manage your product listings and accounts for Google Shopping
