swagger: '2.0'
schemes:
  - https
host: androiddeviceprovisioning.googleapis.com
basePath: /
info:
  contact:
    name: Google
    url: 'https://google.com'
  description: Automates reseller integration into zero-touch enrollment by assigning devices to customers and creating device reports.
  license:
    name: Creative Commons Attribution 3.0
    url: 'http://creativecommons.org/licenses/by/3.0/'
  termsOfService: 'https://developers.google.com/terms/'
  title: Android Device Provisioning Partner
  version: v1
  x-apiClientRegistration:
    url: 'https://console.developers.google.com'
  x-logo:
    url: 'https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png'
  x-origin:
    - converter:
        url: 'https://github.com/lucybot/api-spec-converter'
        version: 2.6.0
      format: google
      url: 'https://androiddeviceprovisioning.googleapis.com/$discovery/rest?version=v1'
      version: v1
  x-preferred: true
  x-providerName: googleapis.com
  x-serviceName: androiddeviceprovisioning
externalDocs:
  url: 'https://developers.google.com/zero-touch/'
parameters:
  $.xgafv:
    description: V1 error format.
    enum:
      - '1'
      - '2'
    in: query
    name: $.xgafv
    type: string
  access_token:
    description: OAuth access token.
    in: query
    name: access_token
    type: string
  alt:
    default: json
    description: Data format for response.
    enum:
      - json
      - media
      - proto
    in: query
    name: alt
    type: string
  bearer_token:
    description: OAuth bearer token.
    in: query
    name: bearer_token
    type: string
  callback:
    description: JSONP
    in: query
    name: callback
    type: string
  fields:
    description: Selector specifying which fields to include in a partial response.
    in: query
    name: fields
    type: string
  key:
    description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
    in: query
    name: key
    type: string
  oauth_token:
    description: OAuth 2.0 token for the current user.
    in: query
    name: oauth_token
    type: string
  pp:
    default: true
    description: Pretty-print response.
    in: query
    name: pp
    type: boolean
  prettyPrint:
    default: true
    description: Returns response with indentations and line breaks.
    in: query
    name: prettyPrint
    type: boolean
  quotaUser:
    description: 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.'
    in: query
    name: quotaUser
    type: string
  uploadType:
    description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
    in: query
    name: uploadType
    type: string
  upload_protocol:
    description: 'Upload protocol for media (e.g. "raw", "multipart").'
    in: query
    name: upload_protocol
    type: string
tags:
  - name: customers
  - name: operations
  - name: partners
paths:
  /v1/customers:
    get:
      description: Lists the user's customer accounts.
      operationId: androiddeviceprovisioning.customers.list
      parameters:
        - description: |-
            The maximum number of customers to show in a page of results.
            A number between 1 and 1000 (inclusive).
          in: query
          name: pageSize
          type: integer
        - description: A token specifying which result page to return.
          in: query
          name: pageToken
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/CustomerListCustomersResponse'
      tags:
        - customers
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
  '/v1/partners/{metadataOwnerId}/devices/{deviceId}/metadata':
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
    post:
      description: Update the metadata.
      operationId: androiddeviceprovisioning.partners.devices.metadata
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/UpdateDeviceMetadataRequest'
        - description: ID of the partner.
          in: path
          name: deviceId
          required: true
          type: string
          x-reservedExpansion: true
        - description: The owner of the newly set metadata. Set this to the partner ID.
          in: path
          name: metadataOwnerId
          required: true
          type: string
          x-reservedExpansion: true
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/DeviceMetadata'
      tags:
        - partners
  '/v1/partners/{partnerId}/customers':
    get:
      description: |-
        Lists the customers that are enrolled to the reseller identified by the
        `partnerId` argument. This list includes customers that the reseller
        created and customers that enrolled themselves using the portal.
      operationId: androiddeviceprovisioning.partners.customers.list
      parameters:
        - description: The ID of the partner.
          in: path
          name: partnerId
          required: true
          type: string
          x-reservedExpansion: true
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ListCustomersResponse'
      tags:
        - partners
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
  '/v1/partners/{partnerId}/devices:claim':
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
    post:
      description: Claim the device identified by device identifier.
      operationId: androiddeviceprovisioning.partners.devices.claim
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/ClaimDeviceRequest'
        - description: ID of the partner.
          in: path
          name: partnerId
          required: true
          type: string
          x-reservedExpansion: true
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ClaimDeviceResponse'
      tags:
        - partners
  '/v1/partners/{partnerId}/devices:claimAsync':
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
    post:
      description: Claim devices asynchronously.
      operationId: androiddeviceprovisioning.partners.devices.claimAsync
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/ClaimDevicesRequest'
        - description: Partner ID.
          in: path
          name: partnerId
          required: true
          type: string
          x-reservedExpansion: true
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      tags:
        - partners
  '/v1/partners/{partnerId}/devices:findByIdentifier':
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
    post:
      description: Find devices by device identifier.
      operationId: androiddeviceprovisioning.partners.devices.findByIdentifier
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/FindDevicesByDeviceIdentifierRequest'
        - description: ID of the partner.
          in: path
          name: partnerId
          required: true
          type: string
          x-reservedExpansion: true
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/FindDevicesByDeviceIdentifierResponse'
      tags:
        - partners
  '/v1/partners/{partnerId}/devices:findByOwner':
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
    post:
      description: Find devices by ownership.
      operationId: androiddeviceprovisioning.partners.devices.findByOwner
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/FindDevicesByOwnerRequest'
        - description: ID of the partner.
          in: path
          name: partnerId
          required: true
          type: string
          x-reservedExpansion: true
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/FindDevicesByOwnerResponse'
      tags:
        - partners
  '/v1/partners/{partnerId}/devices:unclaim':
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
    post:
      description: Unclaim the device identified by the `device_id` or the `deviceIdentifier`.
      operationId: androiddeviceprovisioning.partners.devices.unclaim
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/UnclaimDeviceRequest'
        - description: ID of the partner.
          in: path
          name: partnerId
          required: true
          type: string
          x-reservedExpansion: true
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Empty'
      tags:
        - partners
  '/v1/partners/{partnerId}/devices:unclaimAsync':
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
    post:
      description: Unclaim devices asynchronously.
      operationId: androiddeviceprovisioning.partners.devices.unclaimAsync
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/UnclaimDevicesRequest'
        - description: Partner ID.
          in: path
          name: partnerId
          required: true
          type: string
          x-reservedExpansion: true
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      tags:
        - partners
  '/v1/partners/{partnerId}/devices:updateMetadataAsync':
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
    post:
      description: Set metadata in batch asynchronously.
      operationId: androiddeviceprovisioning.partners.devices.updateMetadataAsync
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/UpdateDeviceMetadataInBatchRequest'
        - description: Partner ID.
          in: path
          name: partnerId
          required: true
          type: string
          x-reservedExpansion: true
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      tags:
        - partners
  '/v1/{name}':
    delete:
      description: |-
        Deletes an unused configuration. The API call fails if the customer has
        devices with the configuration applied.
      operationId: androiddeviceprovisioning.customers.configurations.delete
      parameters:
        - description: |-
            Required. The configuration to delete. An API resource name in the format
            `customers/[CUSTOMER_ID]/configurations/[CONFIGURATION_ID]`. If the
            configuration is applied to any devices, the API call fails.
          in: path
          name: name
          required: true
          type: string
          x-reservedExpansion: true
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Empty'
      tags:
        - customers
    get:
      description: Get a device.
      operationId: androiddeviceprovisioning.partners.devices.get
      parameters:
        - description: 'Resource name in `partners/[PARTNER_ID]/devices/[DEVICE_ID]`.'
          in: path
          name: name
          required: true
          type: string
          x-reservedExpansion: true
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Device'
      tags:
        - partners
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
    patch:
      description: Updates a configuration's field values.
      operationId: androiddeviceprovisioning.customers.configurations.patch
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Configuration'
        - description: |-
            Output only. The API resource name in the format
            `customers/[CUSTOMER_ID]/configurations/[CONFIGURATION_ID]`. Assigned by
            the server.
          in: path
          name: name
          required: true
          type: string
          x-reservedExpansion: true
        - description: |-
            Required. The field mask applied to the target `Configuration` before
            updating the fields. To learn more about using field masks, read
            [FieldMask](/protocol-buffers/docs/reference/google.protobuf#fieldmask) in
            the Protocol Buffers documentation.
          in: query
          name: updateMask
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Configuration'
      tags:
        - customers
  '/v1/{parent}/configurations':
    get:
      description: Lists a customer's configurations.
      operationId: androiddeviceprovisioning.customers.configurations.list
      parameters:
        - description: |-
            Required. The customer that manages the listed configurations. An API
            resource name in the format `customers/[CUSTOMER_ID]`.
          in: path
          name: parent
          required: true
          type: string
          x-reservedExpansion: true
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/CustomerListConfigurationsResponse'
      tags:
        - customers
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
    post:
      description: |-
        Creates a new configuration. Once created, a customer can apply the
        configuration to devices.
      operationId: androiddeviceprovisioning.customers.configurations.create
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Configuration'
        - description: |-
            Required. The customer that manages the configuration. An API resource name
            in the format `customers/[CUSTOMER_ID]`.
          in: path
          name: parent
          required: true
          type: string
          x-reservedExpansion: true
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Configuration'
      tags:
        - customers
  '/v1/{parent}/customers':
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
    post:
      description: |-
        Creates a customer for zero-touch enrollment. After the method returns
        successfully, admin and owner roles can manage devices and EMM configs
        by calling API methods or using their zero-touch enrollment portal. The API
        doesn't notify the customer that they have access.
      operationId: androiddeviceprovisioning.partners.customers.create
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/CreateCustomerRequest'
        - description: |-
            Required. The parent resource ID in the format `partners/[PARTNER_ID]` that
            identifies the reseller.
          in: path
          name: parent
          required: true
          type: string
          x-reservedExpansion: true
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Company'
      tags:
        - partners
  '/v1/{parent}/devices':
    get:
      description: Lists a customer's devices.
      operationId: androiddeviceprovisioning.customers.devices.list
      parameters:
        - description: |-
            The maximum number of devices to show in a page of results.
            Must be between 1 and 100 inclusive.
          in: query
          name: pageSize
          type: string
        - description: A token specifying which result page to return.
          in: query
          name: pageToken
          type: string
        - description: |-
            Required. The customer managing the devices. An API resource name in the
            format `customers/[CUSTOMER_ID]`.
          in: path
          name: parent
          required: true
          type: string
          x-reservedExpansion: true
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/CustomerListDevicesResponse'
      tags:
        - customers
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
  '/v1/{parent}/devices:applyConfiguration':
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
    post:
      description: |-
        Applies a Configuration to the device to register the device for zero-touch
        enrollment. After applying a configuration to a device, the device
        automatically provisions itself on first boot, or next factory reset.
      operationId: androiddeviceprovisioning.customers.devices.applyConfiguration
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/CustomerApplyConfigurationRequest'
        - description: |-
            Required. The customer managing the device. An API resource name in the
            format `customers/[CUSTOMER_ID]`.
          in: path
          name: parent
          required: true
          type: string
          x-reservedExpansion: true
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Empty'
      tags:
        - customers
  '/v1/{parent}/devices:removeConfiguration':
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
    post:
      description: Removes a configuration from device.
      operationId: androiddeviceprovisioning.customers.devices.removeConfiguration
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/CustomerRemoveConfigurationRequest'
        - description: |-
            Required. The customer managing the device in the format
            `customers/[CUSTOMER_ID]`.
          in: path
          name: parent
          required: true
          type: string
          x-reservedExpansion: true
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Empty'
      tags:
        - customers
  '/v1/{parent}/devices:unclaim':
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
    post:
      description: |-
        Unclaims a device from a customer and removes it from zero-touch
        enrollment.

        After removing a device, a customer must contact their reseller to register
        the device into zero-touch enrollment again.
      operationId: androiddeviceprovisioning.customers.devices.unclaim
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/CustomerUnclaimDeviceRequest'
        - description: |-
            Required. The customer managing the device. An API resource name in the
            format `customers/[CUSTOMER_ID]`.
          in: path
          name: parent
          required: true
          type: string
          x-reservedExpansion: true
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Empty'
      tags:
        - customers
  '/v1/{parent}/dpcs':
    get:
      description: |-
        Lists the DPCs (device policy controllers) that support zero-touch
        enrollment.
      operationId: androiddeviceprovisioning.customers.dpcs.list
      parameters:
        - description: |-
            Required. The customer that can use the DPCs in configurations. An API
            resource name in the format `customers/[CUSTOMER_ID]`.
          in: path
          name: parent
          required: true
          type: string
          x-reservedExpansion: true
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/CustomerListDpcsResponse'
      tags:
        - customers
    parameters:
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/upload_protocol'
definitions:
  ClaimDeviceRequest:
    description: Request message to claim a device on behalf of a customer.
    properties:
      customerId:
        description: The customer to claim for.
        format: int64
        type: string
      deviceIdentifier:
        $ref: '#/definitions/DeviceIdentifier'
        description: The device identifier of the device to claim.
      sectionType:
        description: The section to claim.
        enum:
          - SECTION_TYPE_UNSPECIFIED
          - SECTION_TYPE_ZERO_TOUCH
        type: string
    type: object
  ClaimDeviceResponse:
    description: Response message containing device id of the claim.
    properties:
      deviceId:
        description: The device ID of the claimed device.
        format: int64
        type: string
      deviceName:
        description: |-
          The resource name of the device in the format
          `partners/[PARTNER_ID]/devices/[DEVICE_ID]`.
        type: string
    type: object
  ClaimDevicesRequest:
    description: Request to claim devices asynchronously in batch.
    properties:
      claims:
        description: List of claims.
        items:
          $ref: '#/definitions/PartnerClaim'
        type: array
    type: object
  Company:
    description: A customer resource in the zero-touch enrollment API.
    properties:
      adminEmails:
        description: |-
          Input only. Optional. Email address of customer's users in the admin role.
          Each email address must be associated with a Google Account.
        items:
          type: string
        type: array
      companyId:
        description: Output only. The ID of the company. Assigned by the server.
        format: int64
        type: string
      companyName:
        description: |-
          Required. The name of the company. For example _XYZ Corp_. Characters
          allowed are: Latin letters, numerals, hyphens, and spaces. Displayed to the
          customer's employees in the zero-touch enrollment portal.
        type: string
      name:
        description: |-
          Output only. The API resource name of the company in the format
          `partners/[PARTNER_ID]/customers/[CUSTOMER_ID]`. Assigned by the server.
        type: string
      ownerEmails:
        description: |-
          Input only. Email address of customer's users in the owner role. At least
          one `owner_email` is required. Each email address must be associated with a
          Google Account. Owners share the same access as admins but can also add,
          delete, and edit your organization's portal users.
        items:
          type: string
        type: array
    type: object
  Configuration:
    description: |-
      A configuration collects the provisioning options for Android devices. Each
      configuration combines the following:

      * The EMM device policy controller (DPC) installed on the devices.
      * EMM policies enforced on the devices.
      * Metadata displayed on the device to help users during setup.

      Customers can add as many configurations as they need. However, zero-touch
      enrollment works best when a customer sets a default configuration that's
      applied to any new devices the organization purchases.
    properties:
      companyName:
        description: |-
          Required. The name of the organization. Zero-touch enrollment shows this
          organization name to device users during device provisioning.
        type: string
      configurationId:
        description: Output only. The ID of the configuration. Assigned by the server.
        format: int64
        type: string
      configurationName:
        description: |-
          Required. A short name that describes the configuration's purpose. For
          example, _Sales team_ or _Temporary employees_. The zero-touch enrollment
          portal displays this name to IT admins.
        type: string
      contactEmail:
        description: |-
          Required. The email address that device users can contact to get help.
          Zero-touch enrollment shows this email address to device users before
          device provisioning. The value is validated on input.
        type: string
      contactPhone:
        description: |-
          Required. The telephone number that device users can call, using another
          device, to get help. Zero-touch enrollment shows this number to device
          users before device provisioning. Accepts numerals, spaces, the plus sign,
          hyphens, and parentheses.
        type: string
      customMessage:
        description: |-
          A message, containing one or two sentences, to help device users get help
          or give them more details about what’s happening to their device.
          Zero-touch enrollment shows this message before the device is provisioned.
        type: string
      dpcExtras:
        description: The JSON-formatted EMM provisioning extras that are passed to the DPC.
        type: string
      dpcResourcePath:
        description: |-
          Required. The resource name of the selected DPC (device policy controller)
          in the format `customers/[CUSTOMER_ID]/dpcs/*`. To list the supported DPCs,
          call
          `customers.dpcs.list`.
        type: string
      isDefault:
        description: |-
          Required. Whether this is the default configuration that zero-touch
          enrollment applies to any new devices the organization purchases in the
          future. Only one customer configuration can be the default. Setting this
          value to `true`, changes the previous default configuration's `isDefault`
          value to `false`.
        type: boolean
      name:
        description: |-
          Output only. The API resource name in the format
          `customers/[CUSTOMER_ID]/configurations/[CONFIGURATION_ID]`. Assigned by
          the server.
        type: string
    type: object
  CreateCustomerRequest:
    description: Request message to create a customer.
    properties:
      customer:
        $ref: '#/definitions/Company'
        description: |-
          Required. The company data to populate the new customer. Must contain a
          value for `companyName` and at least one `owner_email` that's associated
          with a Google Account. The values for `companyId` and `name` must be empty.
    type: object
  CustomerApplyConfigurationRequest:
    description: Request message for customer to assign a configuration to device.
    properties:
      configuration:
        description: |-
          Required. The configuration applied to the device in the format
          `customers/[CUSTOMER_ID]/configurations/[CONFIGURATION_ID]`.
        type: string
      device:
        $ref: '#/definitions/DeviceReference'
        description: Required. The device the configuration is applied to.
    type: object
  CustomerListConfigurationsResponse:
    description: Response message of customer's listing configuration.
    properties:
      configurations:
        description: The configurations.
        items:
          $ref: '#/definitions/Configuration'
        type: array
    type: object
  CustomerListCustomersResponse:
    description: Response message for listing my customers.
    properties:
      customers:
        description: The customer accounts the calling user is a member of.
        items:
          $ref: '#/definitions/Company'
        type: array
      nextPageToken:
        description: |-
          A token used to access the next page of results. Omitted if no further
          results are available.
        type: string
    type: object
  CustomerListDevicesResponse:
    description: Response message of customer's liting devices.
    properties:
      devices:
        description: The customer's devices.
        items:
          $ref: '#/definitions/Device'
        type: array
      nextPageToken:
        description: |-
          A token used to access the next page of results. Omitted if no further
          results are available.
        type: string
    type: object
  CustomerListDpcsResponse:
    description: Response message of customer's listing DPCs.
    properties:
      dpcs:
        description: |-
          The list of DPCs available to the customer that support zero-touch
          enrollment.
        items:
          $ref: '#/definitions/Dpc'
        type: array
    type: object
  CustomerRemoveConfigurationRequest:
    description: Request message for customer to remove the configuration from device.
    properties:
      device:
        $ref: '#/definitions/DeviceReference'
        description: Required. The device to remove the configuration from.
    type: object
  CustomerUnclaimDeviceRequest:
    description: Request message for customer to unclaim a device.
    properties:
      device:
        $ref: '#/definitions/DeviceReference'
        description: Required. The device to unclaim.
    type: object
  Device:
    description: An Android device registered for zero-touch enrollment.
    properties:
      claims:
        description: |-
          Output only. The provisioning claims for a device. Devices claimed for
          zero-touch enrollment have a claim with the type `SECTION_TYPE_ZERO_TOUCH`.
          Call
          `partners.devices.unclaim`
          or
          `partners.devices.unclaimAsync`
          to remove the device from zero-touch enrollment.
        items:
          $ref: '#/definitions/DeviceClaim'
        type: array
      configuration:
        description: Not available to resellers.
        type: string
      deviceId:
        description: Output only. The ID of the device. Assigned by the server.
        format: int64
        type: string
      deviceIdentifier:
        $ref: '#/definitions/DeviceIdentifier'
        description: |-
          The hardware IDs that identify a manufactured device. To learn more, read
          [Identifiers](/zero-touch/guides/identifiers).
      deviceMetadata:
        $ref: '#/definitions/DeviceMetadata'
        description: |-
          The metadata attached to the device. Structured as key-value pairs. To
          learn more, read [Device metadata](/zero-touch/guides/metadata).
      name:
        description: |-
          Output only. The API resource name in the format
          `partners/[PARTNER_ID]/devices/[DEVICE_ID]`. Assigned by the server.
        type: string
    type: object
  DeviceClaim:
    description: |-
      A record of a device claimed by a reseller for a customer. Devices claimed
      for zero-touch enrollment have a claim with the type
      `SECTION_TYPE_ZERO_TOUCH`. To learn more, read
      [Claim devices for customers](/zero-touch/guides/how-it-works#claim).
    properties:
      ownerCompanyId:
        description: The ID of the Customer that purchased the device.
        format: int64
        type: string
      sectionType:
        description: Output only. The type of claim made on the device.
        enum:
          - SECTION_TYPE_UNSPECIFIED
          - SECTION_TYPE_ZERO_TOUCH
        type: string
    type: object
  DeviceIdentifier:
    description: |-
      Encapsulates hardware and product IDs to identify a manufactured device. To
      learn more, read [Identifiers](/zero-touch/guides/identifiers).
    properties:
      imei:
        description: The device’s IMEI number. Validated on input.
        type: string
      manufacturer:
        description: |-
          Required. The device manufacturer’s name. Matches the device's built-in
          value returned from `android.os.Build.MANUFACTURER`. Allowed values are
          listed in [manufacturer names](/zero-touch/resources/manufacturer-names).
        type: string
      meid:
        description: The device’s MEID number.
        type: string
      serialNumber:
        description: |-
          The manufacturer's serial number for the device. This value might not be
          unique.
        type: string
    type: object
  DeviceMetadata:
    description: |-
      Metadata entries that can be attached to a `Device`. To learn more, read
      [Device metadata](/zero-touch/guides/metadata).
    properties:
      entries:
        additionalProperties:
          type: string
        description: Metadata entries recorded as key-value pairs.
        type: object
    type: object
  DeviceReference:
    description: |-
      A `DeviceReference` is an API abstraction that lets you supply a _device_
      argument to a method using one of the following identifier types:

      * A numeric API resource ID.
      * Real-world hardware IDs, such as IMEI number, belonging to the manufactured
        device.

      Methods that operate on devices take a `DeviceReference` as a parameter type
      because it's more flexible for the caller. To learn more about device
      identifiers, read [Identifiers](/zero-touch/guides/identifiers).
    properties:
      deviceId:
        description: The ID of the device.
        format: int64
        type: string
      deviceIdentifier:
        $ref: '#/definitions/DeviceIdentifier'
        description: The hardware IDs of the device.
    type: object
  DevicesLongRunningOperationMetadata:
    description: Long running operation metadata.
    properties:
      devicesCount:
        description: Number of devices parsed in your requests.
        format: int32
        type: integer
      processingStatus:
        description: The overall processing status.
        enum:
          - BATCH_PROCESS_STATUS_UNSPECIFIED
          - BATCH_PROCESS_PENDING
          - BATCH_PROCESS_IN_PROGRESS
          - BATCH_PROCESS_PROCESSED
        type: string
      progress:
        description: Processing progress from 0 to 100.
        format: int32
        type: integer
    type: object
  DevicesLongRunningOperationResponse:
    description: Long running operation response.
    properties:
      perDeviceStatus:
        description: |-
          Processing status for each device.
          One `PerDeviceStatus` per device. The order is the same as in your requests.
        items:
          $ref: '#/definitions/OperationPerDevice'
        type: array
      successCount:
        description: Number of succeesfully processed ones.
        format: int32
        type: integer
    type: object
  Dpc:
    description: |-
      An EMM's DPC ([device policy controller](/android/work/dpc/build-dpc)).
      Zero-touch enrollment installs a DPC (listed in the `Configuration`) on a
      device to maintain the customer's mobile policies. All the DPCs listed by the
      API support zero-touch enrollment and are available in Google Play.
    properties:
      dpcName:
        description: |-
          Output only. The title of the DPC app in Google Play. For example, _Google
          Apps Device Policy_. Useful in an application's user interface.
        type: string
      name:
        description: |-
          Output only. The API resource name in the format
          `customers/[CUSTOMER_ID]/dpcs/[DPC_ID]`. Assigned by
          the server. To maintain a reference to a DPC across customer accounts,
          persist and match the last path component (`DPC_ID`).
        type: string
      packageName:
        description: |-
          Output only. The DPC's Android application ID that looks like a Java
          package name. Zero-touch enrollment installs the DPC app onto a device
          using this identifier.
        type: string
    type: object
  Empty:
    description: |-
      A generic empty message that you can re-use to avoid defining duplicated
      empty messages in your APIs. A typical example is to use it as the request
      or the response type of an API method. For instance:

          service Foo {
            rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);
          }

      The JSON representation for `Empty` is empty JSON object `{}`.
    properties: {}
    type: object
  FindDevicesByDeviceIdentifierRequest:
    description: Request to find devices.
    properties:
      deviceIdentifier:
        $ref: '#/definitions/DeviceIdentifier'
        description: The device identifier to search.
      limit:
        description: Number of devices to show.
        format: int64
        type: string
      pageToken:
        description: Page token.
        type: string
    type: object
  FindDevicesByDeviceIdentifierResponse:
    description: Response containing found devices.
    properties:
      devices:
        description: Found devices.
        items:
          $ref: '#/definitions/Device'
        type: array
      nextPageToken:
        description: Page token of the next page.
        type: string
    type: object
  FindDevicesByOwnerRequest:
    description: Request to find devices by customers.
    properties:
      customerId:
        description: List of customer IDs to search for.
        items:
          format: int64
          type: string
        type: array
      limit:
        description: The number of devices to show in the result.
        format: int64
        type: string
      pageToken:
        description: Page token.
        type: string
      sectionType:
        description: The section type.
        enum:
          - SECTION_TYPE_UNSPECIFIED
          - SECTION_TYPE_ZERO_TOUCH
        type: string
    type: object
  FindDevicesByOwnerResponse:
    description: Response containing found devices.
    properties:
      devices:
        description: Devices found.
        items:
          $ref: '#/definitions/Device'
        type: array
      nextPageToken:
        description: Page token of the next page.
        type: string
    type: object
  ListCustomersResponse:
    description: Response message of all customers related to this partner.
    properties:
      customers:
        description: List of customers related to this partner.
        items:
          $ref: '#/definitions/Company'
        type: array
    type: object
  Operation:
    description: |-
      This resource represents a long-running operation that is the result of a
      network API call.
    properties:
      done:
        description: |-
          If the value is `false`, it means the operation is still in progress.
          If `true`, the operation is completed, and either `error` or `response` is
          available.
        type: boolean
      error:
        $ref: '#/definitions/Status'
        description: 'This field will always be not set if the operation is created by `claimAsync`, `unclaimAsync`, or `updateMetadataAsync`. In this case, error information for each device is set in `response.perDeviceStatus.result.status`.'
      metadata:
        additionalProperties:
          description: Properties of the object. Contains field @type with type URL.
        description: 'This field will contain a `DevicesLongRunningOperationMetadata` object if the operation is created by `claimAsync`, `unclaimAsync`, or `updateMetadataAsync`.'
        type: object
      name:
        description: |-
          The server-assigned name, which is only unique within the same service that
          originally returns it. If you use the default HTTP mapping, the
          `name` should have the format of `operations/some/unique/name`.
        type: string
      response:
        additionalProperties:
          description: Properties of the object. Contains field @type with type URL.
        description: 'This field will contain a `DevicesLongRunningOperationResponse` object if the operation is created by `claimAsync`, `unclaimAsync`, or `updateMetadataAsync`.'
        type: object
    type: object
  OperationPerDevice:
    description: Operation the server received for every device.
    properties:
      claim:
        $ref: '#/definitions/PartnerClaim'
        description: Request to claim a device.
      result:
        $ref: '#/definitions/PerDeviceStatusInBatch'
        description: Processing result for every device.
      unclaim:
        $ref: '#/definitions/PartnerUnclaim'
        description: Request to unclaim a device.
      updateMetadata:
        $ref: '#/definitions/UpdateMetadataArguments'
        description: Request to set metadata for a device.
    type: object
  PartnerClaim:
    description: Identifies one claim request.
    properties:
      customerId:
        description: Customer ID to claim for.
        format: int64
        type: string
      deviceIdentifier:
        $ref: '#/definitions/DeviceIdentifier'
        description: Device identifier of the device.
      deviceMetadata:
        $ref: '#/definitions/DeviceMetadata'
        description: Metadata to set at claim.
      sectionType:
        description: Section type to claim.
        enum:
          - SECTION_TYPE_UNSPECIFIED
          - SECTION_TYPE_ZERO_TOUCH
        type: string
    type: object
  PartnerUnclaim:
    description: Identifies one unclaim request.
    properties:
      deviceId:
        description: Device ID of the device.
        format: int64
        type: string
      deviceIdentifier:
        $ref: '#/definitions/DeviceIdentifier'
        description: Device identifier of the device.
      sectionType:
        description: Section type to unclaim.
        enum:
          - SECTION_TYPE_UNSPECIFIED
          - SECTION_TYPE_ZERO_TOUCH
        type: string
    type: object
  PerDeviceStatusInBatch:
    description: Stores the processing result for each device.
    properties:
      deviceId:
        description: Device ID of the device if process succeeds.
        format: int64
        type: string
      errorIdentifier:
        description: Error identifier.
        type: string
      errorMessage:
        description: Error message.
        type: string
      status:
        description: Process result.
        enum:
          - SINGLE_DEVICE_STATUS_UNSPECIFIED
          - SINGLE_DEVICE_STATUS_UNKNOWN_ERROR
          - SINGLE_DEVICE_STATUS_OTHER_ERROR
          - SINGLE_DEVICE_STATUS_SUCCESS
          - SINGLE_DEVICE_STATUS_PERMISSION_DENIED
          - SINGLE_DEVICE_STATUS_INVALID_DEVICE_IDENTIFIER
          - SINGLE_DEVICE_STATUS_INVALID_SECTION_TYPE
          - SINGLE_DEVICE_STATUS_SECTION_NOT_YOURS
        type: string
    type: object
  Status:
    description: |-
      The `Status` type defines a logical error model that is suitable for different
      programming environments, including REST APIs and RPC APIs. It is used by
      [gRPC](https://github.com/grpc). The error model is designed to be:

      - Simple to use and understand for most users
      - Flexible enough to meet unexpected needs

      # Overview

      The `Status` message contains three pieces of data: error code, error message,
      and error details. The error code should be an enum value of
      google.rpc.Code, but it may accept additional error codes if needed.  The
      error message should be a developer-facing English message that helps
      developers *understand* and *resolve* the error. If a localized user-facing
      error message is needed, put the localized message in the error details or
      localize it in the client. The optional error details may contain arbitrary
      information about the error. There is a predefined set of error detail types
      in the package `google.rpc` that can be used for common error conditions.

      # Language mapping

      The `Status` message is the logical representation of the error model, but it
      is not necessarily the actual wire format. When the `Status` message is
      exposed in different client libraries and different wire protocols, it can be
      mapped differently. For example, it will likely be mapped to some exceptions
      in Java, but more likely mapped to some error codes in C.

      # Other uses

      The error model and the `Status` message can be used in a variety of
      environments, either with or without APIs, to provide a
      consistent developer experience across different environments.

      Example uses of this error model include:

      - Partial errors. If a service needs to return partial errors to the client,
          it may embed the `Status` in the normal response to indicate the partial
          errors.

      - Workflow errors. A typical workflow has multiple steps. Each step may
          have a `Status` message for error reporting.

      - Batch operations. If a client uses batch request and batch response, the
          `Status` message should be used directly inside batch response, one for
          each error sub-response.

      - Asynchronous operations. If an API call embeds asynchronous operation
          results in its response, the status of those operations should be
          represented directly using the `Status` message.

      - Logging. If some API errors are stored in logs, the message `Status` could
          be used directly after any stripping needed for security/privacy reasons.
    properties:
      code:
        description: 'The status code, which should be an enum value of google.rpc.Code.'
        format: int32
        type: integer
      details:
        description: |-
          A list of messages that carry the error details.  There is a common set of
          message types for APIs to use.
        items:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
          type: object
        type: array
      message:
        description: |-
          A developer-facing error message, which should be in English. Any
          user-facing error message should be localized and sent in the
          google.rpc.Status.details field, or localized by the client.
        type: string
    type: object
  UnclaimDeviceRequest:
    description: Request message to unclaim a device.
    properties:
      deviceId:
        description: The device ID returned by `ClaimDevice`.
        format: int64
        type: string
      deviceIdentifier:
        $ref: '#/definitions/DeviceIdentifier'
        description: The device identifier you used when you claimed this device.
      sectionType:
        description: The section type to unclaim for.
        enum:
          - SECTION_TYPE_UNSPECIFIED
          - SECTION_TYPE_ZERO_TOUCH
        type: string
    type: object
  UnclaimDevicesRequest:
    description: Request to unclaim devices asynchronously in batch.
    properties:
      unclaims:
        description: List of devices to unclaim.
        items:
          $ref: '#/definitions/PartnerUnclaim'
        type: array
    type: object
  UpdateDeviceMetadataInBatchRequest:
    description: Request to update device metadata in batch.
    properties:
      updates:
        description: List of metadata updates.
        items:
          $ref: '#/definitions/UpdateMetadataArguments'
        type: array
    type: object
  UpdateDeviceMetadataRequest:
    description: Request to set metadata for a device.
    properties:
      deviceMetadata:
        $ref: '#/definitions/DeviceMetadata'
        description: The metdata to set.
    type: object
  UpdateMetadataArguments:
    description: Identifies metdata updates to one device.
    properties:
      deviceId:
        description: Device ID of the device.
        format: int64
        type: string
      deviceIdentifier:
        $ref: '#/definitions/DeviceIdentifier'
        description: Device identifier.
      deviceMetadata:
        $ref: '#/definitions/DeviceMetadata'
        description: The metadata to update.
    type: object
