openapi: 3.0.0
servers:
  - url: 'https://api.botify.com/v1'
info:
  description: Botify Saas API
  title: Botify
  version: 1.0.0
  x-apisguru-categories:
    - analytics
    - tools
  x-logo:
    backgroundColor: '#1A1A1A'
    url: 'https://static.botify.com/images/logos/botify-white.dc4215a12b9c.png'
  x-origin:
    - format: swagger
      url: 'https://api.botify.com/v1/swagger.json'
      version: '2.0'
  x-providerName: botify.com
externalDocs:
  url: 'https://developers.botify.com/'
security:
  - DjangoRestToken: []
paths:
  '/analyses/{username}/{project_slug}':
    get:
      description: List all analyses for a project
      operationId: getProjectAnalyses
      parameters:
        - description: Page Number
          in: query
          name: page
          required: false
          schema:
            type: integer
            default: 1
        - description: Page Size
          in: query
          name: size
          required: false
          schema:
            type: integer
        - description: Return only successfully finished analyses
          in: query
          name: only_success
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                  page:
                    type: integer
                  previous:
                    type: string
                  results:
                    items:
                      $ref: '#/components/schemas/Analysis'
                    type: array
                  size:
                    type: integer
                type: object
        default:
          description: error payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultPayload'
      summary: List all analyses for a project
      tags:
        - Project
    parameters:
      - description: User's identifier
        in: path
        name: username
        required: true
        schema:
          type: string
      - description: Project's identifier
        in: path
        name: project_slug
        required: true
        schema:
          type: string
  '/analyses/{username}/{project_slug}/{analysis_slug}':
    get:
      description: Get an Analysis detail
      operationId: getAnalysisSummary
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalysisDetail'
        default:
          description: error payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultPayload'
      summary: Get an Analysis detail
      tags:
        - Analysis
    parameters:
      - description: User's identifier
        in: path
        name: username
        required: true
        schema:
          type: string
      - description: Project's identifier
        in: path
        name: project_slug
        required: true
        schema:
          type: string
      - description: Analysis' identifier
        in: path
        name: analysis_slug
        required: true
        schema:
          type: string
  '/analyses/{username}/{project_slug}/{analysis_slug}/crawl_statistics':
    get:
      description: Return global statistics for an analysis
      operationId: getCrawlStatistics
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CrawlStatistics'
        default:
          description: error payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultPayload'
      summary: Return global statistics for an analysis
      tags:
        - Analysis
    parameters:
      - description: User's identifier
        in: path
        name: username
        required: true
        schema:
          type: string
      - description: Project's identifier
        in: path
        name: project_slug
        required: true
        schema:
          type: string
      - description: Analysis' identifier
        in: path
        name: analysis_slug
        required: true
        schema:
          type: string
  '/analyses/{username}/{project_slug}/{analysis_slug}/crawl_statistics/time':
    get:
      description: 'Return crawl statistics grouped by time frequency (1 min, 5 mins or 60 min) for an analysis'
      operationId: getCrawlStatisticsByFrequency
      parameters:
        - description: max number of elements to retrieve
          in: query
          name: limit
          required: false
          schema:
            type: integer
            format: int32
        - description: Aggregation frequency
          in: query
          name: frequency
          required: true
          schema:
            type: string
            enum:
              - 1mn
              - 5mn
              - 60mn
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CrawlStatisticsTime'
        default:
          description: error payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultPayload'
      summary: 'Return crawl statistics grouped by time frequency (1 min, 5 mins or 60 min)'
      tags:
        - Analysis
    parameters:
      - description: User's identifier
        in: path
        name: username
        required: true
        schema:
          type: string
      - description: Project's identifier
        in: path
        name: project_slug
        required: true
        schema:
          type: string
      - description: Analysis' identifier
        in: path
        name: analysis_slug
        required: true
        schema:
          type: string
  '/analyses/{username}/{project_slug}/{analysis_slug}/crawl_statistics/urls/{list_type}':
    get:
      description: Return a list of 1000 latest URLs crawled (all crawled URLs or only URLS with HTTP errors)
      operationId: getCrawlStatisticsUrls
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CrawlStatisticsUrls'
                type: array
        default:
          description: error payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultPayload'
      summary: Return a list of 1000 latest URLs crawled (all crawled URLs or only URLS with HTTP errors)
      tags:
        - Analysis
    parameters:
      - description: User's identifier
        in: path
        name: username
        required: true
        schema:
          type: string
      - description: Project's identifier
        in: path
        name: project_slug
        required: true
        schema:
          type: string
      - description: Analysis' identifier
        in: path
        name: analysis_slug
        required: true
        schema:
          type: string
      - description: URLs list type (crawled URLs or error URLs)
        in: path
        name: list_type
        required: true
        schema:
          type: string
          enum:
            - crawled
            - errors
  '/analyses/{username}/{project_slug}/{analysis_slug}/features/ganalytics/orphan_urls/{medium}/{source}':
    get:
      description: 'Legacy    List of Orphan URLs. URLs which generated visits from the selected source according to Google Analytics data, but were not crawled with by the Botify crawler (either because no links to them were found on the website, or because the crawler was not allowed to follow these links according to the project settings).   For a search engine (medium: origanic; sources: all, aol, ask, baidu, bing, google, naver, yahoo, yandex) or a social network (medium: social; sources: all, facebook, google+, linkedin, pinterest, reddit, tumblr, twitter)'
      operationId: getGanalyticsOrphanURLs
      parameters:
        - description: Page Number
          in: query
          name: page
          required: false
          schema:
            type: integer
            default: 1
        - description: Page Size
          in: query
          name: size
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                  page:
                    type: integer
                  previous:
                    type: string
                  results:
                    items:
                      $ref: '#/components/schemas/CrawlOrphanURLs'
                    type: array
                  size:
                    type: integer
                type: object
        default:
          description: error payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultPayload'
      summary: List of Orphan URLs
      tags:
        - Analysis
    parameters:
      - description: User's identifier
        in: path
        name: username
        required: true
        schema:
          type: string
      - description: Project's identifier
        in: path
        name: project_slug
        required: true
        schema:
          type: string
      - description: Analysis' identifier
        in: path
        name: analysis_slug
        required: true
        schema:
          type: string
      - description: 'Type of traffic, value: ''organic'' (from search engine)or ''social'' (from a social network)'
        in: path
        name: medium
        required: true
        schema:
          type: string
          enum:
            - organic
            - social
      - description: 'Traffic source, value: name of the search engine or social network'
        in: path
        name: source
        required: true
        schema:
          type: string
          enum:
            - all
            - aol
            - ask
            - baidu
            - bing
            - facebook
            - google
            - google+
            - linkedin
            - naver
            - pinterest
            - reddit
            - tumblr
            - twitter
            - yahoo
            - yandex
  '/analyses/{username}/{project_slug}/{analysis_slug}/features/links/percentiles':
    get:
      description: Get inlinks percentiles
      operationId: getLinksPercentiles
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinksPercentiles'
        default:
          description: error payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultPayload'
      summary: Get inlinks percentiles
      tags:
        - Analysis
    parameters:
      - description: User's identifier
        in: path
        name: username
        required: true
        schema:
          type: string
      - description: Project's identifier
        in: path
        name: project_slug
        required: true
        schema:
          type: string
      - description: Analysis' identifier
        in: path
        name: analysis_slug
        required: true
        schema:
          type: string
  '/analyses/{username}/{project_slug}/{analysis_slug}/features/pagerank/lost':
    get:
      description: Lost pagerank
      operationId: getPageRankLost
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageRankLost'
        default:
          description: error payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultPayload'
      summary: Lost pagerank
      tags:
        - Analysis
    parameters:
      - description: User's identifier
        in: path
        name: username
        required: true
        schema:
          type: string
      - description: Project's identifier
        in: path
        name: project_slug
        required: true
        schema:
          type: string
      - description: Analysis' identifier
        in: path
        name: analysis_slug
        required: true
        schema:
          type: string
  '/analyses/{username}/{project_slug}/{analysis_slug}/features/sitemaps/report':
    get:
      description: 'Get global information of the sitemaps found (sitemaps indexes, invalid sitemaps urls, etc.)'
      operationId: getSitemapsReport
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SitemapsReport'
        default:
          description: error payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultPayload'
      summary: 'Get global information of the sitemaps found (sitemaps indexes, invalid sitemaps urls, etc'
      tags:
        - Analysis
    parameters:
      - description: User's identifier
        in: path
        name: username
        required: true
        schema:
          type: string
      - description: Project's identifier
        in: path
        name: project_slug
        required: true
        schema:
          type: string
      - description: Analysis' identifier
        in: path
        name: analysis_slug
        required: true
        schema:
          type: string
  '/analyses/{username}/{project_slug}/{analysis_slug}/features/sitemaps/samples/out_of_config':
    get:
      description: 'Sample list of URLs which were found in your sitemaps but outside of the crawl perimeter defined for the project, for instance domain/subdomain or protocol (HTTP/HTTPS) not allowed in the crawl settings.'
      operationId: getSitemapsSamplesOutOfConfig
      parameters:
        - description: Page Number
          in: query
          name: page
          required: false
          schema:
            type: integer
            default: 1
        - description: Page Size
          in: query
          name: size
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                  page:
                    type: integer
                  previous:
                    type: string
                  results:
                    items:
                      type: string
                    type: array
                  size:
                    type: integer
                type: object
        default:
          description: error payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultPayload'
      summary: Sample list of URLs which were found in your sitemaps but outside of the
      tags:
        - Analysis
    parameters:
      - description: User's identifier
        in: path
        name: username
        required: true
        schema:
          type: string
      - description: Project's identifier
        in: path
        name: project_slug
        required: true
        schema:
          type: string
      - description: Analysis' identifier
        in: path
        name: analysis_slug
        required: true
        schema:
          type: string
  '/analyses/{username}/{project_slug}/{analysis_slug}/features/sitemaps/samples/sitemap_only':
    get:
      description: 'Sample list of URLs which were found in your sitemaps, within the project allowed scope (allowed domains/subdomains/protocols), but not found by the Botify crawler.'
      operationId: getSitemapsSamplesSitemapsOnly
      parameters:
        - description: Page Number
          in: query
          name: page
          required: false
          schema:
            type: integer
            default: 1
        - description: Page Size
          in: query
          name: size
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                  page:
                    type: integer
                  previous:
                    type: string
                  results:
                    items:
                      type: string
                    type: array
                  size:
                    type: integer
                type: object
        default:
          description: error payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultPayload'
      summary: 'Sample list of URLs which were found in your sitemaps, within the project'
      tags:
        - Analysis
    parameters:
      - description: User's identifier
        in: path
        name: username
        required: true
        schema:
          type: string
      - description: Project's identifier
        in: path
        name: project_slug
        required: true
        schema:
          type: string
      - description: Analysis' identifier
        in: path
        name: analysis_slug
        required: true
        schema:
          type: string
  '/analyses/{username}/{project_slug}/{analysis_slug}/features/top_domains/domains':
    get:
      description: Top domains
      operationId: getLinksTopDomains
      parameters:
        - description: Page Number
          in: query
          name: page
          required: false
          schema:
            type: integer
            default: 1
        - description: Page Size
          in: query
          name: size
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                  page:
                    type: integer
                  previous:
                    type: string
                  results:
                    items:
                      $ref: '#/components/schemas/LinksTopDomains'
                    type: array
                  size:
                    type: integer
                type: object
        default:
          description: error payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultPayload'
      summary: Top domains
      tags:
        - Analysis
    parameters:
      - description: User's identifier
        in: path
        name: username
        required: true
        schema:
          type: string
      - description: Project's identifier
        in: path
        name: project_slug
        required: true
        schema:
          type: string
      - description: Analysis' identifier
        in: path
        name: analysis_slug
        required: true
        schema:
          type: string
  '/analyses/{username}/{project_slug}/{analysis_slug}/features/top_domains/subdomains':
    get:
      description: Top subddomains
      operationId: getLinksTopSubdomains
      parameters:
        - description: Page Number
          in: query
          name: page
          required: false
          schema:
            type: integer
            default: 1
        - description: Page Size
          in: query
          name: size
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                  page:
                    type: integer
                  previous:
                    type: string
                  results:
                    items:
                      $ref: '#/components/schemas/LinksTopDomains'
                    type: array
                  size:
                    type: integer
                type: object
        default:
          description: error payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultPayload'
      summary: Top subddomains
      tags:
        - Analysis
    parameters:
      - description: User's identifier
        in: path
        name: username
        required: true
        schema:
          type: string
      - description: Project's identifier
        in: path
        name: project_slug
        required: true
        schema:
          type: string
      - description: Analysis' identifier
        in: path
        name: analysis_slug
        required: true
        schema:
          type: string
  '/analyses/{username}/{project_slug}/{analysis_slug}/features/visits/orphan_urls/{medium}/{source}':
    get:
      description: 'List of Orphan URLs. URLs which generated visits from the selected source according to Google Analytics data, but were not crawled with by the Botify crawler (either because no links to them were found on the website, or because the crawler was not allowed to follow these links according to the project settings).   For a search engine (medium: origanic; sources: all, aol, ask, baidu, bing, google, naver, yahoo, yandex) or a social network (medium: social; sources: all, facebook, google+, linkedin, pinterest, reddit, tumblr, twitter)'
      operationId: getVisitsOrphanURLs
      parameters:
        - description: Page Number
          in: query
          name: page
          required: false
          schema:
            type: integer
            default: 1
        - description: Page Size
          in: query
          name: size
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                  page:
                    type: integer
                  previous:
                    type: string
                  results:
                    items:
                      $ref: '#/components/schemas/CrawlOrphanURLs'
                    type: array
                  size:
                    type: integer
                type: object
        default:
          description: error payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultPayload'
      summary: List of Orphan URLs
      tags:
        - Analysis
    parameters:
      - description: User's identifier
        in: path
        name: username
        required: true
        schema:
          type: string
      - description: Project's identifier
        in: path
        name: project_slug
        required: true
        schema:
          type: string
      - description: Analysis' identifier
        in: path
        name: analysis_slug
        required: true
        schema:
          type: string
      - description: 'Type of traffic, value: ''organic'' (from search engine)or ''social'' (from a social network)'
        in: path
        name: medium
        required: true
        schema:
          type: string
          enum:
            - organic
            - social
      - description: 'Traffic source, value: name of the search engine or social network'
        in: path
        name: source
        required: true
        schema:
          type: string
          enum:
            - all
            - aol
            - ask
            - baidu
            - bing
            - facebook
            - google
            - google+
            - linkedin
            - naver
            - pinterest
            - reddit
            - tumblr
            - twitter
            - yahoo
            - yandex
  '/analyses/{username}/{project_slug}/{analysis_slug}/urls':
    parameters:
      - description: User's identifier
        in: path
        name: username
        required: true
        schema:
          type: string
      - description: Project's identifier
        in: path
        name: project_slug
        required: true
        schema:
          type: string
      - description: Analysis' identifier
        in: path
        name: analysis_slug
        required: true
        schema:
          type: string
    post:
      description: Executes a query and returns a paginated response
      operationId: getUrls
      parameters:
        - description: Analysis context
          in: query
          name: area
          required: false
          schema:
            type: string
            enum:
              - current
              - disappeared
              - new
              - search_engines_orphans
              - gsc_keywords
            default: current
        - description: Page Number
          in: query
          name: page
          required: false
          schema:
            type: integer
            format: int32
        - description: Page Size
          in: query
          name: size
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                  page:
                    type: integer
                  previous:
                    type: string
                  results:
                    items:
                      $ref: '#/components/schemas/UrlDetail'
                    type: array
                  size:
                    type: integer
                type: object
        default:
          description: error payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultPayload'
      summary: Executes a query and returns a paginated response
      tags:
        - Analysis
      requestBody:
        $ref: '#/components/requestBodies/UrlsQuery'
  '/analyses/{username}/{project_slug}/{analysis_slug}/urls/aggs':
    parameters:
      - description: User's identifier
        in: path
        name: username
        required: true
        schema:
          type: string
      - description: Project's identifier
        in: path
        name: project_slug
        required: true
        schema:
          type: string
      - description: Analysis' identifier
        in: path
        name: analysis_slug
        required: true
        schema:
          type: string
    post:
      description: Query aggregator. It accepts multiple queries
      operationId: getUrlsAggs
      parameters:
        - description: Analysis context
          in: query
          name: area
          required: false
          schema:
            type: string
            enum:
              - current
              - disappeared
              - new
              - search_engines_orphans
              - gsc_keywords
            default: current
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UrlsAggs'
                type: array
        default:
          description: error payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultPayload'
      summary: Query aggregator
      tags:
        - Analysis
      requestBody:
        $ref: '#/components/requestBodies/UrlsAggsQueries'
  '/analyses/{username}/{project_slug}/{analysis_slug}/urls/datamodel':
    get:
      description: Gets an Analysis datamodel
      operationId: getUrlsDatamodel
      parameters:
        - description: Analysis context
          in: query
          name: area
          required: false
          schema:
            type: string
            enum:
              - current
              - disappeared
              - new
              - search_engines_orphans
            default: current
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Datamodel'
        default:
          description: error payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultPayload'
      summary: Gets an Analysis datamodel
      tags:
        - Analysis
    parameters:
      - description: User's identifier
        in: path
        name: username
        required: true
        schema:
          type: string
      - description: Project's identifier
        in: path
        name: project_slug
        required: true
        schema:
          type: string
      - description: Analysis' identifier
        in: path
        name: analysis_slug
        required: true
        schema:
          type: string
  '/analyses/{username}/{project_slug}/{analysis_slug}/urls/export':
    get:
      description: A list of the CSV Exports requests and their current status
      operationId: getUrlsExports
      parameters:
        - description: Page Number
          in: query
          name: page
          required: false
          schema:
            type: integer
            default: 1
        - description: Page Size
          in: query
          name: size
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                  page:
                    type: integer
                  previous:
                    type: string
                  results:
                    items:
                      $ref: '#/components/schemas/CsvExportStatus'
                    type: array
                  size:
                    type: integer
                type: object
        default:
          description: error payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultPayload'
      summary: A list of the CSV Exports requests and their current status
      tags:
        - Analysis
    parameters:
      - description: User's identifier
        in: path
        name: username
        required: true
        schema:
          type: string
      - description: Project's identifier
        in: path
        name: project_slug
        required: true
        schema:
          type: string
      - description: Analysis' identifier
        in: path
        name: analysis_slug
        required: true
        schema:
          type: string
    post:
      description: Creates a new UrlExport object and starts a task that will export the results into a csv. Returns the model id that manages the task
      operationId: createUrlsExport
      parameters:
        - description: Analysis context
          in: query
          name: area
          required: false
          schema:
            type: string
            enum:
              - current
              - disappeared
              - new
              - search_engines_orphans
              - gsc_keywords
            default: current
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CsvExportStatus'
        default:
          description: error payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultPayload'
      summary: Creates a new UrlExport object and starts a task that will export the results into a csv
      tags:
        - Analysis
      requestBody:
        $ref: '#/components/requestBodies/UrlsQuery'
  '/analyses/{username}/{project_slug}/{analysis_slug}/urls/export/{url_export_id}':
    get:
      description: Checks the status of an CSVUrlExportJob object. Returns json object with the status.
      operationId: getUrlsExportStatus
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CsvExportStatus'
        default:
          description: error payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultPayload'
      summary: Checks the status of an CSVUrlExportJob object
      tags:
        - Analysis
    parameters:
      - description: User's identifier
        in: path
        name: username
        required: true
        schema:
          type: string
      - description: Project's identifier
        in: path
        name: project_slug
        required: true
        schema:
          type: string
      - description: Analysis' identifier
        in: path
        name: analysis_slug
        required: true
        schema:
          type: string
      - description: Url Export ID
        in: path
        name: url_export_id
        required: true
        schema:
          type: string
  '/analyses/{username}/{project_slug}/{analysis_slug}/urls/suggested_filters':
    parameters:
      - description: User's identifier
        in: path
        name: username
        required: true
        schema:
          type: string
      - description: Project's identifier
        in: path
        name: project_slug
        required: true
        schema:
          type: string
      - description: Analysis' identifier
        in: path
        name: analysis_slug
        required: true
        schema:
          type: string
    post:
      description: Return most frequent segments (= suggested patterns in the previous version) for a Botify Query.
      operationId: getUrlsSuggestedFilters
      parameters:
        - description: Analysis context
          in: query
          name: area
          required: false
          schema:
            type: string
            enum:
              - current
              - new
            default: current
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UrlsAggsQuery'
        default:
          description: error payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultPayload'
      summary: Return most frequent segments (= suggested patterns in the previous version)
      tags:
        - Analysis
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UrlsAggsQuery'
        description: UrlsAggs query
  '/analyses/{username}/{project_slug}/{analysis_slug}/urls/{url}':
    get:
      description: Gets the detail of an URL for an analysis
      operationId: getUrlDetail
      parameters:
        - description: comma separated list of fields to return (c.f. URLs Datamodel)
          in: query
          name: fields
          required: false
          style: form
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UrlDetail'
        default:
          description: error payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultPayload'
      summary: Gets the detail of an URL for an analysis
      tags:
        - Analysis
    parameters:
      - description: User's identifier
        in: path
        name: username
        required: true
        schema:
          type: string
      - description: Project's identifier
        in: path
        name: project_slug
        required: true
        schema:
          type: string
      - description: Analysis' identifier
        in: path
        name: analysis_slug
        required: true
        schema:
          type: string
      - description: (Urlencoded) Searched URL
        in: path
        name: url
        required: true
        schema:
          type: string
  '/projects/{username}':
    get:
      description: List all active projects for the user
      operationId: getUserProjects
      parameters:
        - description: Project's name
          in: query
          name: name
          schema:
            type: string
        - description: Page Number
          in: query
          name: page
          required: false
          schema:
            type: integer
            default: 1
        - description: Page Size
          in: query
          name: size
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                  page:
                    type: integer
                  previous:
                    type: string
                  results:
                    items:
                      $ref: '#/components/schemas/Project'
                    type: array
                  size:
                    type: integer
                type: object
        default:
          description: error payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultPayload'
      summary: List all active projects for the user
      tags:
        - User
    parameters:
      - description: User's identifier
        in: path
        name: username
        required: true
        schema:
          type: string
  '/projects/{username}/{project_slug}/filters':
    get:
      description: 'List all the project''s saved filters (each filter''s name, ID and filter value)'
      operationId: getSavedFilters
      parameters:
        - description: Page Number
          in: query
          name: page
          required: false
          schema:
            type: integer
            default: 1
        - description: Page Size
          in: query
          name: size
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                  page:
                    type: integer
                  previous:
                    type: string
                  results:
                    items:
                      $ref: '#/components/schemas/ProjectSavedFilter'
                    type: array
                  size:
                    type: integer
                type: object
        default:
          description: error payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultPayload'
      summary: 'List all the project''s saved filters (each filter''s name, ID and filter value)'
      tags:
        - Project
    parameters:
      - description: User's identifier
        in: path
        name: username
        required: true
        schema:
          type: string
      - description: Project's identifier
        in: path
        name: project_slug
        required: true
        schema:
          type: string
  '/projects/{username}/{project_slug}/filters/{identifier}':
    get:
      description: 'Retrieves a specific saved filter''s name, ID and filter value'
      operationId: getSavedFilter
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectSavedFilter'
        default:
          description: error payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultPayload'
      summary: 'Retrieves a specific saved filter''s name, ID and filter value'
      tags:
        - Project
    parameters:
      - description: User's identifier
        in: path
        name: username
        required: true
        schema:
          type: string
      - description: Project's identifier
        in: path
        name: project_slug
        required: true
        schema:
          type: string
      - in: path
        name: identifier
        required: true
        schema:
          type: string
  '/projects/{username}/{project_slug}/urls/aggs':
    parameters:
      - description: User's identifier
        in: path
        name: username
        required: true
        schema:
          type: string
      - description: Project's identifier
        in: path
        name: project_slug
        required: true
        schema:
          type: string
    post:
      description: Project Query aggregator. It accepts multiple queries that will be executed on all completed analyses in the project
      operationId: getProjectUrlsAggs
      parameters:
        - description: Analyses context
          in: query
          name: area
          required: false
          schema:
            type: string
            enum:
              - current
              - disappeared
              - new
            default: current
        - description: Last analysis on the trend
          in: query
          name: last_analysis_slug
          required: false
          schema:
            type: string
        - description: Max number of analysis to return
          in: query
          name: nb_analyses
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 20
            default: 20
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Default'
        default:
          description: error payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultPayload'
      summary: Project Query aggregator
      tags:
        - Project
      requestBody:
        $ref: '#/components/requestBodies/UrlsAggsQueries'
components:
  schemas:
    AdvancedExportStatus:
      properties:
        advanced_export_type:
          type: string
        date_created:
          format: date-time
          readOnly: true
          type: string
        full_export:
          default: false
          type: boolean
        job_id:
          readOnly: true
          type: string
        job_status:
          readOnly: true
          type: string
        job_url:
          readOnly: true
          type: string
        nb_lines:
          readOnly: true
          type: string
        query:
          readOnly: true
          type: string
        results:
          readOnly: true
          type: string
      required:
        - advanced_export_type
      type: object
    AdvancedExporter:
      properties:
        full_export:
          default: false
          type: boolean
        group:
          type: string
        lines:
          format: int64
          type: integer
        name:
          type: string
        type:
          type: string
      required:
        - type
        - name
        - group
        - lines
      type: object
    AdvancedExporters:
      properties:
        exporters:
          items:
            $ref: '#/components/schemas/AdvancedExporter'
          type: array
      required:
        - exporters
      type: object
    Analysis:
      properties:
        computing_revision:
          readOnly: true
          type: string
        config:
          readOnly: true
          type: string
        date_created:
          format: date-time
          type: string
        date_finished:
          format: date-time
          type: string
        date_last_modified:
          description: Date of last modified analysis
          format: date-time
          type: string
        date_launched:
          format: date-time
          type: string
        features:
          readOnly: true
          type: string
        friendly_name:
          readOnly: true
          type: string
        id:
          format: int64
          readOnly: true
          type: integer
        name:
          readOnly: true
          type: string
        slug:
          readOnly: true
          type: string
        status:
          readOnly: true
          type: string
        url:
          readOnly: true
          type: string
        urls_done:
          readOnly: true
          type: string
        urls_in_queue:
          readOnly: true
          type: string
        user:
          $ref: '#/components/schemas/User'
      required:
        - user
      type: object
    AnalysisDetail:
      properties:
        computing_revision:
          readOnly: true
          type: string
        config:
          readOnly: true
          type: string
        date_finished:
          format: date-time
          type: string
        date_last_modified:
          description: Date of last modified analysis
          format: date-time
          type: string
        date_launched:
          format: date-time
          type: string
        failures:
          readOnly: true
          type: string
        features:
          readOnly: true
          type: string
        friendly_name:
          readOnly: true
          type: string
        id:
          format: int64
          readOnly: true
          type: integer
        name:
          readOnly: true
          type: string
        red_button_domain:
          type: string
        slug:
          readOnly: true
          type: string
        status:
          readOnly: true
          type: string
        url:
          readOnly: true
          type: string
        urls_done:
          readOnly: true
          type: string
        urls_in_queue:
          readOnly: true
          type: string
        user:
          $ref: '#/components/schemas/User'
      required:
        - user
      type: object
    AnalysisUpdateLaunch:
      description: Launch Analysis Update
      properties:
        refresh_features:
          items:
            type: string
          type: array
      required:
        - refresh_features
      type: object
    AnalysisUpdateSuggest:
      properties:
        add_on_features:
          items:
            $ref: '#/components/schemas/SuggestedUpdatesAddOnFeatures'
          type: array
        features_to_update:
          items:
            $ref: '#/components/schemas/SuggestedUpdatesFeaturesToUpdate'
          type: array
      required:
        - add_on_features
        - features_to_update
      type: object
    CheckExternalStorageAccess:
      properties:
        access_ok:
          readOnly: true
          type: string
      type: object
    CrawlOrphanURLs:
      properties:
        url:
          type: string
        visits:
          format: int64
          type: integer
      required:
        - url
        - visits
      type: object
    CrawlStatistics:
      properties:
        depth_current:
          format: int64
          type: integer
        last_upd_dt:
          format: date-time
          type: string
        pages_dones:
          format: int64
          type: integer
        pages_dones_2xx:
          format: int64
          type: integer
        pages_dones_3xx:
          format: int64
          type: integer
        pages_dones_4xx:
          format: int64
          type: integer
        pages_dones_5xx:
          format: int64
          type: integer
        pages_dones_networkerror:
          format: int64
          type: integer
        pages_dones_xxx:
          format: int64
          type: integer
        pages_known:
          format: int64
          type: integer
      required:
        - depth_current
        - pages_dones_networkerror
        - pages_dones_3xx
        - pages_dones
        - pages_dones_2xx
        - last_upd_dt
        - pages_dones_5xx
        - pages_dones_xxx
        - pages_dones_4xx
        - pages_known
      type: object
    CrawlStatisticsTime:
      properties:
        avg_delay:
          items:
            $ref: '#/components/schemas/CrawlStatisticsTimePoint'
          type: array
        avg_size:
          items:
            $ref: '#/components/schemas/CrawlStatisticsTimePoint'
          type: array
        frequency:
          type: string
        http_code_2xx:
          items:
            $ref: '#/components/schemas/CrawlStatisticsTimePoint'
          type: array
        http_code_3xx:
          items:
            $ref: '#/components/schemas/CrawlStatisticsTimePoint'
          type: array
        http_code_4xx:
          items:
            $ref: '#/components/schemas/CrawlStatisticsTimePoint'
          type: array
        http_code_5xx:
          items:
            $ref: '#/components/schemas/CrawlStatisticsTimePoint'
          type: array
        http_code_xxx:
          items:
            $ref: '#/components/schemas/CrawlStatisticsTimePoint'
          type: array
        last_update_date:
          format: date-time
          type: string
        new_urls:
          items:
            $ref: '#/components/schemas/CrawlStatisticsTimePoint'
          type: array
      required:
        - avg_delay
        - http_code_2xx
        - http_code_3xx
        - http_code_4xx
        - http_code_5xx
        - http_code_xxx
        - frequency
        - last_update_date
        - avg_size
        - new_urls
      type: object
    CrawlStatisticsTimePoint:
      properties:
        count:
          format: int64
          type: integer
        datetime:
          format: date-time
          type: string
      required:
        - count
        - datetime
      type: object
    CrawlStatisticsUrls:
      properties:
        content_type:
          type: string
        date:
          type: string
        delay_first_byte:
          format: int64
          type: integer
        delay_last_byte:
          format: int64
          type: integer
        gzip:
          type: boolean
        http:
          format: int64
          type: integer
        length:
          format: int64
          type: integer
        redirects_to:
          type: string
        url:
          type: string
      required:
        - http
        - url
        - delay_last_byte
        - gzip
        - length
        - content_type
        - date
        - delay_first_byte
      type: object
    CsvExportStatus:
      properties:
        area:
          type: string
        date_created:
          format: date-time
          readOnly: true
          type: string
        job_id:
          readOnly: true
          type: string
        job_status:
          readOnly: true
          type: string
        job_url:
          readOnly: true
          type: string
        nb_results:
          format: int64
          maximum: 2147483647
          minimum: 0
          type: integer
        query:
          $ref: '#/components/schemas/UrlsQuery'
        results:
          readOnly: true
          type: string
      required:
        - query
      type: object
    Datamodel:
      properties:
        aliases:
          type: object
        fields:
          items:
            $ref: '#/components/schemas/DatamodelField'
          type: array
        groups:
          items:
            $ref: '#/components/schemas/DatamodelGroup'
          type: array
        max_timeseries_fields:
          format: int64
          type: integer
      required:
        - fields
        - groups
      type: object
    DatamodelField:
      properties:
        aliases:
          items:
            type: string
          type: array
        group:
          type: string
        id:
          type: string
        multiple:
          type: boolean
        name:
          type: string
        permissions:
          items:
            type: string
          type: array
        subtype:
          type: string
        type:
          type: string
      required:
        - multiple
        - name
        - subtype
        - group
        - type
        - id
        - permissions
      type: object
    DatamodelGroup:
      properties:
        id:
          type: string
        name:
          type: string
      required:
        - id
        - name
      type: object
    Default:
      properties: {}
      type: object
    DefaultPayload:
      description: default payload for object for all HTTP codes that are not covered individually
      properties:
        error:
          properties:
            error_code:
              description: Error Code
              type: string
            error_detail:
              description: 'If available, detailed error'
              type: object
            message:
              description: Error Message
              type: string
          type: object
      type: object
    FieldValues:
      properties:
        count:
          format: int64
          type: integer
        results:
          items:
            $ref: '#/components/schemas/FieldValuesResult'
          type: array
      required:
        - count
        - results
      type: object
    FieldValuesResult:
      properties:
        nb_urls:
          format: int64
          type: integer
        value:
          type: string
      required:
        - value
        - nb_urls
      type: object
    LinksPercentiles:
      properties:
        domain:
          type: string
        percentiles:
          items:
            $ref: '#/components/schemas/LinksPercentilesItem'
          type: array
      required:
        - domain
        - percentiles
      type: object
    LinksPercentilesItem:
      properties:
        avg:
          format: int64
          type: integer
        id:
          format: int64
          type: integer
        max:
          format: int64
          type: integer
        metric_total:
          format: int64
          type: integer
        min:
          format: int64
          type: integer
        url_total:
          format: int64
          type: integer
      required:
        - min
        - max
        - url_total
        - metric_total
        - avg
        - id
      type: object
    LinksTopDomains:
      properties:
        domain:
          type: string
        follow_links:
          format: int64
          type: integer
        follow_samples:
          items:
            $ref: '#/components/schemas/LinksTopDomainsSamples'
          type: array
        nofollow_links:
          format: int64
          type: integer
        nofollow_samples:
          items:
            $ref: '#/components/schemas/LinksTopDomainsSamples'
          type: array
        unique_follow_links:
          format: int64
          type: integer
        unique_nofollow_links:
          format: int64
          type: integer
      required:
        - follow_links
        - nofollow_links
        - domain
        - follow_samples
        - nofollow_samples
        - unique_follow_links
        - unique_nofollow_links
      type: object
    LinksTopDomainsSamples:
      properties:
        sources:
          items:
            type: string
          type: array
        unique_links:
          format: int64
          type: integer
        url:
          type: string
      required:
        - url
        - sources
        - unique_links
      type: object
    PageRankLost:
      properties:
        external:
          format: float
          type: number
        non_crawled:
          format: float
          type: number
        robots_txt:
          format: float
          type: number
      required:
        - non_crawled
        - external
        - robots_txt
      type: object
    Project:
      properties:
        active:
          type: boolean
        current_settings:
          $ref: '#/components/schemas/ProjectSettings'
        date_created:
          readOnly: true
          type: string
        has_log_analysis:
          readOnly: true
          type: boolean
        last_analysis:
          readOnly: true
          type: object
        name:
          type: string
        slug:
          type: string
        url:
          readOnly: true
          type: string
        user:
          $ref: '#/components/schemas/User'
      required:
        - name
        - slug
        - user
        - current_settings
      type: object
    ProjectSavedFilter:
      description: Project's saved UrlFilter
      properties:
        filters:
          type: object
        identifier:
          readOnly: true
          type: string
        name:
          type: string
      required:
        - name
        - filters
      type: object
    ProjectSettings:
      properties:
        allowed_domains:
          items:
            type: string
          type: array
        blacklisted_domains:
          items:
            type: string
          type: array
        compare_crawl:
          type: boolean
        crawl_gzip:
          type: boolean
        extra_headers:
          type: string
        google_analytics_account_email:
          description: Keep email in case user delete his social auth connection
          type: string
        google_analytics_nb_days:
          format: int64
          maximum: 90
          minimum: 1
          type: integer
        google_analytics_site_id:
          format: int64
          maximum: 2147483647
          minimum: -2147483648
          type: integer
        google_social_auth_id:
          format: int64
          maximum: 2147483647
          minimum: -2147483648
          type: integer
        has_robots_txt:
          readOnly: true
          type: string
        header_settings:
          items:
            type: string
          type: array
        max_depth:
          format: int64
          maximum: 2147483647
          minimum: 0
          type: integer
        max_nb_pages:
          format: int64
          maximum: 2147483647
          minimum: 1
          type: integer
        max_pages_per_sec:
          format: int64
          maximum: 2147483647
          minimum: 1
          type: integer
        respect_nofollow:
          type: boolean
        sitemaps:
          items:
            type: string
          type: array
        start_urls:
          items:
            type: string
          type: array
        user_agent:
          type: string
      required:
        - start_urls
        - max_nb_pages
        - blacklisted_domains
        - allowed_domains
        - sitemaps
        - header_settings
      type: object
    RewritingRule:
      properties:
        ignore_case:
          type: boolean
        regex:
          type: string
        replace:
          type: string
      required:
        - regex
        - replace
        - ignore_case
      type: object
    SitemapsReport:
      properties:
        count:
          format: int64
          type: integer
        errors:
          items:
            $ref: '#/components/schemas/SitemapsReportSitemap'
          type: array
        sitemap_indexes:
          items:
            $ref: '#/components/schemas/SitemapsReportSitemap'
          type: array
        sitemap_only:
          $ref: '#/components/schemas/SitemapsReportOnly'
        sitemaps:
          items:
            $ref: '#/components/schemas/SitemapsReportSitemap'
          type: array
      required:
        - count
        - sitemap_only
        - sitemap_indexes
        - sitemaps
        - errors
      type: object
    SitemapsReportOnly:
      properties:
        in_configuration:
          format: int64
          type: integer
        out_of_configuration:
          format: int64
          type: integer
      required:
        - out_of_configuration
        - in_configuration
      type: object
    SitemapsReportSitemap:
      properties:
        error:
          $ref: '#/components/schemas/SitemapsReportSitemapError'
        file_type:
          type: string
        invalid_urls:
          format: int64
          type: integer
        sitemap_indexes:
          items:
            type: string
          type: array
        url:
          type: string
        valid_urls:
          format: int64
          type: integer
      required:
        - url
      type: object
    SitemapsReportSitemapError:
      properties:
        message:
          type: string
        type:
          type: string
      required:
        - type
        - message
      type: object
    SuggestedUpdatesAddOnFeatures:
      properties:
        name:
          type: string
        options:
          type: object
      required:
        - name
        - options
      type: object
    SuggestedUpdatesFeaturesToUpdate:
      properties:
        name:
          type: string
        new_options:
          type: object
        previous_options:
          type: object
      required:
        - name
        - previous_options
        - new_options
      type: object
    URLRewritingRules:
      properties:
        rules:
          items:
            $ref: '#/components/schemas/RewritingRule'
          type: array
        urls:
          items:
            type: string
          type: array
      required:
        - urls
        - rules
      type: object
    UrlDetail:
      properties: {}
      type: object
    UrlsAgg:
      properties:
        aggs:
          items:
            type: object
          type: array
      type: object
    UrlsAggs:
      properties:
        data:
          $ref: '#/components/schemas/UrlsAgg'
        error:
          $ref: '#/components/schemas/UrlsErrorAgg'
        status:
          format: int64
          type: integer
      required:
        - status
      type: object
    UrlsAggsQueries:
      items:
        $ref: '#/components/schemas/UrlsAggsQuery'
      type: array
    UrlsAggsQuery:
      description: UrlsAggs query
      properties:
        aggs:
          items:
            type: object
          type: array
        filters:
          type: object
      type: object
    UrlsErrorAgg:
      properties:
        error_code:
          type: string
        message:
          type: string
      required:
        - message
        - error_code
      type: object
    UrlsQuery:
      description: Urls query
      properties:
        fields:
          items:
            type: string
          type: array
        filters:
          type: object
        sort:
          items:
            type: object
          type: array
      type: object
    User:
      properties:
        company_name:
          type: string
        date_joined:
          format: date-time
          type: string
        email:
          type: string
        first_name:
          type: string
        is_organization:
          readOnly: true
          type: string
        last_name:
          type: string
        login:
          readOnly: true
          type: string
        status:
          type: string
        url:
          readOnly: true
          type: string
      type: object
    string:
      properties: {}
      type: object
  requestBodies:
    UrlsQuery:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UrlsQuery'
      description: Urls query
    UrlsAggsQueries:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UrlsAggsQueries'
      description: UrlsAggs queries
  securitySchemes:
    DjangoRestToken:
      in: header
      name: Authorization
      type: apiKey
