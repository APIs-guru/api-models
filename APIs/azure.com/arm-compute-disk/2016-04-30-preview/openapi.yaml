openapi: 3.0.0
servers:
  - url: 'https://management.azure.com/'
info:
  description: The Disk Resource Provider Client.
  title: DiskResourceProviderClient
  version: 2016-04-30-preview
  x-apisguru-categories:
    - cloud
  x-logo:
    url: 'https://assets.onestore.ms/cdnfiles/onestorerolling-1606-01000/shell/v3/images/logo/microsoft.png'
  x-origin:
    - format: swagger
      url: 'https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/arm-compute/2016-04-30-preview/swagger/disk.json'
      version: '2.0'
  x-preferred: true
  x-providerName: azure.com
  x-serviceName: arm-compute-disk
  x-tags:
    - Azure
    - Microsoft
paths:
  '/subscriptions/{subscriptionId}/providers/Microsoft.Compute/disks':
    get:
      description: Lists all the disks under a subscription.
      operationId: Disks_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiskList'
      tags:
        - Disks
      x-ms-pageable:
        nextLinkName: nextLink
  '/subscriptions/{subscriptionId}/providers/Microsoft.Compute/snapshots':
    get:
      description: Lists snapshots under a subscription.
      operationId: Snapshots_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SnapshotList'
      tags:
        - Snapshots
      x-ms-pageable:
        nextLinkName: nextLink
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/disks':
    get:
      description: Lists all the disks under a resource group.
      operationId: Disks_ListByResourceGroup
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - description: The name of the resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiskList'
      tags:
        - Disks
      x-ms-pageable:
        nextLinkName: nextLink
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/disks/{diskName}':
    delete:
      description: Deletes a disk.
      operationId: Disks_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - description: The name of the resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/DiskNameParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationStatusResponse'
        '202':
          description: Accepted
        '204':
          description: 'If the disk is deleted, this is an expected error code.'
      tags:
        - Disks
      x-ms-long-running-operation: true
    get:
      description: Gets information about a disk.
      operationId: Disks_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DiskNameParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Disk'
      tags:
        - Disks
    patch:
      description: Updates (patches) a disk.
      operationId: Disks_Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DiskNameParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Disk'
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Disk'
      tags:
        - Disks
      x-ms-long-running-operation: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DiskUpdate'
        description: Disk object supplied in the body of the Patch disk operation.
        required: true
    put:
      description: Creates or updates a disk.
      operationId: Disks_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DiskNameParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Disk'
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Disk'
      tags:
        - Disks
      x-ms-long-running-operation: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Disk'
        description: Disk object supplied in the body of the Put disk operation.
        required: true
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/disks/{diskName}/beginGetAccess':
    post:
      description: Grants access to a disk.
      operationId: Disks_GrantAccess
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - description: The name of the resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/DiskNameParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessUri'
        '202':
          description: Accepted
      tags:
        - Disks
      x-ms-long-running-operation: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GrantAccessData'
        description: Access data object supplied in the body of the get disk access operation.
        required: true
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/disks/{diskName}/endGetAccess':
    post:
      description: Revokes access to a disk.
      operationId: Disks_RevokeAccess
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - description: The name of the resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/DiskNameParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationStatusResponse'
        '202':
          description: Accepted
      tags:
        - Disks
      x-ms-long-running-operation: true
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/snapshots':
    get:
      description: Lists snapshots under a resource group.
      operationId: Snapshots_ListByResourceGroup
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SnapshotList'
      tags:
        - Snapshots
      x-ms-pageable:
        nextLinkName: nextLink
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/snapshots/{snapshotName}':
    delete:
      description: Deletes a snapshot.
      operationId: Snapshots_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SnapshotNameParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationStatusResponse'
        '202':
          description: Accepted
        '204':
          description: 'If the snapshot is deleted, this is an expected error code.'
      tags:
        - Snapshots
      x-ms-long-running-operation: true
    get:
      description: Gets information about a snapshot.
      operationId: Snapshots_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SnapshotNameParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Snapshot'
      tags:
        - Snapshots
    patch:
      description: Updates (patches) a snapshot.
      operationId: Snapshots_Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SnapshotNameParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Snapshot'
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Snapshot'
      tags:
        - Snapshots
      x-ms-long-running-operation: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SnapshotUpdate'
        description: Snapshot object supplied in the body of the Patch snapshot operation.
        required: true
    put:
      description: Creates or updates a snapshot.
      operationId: Snapshots_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SnapshotNameParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Snapshot'
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Snapshot'
      tags:
        - Snapshots
      x-ms-long-running-operation: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Snapshot'
        description: Snapshot object supplied in the body of the Put disk operation.
        required: true
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/snapshots/{snapshotName}/beginGetAccess':
    post:
      description: Grants access to a snapshot.
      operationId: Snapshots_GrantAccess
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SnapshotNameParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessUri'
        '202':
          description: Accepted
      tags:
        - Snapshots
      x-ms-long-running-operation: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GrantAccessData'
        description: Access data object supplied in the body of the get snapshot access operation.
        required: true
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/snapshots/{snapshotName}/endGetAccess':
    post:
      description: Revokes access to a snapshot.
      operationId: Snapshots_RevokeAccess
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SnapshotNameParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationStatusResponse'
        '202':
          description: Accepted
      tags:
        - Snapshots
      x-ms-long-running-operation: true
components:
  schemas:
    AccessUri:
      description: A disk access SAS uri.
      properties:
        properties:
          $ref: '#/components/schemas/AccessUriOutput'
    AccessUriOutput:
      description: 'Azure properties, including output.'
      properties:
        output:
          $ref: '#/components/schemas/AccessUriRaw'
    AccessUriRaw:
      description: This object gets 'bubbled up' through flattening.
      properties:
        accessSAS:
          description: A SAS uri for accessing a disk.
          readOnly: true
          type: string
    ApiError:
      description: Api error.
      properties:
        code:
          description: The error code.
          type: string
        details:
          description: The Api error details
          items:
            $ref: '#/components/schemas/ApiErrorBase'
          type: array
        innererror:
          $ref: '#/components/schemas/InnerError'
        message:
          description: The error message.
          type: string
        target:
          description: The target of the particular error.
          type: string
    ApiErrorBase:
      description: Api error base.
      properties:
        code:
          description: The error code.
          type: string
        message:
          description: The error message.
          type: string
        target:
          description: The target of the particular error.
          type: string
    CreationData:
      description: Data used when creating a disk.
      properties:
        createOption:
          enum:
            - Empty
            - Attach
            - FromImage
            - Import
            - Copy
            - Restore
          type: string
          x-ms-enum:
            modelAsString: false
            name: DiskCreateOption
        imageReference:
          $ref: '#/components/schemas/ImageDiskReference'
        sourceResourceId:
          description: 'If createOption is Copy, this is the ARM id of the source snapshot or disk. If creationOption is Restore, this is the ARM-like id of the source disk restore point.'
          type: string
        sourceUri:
          description: 'If creationOption is Import, this is a SAS URI to a blob to be imported into a managed disk. If creationOption is Copy, this is a relative Uri containing the id of the source snapshot to be copied into a managed disk.'
          type: string
        storageAccountId:
          description: 'If createOption is Import, the Azure Resource Manager identifier of the storage account containing the blob to import as a disk. Required only if the blob is in a different subscription'
          type: string
      required:
        - createOption
    Disk:
      allOf:
        - $ref: '#/components/schemas/Resource'
      description: Disk resource.
      properties:
        properties:
          $ref: '#/components/schemas/DiskProperties'
    DiskList:
      description: The List Disks operation response.
      properties:
        nextLink:
          description: the uri to fetch the next page of disks. Call ListNext() with this to fetch the next page of disks.
          type: string
        value:
          description: A list of disks.
          items:
            $ref: '#/components/schemas/Disk'
          type: array
      required:
        - value
    DiskProperties:
      description: Disk resource properties.
      properties:
        accountType:
          description: the storage account type of the disk.
          enum:
            - Standard_LRS
            - Premium_LRS
          type: string
          x-ms-enum:
            modelAsString: false
            name: StorageAccountTypes
        creationData:
          $ref: '#/components/schemas/CreationData'
        diskSizeGB:
          description: 'If creationData.createOption is Empty, this field is mandatory and it indicates the size of the VHD to create. If this field is present for updates or creation with other options, it indicates a resize. Resizes are only allowed if the disk is not attached to a running VM, and can only increase the disk''s size.'
          format: int32
          type: integer
        encryptionSettings:
          $ref: '#/components/schemas/EncryptionSettings'
        osType:
          description: The Operating System type.
          enum:
            - Windows
            - Linux
          type: string
          x-ms-enum:
            modelAsString: false
            name: OperatingSystemTypes
        ownerId:
          description: A relative URI containing the VM id that has the disk attached.
          readOnly: true
          type: string
        provisioningState:
          description: The disk provisioning state.
          readOnly: true
          type: string
        timeCreated:
          description: The time when the disk was created.
          format: date-time
          readOnly: true
          type: string
      required:
        - creationData
    DiskUpdate:
      allOf:
        - $ref: '#/components/schemas/ResourceUpdate'
      description: Disk update resource.
      properties:
        properties:
          $ref: '#/components/schemas/DiskUpdateProperties'
    DiskUpdateProperties:
      description: Disk resource update properties.
      properties:
        accountType:
          description: the storage account type of the disk.
          enum:
            - Standard_LRS
            - Premium_LRS
          type: string
          x-ms-enum:
            modelAsString: false
            name: StorageAccountTypes
        creationData:
          $ref: '#/components/schemas/CreationData'
        diskSizeGB:
          description: 'If creationData.createOption is Empty, this field is mandatory and it indicates the size of the VHD to create. If this field is present for updates or creation with other options, it indicates a resize. Resizes are only allowed if the disk is not attached to a running VM, and can only increase the disk''s size.'
          format: int32
          type: integer
        encryptionSettings:
          $ref: '#/components/schemas/EncryptionSettings'
        osType:
          description: the Operating System type.
          enum:
            - Windows
            - Linux
          type: string
          x-ms-enum:
            modelAsString: false
            name: OperatingSystemTypes
    EncryptionSettings:
      description: Encryption settings for disk or snapshot
      properties:
        diskEncryptionKey:
          $ref: '#/components/schemas/KeyVaultAndSecretReference'
        enabled:
          description: 'Set this flag to true and provide DiskEncryptionKey and optional KeyEncryptionKey to enable encryption. Set this flag to false and remove DiskEncryptionKey and KeyEncryptionKey to disable encryption. If EncryptionSettings is null in the request object, the existing settings remain unchanged.'
          type: boolean
        keyEncryptionKey:
          $ref: '#/components/schemas/KeyVaultAndKeyReference'
    GrantAccessData:
      description: Data used for requesting a SAS.
      properties:
        access:
          enum:
            - None
            - Read
          type: string
          x-ms-enum:
            modelAsString: false
            name: AccessLevel
        durationInSeconds:
          description: Time duration in seconds until the SAS access expires.
          format: int32
          type: integer
      required:
        - access
        - durationInSeconds
    ImageDiskReference:
      description: The source image used for creating the disk.
      properties:
        id:
          description: A relative uri containing either a Platform Imgage Repository or user image reference.
          type: string
        lun:
          description: 'If the disk is created from an image''s data disk, this is an index that indicates which of the data disks in the image to use. For OS disks, this field is null.'
          format: int32
          type: integer
      required:
        - id
    InnerError:
      description: Inner error details.
      properties:
        errordetail:
          description: The internal error message or exception dump.
          type: string
        exceptiontype:
          description: The exception type.
          type: string
    KeyVaultAndKeyReference:
      description: 'Key Vault Key Url and vault id of KeK, KeK is optional and when provided is used to unwrap the encryptionKey'
      properties:
        keyUrl:
          description: Url pointing to a key or secret in KeyVault
          type: string
        sourceVault:
          $ref: '#/components/schemas/SourceVault'
      required:
        - keyUrl
        - sourceVault
    KeyVaultAndSecretReference:
      description: 'Key Vault Secret Url and vault id of the encryption key '
      properties:
        secretUrl:
          description: Url pointing to a key or secret in KeyVault
          type: string
        sourceVault:
          $ref: '#/components/schemas/SourceVault'
      required:
        - secretUrl
        - sourceVault
    OperationStatusResponse:
      description: Operation status response
      properties:
        endTime:
          description: End time of the operation
          format: date-time
          readOnly: true
          type: string
        error:
          $ref: '#/components/schemas/ApiError'
        name:
          description: Operation ID
          readOnly: true
          type: string
        startTime:
          description: Start time of the operation
          format: date-time
          readOnly: true
          type: string
        status:
          description: Operation status
          readOnly: true
          type: string
    Resource:
      description: The Resource model definition.
      properties:
        id:
          description: Resource Id
          readOnly: true
          type: string
        location:
          description: Resource location
          type: string
        name:
          description: Resource name
          readOnly: true
          type: string
        tags:
          additionalProperties:
            type: string
          description: Resource tags
          type: object
        type:
          description: Resource type
          readOnly: true
          type: string
      required:
        - location
      x-ms-azure-resource: true
    ResourceUpdate:
      description: The Resource model definition.
      properties:
        tags:
          additionalProperties:
            type: string
          description: Resource tags
          type: object
      x-ms-azure-resource: true
    Snapshot:
      allOf:
        - $ref: '#/components/schemas/Resource'
      description: Snapshot resource.
      properties:
        properties:
          $ref: '#/components/schemas/DiskProperties'
    SnapshotList:
      description: The List Snapshots operation response.
      properties:
        nextLink:
          description: The uri to fetch the next page of snapshots. Call ListNext() with this to fetch the next page of snapshots.
          type: string
        value:
          description: A list of snapshots.
          items:
            $ref: '#/components/schemas/Snapshot'
          type: array
      required:
        - value
    SnapshotUpdate:
      allOf:
        - $ref: '#/components/schemas/ResourceUpdate'
      description: Snapshot update resource.
      properties:
        properties:
          $ref: '#/components/schemas/DiskUpdateProperties'
    SourceVault:
      description: 'The vault id is an Azure Resource Manager Resoure id in the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}'
      properties:
        id:
          description: Resource Id
          type: string
  parameters:
    ApiVersionParameter:
      description: Client Api Version.
      in: query
      name: api-version
      required: true
      schema:
        type: string
    DiskNameParameter:
      description: The name of the disk within the given subscription and resource group.
      in: path
      name: diskName
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    ResourceGroupNameParameter:
      description: The name of the resource group.
      in: path
      name: resourceGroupName
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    SnapshotNameParameter:
      description: The name of the snapshot within the given subscription and resource group.
      in: path
      name: snapshotName
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    SubscriptionIdParameter:
      description: Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
      in: path
      name: subscriptionId
      required: true
      schema:
        type: string
