openapi: 3.0.0
servers:
  - url: 'https://management.azure.com/'
info:
  description: Media Services resource management APIs.
  title: MediaServicesManagementClient
  version: '2015-10-01'
  x-apisguru-categories:
    - media
    - cloud
  x-logo:
    url: 'https://assets.onestore.ms/cdnfiles/onestorerolling-1606-01000/shell/v3/images/logo/microsoft.png'
  x-origin:
    - format: swagger
      url: 'https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/arm-mediaservices/2015-10-01/swagger/media.json'
      version: '2.0'
  x-preferred: true
  x-providerName: azure.com
  x-serviceName: arm-mediaservices
  x-tags:
    - Azure
    - Microsoft
    - video
    - streaming
    - video on demand
    - broadcasting
security:
  - azure_auth:
      - user_impersonation
paths:
  '/subscriptions/{subscriptionId}/providers/Microsoft.Media/CheckNameAvailability':
    post:
      description: Checks whether the Media Service resource name is available. The name must be globally unique.
      externalDocs:
        url: 'https://aka.ms/media-manage'
      operationId: MediaService_CheckNameAvailability
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/apiVersionParameter'
      responses:
        '200':
          description: Success. Returns details about whether a Media Service resource name is available.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckNameAvailabilityOutput'
              examples:
                response:
                  value:
                    value:
                      - message: Already in use by another Media Service instance. Please try again with a name that is not likely to be in use.
                        nameAvailable: false
                        reason: AlreadyExists
        default:
          description: CheckNameAvailability of a Media Service failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckNameAvailabilityInput'
        description: Properties needed to check the availability of a name.
        required: true
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaservices':
    get:
      description: Lists all of the Media Services in a resource group.
      externalDocs:
        url: 'https://aka.ms/media-manage'
      operationId: MediaService_ListByResourceGroup
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/apiVersionParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
      responses:
        '200':
          description: Success. Returns a list of all of the Media Services accounts in a resource group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MediaServiceCollection'
              examples:
                response:
                  value:
                    value:
                      - id: /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/contoso-media/providers/Microsoft.Media/mediaservices/contosomedia
                        location: West US
                        name: contosomedia
                        properties:
                          apiEndpoints:
                            - endpoint: 'https://wamsbayclus001rest-hs.cloudapp.net/api/'
                              majorVersion: '2'
                          storageAccounts:
                            - id: /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/contoso-media/providers/Microsoft.Storage/storageAccounts/contosomedia
                              isPrimary: true
                        type: Microsoft.Media/mediaservices
        default:
          description: List Media Services failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      x-ms-pageable: {}
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaservices/{mediaServiceName}':
    delete:
      description: Deletes a Media Service.
      externalDocs:
        url: 'https://aka.ms/media-manage'
      operationId: MediaService_Delete
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/apiVersionParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/mediaResourceNameParameter'
      responses:
        '200':
          description: Success. The Media Services account was deleted.
        '204':
          description: No Content. The account name does not exist.
        default:
          description: Delete Media Services failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    get:
      description: Gets a Media Service.
      externalDocs:
        url: 'https://aka.ms/media-manage'
      operationId: MediaService_Get
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/apiVersionParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/mediaResourceNameParameter'
      responses:
        '200':
          description: Success. Returns the details of the Media Services account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MediaService'
              examples:
                response:
                  value:
                    id: /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/contoso-media/providers/Microsoft.Media/mediaservices/contosomedia
                    location: West US
                    name: contosomedia
                    properties:
                      apiEndpoints:
                        - endpoint: 'https://wamsbayclus001rest-hs.cloudapp.net/api/'
                          majorVersion: '2'
                      storageAccounts:
                        - id: /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/contoso-media/providers/Microsoft.Storage/storageAccounts/contosomedia
                          isPrimary: true
                    type: Microsoft.Media/mediaservices
        default:
          description: Get Media Services failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    patch:
      description: Updates a Media Service.
      externalDocs:
        url: 'https://aka.ms/media-manage'
      operationId: MediaService_Update
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/apiVersionParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/mediaResourceNameParameter'
      responses:
        '200':
          description: Success. The Media Services account was updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MediaService'
              examples:
                response:
                  value:
                    id: /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/contoso-media/providers/Microsoft.Media/mediaservices/contosomedia
                    location: West US
                    name: contosomedia
                    properties:
                      apiEndpoints:
                        - endpoint: 'https://wamsbayclus001rest-hs.cloudapp.net/api/'
                          majorVersion: '2'
                      storageAccounts:
                        - id: /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/contoso-media/providers/Microsoft.Storage/storageAccounts/contosomedia
                          isPrimary: true
                    type: Microsoft.Media/mediaservices
        default:
          description: Update Media Services failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MediaService'
        description: Media Service properties needed for update.
        required: true
    put:
      description: Creates a Media Service.
      externalDocs:
        url: 'https://aka.ms/media-manage'
      operationId: MediaService_Create
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/apiVersionParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/mediaResourceNameParameter'
      responses:
        '201':
          description: Success. Returns the new Media Services account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MediaService'
              examples:
                response:
                  value:
                    id: /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/contoso-media/providers/Microsoft.Media/mediaservices/contosomedia
                    location: West US
                    name: contosomedia
                    properties:
                      apiEndpoints:
                        - endpoint: 'https://wamsbayclus001rest-hs.cloudapp.net/api/'
                          majorVersion: '2'
                      storageAccounts:
                        - id: /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/contoso-media/providers/Microsoft.Storage/storageAccounts/contosomedia
                          isPrimary: true
                    type: Microsoft.Media/mediaservices
        default:
          description: Create Media Services failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MediaService'
        description: Media Service properties needed for creation.
        required: true
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaservices/{mediaServiceName}/listKeys':
    post:
      description: Lists the keys for a Media Service.
      externalDocs:
        url: 'https://aka.ms/media-manage'
      operationId: MediaService_ListKeys
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/apiVersionParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/mediaResourceNameParameter'
      responses:
        '200':
          description: Success. The keys for the Media Services account were listed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceKeys'
              examples:
                response:
                  value:
                    primaryAuthEndpoint: 'https://wamsprodglobal001acs.accesscontrol.windows.net/'
                    primaryKey: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx=
                    scope: 'urn:windowsazuremediaservices'
                    secondaryAuthEndpoint: 'https://wamsprodglobal002acs.accesscontrol.windows.net/'
                    secondaryKey: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx=
        default:
          description: List Media Service keys failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaservices/{mediaServiceName}/regenerateKey':
    post:
      description: Regenerates a primary or secondary key for a Media Service.
      externalDocs:
        url: 'https://aka.ms/media-manage'
      operationId: MediaService_RegenerateKey
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/apiVersionParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/mediaResourceNameParameter'
      responses:
        '200':
          description: Success. The Media Services key specified in the input was regenerated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegenerateKeyOutput'
              examples:
                response:
                  value:
                    key: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx=
        default:
          description: Regenerate Media Service key failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegenerateKeyInput'
        description: Properties needed to regenerate the Media Service key.
        required: true
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaservices/{mediaServiceName}/syncStorageKeys':
    post:
      description: Synchronizes storage account keys for a storage account associated with the Media Service account.
      externalDocs:
        url: 'https://aka.ms/media-manage'
      operationId: MediaService_SyncStorageKeys
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/apiVersionParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/mediaResourceNameParameter'
      responses:
        '200':
          description: Success. The keys for the storage account were synchronized.
        default:
          description: Synch Media Service storage keys failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SyncStorageKeysInput'
        description: Properties needed to synchronize the keys for a storage account to the Media Service.
        required: true
components:
  schemas:
    ApiEndpoint:
      description: The properties for a Media Services REST API endpoint.
      example:
        endpoint: 'https://wamsbayclus001rest-hs.cloudapp.net/api/'
        majorVersion: '2'
      properties:
        endpoint:
          description: The Media Services REST endpoint.
          type: string
        majorVersion:
          description: The version of Media Services REST API.
          type: string
    ApiError:
      description: The error returned from a failed Media Services REST API call.
      example:
        error:
          code: BadRequest
          message: Name availability check is not supported for type Microsoft.Media/mediaservices.
      properties:
        code:
          description: Error code.
          type: string
        message:
          description: Error message.
          type: string
    CheckNameAvailabilityInput:
      description: The request body for CheckNameAvailability API.
      example:
        name: contosomedia
        type: mediaservices
      properties:
        name:
          description: The name of the resource. A name must be globally unique.
          maxLength: 24
          minLength: 3
          pattern: '^[a-z0-9]'
          type: string
        type:
          $ref: '#/components/schemas/ResourceType'
      required:
        - name
        - type
    CheckNameAvailabilityOutput:
      description: The response body for CheckNameAvailability API.
      example:
        value:
          - NameAvailable: true
          - Message: Already in use by another Media Service instance. Please try again with a name that is not likely to be in use.
            NameAvailable: false
            Reason: AlreadyExists
          - Message: The media service name should be between 3 and 24 characters and may contain only lowercase letters and numbers.
            NameAvailable: false
            Reason: Invalid
      properties:
        Message:
          description: Specifies the detailed reason if the name is not available.
          type: string
        NameAvailable:
          description: Specifies if the name is available.
          type: boolean
        Reason:
          description: Specifies the reason if the name is not available.
          enum:
            - None
            - Invalid
            - AlreadyExists
          type: string
          x-ms-enum:
            modelAsString: false
            name: EntityNameUnavailabilityReason
    MediaService:
      allOf:
        - $ref: '#/components/schemas/Resource'
      description: The properties of a Media Service resource.
      example:
        location: West US
        properties:
          storageAccounts:
            - id: /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/contoso-media/providers/Microsoft.Storage/storageAccounts/contosomedia
              isPrimary: true
      properties:
        properties:
          $ref: '#/components/schemas/MediaServiceProperties'
    MediaServiceCollection:
      description: The collection of Media Service resources.
      properties:
        value:
          items:
            $ref: '#/components/schemas/MediaService'
          type: array
    MediaServiceProperties:
      description: The additional properties of a Media Service resource.
      properties:
        apiEndpoints:
          description: 'Read-only property that lists the Media Services REST API endpoints for this resource. If supplied on a PUT or PATCH, the value will be ignored.'
          items:
            $ref: '#/components/schemas/ApiEndpoint'
          readOnly: true
          type: array
        storageAccounts:
          description: The storage accounts for this resource.
          items:
            $ref: '#/components/schemas/StorageAccount'
          type: array
    RegenerateKeyInput:
      description: The request body for a RegenerateKey API.
      example:
        keyType: Primary
      properties:
        keyType:
          description: 'The keyType indicating which key you want to regenerate, Primary or Secondary.'
          enum:
            - Primary
            - Secondary
          type: string
          x-ms-enum:
            modelAsString: false
            name: KeyType
      required:
        - keyType
    RegenerateKeyOutput:
      description: The response body for a RegenerateKey API.
      example:
        key: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx=
      properties:
        key:
          description: The new value of either the primary or secondary key.
          type: string
    Resource:
      description: The Azure Resource Manager resource.
      properties:
        id:
          description: The id of the resource.
          readOnly: true
          type: string
        location:
          description: 'The geographic location of the resource. This must be one of the supported and registered Azure Geo Regions (for example, West US, East US, Southeast Asia, and so forth).'
          type: string
        name:
          description: The name of the resource.
          readOnly: true
          type: string
        tags:
          additionalProperties:
            type: string
          description: Tags to help categorize the resource in the Azure portal.
          type: object
        type:
          description: The type of the resource
          readOnly: true
          type: string
      x-ms-azure-resource: true
    ResourceType:
      description: Type of MediaService resource.
      enum:
        - mediaservices
      type: string
      x-ms-enum:
        modelAsString: false
        name: ResourceType
    ServiceKeys:
      description: The response body for a ListKeys API.
      example:
        primaryAuthEndpoint: 'https://wamsprodglobal001acs.accesscontrol.windows.net/'
        primaryKey: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx=
        scope: 'urn:windowsazuremediaservices'
        secondaryAuthEndpoint: 'https://wamsprodglobal002acs.accesscontrol.windows.net/'
        secondaryKey: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx=
      properties:
        primaryAuthEndpoint:
          description: The primary authorization endpoint.
          type: string
        primaryKey:
          description: The primary key for the Media Service resource.
          type: string
        scope:
          description: The authorization scope.
          type: string
        secondaryAuthEndpoint:
          description: The secondary authorization endpoint.
          type: string
        secondaryKey:
          description: The secondary key for the Media Service resource.
          type: string
    StorageAccount:
      description: The properties of a storage account associated with this resource.
      example:
        id: /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/contoso-media/providers/Microsoft.Storage/storageAccounts/contosomedia
        isPrimary: true
      properties:
        id:
          description: 'The id of the storage account resource. Media Services relies on tables and queues as well as blobs, so the primary storage account must be a Standard Storage account (either Microsoft.ClassicStorage or Microsoft.Storage). Blob only storage accounts can be added as secondary storage accounts (isPrimary false).'
          type: string
        isPrimary:
          description: Is this storage account resource the primary storage account for the Media Service resource. Blob only storage must set this to false.
          type: boolean
      required:
        - id
        - isPrimary
    SyncStorageKeysInput:
      description: The request  body for a SyncStorageKeys API.
      example:
        id: /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/contoso-media/providers/Microsoft.Storage/storageAccounts/contosomedia
      properties:
        id:
          description: The id of the storage account resource.
          type: string
      required:
        - id
  parameters:
    apiVersionParameter:
      description: Version of the API to be used with the client request. Current version is 2015-10-01
      in: query
      name: api-version
      required: true
      schema:
        type: string
    mediaResourceNameParameter:
      description: Name of the Media Service.
      in: path
      name: mediaServiceName
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
        minLength: 3
        maxLength: 24
        pattern: '^[a-z0-9]'
    resourceGroupNameParameter:
      description: Name of the resource group within the Azure subscription.
      in: path
      name: resourceGroupName
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    subscriptionIdParameter:
      description: The unique identifier for a Microsoft Azure subscription.
      in: path
      name: subscriptionId
      required: true
      schema:
        type: string
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow
      type: oauth2
      flows:
        implicit:
          authorizationUrl: 'https://login.microsoftonline.com/common/oauth2/authorize'
          scopes:
            user_impersonation: impersonate your user account
