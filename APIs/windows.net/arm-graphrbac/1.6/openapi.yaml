openapi: 3.0.0
servers:
  - url: 'https://graph.windows.net/'
x-hasEquivalentPaths: true
info:
  description: The Graph RBAC Management Client
  title: GraphRbacManagementClient
  version: '1.6'
  x-logo:
    url: 'https://assets.onestore.ms/cdnfiles/onestorerolling-1606-01000/shell/v3/images/logo/microsoft.png'
  x-origin:
    - format: swagger
      url: 'https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/arm-graphrbac/1.6/swagger/graphrbac.json'
      version: '2.0'
  x-preferred: true
  x-providerName: windows.net
  x-serviceName: arm-graphrbac
security:
  - azure_auth:
      - user_impersonation
paths:
  '/{tenantID}/applications':
    get:
      description: Lists applications by filter parameters.
      operationId: Applications_List
      parameters:
        - description: The filters to apply to the operation.
          in: query
          name: $filter
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/tenantIDInPath'
      responses:
        '200':
          description: OK. The operation was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationListResult'
            text/json:
              schema:
                $ref: '#/components/schemas/ApplicationListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphError'
            text/json:
              schema:
                $ref: '#/components/schemas/GraphError'
      tags:
        - Application
      x-ms-odata: '#/components/schemas//components/schemas//components/schemas/Application'
      x-ms-pageable:
        nextLinkName: odata.nextLink
        operationName: Applications_ListNext
    post:
      description: Create a new application.
      operationId: Applications_Create
      parameters:
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/tenantIDInPath'
      responses:
        '201':
          description: The application was created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
            text/json:
              schema:
                $ref: '#/components/schemas/Application'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphError'
            text/json:
              schema:
                $ref: '#/components/schemas/GraphError'
      tags:
        - Application
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationCreateParameters'
          text/json:
            schema:
              $ref: '#/components/schemas/ApplicationCreateParameters'
        description: The parameters for creating an application.
        required: true
  '/{tenantID}/applications/{applicationObjectId}':
    delete:
      description: Delete an application.
      operationId: Applications_Delete
      parameters:
        - description: Application object ID.
          in: path
          name: applicationObjectId
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
          allowReserved: true
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/tenantIDInPath'
      responses:
        '204':
          description: No Content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphError'
            text/json:
              schema:
                $ref: '#/components/schemas/GraphError'
      tags:
        - Application
    get:
      description: Get an application by object ID.
      operationId: Applications_Get
      parameters:
        - description: Application object ID.
          in: path
          name: applicationObjectId
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
          allowReserved: true
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/tenantIDInPath'
      responses:
        '200':
          description: OK. The operation was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
            text/json:
              schema:
                $ref: '#/components/schemas/Application'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphError'
            text/json:
              schema:
                $ref: '#/components/schemas/GraphError'
      tags:
        - Application
    patch:
      description: Update an existing application.
      operationId: Applications_Patch
      parameters:
        - description: Application object ID.
          in: path
          name: applicationObjectId
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
          allowReserved: true
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/tenantIDInPath'
      responses:
        '204':
          description: No Content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphError'
            text/json:
              schema:
                $ref: '#/components/schemas/GraphError'
      tags:
        - Application
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationUpdateParameters'
          text/json:
            schema:
              $ref: '#/components/schemas/ApplicationUpdateParameters'
        description: Parameters to update an existing application.
        required: true
  '/{tenantID}/applications/{applicationObjectId}/keyCredentials':
    get:
      description: Get the keyCredentials associated with an application.
      operationId: Applications_ListKeyCredentials
      parameters:
        - description: Application object ID.
          in: path
          name: applicationObjectId
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
          allowReserved: true
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/tenantIDInPath'
      responses:
        '200':
          description: OK. The operation was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeyCredentialListResult'
            text/json:
              schema:
                $ref: '#/components/schemas/KeyCredentialListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphError'
            text/json:
              schema:
                $ref: '#/components/schemas/GraphError'
      tags:
        - ApplicationKeyCredentials
      x-ms-pageable: {}
    patch:
      description: Update the keyCredentials associated with an application.
      operationId: Applications_UpdateKeyCredentials
      parameters:
        - description: Application object ID.
          in: path
          name: applicationObjectId
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
          allowReserved: true
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/tenantIDInPath'
      responses:
        '204':
          description: No Content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphError'
            text/json:
              schema:
                $ref: '#/components/schemas/GraphError'
      tags:
        - ApplicationKeyCredentials
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KeyCredentialsUpdateParameters'
          text/json:
            schema:
              $ref: '#/components/schemas/KeyCredentialsUpdateParameters'
        description: Parameters to update the keyCredentials of an existing application.
        required: true
  '/{tenantID}/applications/{applicationObjectId}/passwordCredentials':
    get:
      description: Get the passwordCredentials associated with an application.
      operationId: Applications_ListPasswordCredentials
      parameters:
        - description: Application object ID.
          in: path
          name: applicationObjectId
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
          allowReserved: true
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/tenantIDInPath'
      responses:
        '200':
          description: OK. The operation was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordCredentialListResult'
            text/json:
              schema:
                $ref: '#/components/schemas/PasswordCredentialListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphError'
            text/json:
              schema:
                $ref: '#/components/schemas/GraphError'
      tags:
        - ApplicationPasswordCredentials
      x-ms-pageable: {}
    patch:
      description: Update passwordCredentials associated with an application.
      operationId: Applications_UpdatePasswordCredentials
      parameters:
        - description: Application object ID.
          in: path
          name: applicationObjectId
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
          allowReserved: true
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/tenantIDInPath'
      responses:
        '204':
          description: No Content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphError'
            text/json:
              schema:
                $ref: '#/components/schemas/GraphError'
      tags:
        - ApplicationPasswordCredentials
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordCredentialsUpdateParameters'
          text/json:
            schema:
              $ref: '#/components/schemas/PasswordCredentialsUpdateParameters'
        description: Parameters to update passwordCredentials of an existing application.
        required: true
  '/{tenantID}/getObjectsByObjectIds':
    post:
      description: Gets AD group membership for the specified AD object IDs.
      operationId: Objects_GetObjectsByObjectIds
      parameters:
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/tenantIDInPath'
      responses:
        '200':
          description: OK. The operation was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetObjectsResult'
            text/json:
              schema:
                $ref: '#/components/schemas/GetObjectsResult'
      tags:
        - Objects
      x-ms-pageable:
        nextLinkName: odata.nextLink
        operationName: Objects_GetObjectsByObjectIdsNext
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetObjectsParameters'
          text/json:
            schema:
              $ref: '#/components/schemas/GetObjectsParameters'
        description: Objects filtering parameters.
        required: true
  '/{tenantID}/groups':
    get:
      description: Gets list of groups for the current tenant.
      operationId: Groups_List
      parameters:
        - description: The filter to apply to the operation.
          in: query
          name: $filter
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/tenantIDInPath'
      responses:
        '200':
          description: OK. The operation was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupListResult'
            text/json:
              schema:
                $ref: '#/components/schemas/GroupListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphError'
            text/json:
              schema:
                $ref: '#/components/schemas/GraphError'
      tags:
        - Group
      x-ms-odata: '#/components/schemas//components/schemas//components/schemas/ADGroup'
      x-ms-pageable:
        nextLinkName: odata.nextLink
        operationName: Groups_ListNext
    post:
      description: Create a group in the directory.
      operationId: Groups_Create
      parameters:
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/tenantIDInPath'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ADGroup'
            text/json:
              schema:
                $ref: '#/components/schemas/ADGroup'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphError'
            text/json:
              schema:
                $ref: '#/components/schemas/GraphError'
      tags:
        - Group
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupCreateParameters'
          text/json:
            schema:
              $ref: '#/components/schemas/GroupCreateParameters'
        description: The parameters for the group to create.
        required: true
  '/{tenantID}/groups/{groupObjectId}':
    delete:
      description: Delete a group from the directory.
      operationId: Groups_Delete
      parameters:
        - description: The object ID of the group to delete.
          in: path
          name: groupObjectId
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
          allowReserved: true
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/tenantIDInPath'
      responses:
        '204':
          description: No Content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphError'
            text/json:
              schema:
                $ref: '#/components/schemas/GraphError'
      tags:
        - Group
  '/{tenantID}/groups/{groupObjectId}/$links/members':
    post:
      description: Add a member to a group.
      operationId: Groups_AddMember
      parameters:
        - description: The object ID of the group to which to add the member.
          in: path
          name: groupObjectId
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
          allowReserved: true
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/tenantIDInPath'
      responses:
        '204':
          description: No Content. Indicates success. No response body is returned.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphError'
            text/json:
              schema:
                $ref: '#/components/schemas/GraphError'
      tags:
        - Group
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupAddMemberParameters'
          text/json:
            schema:
              $ref: '#/components/schemas/GroupAddMemberParameters'
        description: 'The URL of the member object, such as https://graph.windows.net/0b1f9851-1bf0-433f-aec3-cb9272f093dc/directoryObjects/f260bbc4-c254-447b-94cf-293b5ec434dd.'
        required: true
  '/{tenantID}/groups/{groupObjectId}/$links/members/{memberObjectId}':
    delete:
      description: Remove a member from a group.
      operationId: Groups_RemoveMember
      parameters:
        - description: The object ID of the group from which to remove the member.
          in: path
          name: groupObjectId
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
          allowReserved: true
        - description: Member object id
          in: path
          name: memberObjectId
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
          allowReserved: true
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/tenantIDInPath'
      responses:
        '204':
          description: No Content. Indicates success. No response body is returned.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphError'
            text/json:
              schema:
                $ref: '#/components/schemas/GraphError'
      tags:
        - Group
  '/{tenantID}/groups/{objectId}':
    get:
      description: Gets group information from the directory.
      operationId: Groups_Get
      parameters:
        - description: The object ID of the user for which to get group information.
          in: path
          name: objectId
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
          allowReserved: true
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/tenantIDInPath'
      responses:
        '200':
          description: OK. The operation was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ADGroup'
            text/json:
              schema:
                $ref: '#/components/schemas/ADGroup'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphError'
            text/json:
              schema:
                $ref: '#/components/schemas/GraphError'
      tags:
        - Group
  '/{tenantID}/groups/{objectId}/getMemberGroups':
    post:
      description: Gets a collection of object IDs of groups of which the specified group is a member.
      operationId: Groups_GetMemberGroups
      parameters:
        - description: The object ID of the group for which to get group membership.
          in: path
          name: objectId
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
          allowReserved: true
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/tenantIDInPath'
      responses:
        '200':
          description: OK. The operation was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupGetMemberGroupsResult'
            text/json:
              schema:
                $ref: '#/components/schemas/GroupGetMemberGroupsResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphError'
            text/json:
              schema:
                $ref: '#/components/schemas/GraphError'
      tags:
        - Group
      x-ms-pageable: {}
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupGetMemberGroupsParameters'
          text/json:
            schema:
              $ref: '#/components/schemas/GroupGetMemberGroupsParameters'
        description: Group filtering parameters.
        required: true
  '/{tenantID}/groups/{objectId}/members':
    get:
      description: Gets the members of a group.
      operationId: Groups_GetGroupMembers
      parameters:
        - description: The object ID of the group whose members should be retrieved.
          in: path
          name: objectId
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
          allowReserved: true
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/tenantIDInPath'
      responses:
        '200':
          description: OK. The operation was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetObjectsResult'
            text/json:
              schema:
                $ref: '#/components/schemas/GetObjectsResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphError'
            text/json:
              schema:
                $ref: '#/components/schemas/GraphError'
      tags:
        - Group
      x-ms-pageable:
        nextLinkName: odata.nextLink
        operationName: Groups_GetGroupMembersNext
  '/{tenantID}/isMemberOf':
    post:
      description: 'Checks whether the specified user, group, contact, or service principal is a direct or transitive member of the specified group.'
      operationId: Groups_IsMemberOf
      parameters:
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/tenantIDInPath'
      responses:
        '200':
          description: 'OK. Indicates success. Returns true if the user, contact, group, or service principal is a direct or a transitive member of the specified group; otherwsie, false.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckGroupMembershipResult'
            text/json:
              schema:
                $ref: '#/components/schemas/CheckGroupMembershipResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphError'
            text/json:
              schema:
                $ref: '#/components/schemas/GraphError'
      tags:
        - Group
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckGroupMembershipParameters'
          text/json:
            schema:
              $ref: '#/components/schemas/CheckGroupMembershipParameters'
        description: The check group membership parameters.
        required: true
  '/{tenantID}/me':
    get:
      description: Gets the details for the currently logged-in user.
      operationId: Objects_GetCurrentUser
      parameters:
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/tenantIDInPath'
      responses:
        '200':
          description: OK. The operation was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AADObject'
            text/json:
              schema:
                $ref: '#/components/schemas/AADObject'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphError'
            text/json:
              schema:
                $ref: '#/components/schemas/GraphError'
      tags:
        - Objects
  '/{tenantID}/servicePrincipals':
    get:
      description: Gets a list of service principals from the current tenant.
      operationId: ServicePrincipals_List
      parameters:
        - description: The filter to apply to the operation.
          in: query
          name: $filter
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/tenantIDInPath'
      responses:
        '200':
          description: OK. The operation was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServicePrincipalListResult'
            text/json:
              schema:
                $ref: '#/components/schemas/ServicePrincipalListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphError'
            text/json:
              schema:
                $ref: '#/components/schemas/GraphError'
      tags:
        - ServicePrincipal
      x-ms-odata: '#/components/schemas//components/schemas//components/schemas/ServicePrincipal'
      x-ms-pageable:
        nextLinkName: odata.nextLink
        operationName: ServicePrincipals_ListNext
    post:
      description: Creates a service principal in the directory.
      operationId: ServicePrincipals_Create
      parameters:
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/tenantIDInPath'
      responses:
        '201':
          description: The service principal was created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServicePrincipal'
            text/json:
              schema:
                $ref: '#/components/schemas/ServicePrincipal'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphError'
            text/json:
              schema:
                $ref: '#/components/schemas/GraphError'
      tags:
        - ServicePrincipal
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServicePrincipalCreateParameters'
          text/json:
            schema:
              $ref: '#/components/schemas/ServicePrincipalCreateParameters'
        description: Parameters to create a service principal.
        required: true
  '/{tenantID}/servicePrincipals/{objectId}':
    delete:
      description: Deletes a service principal from the directory.
      operationId: ServicePrincipals_Delete
      parameters:
        - description: The object ID of the service principal to delete.
          in: path
          name: objectId
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
          allowReserved: true
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/tenantIDInPath'
      responses:
        '204':
          description: No Content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphError'
            text/json:
              schema:
                $ref: '#/components/schemas/GraphError'
      tags:
        - ServicePrincipal
    get:
      description: Gets service principal information from the directory.
      operationId: ServicePrincipals_Get
      parameters:
        - description: The object ID of the service principal to get.
          in: path
          name: objectId
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
          allowReserved: true
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/tenantIDInPath'
      responses:
        '200':
          description: OK. The operation was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServicePrincipal'
            text/json:
              schema:
                $ref: '#/components/schemas/ServicePrincipal'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphError'
            text/json:
              schema:
                $ref: '#/components/schemas/GraphError'
      tags:
        - ServicePrincipal
  '/{tenantID}/servicePrincipals/{objectId}/keyCredentials':
    get:
      description: Get the keyCredentials associated with the specified service principal.
      operationId: ServicePrincipals_ListKeyCredentials
      parameters:
        - description: The object ID of the service principal for which to get keyCredentials.
          in: path
          name: objectId
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
          allowReserved: true
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/tenantIDInPath'
      responses:
        '200':
          description: OK. The operation was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeyCredentialListResult'
            text/json:
              schema:
                $ref: '#/components/schemas/KeyCredentialListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphError'
            text/json:
              schema:
                $ref: '#/components/schemas/GraphError'
      tags:
        - ServicePrincipalKeyCredentials
      x-ms-pageable: {}
    patch:
      description: Update the keyCredentials associated with a service principal.
      operationId: ServicePrincipals_UpdateKeyCredentials
      parameters:
        - description: The object ID for which to get service principal information.
          in: path
          name: objectId
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
          allowReserved: true
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/tenantIDInPath'
      responses:
        '204':
          description: No Content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphError'
            text/json:
              schema:
                $ref: '#/components/schemas/GraphError'
      tags:
        - ServicePrincipalKeyCredentials
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KeyCredentialsUpdateParameters'
          text/json:
            schema:
              $ref: '#/components/schemas/KeyCredentialsUpdateParameters'
        description: Parameters to update the keyCredentials of an existing service principal.
        required: true
  '/{tenantID}/servicePrincipals/{objectId}/passwordCredentials':
    get:
      description: Gets the passwordCredentials associated with a service principal.
      operationId: ServicePrincipals_ListPasswordCredentials
      parameters:
        - description: The object ID of the service principal.
          in: path
          name: objectId
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
          allowReserved: true
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/tenantIDInPath'
      responses:
        '200':
          description: OK. The operation was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordCredentialListResult'
            text/json:
              schema:
                $ref: '#/components/schemas/PasswordCredentialListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphError'
            text/json:
              schema:
                $ref: '#/components/schemas/GraphError'
      tags:
        - ServicePrincipalPasswordCredentials
      x-ms-pageable: {}
    patch:
      description: Updates the passwordCredentials associated with a service principal.
      operationId: ServicePrincipals_UpdatePasswordCredentials
      parameters:
        - description: The object ID of the service principal.
          in: path
          name: objectId
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
          allowReserved: true
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/tenantIDInPath'
      responses:
        '204':
          description: No Content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphError'
            text/json:
              schema:
                $ref: '#/components/schemas/GraphError'
      tags:
        - ServicePrincipalPasswordCredentials
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordCredentialsUpdateParameters'
          text/json:
            schema:
              $ref: '#/components/schemas/PasswordCredentialsUpdateParameters'
        description: Parameters to update the passwordCredentials of an existing service principal.
        required: true
  '/{tenantID}/users':
    get:
      description: Gets list of users for the current tenant.
      operationId: Users_List
      parameters:
        - description: The filter to apply to the operation.
          in: query
          name: $filter
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/tenantIDInPath'
      responses:
        '200':
          description: OK. The operation was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserListResult'
            text/json:
              schema:
                $ref: '#/components/schemas/UserListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphError'
            text/json:
              schema:
                $ref: '#/components/schemas/GraphError'
      tags:
        - User
      x-ms-odata: '#/components/schemas//components/schemas//components/schemas/User'
      x-ms-pageable:
        nextLinkName: odata.nextLink
        operationName: Users_ListNext
    post:
      description: Create a new user.
      operationId: Users_Create
      parameters:
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/tenantIDInPath'
      responses:
        '201':
          description: Created. Indicates success. The new user is returned in the response body.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
            text/json:
              schema:
                $ref: '#/components/schemas/User'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphError'
            text/json:
              schema:
                $ref: '#/components/schemas/GraphError'
      tags:
        - User
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreateParameters'
          text/json:
            schema:
              $ref: '#/components/schemas/UserCreateParameters'
        description: Parameters to create a user.
        required: true
  '/{tenantID}/users/{objectId}/getMemberGroups':
    post:
      description: Gets a collection that contains the object IDs of the groups of which the user is a member.
      operationId: Users_GetMemberGroups
      parameters:
        - description: The object ID of the user for which to get group membership.
          in: path
          name: objectId
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
          allowReserved: true
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/tenantIDInPath'
      responses:
        '200':
          description: OK. The operation was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGetMemberGroupsResult'
            text/json:
              schema:
                $ref: '#/components/schemas/UserGetMemberGroupsResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphError'
            text/json:
              schema:
                $ref: '#/components/schemas/GraphError'
      tags:
        - User
      x-ms-pageable: {}
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserGetMemberGroupsParameters'
          text/json:
            schema:
              $ref: '#/components/schemas/UserGetMemberGroupsParameters'
        description: User filtering parameters.
        required: true
  '/{tenantID}/users/{upnOrObjectId}':
    delete:
      description: Delete a user.
      operationId: Users_Delete
      parameters:
        - description: The object ID or principal name of the user to delete.
          in: path
          name: upnOrObjectId
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
          allowReserved: true
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/tenantIDInPath'
      responses:
        '204':
          description: No Content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphError'
            text/json:
              schema:
                $ref: '#/components/schemas/GraphError'
      tags:
        - User
    get:
      description: Gets user information from the directory.
      operationId: Users_Get
      parameters:
        - description: The object ID or principal name of the user for which to get information.
          in: path
          name: upnOrObjectId
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
          allowReserved: true
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/tenantIDInPath'
      responses:
        '200':
          description: OK. The operation was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
            text/json:
              schema:
                $ref: '#/components/schemas/User'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphError'
            text/json:
              schema:
                $ref: '#/components/schemas/GraphError'
      tags:
        - User
    patch:
      description: Updates a user.
      operationId: Users_Update
      parameters:
        - description: The object ID or principal name of the user to update.
          in: path
          name: upnOrObjectId
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
          allowReserved: true
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/tenantIDInPath'
      responses:
        '204':
          description: No Content.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphError'
            text/json:
              schema:
                $ref: '#/components/schemas/GraphError'
      tags:
        - User
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdateParameters'
          text/json:
            schema:
              $ref: '#/components/schemas/UserUpdateParameters'
        description: Parameters to update an existing user.
        required: true
x-ms-paths:
  '/{tenantID}/{nextLink}?Applications_ListNext':
    get:
      description: Gets a list of applications from the current tenant.
      operationId: Applications_ListNext
      parameters:
        - description: Next link for the list operation.
          in: path
          name: nextLink
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
          allowReserved: true
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/tenantIDInPath'
      responses:
        '200':
          description: OK. The operation was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationListResult'
            text/json:
              schema:
                $ref: '#/components/schemas/ApplicationListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphError'
            text/json:
              schema:
                $ref: '#/components/schemas/GraphError'
      tags:
        - Applications
      x-ms-pageable:
        nextLinkName: odata.nextLink
        operationName: Applications_ListNext
  '/{tenantID}/{nextLink}?Groups_GetGroupMembersNext':
    get:
      description: Gets the members of a group.
      operationId: Groups_GetGroupMembersNext
      parameters:
        - description: Next link for the list operation.
          in: path
          name: nextLink
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
          allowReserved: true
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/tenantIDInPath'
      responses:
        '200':
          description: OK. The operation was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetObjectsResult'
            text/json:
              schema:
                $ref: '#/components/schemas/GetObjectsResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphError'
            text/json:
              schema:
                $ref: '#/components/schemas/GraphError'
      tags:
        - Group
      x-ms-pageable:
        nextLinkName: odata.nextLink
        operationName: Groups_GetGroupMembersNext
  '/{tenantID}/{nextLink}?Groups_ListNext':
    get:
      description: Gets a list of groups for the current tenant.
      operationId: Groups_ListNext
      parameters:
        - description: Next link for the list operation.
          in: path
          name: nextLink
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
          allowReserved: true
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/tenantIDInPath'
      responses:
        '200':
          description: OK. The operation was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupListResult'
            text/json:
              schema:
                $ref: '#/components/schemas/GroupListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphError'
            text/json:
              schema:
                $ref: '#/components/schemas/GraphError'
      tags:
        - Group
      x-ms-pageable:
        nextLinkName: odata.nextLink
        operationName: Groups_ListNext
  '/{tenantID}/{nextLink}?Objects_GetObjectsByObjectIdsNext':
    post:
      description: Gets AD group membership for the specified AD object IDs.
      operationId: Objects_GetObjectsByObjectIdsNext
      parameters:
        - description: Next link for the list operation.
          in: path
          name: nextLink
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
          allowReserved: true
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/tenantIDInPath'
      responses:
        '200':
          description: OK. The operation was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetObjectsResult'
            text/json:
              schema:
                $ref: '#/components/schemas/GetObjectsResult'
      tags:
        - Objects
      x-ms-pageable:
        nextLinkName: odata.nextLink
        operationName: Objects_GetObjectsByObjectIdsNext
  '/{tenantID}/{nextLink}?ServicePrincipals_ListNext':
    get:
      description: Gets a list of service principals from the current tenant.
      operationId: ServicePrincipals_ListNext
      parameters:
        - description: Next link for the list operation.
          in: path
          name: nextLink
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
          allowReserved: true
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/tenantIDInPath'
      responses:
        '200':
          description: OK. The operation was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServicePrincipalListResult'
            text/json:
              schema:
                $ref: '#/components/schemas/ServicePrincipalListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphError'
            text/json:
              schema:
                $ref: '#/components/schemas/GraphError'
      tags:
        - ServicePrincipal
      x-ms-pageable:
        nextLinkName: odata.nextLink
        operationName: ServicePrincipals_ListNext
  '/{tenantID}/{nextLink}?Users_ListNext':
    get:
      description: Gets a list of users for the current tenant.
      operationId: Users_ListNext
      parameters:
        - description: Next link for the list operation.
          in: path
          name: nextLink
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
          allowReserved: true
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/tenantIDInPath'
      responses:
        '200':
          description: OK. The operation was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserListResult'
            text/json:
              schema:
                $ref: '#/components/schemas/UserListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphError'
            text/json:
              schema:
                $ref: '#/components/schemas/GraphError'
      tags:
        - User
      x-ms-pageable:
        nextLinkName: odata.nextLink
        operationName: Users_ListNext
components:
  schemas:
    AADObject:
      description: The properties of an Active Directory object.
      properties:
        displayName:
          description: The display name of the object.
          type: string
        mail:
          description: The primary email address of the object.
          type: string
        mailEnabled:
          description: Whether the AAD object is mail-enabled.
          type: boolean
        objectId:
          description: The ID of the object.
          type: string
        objectType:
          description: The type of AAD object.
          type: string
        securityEnabled:
          description: Whether the AAD object is security-enabled.
          type: boolean
        servicePrincipalNames:
          description: A collection of service principal names associated with the object.
          items:
            type: string
          type: array
        signInName:
          description: The sign-in name of the object.
          type: string
        userPrincipalName:
          description: The principal name of the object.
          type: string
        userType:
          description: The user type of the object.
          type: string
    ADGroup:
      description: Active Directory group information.
      properties:
        displayName:
          description: The display name of the group.
          type: string
        mail:
          description: The primary email address of the group.
          type: string
        objectId:
          description: The object ID.
          type: string
        objectType:
          description: The object type.
          type: string
        securityEnabled:
          description: Whether the group is security-enable.
          type: boolean
    Application:
      description: Active Directory application information.
      properties:
        appId:
          description: The application ID.
          type: string
        appPermissions:
          description: The application permissions.
          items:
            type: string
          type: array
        availableToOtherTenants:
          description: Whether the application is be available to other tenants.
          type: boolean
        displayName:
          description: The display name of the application.
          type: string
        homepage:
          description: The home page of the application.
          type: string
        identifierUris:
          description: A collection of URIs for the application.
          items:
            type: string
          type: array
        objectId:
          description: The object ID.
          type: string
        objectType:
          description: The object type.
          type: string
        replyUrls:
          description: A collection of reply URLs for the application.
          items:
            type: string
          type: array
    ApplicationCreateParameters:
      description: Request parameters for creating a new application.
      properties:
        availableToOtherTenants:
          description: Whether the application is available to other tenants.
          type: boolean
        displayName:
          description: The display name of the application.
          type: string
        homepage:
          description: The home page of the application.
          type: string
        identifierUris:
          description: A collection of URIs for the application.
          items:
            type: string
          type: array
        keyCredentials:
          description: The list of KeyCredential objects.
          items:
            $ref: '#/components/schemas/KeyCredential'
          type: array
        passwordCredentials:
          description: The list of PasswordCredential objects.
          items:
            $ref: '#/components/schemas/PasswordCredential'
          type: array
        replyUrls:
          description: A collection of reply URLs for the application.
          items:
            type: string
          type: array
      required:
        - availableToOtherTenants
        - displayName
        - identifierUris
    ApplicationListResult:
      description: Application list operation result.
      properties:
        odata.nextLink:
          description: The URL to get the next set of results.
          type: string
        value:
          description: A collection of applications.
          items:
            $ref: '#/components/schemas/Application'
          type: array
    ApplicationUpdateParameters:
      description: Request parameters for updating an existing application.
      properties:
        availableToOtherTenants:
          description: Whether the application is available to other tenants
          type: boolean
        displayName:
          description: The display name of the application.
          type: string
        homepage:
          description: The home page of the application.
          type: string
        identifierUris:
          description: A collection of URIs for the application.
          items:
            type: string
          type: array
        keyCredentials:
          description: The list of KeyCredential objects.
          items:
            $ref: '#/components/schemas/KeyCredential'
          type: array
        passwordCredentials:
          description: The list of PasswordCredential objects.
          items:
            $ref: '#/components/schemas/PasswordCredential'
          type: array
        replyUrls:
          description: A collection of reply URLs for the application.
          items:
            type: string
          type: array
    CheckGroupMembershipParameters:
      description: Request parameters for IsMemberOf API call.
      properties:
        groupId:
          description: The object ID of the group to check.
          type: string
        memberId:
          description: 'The object ID of the contact, group, user, or service principal to check for membership in the specified group.'
          type: string
      required:
        - groupId
        - memberId
    CheckGroupMembershipResult:
      description: Server response for IsMemberOf API call
      properties:
        value:
          description: 'True if the specified user, group, contact, or service principal has either direct or transitive membership in the specified group; otherwise, false.'
          type: boolean
    ErrorMessage:
      description: Active Directory error message.
      properties:
        value:
          description: Error message value.
          type: string
          x-ms-client-name: message
    GetObjectsParameters:
      description: Request parameters for the GetObjectsByObjectIds API.
      properties:
        includeDirectoryObjectReferences:
          description: 'If true, also searches for object IDs in the partner tenant.'
          type: boolean
        objectIds:
          description: The requested object IDs.
          items:
            type: string
          type: array
        types:
          description: The requested object types.
          items:
            type: string
          type: array
      required:
        - includeDirectoryObjectReferences
    GetObjectsResult:
      description: The response to an Active Directory object inquiry API request.
      properties:
        odata.nextLink:
          description: The URL to get the next set of results.
          type: string
        value:
          description: A collection of Active Directory objects.
          items:
            $ref: '#/components/schemas/AADObject'
          type: array
    GraphError:
      description: Active Directory error information.
      properties:
        odata.error:
          $ref: '#/components/schemas/OdataError'
    GroupAddMemberParameters:
      description: Request parameters for adding a member to a group.
      properties:
        url:
          description: 'A member object URL, such as "https://graph.windows.net/0b1f9851-1bf0-433f-aec3-cb9272f093dc/directoryObjects/f260bbc4-c254-447b-94cf-293b5ec434dd", where "0b1f9851-1bf0-433f-aec3-cb9272f093dc" is the tenantId and "f260bbc4-c254-447b-94cf-293b5ec434dd" is the objectId of the member (user, application, servicePrincipal, group) to be added.'
          type: string
      required:
        - url
    GroupCreateParameters:
      description: Request parameters for creating a new group.
      properties:
        displayName:
          description: Group display name
          type: string
        mailEnabled:
          description: Whether the group is mail-enabled. Must be false. This is because only pure security groups can be created using the Graph API.
          enum:
            - false
          type: boolean
        mailNickname:
          description: Mail nickname
          type: string
        securityEnabled:
          description: Whether the group is a security group. Must be true. This is because only pure security groups can be created using the Graph API.
          enum:
            - true
          type: boolean
      required:
        - displayName
        - mailEnabled
        - mailNickname
        - securityEnabled
    GroupGetMemberGroupsParameters:
      description: Request parameters for GetMemberGroups API call.
      properties:
        securityEnabledOnly:
          description: 'If true, only membership in security-enabled groups should be checked. Otherwise, membership in all groups should be checked.'
          type: boolean
      required:
        - securityEnabledOnly
    GroupGetMemberGroupsResult:
      description: Server response for GetMemberGroups API call.
      properties:
        value:
          description: A collection of group IDs of which the group is a member.
          items:
            type: string
          type: array
    GroupListResult:
      description: Server response for Get tenant groups API call
      properties:
        odata.nextLink:
          description: The URL to get the next set of results.
          type: string
        value:
          description: A collection of Active Directory groups.
          items:
            $ref: '#/components/schemas/ADGroup'
          type: array
    KeyCredential:
      description: Active Directory Key Credential information.
      properties:
        endDate:
          description: End date.
          format: date-time
          type: string
        keyId:
          description: Key ID.
          type: string
        startDate:
          description: Start date.
          format: date-time
          type: string
        type:
          description: Type. Acceptable values are 'AsymmetricX509Cert' and 'Symmetric'.
          type: string
        usage:
          description: Usage. Acceptable values are 'Verify' and 'Sign'.
          type: string
        value:
          description: Key value.
          type: string
    KeyCredentialListResult:
      description: KeyCredential list operation result.
      properties:
        value:
          description: A collection of KeyCredentials.
          items:
            $ref: '#/components/schemas/KeyCredential'
          type: array
    KeyCredentialsUpdateParameters:
      description: Request parameters for a KeyCredentials update operation
      properties:
        value:
          description: A collection of KeyCredentials.
          items:
            $ref: '#/components/schemas/KeyCredential'
          type: array
      required:
        - value
    OdataError:
      description: Active Directory OData error information.
      properties:
        code:
          description: Error code.
          type: string
        message:
          $ref: '#/components/schemas/ErrorMessage'
    PasswordCredential:
      description: Active Directory Password Credential information.
      properties:
        endDate:
          description: End date.
          format: date-time
          type: string
        keyId:
          description: Key ID.
          type: string
        startDate:
          description: Start date.
          format: date-time
          type: string
        value:
          description: Key value.
          type: string
    PasswordCredentialListResult:
      description: PasswordCredential list operation result.
      properties:
        value:
          description: A collection of PasswordCredentials.
          items:
            $ref: '#/components/schemas/PasswordCredential'
          type: array
    PasswordCredentialsUpdateParameters:
      description: Request parameters for a PasswordCredentials update operation.
      properties:
        value:
          description: A collection of PasswordCredentials.
          items:
            $ref: '#/components/schemas/PasswordCredential'
          type: array
      required:
        - value
    PasswordProfile:
      description: The password profile associated with a user.
      properties:
        forceChangePasswordNextLogin:
          description: Whether to force a password change on next login.
          type: boolean
        password:
          description: Password
          type: string
      required:
        - password
    ServicePrincipal:
      description: Active Directory service principal information.
      properties:
        appId:
          description: The application ID.
          type: string
        displayName:
          description: The display name of the service principal.
          type: string
        objectId:
          description: The object ID.
          type: string
        objectType:
          description: The object type.
          type: string
        servicePrincipalNames:
          description: A collection of service principal names.
          items:
            type: string
          type: array
    ServicePrincipalCreateParameters:
      description: Request parameters for creating a new service principal.
      properties:
        accountEnabled:
          description: Whether the account is enabled
          type: boolean
        appId:
          description: application Id
          type: string
        keyCredentials:
          description: A collection of KeyCredential objects.
          items:
            $ref: '#/components/schemas/KeyCredential'
          type: array
        passwordCredentials:
          description: A collection of PasswordCredential objects
          items:
            $ref: '#/components/schemas/PasswordCredential'
          type: array
      required:
        - appId
        - accountEnabled
    ServicePrincipalListResult:
      description: Server response for get tenant service principals API call.
      properties:
        odata.nextLink:
          description: the URL to get the next set of results.
          type: string
        value:
          description: the list of service principals.
          items:
            $ref: '#/components/schemas/ServicePrincipal'
          type: array
    User:
      description: Active Directory user information.
      properties:
        displayName:
          description: The display name of the user.
          type: string
        mail:
          description: The primary email address of the user.
          type: string
        mailNickname:
          description: The mail alias for the user.
          type: string
        objectId:
          description: The object ID.
          type: string
        objectType:
          description: The object type.
          type: string
        signInName:
          description: The sign-in name of the user.
          type: string
        usageLocation:
          description: 'A two letter country code (ISO standard 3166). Required for users that will be assigned licenses due to legal requirement to check for availability of services in countries. Examples include: "US", "JP", and "GB".'
          type: string
        userPrincipalName:
          description: The principal name of the user.
          type: string
    UserCreateParameters:
      description: Request parameters for creating a new work or school account user.
      properties:
        accountEnabled:
          description: Whether the account is enabled.
          type: boolean
        displayName:
          description: The display name of the user.
          type: string
        immutableId:
          description: This must be specified if you are using a federated domain for the user's userPrincipalName (UPN) property when creating a new user account. It is used to associate an on-premises Active Directory user account with their Azure AD user object.
          type: string
        mailNickname:
          description: The mail alias for the user.
          type: string
        passwordProfile:
          $ref: '#/components/schemas/PasswordProfile'
        usageLocation:
          description: 'A two letter country code (ISO standard 3166). Required for users that will be assigned licenses due to legal requirement to check for availability of services in countries. Examples include: "US", "JP", and "GB".'
          type: string
        userPrincipalName:
          description: The user principal name (someuser@contoso.com). It must contain one of the verified domains for the tenant.
          type: string
      required:
        - accountEnabled
        - displayName
        - passwordProfile
        - userPrincipalName
        - mailNickname
    UserGetMemberGroupsParameters:
      description: Request parameters for GetMemberGroups API call.
      properties:
        securityEnabledOnly:
          description: 'If true, only membership in security-enabled groups should be checked. Otherwise, membership in all groups should be checked.'
          type: boolean
      required:
        - securityEnabledOnly
    UserGetMemberGroupsResult:
      description: Server response for GetMemberGroups API call.
      properties:
        value:
          description: A collection of group IDs of which the user is a member.
          items:
            type: string
          type: array
    UserListResult:
      description: Server response for Get tenant users API call.
      properties:
        odata.nextLink:
          description: The URL to get the next set of results.
          type: string
        value:
          description: the list of users.
          items:
            $ref: '#/components/schemas/User'
          type: array
    UserUpdateParameters:
      description: Request parameters for updating an existing work or school account user.
      properties:
        accountEnabled:
          description: Whether the account is enabled.
          type: boolean
        displayName:
          description: The display name of the user.
          type: string
        mailNickname:
          description: The mail alias for the user.
          type: string
        passwordProfile:
          $ref: '#/components/schemas/PasswordProfile'
        usageLocation:
          description: 'A two letter country code (ISO standard 3166). Required for users that will be assigned licenses due to legal requirement to check for availability of services in countries. Examples include: "US", "JP", and "GB".'
          type: string
  parameters:
    ApiVersionParameter:
      description: Client API version.
      in: query
      name: api-version
      required: true
      schema:
        type: string
    tenantIDInPath:
      description: The tenant ID.
      in: path
      name: tenantID
      required: true
      schema:
        type: string
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow
      type: oauth2
      flows:
        implicit:
          authorizationUrl: 'https://login.microsoftonline.com/common/oauth2/authorize'
          scopes:
            user_impersonation: impersonate your user account
