openapi: 3.0.0
servers:
  - url: 'https://api.figshare.com/v2'
info:
  description: Figshare apiv2. Using Swagger 2.0
  title: Figshare
  version: 2.0.0
  x-apisguru-categories:
    - open_data
  x-logo:
    backgroundColor: '#FFFFFF'
    url: 'https://user-images.githubusercontent.com/21603/27885832-5da28e32-61d1-11e7-8811-ed7238df2c20.png'
  x-origin:
    - format: swagger
      url: 'http://docs.figshare.com/swagger.json'
      version: '2.0'
  x-providerName: figshare.com
paths:
  /account:
    get:
      description: Account information for token/personal token
      operationId: private_account
      responses:
        '200':
          description: OK. Account representation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
      security:
        - OAuth2:
            - all
      summary: Private Account information
      tags:
        - other
  /account/articles:
    get:
      description: Get Own Articles
      operationId: private_articles_list
      parameters:
        - description: Page number. Used for pagination with page_size
          in: query
          name: page
          required: false
          schema:
            type: integer
            format: int64
            minimum: 1
            maximum: 5000
        - description: The number of results included on a page. Used for pagination with page
          in: query
          name: page_size
          required: false
          schema:
            type: integer
            format: int64
            minimum: 1
            maximum: 100
            default: 10
        - description: Number of results included on a page. Used for pagination with query
          in: query
          name: limit
          required: false
          schema:
            type: integer
            format: int64
            minimum: 1
            maximum: 100
        - description: Where to start the listing(the offset of the first result). Used for pagination with limit
          in: query
          name: offset
          required: false
          schema:
            type: integer
            format: int64
            minimum: 1
            maximum: 5000
      responses:
        '200':
          description: OK. An array of articles belonging to the account
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Article'
                type: array
        '400':
          description: Bad Request
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
      security:
        - OAuth2:
            - all
      summary: Private Articles
      tags:
        - articles
    post:
      description: Create a new Article by sending article information
      operationId: private_article_create
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
        '400':
          description: Bad Request
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
      security:
        - OAuth2:
            - all
      summary: Create new Article
      tags:
        - articles
      x-subcategory: Private Article
      requestBody:
        $ref: '#/components/requestBodies/ArticleCreate'
  /account/articles/search:
    post:
      description: Returns a list of private articles filtered by the search parameters
      operationId: private_articles_search
      responses:
        '200':
          description: OK. An array of articles
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Article'
                type: array
        '400':
          description: Bad Request
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
      security:
        - OAuth2:
            - all
      summary: Private Articles search
      tags:
        - articles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrivateArticleSearch'
        description: Search Parameters
        required: true
  '/account/articles/{article_id}':
    delete:
      description: Delete an article
      operationId: private_article_delete
      responses:
        '204':
          description: No Content
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      security:
        - OAuth2:
            - all
      summary: Delete article
      tags:
        - articles
      x-subcategory: Private Article
    get:
      description: View a private article
      operationId: private_article_details
      responses:
        '200':
          description: OK. Article representation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArticleCompletePrivate'
        '400':
          description: Bad Request
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      security:
        - OAuth2:
            - all
      summary: Article details
      tags:
        - articles
      x-subcategory: Private Article
    parameters:
      - description: Article unique identifier
        in: path
        name: article_id
        required: true
        schema:
          type: integer
          format: int64
          minimum: 1
    put:
      description: Updating an article by passing body parameters
      operationId: private_article_update
      responses:
        '205':
          description: Reset Content
          headers:
            Location:
              description: Location of newly created article
              schema:
                type: string
                format: link
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      security:
        - OAuth2:
            - all
      summary: Update article
      tags:
        - articles
      x-subcategory: Private Article
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArticleUpdate'
        description: Article description
        required: true
  '/account/articles/{article_id}/authors':
    get:
      description: List article authors
      operationId: private_article_authors_list
      responses:
        '200':
          description: OK. Authors list for article
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Author'
                type: array
        '400':
          description: Bad Request
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      security:
        - OAuth2:
            - all
      summary: List article authors
      tags:
        - articles
      x-subcategory: Private Article Authors
    parameters:
      - description: Article unique identifier
        in: path
        name: article_id
        required: true
        schema:
          type: integer
          format: int64
          minimum: 1
    post:
      description: Associate new authors with the article. This will add new authors to the list of already associated authors
      operationId: private_article_authors_add
      responses:
        '205':
          description: Reset Content
          headers:
            Location:
              description: Location of list of authors
              schema:
                type: string
                format: url
        '400':
          description: Bad Request
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      security:
        - OAuth2:
            - all
      summary: Add article authors
      tags:
        - articles
      x-subcategory: Private Article Authors
      requestBody:
        $ref: '#/components/requestBodies/AuthorsCreator'
    put:
      description: Associate new authors with the article. This will remove all already associated authors and add these new ones
      operationId: private_article_authors_replace
      responses:
        '205':
          description: Reset Content
          headers:
            Location:
              description: Location of list of authors
              schema:
                type: string
                format: url
        '400':
          description: Bad Request. Article ID must be an integer and bigger than 0. Author with ID Not Found.
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      security:
        - OAuth2:
            - all
      summary: Replace article authors
      tags:
        - articles
      x-subcategory: Private Article Authors
      requestBody:
        $ref: '#/components/requestBodies/AuthorsCreator'
  '/account/articles/{article_id}/authors/{author_id}':
    delete:
      description: De-associate author from article
      operationId: private_article_author_delete
      parameters:
        - description: Article unique identifier
          in: path
          name: article_id
          required: true
          schema:
            type: integer
            format: int64
            minimum: 1
        - description: Article Author unique identifier
          in: path
          name: author_id
          required: true
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        '204':
          description: No Content
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      security:
        - OAuth2:
            - all
      summary: Delete article author
      tags:
        - articles
      x-subcategory: Private Article Authors
  '/account/articles/{article_id}/categories':
    get:
      description: List article categories
      operationId: private_article_categories_list
      responses:
        '200':
          description: OK. Article categories
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Category'
                type: array
        '400':
          description: Bad Request
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      security:
        - OAuth2:
            - all
      summary: List article categories
      tags:
        - articles
      x-subcategory: Private Article Categories
    parameters:
      - description: Article unique identifier
        in: path
        name: article_id
        required: true
        schema:
          type: integer
          format: int64
          minimum: 1
    post:
      description: Associate new categories with the article. This will add new categories to the list of already associated categories
      operationId: private_article_categories_add
      responses:
        '205':
          description: Reset Content
        '400':
          description: Bad Request
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      security:
        - OAuth2:
            - all
      summary: Add article categories
      tags:
        - articles
      x-subcategory: Private Article Categories
      requestBody:
        $ref: '#/components/requestBodies/CategoriesCreator'
    put:
      description: Associate new categories with the article. This will remove all already associated categories and add these new ones
      operationId: private_article_categories_replace
      responses:
        '205':
          description: Reset Content
        '400':
          description: Bad Request
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      security:
        - OAuth2:
            - all
      summary: Replace article categories
      tags:
        - articles
      x-subcategory: Private Article Categories
      requestBody:
        $ref: '#/components/requestBodies/CategoriesCreator'
  '/account/articles/{article_id}/categories/{category_id}':
    delete:
      description: De-associate category from article
      operationId: private_article_category_delete
      parameters:
        - description: Article unique identifier
          in: path
          name: article_id
          required: true
          schema:
            type: integer
            format: int64
            minimum: 1
        - description: Category unique identifier
          in: path
          name: category_id
          required: true
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        '204':
          description: No Content
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      security:
        - OAuth2:
            - all
      summary: Delete article category
      tags:
        - articles
      x-subcategory: Private Article Categories
  '/account/articles/{article_id}/confidentiality':
    delete:
      description: Delete confidentiality settings
      operationId: private_article_confidentiality_delete
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      security:
        - OAuth2:
            - all
      summary: Delete article confidentiality
      tags:
        - articles
      x-subcategory: Private Article Confidentiality
    get:
      description: View confidentiality settings
      operationId: private_article_confidentiality_details
      responses:
        '200':
          description: OK. Article categories
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArticleConfidentiality'
        '400':
          description: Bad Request
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      security:
        - OAuth2:
            - all
      summary: Article confidentiality details
      tags:
        - articles
      x-subcategory: Private Article Confidentiality
    parameters:
      - description: Article unique identifier
        in: path
        name: article_id
        required: true
        schema:
          type: integer
          format: int64
          minimum: 1
    put:
      description: Update confidentiality settings
      operationId: private_article_confidentiality_update
      responses:
        '205':
          description: Reset Content
        '400':
          description: Bad Request
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      security:
        - OAuth2:
            - all
      summary: Update article confidentiality
      tags:
        - articles
      x-subcategory: Private Article Confidentiality
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfidentialityCreator'
        required: true
  '/account/articles/{article_id}/embargo':
    delete:
      description: Will lift the embargo for the specified article
      operationId: private_article_embargo_delete
      responses:
        '204':
          description: No Content
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      security:
        - OAuth2:
            - all
      summary: Delete Article Embargo
      tags:
        - articles
      x-subcategory: Private Article Embargo
    get:
      description: View a private article embargo details
      operationId: private_article_embargo_details
      responses:
        '200':
          description: OK. Embargo for article
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArticleEmbargo'
        '400':
          description: Bad Request
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      security:
        - OAuth2:
            - all
      summary: Article Embargo Details
      tags:
        - articles
      x-subcategory: Private Article Embargo
    parameters:
      - description: Article unique identifier
        in: path
        name: article_id
        required: true
        schema:
          type: integer
          format: int64
          minimum: 1
    put:
      description: 'Note: setting an article under whole embargo does not imply that the article will be published when the embargo will expire. You must explicitly call the publish endpoint to enable this functionality.'
      operationId: private_article_embargo_update
      responses:
        '205':
          description: Reset Content
          headers:
            Location:
              description: Location of embargo
              schema:
                type: string
                format: link
        '400':
          description: Bad Request
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      security:
        - OAuth2:
            - all
      summary: Update Article Embargo
      tags:
        - articles
      x-subcategory: Private Article Embargo
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArticleEmbargoUpdater'
        description: Embargo description
        required: true
  '/account/articles/{article_id}/files':
    get:
      description: List private files
      operationId: private_article_files_list
      responses:
        '200':
          description: OK. Article files list
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PrivateFile'
                type: array
        '400':
          description: Bad Request
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      security:
        - OAuth2:
            - all
      summary: List article files
      tags:
        - articles
      x-subcategory: Private Article Files
    parameters:
      - description: Article unique identifier
        in: path
        name: article_id
        required: true
        schema:
          type: integer
          format: int64
          minimum: 1
    post:
      description: 'Initiate new file upload within the article. Either use link to provide only an existing file that will not be uploaded on figshare or use the other 3 parameters(md5, name, size)'
      operationId: private_article_upload_initiate
      responses:
        '201':
          description: Created
          headers:
            Location:
              description: Location of new file
              schema:
                type: string
                format: url
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
        '400':
          description: Bad Request
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      security:
        - OAuth2:
            - all
      summary: Initiate Upload
      tags:
        - articles
      x-subcategory: Private Article Files
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FileCreator'
        required: true
  '/account/articles/{article_id}/files/{file_id}':
    delete:
      description: Complete file upload
      operationId: private_article_file_delete
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      security:
        - OAuth2:
            - all
      summary: File Delete
      tags:
        - articles
      x-subcategory: Private Article Files
    get:
      description: View details of file for specified article
      operationId: private_article_file
      responses:
        '200':
          description: OK. Article private file
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateFile'
        '400':
          description: Bad Request
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      security:
        - OAuth2:
            - all
      summary: Single File
      tags:
        - articles
      x-subcategory: Private Article Files
    parameters:
      - description: Article unique identifier
        in: path
        name: article_id
        required: true
        schema:
          type: integer
          format: int64
          minimum: 1
      - description: File unique identifier
        in: path
        name: file_id
        required: true
        schema:
          type: integer
          format: int64
          minimum: 1
    post:
      description: Complete file upload
      operationId: private_article_upload_complete
      responses:
        '202':
          description: Accepted
        '400':
          description: Bad Request
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      security:
        - OAuth2:
            - all
      summary: Complete Upload
      tags:
        - articles
      x-subcategory: Private Article Files
  '/account/articles/{article_id}/private_links':
    get:
      description: List private links
      operationId: private_article_private_link
      responses:
        '200':
          description: OK. Article private links
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PrivateLink'
                type: array
        '400':
          description: Bad Request
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      security:
        - OAuth2:
            - all
      summary: List private links
      tags:
        - articles
      x-subcategory: Private Article Private Links
    parameters:
      - description: Article unique identifier
        in: path
        name: article_id
        required: true
        schema:
          type: integer
          format: int64
          minimum: 1
    post:
      description: Create new private link for this article
      operationId: private_article_private_link_create
      responses:
        '201':
          description: Created
          headers:
            Location:
              description: Location of private link
              schema:
                type: string
                format: url
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
        '400':
          description: Bad Request
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: Not Found
        '422':
          description: Unprocessable Entity
        '500':
          description: Internal Server Error
      security:
        - OAuth2:
            - all
      summary: Create private link
      tags:
        - articles
      x-subcategory: Private Article Private Links
      requestBody:
        $ref: '#/components/requestBodies/PrivateLinkCreator'
  '/account/articles/{article_id}/private_links/{link_id}':
    delete:
      description: Disable/delete private link for this article
      operationId: private_article_private_link_delete
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      security:
        - OAuth2:
            - all
      summary: Disable private link
      tags:
        - articles
      x-subcategory: Private Article Private Links
    parameters:
      - description: Article unique identifier
        in: path
        name: article_id
        required: true
        schema:
          type: integer
          format: int64
          minimum: 1
      - description: Private link token
        in: path
        name: link_id
        required: true
        schema:
          type: string
    put:
      description: Update existing private link for this article
      operationId: private_article_private_link_update
      responses:
        '205':
          description: Reset Content
          headers:
            Location:
              description: Location of private link
              schema:
                type: string
                format: url
        '400':
          description: Bad Request
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: Not Found
        '422':
          description: Unprocessable Entity
        '500':
          description: Internal Server Error
      security:
        - OAuth2:
            - all
      summary: Update private link
      tags:
        - articles
      x-subcategory: Private Article Private Links
      requestBody:
        $ref: '#/components/requestBodies/PrivateLinkCreator'
  '/account/articles/{article_id}/publish':
    post:
      description: |-
        - If the whole article is under embargo, it will not be published immediatly, but when the embargo expires or is lifted.
        - When an article is published, a new public version will be generated. Any further updates to the article will affect the private article data. In order to make these changes publicly visible, an explicit publish operation is needed.
      operationId: private_article_publish
      parameters:
        - description: Article unique identifier
          in: path
          name: article_id
          required: true
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        '201':
          description: Created
          headers:
            Location:
              description: Location of newly published article
              schema:
                type: string
                format: link
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
        '400':
          description: Bad Request
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      security:
        - OAuth2:
            - all
      summary: Private Article Publish
      tags:
        - articles
  '/account/articles/{article_id}/reserve_doi':
    post:
      description: Reserve DOI for article
      operationId: private_article_reserve_doi
      parameters:
        - description: Article unique identifier
          in: path
          name: article_id
          required: true
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArticleDOI'
        '400':
          description: Bad Request
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      security:
        - OAuth2:
            - all
      summary: Private Article Reserve DOI
      tags:
        - articles
  /account/authors/search:
    post:
      description: Search for authors
      operationId: private_authors_search
      responses:
        '200':
          description: OK. An array of authors
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Author'
                type: array
        '400':
          description: Bad Request
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
      security:
        - OAuth2:
            - all
      summary: Search Authors
      tags:
        - authors
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrivateAuthorsSearch'
        description: Search Parameters
  '/account/authors/{author_id}':
    get:
      description: View author details
      operationId: private_author_details
      responses:
        '200':
          description: OK. Article representation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorComplete'
        '400':
          description: Bad Request
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      security:
        - OAuth2:
            - all
      summary: Author details
      tags:
        - authors
    parameters:
      - description: Author unique identifier
        in: path
        name: author_id
        required: true
        schema:
          type: integer
          format: int64
          minimum: 1
  /account/categories:
    get:
      description: List institution categories (including parent Categories)
      operationId: private_categories_list
      responses:
        '200':
          description: OK. An array of categories
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Category'
                type: array
        '400':
          description: Bad Request
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
      security:
        - OAuth2:
            - all
      summary: Private Account Categories
      tags:
        - institutions
  /account/collections:
    get:
      description: List private collections
      operationId: private_collections_list
      parameters:
        - description: Page number. Used for pagination with page_size
          in: query
          name: page
          required: false
          schema:
            type: integer
            format: int64
            minimum: 1
            maximum: 5000
        - description: The number of results included on a page. Used for pagination with page
          in: query
          name: page_size
          required: false
          schema:
            type: integer
            format: int64
            minimum: 1
            maximum: 100
            default: 10
        - description: Number of results included on a page. Used for pagination with query
          in: query
          name: limit
          required: false
          schema:
            type: integer
            format: int64
            minimum: 1
            maximum: 100
        - description: Where to start the listing(the offset of the first result). Used for pagination with limit
          in: query
          name: offset
          required: false
          schema:
            type: integer
            format: int64
            minimum: 1
            maximum: 5000
        - description: The field by which to order. Default varies by endpoint/resource.
          in: query
          name: order
          required: false
          schema:
            type: string
            enum:
              - published_date
              - modified_date
              - views
              - shares
              - downloads
              - cites
            default: published_date
        - in: query
          name: order_direction
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
            default: desc
      responses:
        '200':
          description: OK. An array of collections
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Collection'
                type: array
        '400':
          description: Bad Request
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
      security:
        - OAuth2:
            - all
      summary: Private Collections List
      tags:
        - collections
    post:
      description: Create a new Collection by sending collection information
      operationId: private_collection_create
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionComplete'
        '400':
          description: Bad Request
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
      security:
        - OAuth2:
            - all
      summary: Create collection
      tags:
        - collections
      x-subcategory: Private Collection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionCreate'
        description: Collection description
        required: true
  /account/collections/search:
    post:
      description: Returns a list of private Collections
      operationId: private_collections_search
      responses:
        '200':
          description: OK. An array of collections
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Collection'
                type: array
        '400':
          description: Bad Request
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
      security:
        - OAuth2:
            - all
      summary: Private Collections Search
      tags:
        - collections
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrivateCollectionSearch'
        description: Search Parameters
        required: true
  '/account/collections/{collection_id}':
    delete:
      description: Delete n collection
      operationId: private_collection_delete
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      security:
        - OAuth2:
            - all
      summary: Delete collection
      tags:
        - collections
      x-subcategory: Private Collection
    get:
      description: View a collection
      operationId: private_collection_details
      responses:
        '200':
          description: OK. Collection representation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionComplete'
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      security:
        - OAuth2:
            - all
      summary: Collection details
      tags:
        - collections
      x-subcategory: Private Collection
    parameters:
      - description: Collection Unique identifier
        in: path
        name: collection_id
        required: true
        schema:
          type: integer
          format: int64
          minimum: 1
    put:
      description: Update collection details
      operationId: private_collection_update
      responses:
        '205':
          description: Reset Content
          headers:
            Location:
              description: Location of collection
              schema:
                type: string
                format: link
        '400':
          description: Bad Request
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      security:
        - OAuth2:
            - all
      summary: Update collection
      tags:
        - collections
      x-subcategory: Private Collection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionUpdate'
        description: Collection description
        required: true
  '/account/collections/{collection_id}/articles':
    get:
      description: List collection articles
      operationId: private_collection_articles_list
      responses:
        '200':
          description: OK. Articles List
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Article'
                type: array
        '400':
          description: Bad Request
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      security:
        - OAuth2:
            - all
      summary: List collection articles
      tags:
        - collections
      x-subcategory: Private Collection Articles
    parameters:
      - description: Collection unique identifier
        in: path
        name: collection_id
        required: true
        schema:
          type: integer
          format: int64
          minimum: 1
    post:
      description: Associate new articles with the collection. This will add new articles to the list of already associated articles
      operationId: private_collection_articles_add
      responses:
        '201':
          description: Reset Content
          headers:
            Location:
              description: Location of new articles
              schema:
                type: string
                format: url
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
        '400':
          description: Bad Request
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      security:
        - OAuth2:
            - all
      summary: Add collection articles
      tags:
        - collections
      x-subcategory: Private Collection Articles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArticlesCreator'
        description: Articles list
        required: true
    put:
      description: Associate new articles with the collection. This will remove all already associated articles and add these new ones
      operationId: private_collection_articles_replace
      responses:
        '205':
          description: Reset Content
          headers:
            Location:
              description: Location of list of articles
              schema:
                type: string
                format: url
        '400':
          description: Bad Request
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      security:
        - OAuth2:
            - all
      summary: Replace collection articles
      tags:
        - collections
      x-subcategory: Private Collection Articles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArticlesCreator'
        description: Articles List
        required: true
  '/account/collections/{collection_id}/articles/{article_id}':
    delete:
      description: De-associate article from collection
      operationId: private_collection_article_delete
      parameters:
        - description: Collection unique identifier
          in: path
          name: collection_id
          required: true
          schema:
            type: integer
            format: int64
            minimum: 1
        - description: Collection article unique identifier
          in: path
          name: article_id
          required: true
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        '204':
          description: No Content
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      security:
        - OAuth2:
            - all
      summary: Delete collection article
      tags:
        - collections
      x-subcategory: Private Collection Articles
  '/account/collections/{collection_id}/authors':
    get:
      description: List collection authors
      operationId: private_collection_authors_list
      responses:
        '200':
          description: OK. Embargo for article
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Author'
                type: array
        '400':
          description: Bad Request
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      security:
        - OAuth2:
            - all
      summary: List collection authors
      tags:
        - collections
      x-subcategory: Private Collection Authors
    parameters:
      - description: Collection unique identifier
        in: path
        name: collection_id
        required: true
        schema:
          type: integer
          format: int64
          minimum: 1
    post:
      description: Associate new authors with the collection. This will add new authors to the list of already associated authors
      operationId: private_collection_authors_add
      responses:
        '201':
          description: Reset Content
          headers:
            Location:
              description: Location of list of authors
              schema:
                type: string
                format: url
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
        '400':
          description: Bad Request
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      security:
        - OAuth2:
            - all
      summary: Add collection authors
      tags:
        - collections
      x-subcategory: Private Collection Authors
      requestBody:
        $ref: '#/components/requestBodies/AuthorsCreator2'
    put:
      description: Associate new authors with the collection. This will remove all already associated authors and add these new ones
      operationId: private_collection_authors_replace
      responses:
        '205':
          description: Reset Content
          headers:
            Location:
              description: Location of list of authors
              schema:
                type: string
                format: url
        '400':
          description: Bad Request
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      security:
        - OAuth2:
            - all
      summary: Replace collection authors
      tags:
        - collections
      x-subcategory: Private Collection Authors
      requestBody:
        $ref: '#/components/requestBodies/AuthorsCreator2'
  '/account/collections/{collection_id}/authors/{author_id}':
    delete:
      description: Delete collection author
      operationId: private_collection_author_delete
      parameters:
        - description: Collection unique identifier
          in: path
          name: collection_id
          required: true
          schema:
            type: integer
            format: int64
            minimum: 1
        - description: Collection Author unique identifier
          in: path
          name: author_id
          required: true
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        '204':
          description: No Content
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      security:
        - OAuth2:
            - all
      summary: Delete collection author
      tags:
        - collections
      x-subcategory: Private Collection Authors
  '/account/collections/{collection_id}/categories':
    get:
      description: List collection categories
      operationId: private_collection_categories_list
      responses:
        '200':
          description: OK. Categories list
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Category'
                type: array
        '400':
          description: Bad Request
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      security:
        - OAuth2:
            - all
      summary: List collection categories
      tags:
        - collections
      x-subcategory: Private Collection Categories
    parameters:
      - description: Collection unique identifier
        in: path
        name: collection_id
        required: true
        schema:
          type: integer
          format: int64
          minimum: 1
    post:
      description: Associate new categories with the collection. This will add new categories to the list of already associated categories
      operationId: private_collection_categories_add
      responses:
        '201':
          description: Reset Content
          headers:
            Location:
              description: Location of list of categories
              schema:
                type: string
                format: url
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
        '400':
          description: Bad Request
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      security:
        - OAuth2:
            - all
      summary: Add collection categories
      tags:
        - collections
      x-subcategory: Private Collection Categories
      requestBody:
        $ref: '#/components/requestBodies/CategoriesCreator2'
    put:
      description: Associate new categories with the collection. This will remove all already associated categories and add these new ones
      operationId: private_collection_categories_replace
      responses:
        '205':
          description: Reset Content
          headers:
            Location:
              description: Location of list of categories
              schema:
                type: string
                format: url
        '400':
          description: Bad Request
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      security:
        - OAuth2:
            - all
      summary: Replace collection categories
      tags:
        - collections
      x-subcategory: Private Collection Categories
      requestBody:
        $ref: '#/components/requestBodies/CategoriesCreator2'
  '/account/collections/{collection_id}/categories/{category_id}':
    delete:
      description: De-associate category from collection
      operationId: private_collection_category_delete
      parameters:
        - description: Collection unique identifier
          in: path
          name: collection_id
          required: true
          schema:
            type: integer
            format: int64
            minimum: 1
        - description: Collection category unique identifier
          in: path
          name: category_id
          required: true
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        '204':
          description: No Content
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      security:
        - OAuth2:
            - all
      summary: Delete collection category
      tags:
        - collections
      x-subcategory: Private Collection Categories
  '/account/collections/{collection_id}/private_links':
    get:
      description: List article private links
      operationId: private_collection_private_links_list
      responses:
        '200':
          description: OK. Collection private links
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PrivateLink'
                type: array
        '400':
          description: Bad Request
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      security:
        - OAuth2:
            - all
      summary: List collection private links
      tags:
        - collections
      x-subcategory: Private Collection Private Links
    parameters:
      - description: Collection unique identifier
        in: path
        name: collection_id
        required: true
        schema:
          type: integer
          format: int64
          minimum: 1
    post:
      description: Create new private link
      operationId: private_collection_private_link_create
      responses:
        '201':
          description: Created
          headers:
            Location:
              description: Location of private link
              schema:
                type: string
                format: url
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
        '400':
          description: Bad Request
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      security:
        - OAuth2:
            - all
      summary: Create collection private link
      tags:
        - collections
      x-subcategory: Private Collection Private Links
      requestBody:
        $ref: '#/components/requestBodies/CollectionPrivateLinkCreator'
  '/account/collections/{collection_id}/private_links/{link_id}':
    delete:
      description: Disable/delete private link for this collection
      operationId: private_collection_private_link_delete
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      security:
        - OAuth2:
            - all
      summary: Disable private link
      tags:
        - collections
      x-subcategory: Private Collection Private Links
    parameters:
      - description: Collection unique identifier
        in: path
        name: collection_id
        required: true
        schema:
          type: integer
          format: int64
          minimum: 1
      - description: Private link token
        in: path
        name: link_id
        required: true
        schema:
          type: string
    put:
      description: Update existing private link for this collection
      operationId: private_collection_private_link_update
      responses:
        '205':
          description: Reset Content
          headers:
            Location:
              description: Location of new private link
              schema:
                type: string
                format: url
        '400':
          description: Bad Request
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: Not Found
        '422':
          description: Unprocessable Entity
        '500':
          description: Internal Server Error
      security:
        - OAuth2:
            - all
      summary: Update collection private link
      tags:
        - collections
      x-subcategory: Private Collection Private Links
      requestBody:
        $ref: '#/components/requestBodies/CollectionPrivateLinkCreator'
  '/account/collections/{collection_id}/publish':
    post:
      description: 'When a collection is published, a new public version will be generated. Any further updates to the collection will affect the private collection data. In order to make these changes publicly visible, an explicit publish operation is needed.'
      operationId: private_collection_publish
      parameters:
        - description: Collection Unique identifier
          in: path
          name: collection_id
          required: true
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        '201':
          description: Created
          headers:
            Location:
              description: Location of collection
              schema:
                type: string
                format: link
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
        '400':
          description: Bad Request
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
      security:
        - OAuth2:
            - all
      summary: Private Collection Publish
      tags:
        - collections
  '/account/collections/{collection_id}/reserve_doi':
    post:
      description: Reserve DOI for collection
      operationId: private_collection_reserve_doi
      parameters:
        - description: Collection Unique identifier
          in: path
          name: collection_id
          required: true
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArticleDOI'
        '400':
          description: Bad Request
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
      security:
        - OAuth2:
            - all
      summary: Private Collection Reserve DOI
      tags:
        - collections
  /account/institution:
    get:
      description: Account institution details
      operationId: private_institution_details
      responses:
        '200':
          description: OK. An array of institutions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Institution'
        '400':
          description: Bad Request
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
      security:
        - OAuth2:
            - all
      summary: Private Account Institutions
      tags:
        - institutions
  /account/institution/articles:
    get:
      description: Get Articles from own institution. User must be administrator of the institution
      operationId: private_institution_articles
      parameters:
        - description: Page number. Used for pagination with page_size
          in: query
          name: page
          required: false
          schema:
            type: integer
            format: int64
            minimum: 1
            maximum: 5000
        - description: The number of results included on a page. Used for pagination with page
          in: query
          name: page_size
          required: false
          schema:
            type: integer
            format: int64
            minimum: 1
            maximum: 100
            default: 10
        - description: Number of results included on a page. Used for pagination with query
          in: query
          name: limit
          required: false
          schema:
            type: integer
            format: int64
            minimum: 1
            maximum: 100
        - description: Where to start the listing(the offset of the first result). Used for pagination with limit
          in: query
          name: offset
          required: false
          schema:
            type: integer
            format: int64
            minimum: 1
            maximum: 5000
        - description: The field by which to order. Default varies by endpoint/resource.
          in: query
          name: order
          required: false
          schema:
            type: string
            enum:
              - published_date
              - modified_date
              - views
              - shares
              - downloads
              - cites
            default: published_date
        - in: query
          name: order_direction
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
            default: desc
        - description: Filter by article publishing date. Will only return articles published after the date. date(ISO 8601) YYYY-MM-DD
          in: query
          name: published_since
          required: false
          schema:
            type: string
        - description: Filter by article modified date. Will only return articles published after the date. date(ISO 8601) YYYY-MM-DD
          in: query
          name: modified_since
          required: false
          schema:
            type: string
        - description: only return collections with this status
          in: query
          name: status
          required: false
          schema:
            type: integer
            format: int64
        - description: only return collections with this resource_doi
          in: query
          name: resource_doi
          required: false
          schema:
            type: string
        - description: 'Only return collections with the respective type. Mapping for item_type is: 1 - Figure, 2 - Media, 3 - Dataset, 4 - Fileset, 5 - Poster, 6 - Paper, 7 - Presentation, 8 - Thesis, 9 - Code, 12 - Preprint'
          in: query
          name: item_type
          required: false
          schema:
            type: integer
            format: int64
            minimum: 1
            maximum: 12
      responses:
        '200':
          description: OK. An array of articles belonging to the institution
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Article'
                type: array
        '400':
          description: Bad Request
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
      security:
        - OAuth2:
            - all
      summary: Private Institution Articles
      tags:
        - institutions
  /account/institution/groups:
    get:
      description: Returns the groups for which the account has administrative privileges (assigned and inherited).
      operationId: private_institution_groups_list
      responses:
        '200':
          description: OK. An array of Groups
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Group'
                type: array
        '400':
          description: Bad Request
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
      security:
        - OAuth2:
            - all
      summary: Private Account Institution Groups
      tags:
        - institutions
  /account/licenses:
    get:
      description: This is a private endpoint that requires OAuth. It will return a list with figshare public licenses AND licenses defined for account's institution.
      operationId: private_licenses_list
      responses:
        '200':
          description: OK. An array of personal licenses
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/License'
                type: array
        '400':
          description: Bad Request
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
      security:
        - OAuth2:
            - all
      summary: Private Account Licenses
      tags:
        - other
  /account/projects:
    get:
      description: List private projects
      operationId: private_projects_list
      parameters:
        - description: Page number. Used for pagination with page_size
          in: query
          name: page
          required: false
          schema:
            type: integer
            format: int64
            minimum: 1
            maximum: 5000
        - description: The number of results included on a page. Used for pagination with page
          in: query
          name: page_size
          required: false
          schema:
            type: integer
            format: int64
            minimum: 1
            maximum: 100
            default: 10
        - description: Number of results included on a page. Used for pagination with query
          in: query
          name: limit
          required: false
          schema:
            type: integer
            format: int64
            minimum: 1
            maximum: 100
        - description: Where to start the listing(the offset of the first result). Used for pagination with limit
          in: query
          name: offset
          required: false
          schema:
            type: integer
            format: int64
            minimum: 1
            maximum: 5000
        - description: The field by which to order. Default varies by endpoint/resource.
          in: query
          name: order
          required: false
          schema:
            type: string
            enum:
              - published_date
              - modified_date
              - views
              - shares
              - downloads
              - cites
            default: published_date
        - in: query
          name: order_direction
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
            default: desc
        - description: only return collections from this institution
          in: query
          name: storage
          required: false
          schema:
            type: string
            enum:
              - group
              - individual
        - description: 'Any combination of owner, collaborator, viewer separated by comma. Examples: "owner" or "owner,collaborator".'
          in: query
          name: roles
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK. An array of projects
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProjectPrivate'
                type: array
        '400':
          description: Bad Request
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
      security:
        - OAuth2:
            - all
      summary: Private Projects
      tags:
        - projects
    post:
      description: Create a new project
      operationId: private_project_create
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
        '400':
          description: Bad Request
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
      security:
        - OAuth2:
            - all
      summary: Create project
      tags:
        - projects
      x-subcategory: Private Project
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectCreate'
        description: Project  description
        required: true
  /account/projects/search:
    post:
      description: Search inside the private projects
      operationId: private_projects_search
      responses:
        '200':
          description: OK. An array of projects
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProjectPrivate'
                type: array
        '400':
          description: Bad Request
        '422':
          description: Bad Request
        '500':
          description: Internal Server Error
      security: []
      summary: Private Projects search
      tags:
        - projects
      requestBody:
        $ref: '#/components/requestBodies/CommonSearch'
  '/account/projects/{project_id}':
    delete:
      description: |
        A project can be deleted only if: - it is not public - it does not have public articles.

        When an individual project is deleted, all the articles are moved to my data of each owner.

        When a group project is deleted, all the articles and files are deleted as well. Only project owner, group admin and above can delete a project.
      operationId: private_project_delete
      responses:
        '204':
          description: No Content
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      security:
        - OAuth2:
            - all
      summary: Delete project
      tags:
        - projects
      x-subcategory: Private Project
    get:
      description: View a private project
      operationId: private_project_details
      responses:
        '200':
          description: OK. Project representation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectCompletePrivate'
        '400':
          description: Bad Request
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      security:
        - OAuth2:
            - all
      summary: View project details
      tags:
        - projects
      x-subcategory: Private Project
    parameters:
      - description: Project unique identifier
        in: path
        name: project_id
        required: true
        schema:
          type: integer
          format: int64
          minimum: 1
    put:
      description: Updating an project by passing body parameters
      operationId: private_project_update
      responses:
        '205':
          description: Reset Content
          headers:
            Location:
              description: Location of project
              schema:
                type: string
                format: link
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      security:
        - OAuth2:
            - all
      summary: Update project
      tags:
        - projects
      x-subcategory: Private Project
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectUpdate'
        description: Project description
        required: true
  '/account/projects/{project_id}/articles':
    get:
      description: List project articles
      operationId: private_project_articles_list
      responses:
        '200':
          description: OK. List of articles
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Article'
                type: array
        '400':
          description: Bad Request
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      security:
        - OAuth2:
            - all
      summary: List project articles
      tags:
        - projects
      x-subcategory: Private Project Articles
    parameters:
      - description: Proejct unique identifier
        in: path
        name: project_id
        required: true
        schema:
          type: integer
          format: int64
          minimum: 1
    post:
      description: Create a new Article and associate it with this project
      operationId: private_project_articles_create
      responses:
        '201':
          description: Created
          headers:
            Location:
              description: Location of article
              schema:
                type: string
                format: url
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
        '400':
          description: Bad Request
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      security:
        - OAuth2:
            - all
      summary: Create project article
      tags:
        - projects
      x-subcategory: Private Project Articles
      requestBody:
        $ref: '#/components/requestBodies/ArticleCreate'
  '/account/projects/{project_id}/articles/{article_id}':
    delete:
      description: Delete project article
      operationId: private_project_article_delete
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      security:
        - OAuth2:
            - all
      summary: Delete project article
      tags:
        - projects
      x-subcategory: Private Project Articles
    get:
      description: Project article details
      operationId: private_project_article_details
      responses:
        '200':
          description: OK. Article representation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectArticle'
        '400':
          description: Bad Request
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      security:
        - OAuth2:
            - all
      summary: Project article details
      tags:
        - projects
      x-subcategory: Private Project Articles
    parameters:
      - description: Project unique identifier
        in: path
        name: project_id
        required: true
        schema:
          type: integer
          format: int64
          minimum: 1
      - description: Project Article unique identifier
        in: path
        name: article_id
        required: true
        schema:
          type: integer
          format: int64
          minimum: 1
  '/account/projects/{project_id}/articles/{article_id}/files':
    get:
      description: List article files
      operationId: private_project_article_files
      parameters:
        - description: Project unique identifier
          in: path
          name: project_id
          required: true
          schema:
            type: integer
            format: int64
            minimum: 1
        - description: Project Article unique identifier
          in: path
          name: article_id
          required: true
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        '200':
          description: OK. List of files
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PrivateFile'
                type: array
        '400':
          description: Bad Request
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      security:
        - OAuth2:
            - all
      summary: Project article list files
      tags:
        - projects
      x-subcategory: Private Project Articles
  '/account/projects/{project_id}/articles/{article_id}/files/{file_id}':
    get:
      description: Project article file details
      operationId: private_project_article_file
      parameters:
        - description: Project unique identifier
          in: path
          name: project_id
          required: true
          schema:
            type: integer
            format: int64
            minimum: 1
        - description: Project Article unique identifier
          in: path
          name: article_id
          required: true
          schema:
            type: integer
            format: int64
            minimum: 1
        - description: File unique identifier
          in: path
          name: file_id
          required: true
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        '200':
          description: OK. File representation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateFile'
        '400':
          description: Bad Request
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      security:
        - OAuth2:
            - all
      summary: Project article file details
      tags:
        - projects
      x-subcategory: Private Project Articles
  '/account/projects/{project_id}/collaborators':
    get:
      description: List Project collaborators and invited users
      operationId: private_project_collaborators_list
      responses:
        '200':
          description: OK. List of Collaborators
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProjectCollaborator'
                type: array
        '400':
          description: Bad Request
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      security:
        - OAuth2:
            - all
      summary: List project collaborators
      tags:
        - projects
      x-subcategory: Private Project Collaborators
    parameters:
      - description: Project unique identifier
        in: path
        name: project_id
        required: true
        schema:
          type: integer
          format: int64
          minimum: 1
    post:
      description: Invite users to collaborate on project or view the project
      operationId: private_project_collaborators_invite
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseMessage'
        '400':
          description: Bad Request
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      security:
        - OAuth2:
            - all
      summary: Invite project collaborators
      tags:
        - projects
      x-subcategory: Private Project Collaborators
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectCollaboratorInvite'
        description: viewer or collaborator role. User user_id or email of user
        required: true
  '/account/projects/{project_id}/collaborators/{user_id}':
    delete:
      description: Remove project collaborator
      operationId: private_project_collaborator__Delete
      parameters:
        - description: Project unique identifier
          in: path
          name: project_id
          required: true
          schema:
            type: integer
            format: int64
            minimum: 1
        - description: User unique identifier
          in: path
          name: user_id
          required: true
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        '204':
          description: OK
        '400':
          description: Bad Request
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      security:
        - OAuth2:
            - all
      summary: Remove project collaborator
      tags:
        - projects
      x-subcategory: Private Project Collaborators
  '/account/projects/{project_id}/leave':
    post:
      description: 'Please note: project''s owner cannot leave the project.'
      operationId: private_project_leave
      parameters:
        - description: Project unique identifier
          in: path
          name: project_id
          required: true
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      security:
        - OAuth2:
            - all
      summary: Private Project Leave
      tags:
        - projects
      x-subcategory: Private Project Collaborators
  '/account/projects/{project_id}/notes':
    get:
      description: List project notes
      operationId: private_project_notes_list
      parameters:
        - description: Page number. Used for pagination with page_size
          in: query
          name: page
          required: false
          schema:
            type: integer
            format: int64
            minimum: 1
            maximum: 5000
        - description: The number of results included on a page. Used for pagination with page
          in: query
          name: page_size
          required: false
          schema:
            type: integer
            format: int64
            minimum: 1
            maximum: 100
            default: 10
        - description: Number of results included on a page. Used for pagination with query
          in: query
          name: limit
          required: false
          schema:
            type: integer
            format: int64
            minimum: 1
            maximum: 100
        - description: Where to start the listing(the offset of the first result). Used for pagination with limit
          in: query
          name: offset
          required: false
          schema:
            type: integer
            format: int64
            minimum: 1
            maximum: 5000
      responses:
        '200':
          description: OK. List of project notes
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProjectNote'
                type: array
        '400':
          description: Bad Request
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      security:
        - OAuth2:
            - all
      summary: List project notes
      tags:
        - projects
      x-subcategory: Private Project Notes
    parameters:
      - description: Project unique identifier
        in: path
        name: project_id
        required: true
        schema:
          type: integer
          format: int64
          minimum: 1
    post:
      description: Create a new project note
      operationId: private_project_notes_create
      responses:
        '201':
          description: Created
          headers:
            Location:
              description: Location note
              schema:
                type: string
                format: url
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
        '400':
          description: Bad Request
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      security:
        - OAuth2:
            - all
      summary: Create project note
      tags:
        - projects
      x-subcategory: Private Project Notes
      requestBody:
        $ref: '#/components/requestBodies/ProjectNoteCreate'
  '/account/projects/{project_id}/notes/{note_id}':
    delete:
      operationId: private_project_note_delete
      responses:
        '204':
          description: No Content
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      security:
        - OAuth2:
            - all
      summary: Delete project note
      tags:
        - projects
      x-subcategory: Private Project Notes
    get:
      operationId: private_project_note
      responses:
        '200':
          description: OK. Note representation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectNotePrivate'
        '400':
          description: Bad Request
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      security:
        - OAuth2:
            - all
      summary: Project note details
      tags:
        - projects
      x-subcategory: Private Project Notes
    parameters:
      - description: Project unique identifier
        in: path
        name: project_id
        required: true
        schema:
          type: integer
          format: int64
          minimum: 1
      - description: Note unique identifier
        in: path
        name: note_id
        required: true
        schema:
          type: integer
          format: int64
          minimum: 1
    put:
      operationId: private_project_note_update
      responses:
        '205':
          description: Reset Content
          headers:
            Location:
              description: Location note
              schema:
                type: string
                format: url
        '400':
          description: Bad Request
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      security:
        - OAuth2:
            - all
      summary: Update project note
      tags:
        - projects
      x-subcategory: Private Project Notes
      requestBody:
        $ref: '#/components/requestBodies/ProjectNoteCreate'
  '/account/projects/{project_id}/publish':
    post:
      description: Publish a project. Possible after all items inside it are public
      operationId: private_project_publish
      parameters:
        - description: Project unique identifier
          in: path
          name: project_id
          required: true
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseMessage'
        '400':
          description: Bad Request
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      security:
        - OAuth2:
            - all
      summary: Private Project Publish
      tags:
        - projects
  /articles:
    get:
      description: Returns a list of public articles
      operationId: articles_list
      parameters:
        - description: Page number. Used for pagination with page_size
          in: query
          name: page
          required: false
          schema:
            type: integer
            format: int64
            minimum: 1
            maximum: 5000
        - description: The number of results included on a page. Used for pagination with page
          in: query
          name: page_size
          required: false
          schema:
            type: integer
            format: int64
            minimum: 1
            maximum: 100
            default: 10
        - description: Number of results included on a page. Used for pagination with query
          in: query
          name: limit
          required: false
          schema:
            type: integer
            format: int64
            minimum: 1
            maximum: 100
        - description: Where to start the listing(the offset of the first result). Used for pagination with limit
          in: query
          name: offset
          required: false
          schema:
            type: integer
            format: int64
            minimum: 1
            maximum: 5000
        - description: The field by which to order. Default varies by endpoint/resource.
          in: query
          name: order
          required: false
          schema:
            type: string
            enum:
              - published_date
              - modified_date
              - views
              - shares
              - downloads
              - cites
            default: published_date
        - in: query
          name: order_direction
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
            default: desc
        - description: only return collections from this institution
          in: query
          name: institution
          required: false
          schema:
            type: integer
            format: int64
        - description: Filter by article publishing date. Will only return articles published after the date. date(ISO 8601) YYYY-MM-DD
          in: query
          name: published_since
          required: false
          schema:
            type: string
        - description: Filter by article modified date. Will only return articles published after the date. date(ISO 8601) YYYY-MM-DD
          in: query
          name: modified_since
          required: false
          schema:
            type: string
        - description: only return collections from this group
          in: query
          name: group
          required: false
          schema:
            type: integer
            format: int64
        - description: only return collections with this resource_doi
          in: query
          name: resource_doi
          required: false
          schema:
            type: string
        - description: 'Only return collections with the respective type. Mapping for item_type is: 1 - Figure, 2 - Media, 3 - Dataset, 4 - Fileset, 5 - Poster, 6 - Paper, 7 - Presentation, 8 - Thesis, 9 - Code, 12 - Preprint'
          in: query
          name: item_type
          required: false
          schema:
            type: integer
            format: int64
            minimum: 1
            maximum: 12
      responses:
        '200':
          description: OK. An array of articles
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Article'
                type: array
        '400':
          description: Bad Request
        '422':
          description: Unprocessable Entity. Syntax is correct but one of the parameters isn't correctly processed
        '500':
          description: Internal Server Error
      security: []
      summary: Public Articles
      tags:
        - articles
  /articles/search:
    post:
      description: 'Returns a list of public articles, filtered by the search parameters'
      operationId: articles_search
      responses:
        '200':
          description: OK. An array of articles
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Article'
                type: array
        '400':
          description: Bad Request
        '422':
          description: Unprocessable Entity. Syntax is correct but one of the parameters isn't correctly processed
        '500':
          description: Internal Server Error
      security: []
      summary: Public Articles Search
      tags:
        - articles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArticleSearch'
        description: Search Parameters
  '/articles/{article_id}':
    get:
      description: View an article
      operationId: article_details
      parameters:
        - description: Article Unique identifier
          in: path
          name: article_id
          required: true
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        '200':
          description: OK. Article representation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArticleComplete'
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      security: []
      summary: View article details
      tags:
        - articles
      x-subcategory: Public Article
  '/articles/{article_id}/files':
    get:
      description: Files list for article
      operationId: article_files
      parameters:
        - description: Article Unique identifier
          in: path
          name: article_id
          required: true
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        '200':
          description: OK. List of article files
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PublicFile'
                type: array
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      security: []
      summary: List article files
      tags:
        - articles
      x-subcategory: Public Article files
  '/articles/{article_id}/files/{file_id}':
    get:
      description: File by id
      operationId: article_file_details
      parameters:
        - description: Article Unique identifier
          in: path
          name: article_id
          required: true
          schema:
            type: integer
            format: int64
            minimum: 1
        - description: File Unique identifier
          in: path
          name: file_id
          required: true
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        '200':
          description: OK. File representation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicFile'
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      security: []
      summary: Article file details
      tags:
        - articles
      x-subcategory: Public Article files
  '/articles/{article_id}/versions':
    get:
      description: List public article versions
      operationId: article_versions
      parameters:
        - description: Article Unique identifier
          in: path
          name: article_id
          required: true
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        '200':
          description: OK. Article version representations
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Version'
                type: array
        '400':
          description: Bad Request. Article ID must be an integer and bigger than 0.
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      security: []
      summary: List article versions
      tags:
        - articles
      x-subcategory: Public Article
  '/articles/{article_id}/versions/{v_number}':
    get:
      description: Article with specified version
      operationId: article_version_details
      parameters:
        - description: Article Unique identifier
          in: path
          name: article_id
          required: true
          schema:
            type: integer
            format: int64
            minimum: 1
        - description: Article Version Number
          in: path
          name: v_number
          required: true
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        '200':
          description: OK. Article representation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArticleComplete'
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      security: []
      summary: Article details for version
      tags:
        - articles
      x-subcategory: Public Article
  '/articles/{article_id}/versions/{v_number}/confidentiality':
    get:
      description: Confidentiality for article version
      operationId: article_version_confidentiality
      parameters:
        - description: Article Unique identifier
          in: path
          name: article_id
          required: true
          schema:
            type: integer
            format: int64
            minimum: 1
        - description: Version Number
          in: path
          name: v_number
          required: true
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        '200':
          description: OK. Confidentiality representation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArticleConfidentiality'
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      security: []
      summary: Public Article Confidentiality for article version
      tags:
        - articles
  '/articles/{article_id}/versions/{v_number}/embargo':
    get:
      description: Embargo for article version
      operationId: article_version_embargo
      parameters:
        - description: Article Unique identifier
          in: path
          name: article_id
          required: true
          schema:
            type: integer
            format: int64
            minimum: 1
        - description: Version Number
          in: path
          name: v_number
          required: true
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        '200':
          description: OK. Embargo representation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArticleEmbargo'
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      security: []
      summary: Public Article Embargo for article version
      tags:
        - articles
  /categories:
    get:
      description: Returns a list of public categories
      operationId: categories_list
      responses:
        '200':
          description: OK. An array of categories
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Category'
                type: array
        '500':
          description: Internal Server Error
      security: []
      summary: Public Categories
      tags:
        - other
  /collections:
    get:
      description: Returns a list of public collections
      operationId: collections_list
      parameters:
        - description: Page number. Used for pagination with page_size
          in: query
          name: page
          required: false
          schema:
            type: integer
            format: int64
            minimum: 1
            maximum: 5000
        - description: The number of results included on a page. Used for pagination with page
          in: query
          name: page_size
          required: false
          schema:
            type: integer
            format: int64
            minimum: 1
            maximum: 100
            default: 10
        - description: Number of results included on a page. Used for pagination with query
          in: query
          name: limit
          required: false
          schema:
            type: integer
            format: int64
            minimum: 1
            maximum: 100
        - description: Where to start the listing(the offset of the first result). Used for pagination with limit
          in: query
          name: offset
          required: false
          schema:
            type: integer
            format: int64
            minimum: 1
            maximum: 5000
        - description: The field by which to order. Default varies by endpoint/resource.
          in: query
          name: order
          required: false
          schema:
            type: string
            enum:
              - published_date
              - modified_date
              - views
              - shares
              - downloads
              - cites
            default: published_date
        - in: query
          name: order_direction
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
            default: desc
        - description: only return collections from this institution
          in: query
          name: institution
          required: false
          schema:
            type: integer
            format: int64
        - description: Filter by collection publishing date. Will only return collections published after the date. date(ISO 8601) YYYY-MM-DD
          in: query
          name: published_since
          required: false
          schema:
            type: string
        - description: Filter by collection modified date. Will only return collections published after the date. date(ISO 8601) YYYY-MM-DD
          in: query
          name: modified_since
          required: false
          schema:
            type: string
        - description: only return collections from this group
          in: query
          name: group
          required: false
          schema:
            type: integer
            format: int64
        - description: only return collections with this resource_doi
          in: query
          name: resource_doi
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK. An array of collections
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Collection'
                type: array
        '400':
          description: Bad Request
        '422':
          description: Bad Request
        '500':
          description: Internal Server Error
      security: []
      summary: Public Collections
      tags:
        - collections
  /collections/search:
    post:
      description: Returns a list of public collections
      operationId: collections_search
      responses:
        '200':
          description: OK. An array of collections
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Collection'
                type: array
        '400':
          description: Bad Request
        '422':
          description: Bad Request
        '500':
          description: Internal Server Error
      security: []
      summary: Public Collections Search
      tags:
        - collections
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionSearch'
        description: Search Parameters
  '/collections/{collection_id}':
    get:
      description: View a collection
      operationId: collection_details
      parameters:
        - description: Collection Unique identifier
          in: path
          name: collection_id
          required: true
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        '200':
          description: OK. Collection representation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionComplete'
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      security: []
      summary: Collection details
      tags:
        - collections
      x-subcategory: Public Collection
  '/collections/{collection_id}/articles':
    get:
      description: Returns a list of public collection articles
      operationId: collection_articles
      parameters:
        - description: Collection Unique identifier
          in: path
          name: collection_id
          required: true
          schema:
            type: integer
            format: int64
            minimum: 1
        - description: Page number. Used for pagination with page_size
          in: query
          name: page
          required: false
          schema:
            type: integer
            format: int64
            minimum: 1
            maximum: 5000
        - description: The number of results included on a page. Used for pagination with page
          in: query
          name: page_size
          required: false
          schema:
            type: integer
            format: int64
            minimum: 1
            maximum: 100
            default: 10
        - description: Number of results included on a page. Used for pagination with query
          in: query
          name: limit
          required: false
          schema:
            type: integer
            format: int64
            minimum: 1
            maximum: 100
        - description: Where to start the listing(the offset of the first result). Used for pagination with limit
          in: query
          name: offset
          required: false
          schema:
            type: integer
            format: int64
            minimum: 1
            maximum: 5000
      responses:
        '200':
          description: OK. An array of articles belonging to the collection
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Article'
                type: array
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '422':
          description: Bad Request
        '500':
          description: Internal Server Error
      security: []
      summary: Public Collection Articles
      tags:
        - collections
  '/collections/{collection_id}/versions':
    get:
      description: Returns a list of public collection Versions
      operationId: collection_versions
      parameters:
        - description: Collection Unique identifier
          in: path
          name: collection_id
          required: true
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        '200':
          description: OK. An array of versions
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Version'
                type: array
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      security: []
      summary: Collection Versions list
      tags:
        - collections
      x-subcategory: Public Collection
  '/collections/{collection_id}/versions/{version_id}':
    get:
      description: View details for a certain version of a collection
      operationId: collection_version_details
      parameters:
        - description: Collection Unique identifier
          in: path
          name: collection_id
          required: true
          schema:
            type: integer
            format: int64
            minimum: 1
        - description: Version Number
          in: path
          name: version_id
          required: true
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        '200':
          description: OK. Collection for that version
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionComplete'
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      security: []
      summary: Collection Version details
      tags:
        - collections
      x-subcategory: Public Collection
  '/file/download/{file_id}':
    get:
      description: Starts the download of a file
      operationId: file_download
      parameters:
        - in: path
          name: file_id
          required: true
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        '200':
          description: OK
        '500':
          description: Internal Server Error
      security: []
      summary: Public File Download
      tags:
        - other
  /institution/hrfeed/upload:
    post:
      description: 'More info in the <a href="#hr_feed">HR Feed section</a>'
      operationId: institution_hrfeed_upload
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseMessage'
        '400':
          description: Bad Request
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
      security:
        - OAuth2:
            - all
      summary: Private Institution HRfeed Upload
      tags:
        - institutions
      requestBody:
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
  '/institutions/{institution_string_id}/articles/filter-by':
    get:
      description: Returns a list of articles belonging to the institution
      operationId: institution_articles
      parameters:
        - in: path
          name: institution_string_id
          required: true
          schema:
            type: string
        - in: query
          name: resource_id
          required: true
          schema:
            type: string
        - in: query
          name: filename
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK. An array of articles
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Article'
                type: array
        '500':
          description: Internal Server Error
      summary: Public Licenses
      tags:
        - institutions
  /licenses:
    get:
      description: Returns a list of public licenses
      operationId: licenses_list
      responses:
        '200':
          description: OK. An array of licenses
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/License'
                type: array
        '500':
          description: Internal Server Error
      security: []
      summary: Public Licenses
      tags:
        - other
  /projects:
    get:
      description: Returns a list of public projects
      operationId: projects_list
      parameters:
        - description: Page number. Used for pagination with page_size
          in: query
          name: page
          required: false
          schema:
            type: integer
            format: int64
            minimum: 1
            maximum: 5000
        - description: The number of results included on a page. Used for pagination with page
          in: query
          name: page_size
          required: false
          schema:
            type: integer
            format: int64
            minimum: 1
            maximum: 100
            default: 10
        - description: Number of results included on a page. Used for pagination with query
          in: query
          name: limit
          required: false
          schema:
            type: integer
            format: int64
            minimum: 1
            maximum: 100
        - description: Where to start the listing(the offset of the first result). Used for pagination with limit
          in: query
          name: offset
          required: false
          schema:
            type: integer
            format: int64
            minimum: 1
            maximum: 5000
        - description: The field by which to order. Default varies by endpoint/resource.
          in: query
          name: order
          required: false
          schema:
            type: string
            enum:
              - published_date
              - modified_date
              - views
              - shares
              - downloads
              - cites
            default: published_date
        - in: query
          name: order_direction
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
            default: desc
        - description: only return collections from this institution
          in: query
          name: institution
          required: false
          schema:
            type: integer
            format: int64
        - description: Filter by article publishing date. Will only return articles published after the date. date(ISO 8601) YYYY-MM-DD
          in: query
          name: published_since
          required: false
          schema:
            type: string
        - description: only return collections from this group
          in: query
          name: group
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK. An array of projects
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Project'
                type: array
        '400':
          description: Bad Request
        '422':
          description: Bad Request
        '500':
          description: Internal Server Error
      security: []
      summary: Public Projects
      tags:
        - projects
  /projects/search:
    post:
      description: Returns a list of public articles
      operationId: projects_search
      responses:
        '200':
          description: OK. An array of projects
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Project'
                type: array
        '400':
          description: Bad Request
        '422':
          description: Bad Request
        '500':
          description: Internal Server Error
      security: []
      summary: Public Projects Search
      tags:
        - projects
      requestBody:
        $ref: '#/components/requestBodies/CommonSearch'
  '/projects/{project_id}':
    get:
      description: View a project
      operationId: project_details
      parameters:
        - description: Project Unique identifier
          in: path
          name: project_id
          required: true
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        '200':
          description: OK. Project representation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectComplete'
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      security: []
      summary: Public Project
      tags:
        - projects
  '/projects/{project_id}/articles':
    get:
      description: List articles in project
      operationId: project_articles
      parameters:
        - description: Project Unique identifier
          in: path
          name: project_id
          required: true
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        '200':
          description: OK. Project articles list
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Article'
                type: array
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      security: []
      summary: Public Project Articles
      tags:
        - projects
x-additional-descriptions:
  - position: bottom
    subsections:
      - content: description_upload_steps
        title: Steps to upload file
      - content: description_upload_api
        title: Uploads API
      - content: description_upload_parts_api
        title: Parts API
      - content: description_upload_example
        title: Example Upload on figshare
      - content: description_upload_output
        title: Output of Script
    title: Upload files
  - position: bottom
    subsections:
      - content: description_search_intro
        title: How to find data on figshare
      - content: description_search_operators
        title: Search operators
      - content: description_search_attributes
        title: Searchable attributes
      - content: description_search_quick
        title: Quick search
      - content: description_search_advanced
        title: Advanced search
      - content: description_search_combined
        title: Combined field search
      - content: description_search_complex
        title: Complex searches
    title: Search
  - position: bottom
    subsections:
      - subsections:
          - content: description_stats_service_intro
            title: Intro
          - content: description_stats_service_auth
            title: Authentication
          - content: description_stats_service_errors
            title: Errors
          - content: description_stats_service_endpoints
            title: Endpoints
        title: Stats service
      - subsections:
          - content: description_stats_breakdown_endpoints
            title: Endpoints for retrieving a breakdown
          - content: description_stats_breakdown_auth
            title: Authorization
          - content: description_stats_breakdown_format
            title: Endpoint format
          - content: description_stats_breakdown_params
            title: Request parameters
          - content: description_stats_breakdown_examples
            title: Examples
        title: Breakdown
      - subsections:
          - content: description_stats_timeline_endpoints
            title: Endpoints for retrieving a timeline
          - content: description_stats_timeline_auth
            title: Authorization
          - content: description_stats_timeline_format
            title: Endpoint format
          - content: description_stats_timeline_params
            title: Request parameters
          - content: description_stats_timeline_examples
            title: Examples
        title: Timeline
      - subsections:
          - content: description_stats_tops_endpoints
            title: Endpoints for retrieving tops
          - content: description_stats_tops_auth
            title: Authorization
          - content: description_stats_tops_format
            title: Endpoint format
          - content: description_stats_tops_params
            title: Request parameters
          - content: description_stats_tops_examples
            title: Examples
        title: Tops
      - subsections:
          - content: description_stats_totals_endpoints
            title: Endpoints for retrieving totals
          - content: description_stats_totals_auth
            title: Authorization
          - content: description_stats_totals_format
            title: Endpoint format
          - content: description_stats_totals_examples
            title: Examples
        title: Totals
    title: Stats
  - position: bottom
    subsections:
      - content: description_oai_pmh
        title: OAI-PMH
      - content: description_oai_baseurl
        title: Base URL
      - content: description_oai_itemarticle
        title: Item equals Article
      - content: description_oai_metadata
        title: Metadata formats
      - content: description_oai_datestamp
        title: Datestamps
      - content: description_oai_sets
        title: Sets
      - content: description_oai_update_schedule
        title: Update schedule
      - content: description_oai_pagination
        title: Pagination and Resumption Token Expiration
      - content: description_oai_ratelimit
        title: Rate limit
      - content: description_oai_futuredev
        title: Future development
      - content: description_oai_someexamples
        title: Some examples
    title: OAI PMH
  - position: bottom
    subsections:
      - content: description_hrfeed_endpoint
        title: HR Feed Private Endpoint
      - subsections:
          - content: description_hrfeed_examples_python
            title: Python
          - content: description_hrfeed_examples_java
            title: Java
          - content: description_hrfeed_examples_csharp
            title: C Sharp
          - content: description_hrfeed_examples_curl
            title: Curl
        title: HR Feed examples
      - content: description_hrfeed_response
        title: Response
      - content: description_hrfeed_errors
        title: Errors
      - content: description_hrfeed_notes
        title: Notes
    title: HR Feed
  - position: top
    subsections:
      - content: description_intro
        title: Introduction
      - subsections:
          - content: description_oauth_intro
            title: Intro
          - content: description_oauth_quick
            title: Quick guide
          - content: description_oauth_scope
            title: Scope
          - content: description_oauth_grant
            title: Grant Types
        title: OAuth
      - subsections:
          - content: description_api_features
            title: Feature list
          - content: description_api_parameters
            title: Sending parameters
          - content: description_api_resourcerepresentation
            title: Resource representations
          - content: description_api_auth
            title: Authentication
          - content: description_api_errors
            title: Errors
          - content: description_api_search
            title: Searching filtering and pagination
          - content: description_api_ratelimit
            title: Rate limiting
          - content: description_api_requests
            title: Conditional requests
          - content: description_api_cors
            title: CORS policy
        title: API description
    title: figshare Documentation
components:
  schemas:
    Account:
      properties:
        active:
          description: Account activity status
          example: 0
          format: int64
          type: integer
        created_date:
          description: Date when account was created
          example: '2018-05-22T04:04:04'
          type: string
        email:
          description: User email
          example: user@domain.com
          type: string
        first_name:
          description: First Name
          example: Doe
          type: string
        id:
          description: Account id
          example: 1495682
          format: int64
          type: integer
        institution_id:
          description: Account institution
          example: 1
          format: int64
          type: integer
        institution_user_id:
          description: Account institution user id
          example: 1
          type: string
        last_name:
          description: Last Name
          example: John
          type: string
        maximum_file_size:
          description: Maximum upload size for account
          example: 0
          format: int64
          type: integer
        modified_date:
          description: Date of last account modification
          example: '2018-05-22T04:04:04'
          type: string
        pending_quota_request:
          description: True if a quota request is pending
          example: true
          type: boolean
        quota:
          description: Account quota
          example: 0
          format: int64
          type: integer
        used_quota:
          description: Account total used quota
          example: 0
          format: int64
          type: integer
        used_quota_private:
          description: Account used private quota
          example: 0
          format: int64
          type: integer
        used_quota_public:
          description: Account public used quota
          example: 0
          format: int64
          type: integer
      type: object
      x-tag: other
    Article:
      properties:
        defined_type:
          description: Type of article identificator
          example: 3
          format: int64
          type: integer
        doi:
          description: DOI
          example: 10.6084/m9.figshare.1434614
          type: string
        group_id:
          description: Group ID
          example: 1234
          type: number
          nullable: true
        id:
          description: Unique identifier for article
          example: 1434614
          format: int64
          type: integer
        published_date:
          description: Publishing date
          example: '2015-12-31T23:59:59.000Z'
          type: string
          nullable: true
        thumb:
          description: Thumbnail image
          example: 'https://ndownloader.figshare.com/files/123456789/preview/12345678/thumb.png'
          format: url
          type: string
        title:
          description: Title of article
          example: Test article title
          type: string
        url:
          description: Api endpoint for article
          example: 'http://api.figshare.com/articles/1434614'
          format: url
          type: string
        url_private_api:
          description: Private Api endpoint for article
          example: 'https://api.figshare.com/account/articles/1434614'
          format: url
          type: string
        url_private_html:
          description: Private site endpoint for article
          example: 'https://figshare.com/account/articles/1434614'
          format: url
          type: string
        url_public_api:
          description: Public Api endpoint for article
          example: 'https://api.figshare.com/articles/1434614'
          format: url
          type: string
        url_public_html:
          description: Public site endpoint for article
          example: 'https://figshare.com/articles/Test_article_title/1434614'
          format: url
          type: string
      type: object
      x-tag: articles
    ArticleComplete:
      allOf:
        - $ref: '#/components/schemas/ProjectArticle'
      properties:
        authors:
          description: List of article authors
          items:
            $ref: '#/components/schemas/Author'
          type: array
        custom_fields:
          description: List of custom fields values
          items:
            $ref: '#/components/schemas/CustomArticleField'
          type: array
        figshare_url:
          description: Article public url
          example: 'http://figshare.com/articles/article_name/2000005'
          format: url
          type: string
        files:
          description: List of article files
          items:
            $ref: '#/components/schemas/PublicFile'
          type: array
        resource_doi:
          description: Article DOI
          example: 10.5072/FK2.developmentfigshare.2000005
          type: string
          nullable: true
        resource_title:
          description: Article resource title
          example: first article
          type: string
          nullable: true
      type: object
      x-tag: articles
    ArticleCompletePrivate:
      allOf:
        - $ref: '#/components/schemas/ArticleComplete'
      properties:
        group_resource_id:
          description: Group resource id
          type: string
          nullable: true
      type: object
      x-tag: articles
    ArticleConfidentiality:
      properties:
        is_confidential:
          description: True if article is confidential
          example: true
          type: boolean
        reason:
          description: Reason for confidentiality
          example: need to
          type: string
      type: object
      x-tag: articles
    ArticleCreate:
      properties:
        authors:
          default: []
          description: List of authors to be assosciated with the article. The list can contain author ids or author names. No more than 10 authors. For adding more authors use the specific authors endpoint.
          example:
            - name: John Doe
            - id: 1000008
          items:
            type: object
          type: array
        categories:
          default: []
          description: 'List of category ids to be associated with the article(e.g [1, 23, 33, 66])'
          example:
            - 1
            - 10
            - 11
          items:
            format: int64
            type: integer
          type: array
        custom_fields:
          description: 'List of key, values pairs to be associated with the article'
          example:
            defined_key: value for it
          type: object
        defined_type:
          description: Article type
          enum:
            - figure
            - media
            - dataset
            - fileset
            - poster
            - paper
            - presentation
            - thesis
            - code
            - metadata
            - preprint
          example: media
          type: string
        description:
          default: ''
          description: 'The article description. In a publisher case, usually this is the remote article description'
          example: Test description of article
          maxLength: 10000
          type: string
        doi:
          default: ''
          description: 'Not appliable for regular users. In an institutional case, make sure your group supports setting DOIs. This setting is applied by figshare via opening a ticket through our support/helpdesk system.'
          type: string
        funding:
          default: ''
          description: Grant number or funding authority
          type: string
        keywords:
          default: []
          description: List of tags to be associated with the article. Tags can be used instead
          example:
            - tag1
            - tag2
          items:
            type: string
          type: array
        license:
          default: 0
          description: License id for this article.
          example: 1
          format: int64
          type: integer
        references:
          default: []
          description: 'List of links to be associated with the article (e.g ["http://link1", "http://link2", "http://link3"])'
          example:
            - 'http://figshare.com'
            - 'http://api.figshare.com'
          items:
            format: link
            type: string
          type: array
        resource_doi:
          default: ''
          description: 'Not applicable to regular users. In a publisher case, this is the publisher article DOI.'
          type: string
        resource_title:
          default: ''
          description: 'Not applicable to regular users. In a publisher case, this is the publisher article title.'
          type: string
        tags:
          default: []
          description: List of tags to be associated with the article. Keywords can be used instead
          example:
            - tag1
            - tag2
          items:
            type: string
          type: array
        title:
          description: Title of article
          example: Test article title
          maxLength: 500
          minLength: 3
          type: string
      required:
        - title
      type: object
      x-tag: articles
    ArticleDOI:
      properties:
        doi:
          description: Reserved DOI
          example: 10.5072/FK2.FIGSHARE.20345
          type: string
      type: object
      x-tag: articles
    ArticleEmbargo:
      properties:
        embargo_date:
          description: Date when embargo lifts
          example: '2018-05-22T04:04:04'
          type: string
          nullable: true
        embargo_reason:
          description: Reason for embargo
          example: ''
          type: string
        embargo_type:
          description: Embargo type
          example: ''
          type: string
          nullable: true
        is_embargoed:
          description: True if embargoed
          example: true
          type: boolean
      type: object
      x-tag: articles
    ArticleEmbargoUpdater:
      properties:
        embargo_date:
          description: Date when the embargo expires and the article gets published
          example: '2018-05-22T04:04:04'
          type: string
        embargo_reason:
          description: Reason for setting embargo
          example: ''
          type: string
        embargo_type:
          description: 'Embargo can be enabled at the article or the file level. Possible values: article, file'
          enum:
            - article
            - file
          example: file
          type: string
        is_embargoed:
          description: Confidentiality status
          example: true
          type: boolean
      type: object
      x-tag: articles
    ArticleSearch:
      allOf:
        - $ref: '#/components/schemas/CommonSearch'
      properties:
        item_type:
          description: 'Only return collections with the respective type. Mapping for item_type is: 1 - Figure, 2 - Media, 3 - Dataset, 4 - Fileset, 5 - Poster, 6 - Paper, 7 - Presentation, 8 - Thesis, 9 - Code, 12 - Preprint'
          example: 1
          format: int64
          maximum: 12
          minimum: 1
          type: integer
        resource_doi:
          description: only return collections with this resource_doi
          example: 10.6084/m9.figshare.1407024
          type: string
      type: object
      x-tag: articles
    ArticleUpdate:
      properties:
        authors:
          default: []
          description: List of authors to be assosciated with the article. The list can contain author ids or author names. No more than 10 authors. For adding more authors use the specific authors endpoint.
          example:
            - name: John Doe
            - id: 1000008
          items:
            type: object
          type: array
        categories:
          default: []
          description: 'List of category ids to be associated with the article(e.g [1, 23, 33, 66])'
          example:
            - 1
            - 10
            - 11
          items:
            format: int64
            type: integer
          type: array
        custom_fields:
          description: 'List of key, values pairs to be associated with the article'
          example:
            defined_key: value for it
          type: object
        defined_type:
          description: Article type
          enum:
            - figure
            - media
            - dataset
            - fileset
            - poster
            - paper
            - presentation
            - thesis
            - code
            - metadata
            - preprint
          example: media
          type: string
        description:
          default: ''
          description: 'The article description. In a publisher case, usually this is the remote article description'
          example: Test description of article
          maxLength: 10000
          type: string
        doi:
          default: ''
          description: 'Not appliable for regular users. In an institutional case, make sure your group supports setting DOIs. This setting is applied by figshare via opening a ticket through our support/helpdesk system.'
          type: string
        funding:
          default: ''
          description: Grant number or funding authority
          type: string
        keywords:
          default: []
          description: List of tags to be associated with the article. Tags can be used instead
          example:
            - tag1
            - tag2
          items:
            type: string
          type: array
        license:
          default: 0
          description: License id for this article.
          example: 1
          format: int64
          type: integer
        references:
          default: []
          description: 'List of links to be associated with the article (e.g ["http://link1", "http://link2", "http://link3"])'
          example:
            - 'http://figshare.com'
            - 'http://api.figshare.com'
          items:
            format: link
            type: string
          type: array
        resource_doi:
          default: ''
          description: 'Not applicable to regular users. In a publisher case, this is the publisher article DOI.'
          type: string
        resource_title:
          default: ''
          description: 'Not applicable to regular users. In a publisher case, this is the publisher article title.'
          type: string
        tags:
          default: []
          description: List of tags to be associated with the article. Keywords can be used instead
          example:
            - tag1
            - tag2
          items:
            type: string
          type: array
        title:
          description: Title of article
          example: Test article title
          maxLength: 500
          minLength: 3
          type: string
      type: object
      x-tag: articles
    ArticlesCreator:
      properties:
        articles:
          description: List of article ids
          example:
            - 2000003
            - 2000004
          items:
            description: Id of article
            format: int64
            type: integer
          type: array
      required:
        - articles
      type: object
      x-tag: articles
    Author:
      properties:
        full_name:
          description: Author full name
          example: John Doe
          type: string
        id:
          description: Author id
          example: 97657
          format: int64
          type: integer
        is_active:
          description: True if author has published items
          example: 1
          type: boolean
        orcid_id:
          description: Author Orcid
          example: 1234-5678-9123-1234
          type: string
        url_name:
          description: Author url name
          example: John_Doe
          type: string
      type: object
      x-tag: authors
    AuthorComplete:
      allOf:
        - $ref: '#/components/schemas/Author'
      properties:
        first_name:
          description: First Name
          type: string
        group_id:
          description: Group id
          format: int64
          type: integer
        institution_id:
          description: Institution id
          format: int64
          type: integer
        is_public:
          description: if 1 then the author has published items
          format: int64
          type: integer
        job_title:
          description: Job title
          type: string
        last_name:
          description: Last Name
          type: string
      type: object
      x-tag: authors
    AuthorsCreator:
      properties:
        authors:
          description: 'List of authors to be assosciated with the article. The list can contain author ids or author names [{"id": 12121}, {"id": 34345}, {"name": "John Doe"}]. No more than 10 authors. For adding more authors use the specific authors endpoint.'
          example:
            - id: 12121
            - id: 34345
            - name: John Doe
          items:
            type: object
          type: array
      required:
        - authors
      type: object
      x-tag: articles
    CategoriesCreator:
      properties:
        categories:
          description: List of category ids
          example:
            - 1
            - 10
            - 11
          items:
            description: Id of category
            format: int64
            type: integer
          type: array
      required:
        - categories
      type: object
      x-tag: articles
    Category:
      properties:
        id:
          description: Category id
          example: 11
          format: int64
          type: integer
        parent_id:
          description: Parent category
          example: 1
          format: int64
          type: integer
        title:
          description: Category title
          example: Anatomy
          type: string
      type: object
      x-tag: common
    Collaborator:
      properties:
        name:
          description: Collaborator name
          example: name
          type: string
        role_name:
          description: Collaborator role
          example: Owner
          type: string
        user_id:
          description: Collaborator id
          example: 1
          type: integer
      type: object
      x-tag: projects
    Collection:
      properties:
        doi:
          description: Collection DOI
          example: 'http://dx.doi.org/10.6084/m9.figshare.123'
          type: string
        id:
          description: Collection id
          example: 123
          format: int64
          type: integer
        published_date:
          description: 'Date when collection was published '
          example: '2015-08-12T00:39:55'
          type: string
          nullable: true
        title:
          description: Collection title
          example: Sample collection
          type: string
        url:
          description: Api endpoint
          example: 'https://api.figshare.com/v2/collections/123'
          type: string
      type: object
      x-tag: collections
    CollectionComplete:
      allOf:
        - $ref: '#/components/schemas/Collection'
      properties:
        articles_count:
          description: Number of articles in collection
          example: 1
          format: int64
          type: integer
        authors:
          description: List of collection authors
          items:
            $ref: '#/components/schemas/Author'
          type: array
        categories:
          description: List of collection categories
          items:
            $ref: '#/components/schemas/Category'
          type: array
        citation:
          description: Collection citation
          example: citation
          type: string
        created_date:
          description: Date when collection was created
          example: '2017-05-15T15:12:26Z'
          type: string
        custom_fields:
          description: Collection custom fields
          items:
            $ref: '#/components/schemas/CustomArticleField'
          type: array
        description:
          description: Collection description
          example: description
          type: string
        group_id:
          description: Collection group
          example: 1
          format: int64
          type: integer
        group_resource_id:
          description: Collection group resource id
          example: 1
          type: string
          nullable: true
        institution_id:
          description: Collection institution
          example: 1
          format: int64
          type: integer
        modified_date:
          description: Date when collection was last modified
          example: '2017-05-15T15:12:26Z'
          type: string
        public:
          description: True if collection is published
          example: true
          type: boolean
        references:
          description: List of collection references
          items:
            format: url
            type: string
          type: array
        resource_doi:
          description: Collection resource doi
          example: 'http://dx.doi.org/10.6084/m9.figshare.123'
          type: string
        resource_id:
          description: Collection resource id
          example: ''
          type: string
        resource_link:
          description: Collection resource link
          example: 'http://figshare.com'
          type: string
        resource_title:
          description: Collection resource title
          example: test
          type: string
        resource_version:
          description: Collection resource version
          example: 0
          format: int64
          type: integer
        tags:
          description: List of collection tags
          example:
            - t1
            - t2
          items:
            type: string
          type: array
        version:
          description: Collection version
          example: 1
          format: int64
          type: integer
      type: object
      x-tag: collections
    CollectionCreate:
      properties:
        articles:
          description: List of articles to be associated with the collection
          example:
            - 2000001
            - 2000005
          items:
            type: integer
          type: array
        authors:
          default: []
          description: List of authors to be assosciated with the article. The list can contain author ids or author names. No more than 10 authors. For adding more authors use the specific authors endpoint.
          example:
            - name: John Doe
            - id: 20005
          items:
            type: object
          type: array
        categories:
          default: []
          description: 'List of category ids to be associated with the article(e.g [1, 23, 33, 66])'
          example:
            - 1
            - 10
            - 11
          items:
            format: int64
            type: integer
          type: array
        custom_fields:
          description: 'List of key, values pairs to be associated with the article'
          example:
            defined_key: value for it
          type: object
        description:
          default: ''
          description: 'The article description. In a publisher case, usually this is the remote article description'
          example: Test description of article
          maxLength: 10000
          type: string
        keywords:
          default: []
          description: List of tags to be associated with the article. Tags can be used instead
          example:
            - tag1
            - tag2
          items:
            type: string
          type: array
        references:
          default: []
          description: 'List of links to be associated with the article (e.g ["http://link1", "http://link2", "http://link3"])'
          example:
            - 'http://figshare.com'
            - 'http://api.figshare.com'
          items:
            format: link
            type: string
          type: array
        resource_doi:
          default: ''
          description: 'Not applicable to regular users. In a publisher case, this is the publisher article DOI.'
          type: string
        resource_id:
          description: 'Not applicable to regular users. In a publisher case, this is the publisher article id'
          type: string
        resource_link:
          description: 'Not applicable to regular users. In a publisher case, this is the publisher article link'
          type: string
        resource_title:
          default: ''
          description: 'Not applicable to regular users. In a publisher case, this is the publisher article title.'
          type: string
        resource_version:
          description: 'Not applicable to regular users. In a publisher case, this is the publisher article version'
          type: integer
        tags:
          default: []
          description: List of tags to be associated with the article. Keywords can be used instead
          example:
            - tag1
            - tag2
          items:
            type: string
          type: array
        title:
          description: Title of article
          example: Test article title
          maxLength: 500
          minLength: 3
          type: string
      required:
        - title
      type: object
      x-tag: collections
    CollectionPrivateLinkCreator:
      properties:
        expires_date:
          description: Date when this private link should expire - optional. By default private links expire in 365 days.
          example: '2018-02-22 22:22:22'
          type: string
        read_only:
          description: 'Optional, default true. Set to false to give private link users editing rights for this collection.'
          example: true
          type: boolean
      type: object
      x-tag: collections
    CollectionSearch:
      allOf:
        - $ref: '#/components/schemas/CommonSearch'
      properties:
        resource_doi:
          description: only return collections with this resource_doi
          example: 10.6084/m9.figshare.1407024
          type: string
      type: object
      x-tag: collections
    CollectionUpdate:
      properties:
        articles:
          description: List of articles to be associated with the collection
          example:
            - 2000001
            - 2000005
          items:
            type: integer
          type: array
        authors:
          default: []
          description: List of authors to be assosciated with the article. The list can contain author ids or author names. No more than 10 authors. For adding more authors use the specific authors endpoint.
          example:
            - name: John Doe
            - id: 20005
          items:
            type: object
          type: array
        categories:
          default: []
          description: 'List of category ids to be associated with the article(e.g [1, 23, 33, 66])'
          example:
            - 1
            - 10
            - 11
          items:
            format: int64
            type: integer
          type: array
        custom_fields:
          description: 'List of key, values pairs to be associated with the article'
          example:
            defined_key: value for it
          type: object
        description:
          default: ''
          description: 'The article description. In a publisher case, usually this is the remote article description'
          example: Test description of article
          maxLength: 10000
          type: string
        keywords:
          default: []
          description: List of tags to be associated with the article. Tags can be used instead
          example:
            - tag1
            - tag2
          items:
            type: string
          type: array
        references:
          default: []
          description: 'List of links to be associated with the article (e.g ["http://link1", "http://link2", "http://link3"])'
          example:
            - 'http://figshare.com'
            - 'http://api.figshare.com'
          items:
            format: link
            type: string
          type: array
        resource_doi:
          default: ''
          description: 'Not applicable to regular users. In a publisher case, this is the publisher article DOI.'
          type: string
        resource_id:
          description: 'Not applicable to regular users. In a publisher case, this is the publisher article id'
          type: string
        resource_link:
          description: 'Not applicable to regular users. In a publisher case, this is the publisher article link'
          type: string
        resource_title:
          default: ''
          description: 'Not applicable to regular users. In a publisher case, this is the publisher article title.'
          type: string
        resource_version:
          description: 'Not applicable to regular users. In a publisher case, this is the publisher article version'
          type: integer
        tags:
          default: []
          description: List of tags to be associated with the article. Keywords can be used instead
          example:
            - tag1
            - tag2
          items:
            type: string
          type: array
        title:
          description: Title of article
          example: Test article title
          maxLength: 500
          minLength: 3
          type: string
      type: object
      x-tag: collections
    CommonSearch:
      properties:
        group:
          description: only return collections from this group
          example: 2000013
          format: int64
          type: integer
        institution:
          description: only return collections from this institution
          example: 2000013
          format: int64
          type: integer
        limit:
          description: Number of results included on a page. Used for pagination with query
          example: 10
          format: int64
          maximum: 100
          minimum: 1
          type: integer
        modified_since:
          description: Filter by article modified date. Will only return articles published after the date. date(ISO 8601) YYYY-MM-DD
          example: '2017-12-22'
          type: string
        offset:
          description: Where to start the listing(the offset of the first result). Used for pagination with limit
          example: 1
          format: int64
          maximum: 5000
          minimum: 1
          type: integer
        order:
          default: published_date
          description: The field by which to order. Default varies by endpoint/resource.
          enum:
            - published_date
            - modified_date
            - views
            - shares
            - downloads
            - cites
          example: published_date
          type: string
        order_direction:
          default: desc
          description: Direction of ordering
          enum:
            - asc
            - desc
          example: desc
          type: string
        page:
          description: Page number. Used for pagination with page_size
          example: 1
          format: int64
          maximum: 5000
          minimum: 1
          type: integer
        page_size:
          default: 10
          description: The number of results included on a page. Used for pagination with page
          example: 10
          format: int64
          maximum: 100
          minimum: 1
          type: integer
        published_since:
          description: Filter by article publishing date. Will only return articles published after the date. date(ISO 8601) YYYY-MM-DD
          example: '2017-12-22'
          type: string
        search_for:
          description: Search term
          example: figshare
          type: string
      type: object
      x-tag: common
    ConfidentialityCreator:
      properties:
        reason:
          description: Reason for confidentiality
          type: string
      type: object
    CustomArticleField:
      properties:
        is_mandatory:
          description: True if field completion is mandatory
          example: false
          type: boolean
          nullable: true
        name:
          description: Custom  metadata name
          example: key
          type: string
        value:
          description: Custom metadata value
          example: value
          type: string
      type: object
      x-tag: articles
    ErrorMessage:
      properties:
        code:
          description: 'A machine friendly error code, used by the dev team to identify the error.'
          format: int64
          type: integer
        message:
          description: A human friendly message explaining the error.
          type: string
      type: object
      x-tag: common
    FileCreator:
      properties:
        link:
          description: Url for an existing file that will not be uploaded on figshare
          example: 'http://figshare.com/file.txt'
          type: string
        md5:
          description: MD5 sum pre computed on the client side
          example: 6c16e6e7d7587bd078e5117dda01d565
          type: string
        name:
          description: File name including the extension
          example: test.py
          type: string
        size:
          description: File size in bytes
          example: 70
          format: int64
          type: integer
      type: object
      x-tag: articles
    Group:
      properties:
        id:
          description: Group id
          example: 1
          format: int64
          type: integer
        name:
          description: Group name
          example: Materials
          type: string
        parent_id:
          description: Parent group if any
          example: 0
          format: int64
          type: integer
        resource_id:
          description: Group resource id
          example: ''
          type: string
      type: object
      x-tag: institutions
    Institution:
      properties:
        domain:
          description: Institution domain
          type: string
          nullable: true
        id:
          description: Institution id
          example: 0
          format: int64
          type: integer
        name:
          description: Institution name
          example: Institution
          type: string
      type: object
      x-tag: institutions
    License:
      properties:
        name:
          description: License name
          example: CC BY
          type: string
        url:
          description: License url
          example: 'http://creativecommons.org/licenses/by/4.0/'
          format: url
          type: string
        value:
          description: License value
          example: 1
          format: int64
          type: integer
      type: object
      x-tag: institutions
    Location:
      properties:
        location:
          description: Url for item
          format: url
          type: string
      type: object
      x-tag: common
    PrivateArticleSearch:
      allOf:
        - $ref: '#/components/schemas/ArticleSearch'
      properties:
        resource_id:
          description: only return collections with this resource_id
          example: '1407024'
          type: string
      type: object
      x-tag: articles
    PrivateAuthorsSearch:
      properties:
        group_id:
          description: Return only authors in this group or subgroups of the group
          format: int64
          type: integer
        institution_id:
          description: Return only authors associated to this institution
          example: 1
          format: int64
          type: integer
        is_active:
          description: Return only active authors if True
          type: boolean
        is_public:
          description: Return only authors that have published items if True
          type: boolean
        limit:
          description: Number of results included on a page. Used for pagination with query
          example: 10
          format: int64
          maximum: 100
          minimum: 1
          type: integer
        offset:
          description: Where to start the listing(the offset of the first result). Used for pagination with limit
          example: 1
          format: int64
          maximum: 5000
          minimum: 1
          type: integer
        orcid:
          description: Orcid of author
          type: string
        order:
          default: published_date
          description: The field by which to order. Default varies by endpoint/resource.
          enum:
            - published_date
            - modified_date
            - views
            - shares
            - downloads
            - cites
          example: published_date
          type: string
        order_direction:
          default: desc
          description: Direction of ordering
          enum:
            - asc
            - desc
          example: desc
          type: string
        page:
          description: Page number. Used for pagination with page_size
          example: 1
          format: int64
          maximum: 5000
          minimum: 1
          type: integer
        page_size:
          default: 10
          description: The number of results included on a page. Used for pagination with page
          example: 10
          format: int64
          maximum: 100
          minimum: 1
          type: integer
        search_for:
          description: Search term
          example: figshare
          type: string
      type: object
      x-tag: authors
    PrivateCollectionSearch:
      allOf:
        - $ref: '#/components/schemas/CollectionSearch'
      properties:
        resource_id:
          description: only return collections with this resource_id
          example: '1407024'
          type: string
      type: object
      x-tag: collections
    PrivateFile:
      allOf:
        - $ref: '#/components/schemas/PublicFile'
      properties:
        computed_md5:
          description: File computed md5
          example: 043a51806d646e88cafbf19e7b82846f
          type: string
        preview_state:
          description: File preview state
          example: preview not available
          type: string
        status:
          description: Status for file upload
          example: created
          type: string
          nullable: true
        supplied_md5:
          description: File supplied md5
          example: 043a51806d646e88cafbf19e7b82846f
          type: string
        upload_token:
          description: Token for file upload
          example: 9dfc5fe3-d617-4d93-ac11-8afe7e984a4b
          type: string
        upload_url:
          description: Upload url for file
          example: 'https://uploads.figshare.com'
          format: url
          type: string
        viewer_type:
          description: File viewer type
          type: string
      type: object
      x-tag: common
    PrivateLink:
      properties:
        expires_date:
          description: Date when link will expire
          example: '2015-07-03T00:00:00'
          type: string
        id:
          description: Private link id
          example: 0cfb0dbeac92df445df4aba45f63fdc85fa0b9a888b64e157ce3c93b576aa300fb3621ef3a219515dd482
          type: string
        is_active:
          description: True if private link is active
          example: true
          type: boolean
      type: object
      x-tag: articles
    PrivateLinkCreator:
      properties:
        expires_date:
          description: Date when this private link should expire - optional. By default private links expire in 365 days.
          example: '2018-02-22 22:22:22'
          type: string
      type: object
      x-tag: articles
    Project:
      properties:
        id:
          description: Project id
          example: 1
          format: int64
          type: integer
        published_date:
          description: Date when project was published
          example: '2017-05-16T14:55:08Z'
          type: string
          nullable: true
        title:
          description: Project title
          example: project
          type: string
        url:
          description: Api endpoint
          example: 'http://api.figshare.com/v2/account/projects/1'
          type: string
      type: object
      x-tag: projects
    ProjectArticle:
      allOf:
        - $ref: '#/components/schemas/Article'
      properties:
        categories:
          description: List of categories selected for the article
          items:
            $ref: '#/components/schemas/Category'
          type: array
        citation:
          description: Article citation
          example: |-
            lilliput, figshare admin (2017): first project item. figshare.
             
             Retrieved: 14 01, May 22, 2017 (GMT)
          type: string
        confidential_reason:
          description: Confidentiality reason
          example: none
          type: string
        created_date:
          description: Date when article was created
          example: '2017-05-18T11:49:03Z'
          type: string
        description:
          description: Article description
          example: article description
          type: string
        embargo_date:
          description: Date when embargo lifts
          example: '2017-05-18T11:49:03Z'
          type: string
          nullable: true
        embargo_reason:
          description: Reason for embargo
          example: not complete
          type: string
        embargo_type:
          description: Article embargo
          type: string
          nullable: true
        funding:
          description: Article funding
          example: none
          type: string
        has_linked_file:
          description: True if any files are linked to the article
          example: true
          type: boolean
        is_active:
          description: True if article is active
          example: true
          type: boolean
        is_confidential:
          description: Article Confidentiality
          example: true
          type: boolean
        is_embargoed:
          description: True if article is embargoed
          example: true
          type: boolean
        is_metadata_record:
          description: True if article has no files
          example: false
          type: boolean
        is_public:
          description: True if article is published
          example: true
          type: boolean
        license:
          $ref: '#/components/schemas/License'
        metadata_reason:
          description: Article metadata reason
          example: hosted somewhere else
          type: string
        modified_date:
          description: Date when article was last modified
          example: '2017-05-18T11:49:03Z'
          type: string
          nullable: true
        references:
          description: List of references
          example:
            - 'http://figshare.com'
            - 'http://figshare.com/api'
          items:
            format: url
            type: string
          type: array
        size:
          description: Article size
          example: 69939
          format: int64
          type: integer
        status:
          description: Article status
          example: public
          type: string
        tags:
          description: List of article tags
          example:
            - t1
            - t2
            - t3
          items:
            type: string
          type: array
        version:
          description: Article version
          example: 1
          format: int64
          type: integer
      type: object
      x-tag: articles
    ProjectCollaborator:
      properties:
        name:
          description: Collaborator name
          example: name
          type: string
        role_name:
          description: Collaborator role
          example: Owner
          type: string
        status:
          description: Status of collaborator invitation
          example: invited
          type: string
        user_id:
          description: Collaborator id
          example: 1
          type: integer
      type: object
      x-tag: projects
    ProjectCollaboratorInvite:
      properties:
        comment:
          description: Text sent when inviting the user to the project
          example: hey
          type: string
        email:
          description: Collaborator email
          example: user@domain.com
          type: string
        role_name:
          description: Role of the the collaborator inside the project
          enum:
            - viewer
            - collaborator
          example: viewer
          type: string
        user_id:
          description: User id of the collaborator
          example: 100008
          format: int64
          type: integer
      required:
        - role_name
      type: object
      x-tag: projects
    ProjectComplete:
      allOf:
        - $ref: '#/components/schemas/Project'
      properties:
        collaborators:
          description: List of project collaborators
          items:
            $ref: '#/components/schemas/Collaborator'
          type: array
        description:
          description: Project description
          example: description
          type: string
        figshare_url:
          description: Project public url
          example: 'https://figshare.com/projects/project/1'
          type: string
          nullable: true
        funding:
          description: Project funding
          example: none
          type: string
      type: object
      x-tag: projects
    ProjectCompletePrivate:
      allOf:
        - $ref: '#/components/schemas/ProjectPrivate'
      properties:
        collaborators:
          description: List of project collaborators
          items:
            $ref: '#/components/schemas/Collaborator'
          type: array
        created_date:
          description: Date when project was created
          example: '2017-05-16T14:52:54Z'
          type: string
        description:
          description: Project description
          example: description
          type: string
        figshare_url:
          description: Project public url
          example: 'https://figshare.com/projects/project/1'
          type: string
          nullable: true
        funding:
          description: Project funding
          example: none
          type: string
        group_id:
          description: Group of project if any
          example: 0
          format: int64
          type: integer
        modified_date:
          description: Date when project was last modified
          example: '2017-05-16T14:52:54Z'
          type: string
        quota:
          description: Project quota
          example: 0
          format: int64
          type: integer
        used_quota:
          description: Project used quota
          example: 0
          format: int64
          type: integer
        used_quota_private:
          description: Project private quota used
          example: 0
          format: int64
          type: integer
        used_quota_public:
          description: Project public quota used
          example: 0
          format: int64
          type: integer
      type: object
      x-tag: projects
    ProjectCreate:
      properties:
        description:
          description: Project description
          example: project description
          maxLength: 10000
          type: string
        funding:
          description: Grant number or organization(s) that funded this project. Up to 2000 characters permitted.
          example: ''
          type: string
        group_id:
          description: Only if project type is group.
          example: 0
          format: int64
          type: integer
        title:
          description: The title for this project - mandatory. 3 - 500 characters.
          example: project title
          maxLength: 500
          minLength: 3
          type: string
      required:
        - title
      type: object
      x-tag: projects
    ProjectNote:
      properties:
        abstract:
          description: Note Abstract - short/truncated content
          example: text
          type: string
        created_date:
          description: Date when note was created
          example: '2017-05-16T16:49:11Z'
          type: string
        id:
          description: Project note id
          example: 1
          format: int64
          type: integer
        modified_date:
          description: Date when note was last modified
          example: '2017-05-16T16:49:11Z'
          type: string
        user_id:
          description: User who wrote the note
          example: 100008
          format: int64
          type: integer
        user_name:
          description: Username of the one who wrote the note
          example: user
          type: string
      type: object
      x-tag: projects
    ProjectNoteCreate:
      properties:
        text:
          description: Text of the note
          example: note to remember
          minLength: 3
          type: string
      required:
        - text
      type: object
      x-tag: projects
    ProjectNotePrivate:
      allOf:
        - $ref: '#/components/schemas/ProjectNote'
      properties:
        text:
          description: Full text of note
          example: text
          type: string
      type: object
      x-tag: projects
    ProjectPrivate:
      allOf:
        - $ref: '#/components/schemas/Project'
      properties:
        role:
          description: Role inside this project
          enum:
            - Owner
            - Collaborator
            - Viewer
          example: Owner
          type: string
        storage:
          description: Project storage type
          enum:
            - individual
            - group
          example: individual
          type: string
      type: object
      x-tag: projects
    ProjectUpdate:
      properties:
        description:
          description: Project description
          example: project description
          maxLength: 10000
          type: string
        funding:
          description: Grant number or organization(s) that funded this project. Up to 2000 characters permitted.
          example: ''
          type: string
        title:
          description: The title for this project - mandatory. 3 - 500 characters.
          example: project title
          maxLength: 500
          minLength: 3
          type: string
      type: object
      x-tag: projects
    PublicFile:
      properties:
        download_url:
          description: Url for file download
          example: 'https://ndownloader.figshare.com/files/3000002'
          format: url
          type: string
        id:
          description: File id
          example: 3000002
          format: int64
          type: integer
        is_link_only:
          description: True if file is hosted somewhere else
          example: false
          type: boolean
        name:
          description: File name
          example: test.xls
          type: string
        size:
          description: File size
          example: 14848
          format: int64
          type: integer
      type: object
      x-tag: common
    ResponseMessage:
      properties:
        message:
          description: Response message text
          example: Project 1 has been published
          type: string
      type: object
      x-tag: common
    UploadFilePart:
      properties:
        endOffset:
          description: Indexes on byte range. zero-based and inclusive
          example: 69
          format: int64
          type: integer
        locked:
          description: 'When a part is being uploaded it is being locked, by setting the locked flag to true. No changes/uploads can happen on this part from other requests.'
          type: boolean
        partNo:
          description: File part id
          example: 1
          format: int64
          type: integer
        startOffset:
          description: Indexes on byte range. zero-based and inclusive
          example: 0
          format: int64
          type: integer
        status:
          description: part status
          enum:
            - PENDING
            - COMPLETE
          type: string
      type: object
      x-tag: upload
    UploadInfo:
      properties:
        md5:
          description: md5 provided on upload initialization
          example: 3a7f451c068f4e13260034c611378140
          type: string
        name:
          description: name of file on upload server
          example: 3000017/test.py
          type: string
        parts:
          description: Uploads parts
          items:
            $ref: '#/components/schemas/UploadFilePart'
          type: array
        size:
          description: size of file in bytes
          example: 70
          format: int64
          type: integer
        status:
          description: Upload status
          enum:
            - PENDING
            - COMPLETED
            - ABORTED
          type: string
        token:
          description: token received after initializing a file upload
          example: 693a2802-cd61-430d-b89f-507f0f6d8fd3
          type: string
      type: object
      x-tag: upload
    Version:
      properties:
        id:
          description: Version number
          example: 1
          format: int64
          type: integer
        url:
          description: Api endpoint for the item version
          example: 'https://api.figshare.com/v2/articles/2000005/versions/1'
          format: url
          type: string
      type: object
      x-tag: articles
  requestBodies:
    ArticleCreate:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ArticleCreate'
      description: Article description
      required: true
    AuthorsCreator:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AuthorsCreator'
      description: Authors description
      required: true
    CategoriesCreator:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CategoriesCreator'
      required: true
    PrivateLinkCreator:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PrivateLinkCreator'
    AuthorsCreator2:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AuthorsCreator'
      description: List of authors
      required: true
    CategoriesCreator2:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CategoriesCreator'
      description: Categories list
      required: true
    CollectionPrivateLinkCreator:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CollectionPrivateLinkCreator'
    CommonSearch:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CommonSearch'
      description: Search Parameters
    ProjectNoteCreate:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProjectNoteCreate'
      description: Note message
      required: true
  securitySchemes:
    OAuth2:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: 'https://figshare.com/account/applications/authorize'
          tokenUrl: 'https://api.figshare.com/v2/token'
          scopes:
            all: Grants all access
