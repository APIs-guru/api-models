openapi: 3.0.0
servers:
  - url: 'https://api.victorops.com/'
info:
  description: |
    This API allows you to interact with the VictorOps platform in various ways. Your account may be limited
    to a total number of API calls per month. Also, some of these API calls have rate limits.

    NOTE: In this documentation when creating a sample curl request (clicking the TRY IT OUT! button), in some API
    viewing interfaces, the '@' in an email address may be encoded. Please note that the REST endpoints will not
    process the encoded version. Make sure that the encoded character '%40' is changed to its unencoded form before
    submitting the curl request.
  title: VictorOps
  version: 0.0.1
  x-apisguru-categories:
    - developer_tools
  x-logo:
    url: 'https://pbs.twimg.com/profile_images/618808966001197056/olm2Yd1M.jpg'
  x-origin:
    - format: swagger
      url: 'https://portal.victorops.com/public/api-docs/victorops-api-v1.yaml'
      version: '2.0'
  x-providerName: victorops.com
tags:
  - name: On-call
  - name: Incidents
  - name: Alerts
  - name: Reporting
  - name: Users
paths:
  '/api-public/v1/alerts/{uuid}':
    get:
      description: |
        Retrieve the details of an alert that was sent VictorOps by you.

        This API may be called a maximum of 6 times per minute.
      parameters:
        - $ref: '#/components/parameters/apiId'
        - $ref: '#/components/parameters/apiKey'
        - description: The VictorOps uuid of the alert
          in: path
          name: uuid
          required: true
          schema:
            type: string
      responses:
        '200':
          description: |
            The alert, if found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAlertResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/user-not-found'
        '500':
          $ref: '#/components/responses/500'
      summary: Retrieve alert details.
      tags:
        - Alerts
  /api-public/v1/incidents:
    get:
      description: |
        Get a list of the currently open, acknowledged and recently resolved incidents.
        This API may be called a maximum of 6 times per minute.
      parameters:
        - $ref: '#/components/parameters/apiId'
        - $ref: '#/components/parameters/apiKey'
      responses:
        '200':
          description: |
            The set of incidents.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActiveIncidentList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      summary: Get current incident information
      tags:
        - Incidents
    post:
      description: |
        Create a new incident.

        This call replicates the function of our
        <a href="https://help.victorops.com/knowledge-base/manual-incident-creation/">manual incident creation process</a>
        Monitoring tools and custom integrations
        should be configured using our
        <a href="https://help.victorops.com/knowledge-base/victorops-restendpoint-integration/">REST Endpoint</a>

        This API may be called a maximum of 6 times per minute.
      parameters:
        - $ref: '#/components/parameters/apiId'
        - $ref: '#/components/parameters/apiKey'
      responses:
        '200':
          description: |
            Information about the incident created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatedIncident'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      summary: Create a new incident
      tags:
        - Incidents
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateIncidentRequest'
        description: The incident details
        required: true
  /api-public/v1/incidents/ack:
    patch:
      description: |
        The incident(s) must be currently open.  The user supplied must be a valid VictorOps user and a member of your organization.

        This API may be called a maximum of 6 times per minute.
      parameters:
        - $ref: '#/components/parameters/apiId'
        - $ref: '#/components/parameters/apiKey'
      responses:
        '200':
          description: The result of each acknowledge incident action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AckOrResolveResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/user-not-found'
        '500':
          $ref: '#/components/responses/500'
      summary: Acknowledge an incident or list of incidents
      tags:
        - Incidents
      requestBody:
        $ref: '#/components/requestBodies/AckOrResolveRequest'
  /api-public/v1/incidents/byUser/ack:
    patch:
      description: |
        The incident(s) must be currently open.  The user supplied must be a valid VictorOps user and a member of your organization.

        This API may be called a maximum of 6 times per minute.
      parameters:
        - $ref: '#/components/parameters/apiId'
        - $ref: '#/components/parameters/apiKey'
      responses:
        '200':
          description: The result of each acknowledge incident action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AckOrResolveResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/user-not-found'
        '500':
          $ref: '#/components/responses/500'
      summary: Acknowledge all incidents for which a user was paged.
      tags:
        - Incidents
      requestBody:
        $ref: '#/components/requestBodies/AckOrResolveByUserRequest'
  /api-public/v1/incidents/byUser/resolve:
    patch:
      description: |
        The incident(s) must be currently open.  The user supplied must be a valid VictorOps user and a member of your organization.

        This API may be called a maximum of 6 times per minute.
      parameters:
        - $ref: '#/components/parameters/apiId'
        - $ref: '#/components/parameters/apiKey'
      responses:
        '200':
          description: The result of each resolve incident action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AckOrResolveResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/user-not-found'
        '500':
          $ref: '#/components/responses/500'
      summary: Resolve all incidents for which a user was paged.
      tags:
        - Incidents
      requestBody:
        $ref: '#/components/requestBodies/AckOrResolveByUserRequest'
  /api-public/v1/incidents/resolve:
    patch:
      description: |
        The incident(s) must be currently open.  The user supplied must be a valid VictorOps user and a member of your organization.

        This API may be called a maximum of 6 times per minute.
      parameters:
        - $ref: '#/components/parameters/apiId'
        - $ref: '#/components/parameters/apiKey'
      responses:
        '200':
          description: The result of each resolve incident action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AckOrResolveResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/user-not-found'
        '500':
          $ref: '#/components/responses/500'
      summary: Resolve an incident or list of incidents
      tags:
        - Incidents
      requestBody:
        $ref: '#/components/requestBodies/AckOrResolveRequest'
  /api-public/v1/org/routing-keys:
    get:
      description: |-
        Retrieves a list of routing keys and associated teams.
        This API may be called a maximum of once a minute.
      parameters:
        - $ref: '#/components/parameters/apiId'
        - $ref: '#/components/parameters/apiKey'
      responses:
        '200':
          description: The list of routing keys and associated teams
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRoutingKeysResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      summary: List routing keys with assoicated teams
      tags:
        - Routing keys
  /api-public/v1/team:
    get:
      description: |
        Get a list of teams for your organization.

        This API may be called a maximum of 15 times per minute.
      parameters:
        - $ref: '#/components/parameters/apiId'
        - $ref: '#/components/parameters/apiKey'
      responses:
        '200':
          description: A list of teams for your organization
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTeamResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/team-not-found'
        '422':
          description: |
            You have reached your team limit.
        '500':
          $ref: '#/components/responses/500'
      summary: List teams
      tags:
        - Teams
    post:
      description: |
        Add a team to your organization.

        This API may be called a maximum of 15 times per minute.
      parameters:
        - $ref: '#/components/parameters/apiId'
        - $ref: '#/components/parameters/apiKey'
      responses:
        '200':
          description: Some details about the team that was added
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddTeamResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/team-not-found'
        '422':
          description: |
            Team name or email is unavailable, or you have reached your team limit.
        '500':
          $ref: '#/components/responses/500'
      summary: Add a team
      tags:
        - Teams
      requestBody:
        $ref: '#/components/requestBodies/AddTeamPayload'
  '/api-public/v1/team/{team}':
    delete:
      description: |
        Remove a team from your organization.

        This API may be called a maximum of 15 times per minute.
      parameters:
        - $ref: '#/components/parameters/apiId'
        - $ref: '#/components/parameters/apiKey'
        - description: The VictorOps team to be deleted
          in: path
          name: team
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Team was deleted
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/team-not-found'
        '422':
          description: |
            There was a problem with the delete such as the replacement team was not found.
        '500':
          $ref: '#/components/responses/500'
      summary: Remove a team
      tags:
        - Teams
    get:
      description: |
        Get the information for the specified team.

        This API may be called a maximum of 15 times per minute.
      parameters:
        - $ref: '#/components/parameters/apiId'
        - $ref: '#/components/parameters/apiKey'
        - description: The VictorOps team to fetch
          in: path
          name: team
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Some details about the team that was added
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddTeamResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/team-not-found'
        '422':
          description: |
            Team name or email is unavailable, or you have reached your team limit.
        '500':
          $ref: '#/components/responses/500'
      summary: Retrieve information for a team
      tags:
        - Teams
    put:
      description: |
        Update the designated team

        This API may be called a maximum of 15 times per minute.
      parameters:
        - $ref: '#/components/parameters/apiId'
        - $ref: '#/components/parameters/apiKey'
        - description: The VictorOps team to be updated
          in: path
          name: team
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Some details about the team that was added
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddTeamResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/team-not-found'
        '422':
          description: |
            Team name or email is unavailable, or you have reached your team limit.
        '500':
          $ref: '#/components/responses/500'
      summary: Update a team
      tags:
        - Teams
      requestBody:
        $ref: '#/components/requestBodies/AddTeamPayload'
  '/api-public/v1/team/{team}/members':
    get:
      description: |
        Get the members for the specified team.

        This API may be called a maximum of 15 times per minute.
      parameters:
        - $ref: '#/components/parameters/apiId'
        - $ref: '#/components/parameters/apiKey'
        - description: The VictorOps team to fetch
          in: path
          name: team
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Some details about the team that was added
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTeamMembersResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/team-not-found'
        '422':
          description: |
            Team name or email is unavailable, or you have reached your team limit.
        '500':
          $ref: '#/components/responses/500'
      summary: Retrieve a list of members for a team
      tags:
        - Teams
    post:
      description: |
        Add a team member to your team.

        This API may be called a maximum of 15 times per minute.
      parameters:
        - $ref: '#/components/parameters/apiId'
        - $ref: '#/components/parameters/apiKey'
        - description: The VictorOps team to fetch
          in: path
          name: team
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Some details about the team that was added
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTeamMembersResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/team-not-found'
        '422':
          description: |
            Team name or email is unavailable, or you have reached your team limit.
        '500':
          $ref: '#/components/responses/500'
      summary: Add a team member
      tags:
        - Teams
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddTeamMemberPayload'
        required: true
  '/api-public/v1/team/{team}/members/{user}':
    delete:
      description: |
        Remove a team from your organization.

        This API may be called a maximum of 15 times per minute.
      parameters:
        - $ref: '#/components/parameters/apiId'
        - $ref: '#/components/parameters/apiKey'
        - description: The VictorOps team to be deleted
          in: path
          name: team
          required: true
          schema:
            type: string
        - description: The team member username
          in: path
          name: user
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Team was deleted
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/team-not-found'
        '422':
          description: |
            There was a problem with the delete such as the replacement team member was not found.
        '500':
          $ref: '#/components/responses/500'
      summary: Remove a team member
      tags:
        - Teams
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoveTeamMemberPayload'
        description: The user information
        required: true
  '/api-public/v1/team/{team}/oncall/schedule':
    get:
      description: |
        Get the on-call schedule for a user for all teams, including on-call overrides.

        This API may be called a maximum of 15 times per minute.
      parameters:
        - $ref: '#/components/parameters/apiId'
        - $ref: '#/components/parameters/apiKey'
        - description: The VictorOps team 'slug'
          in: path
          name: team
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/daysFwd'
        - $ref: '#/components/parameters/daysSkip'
        - $ref: '#/components/parameters/step'
      responses:
        '200':
          description: The on-call schedule for the team
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OnCallAndOverrides'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/team-not-found'
        '500':
          $ref: '#/components/responses/500'
      summary: Get a team's on-call schedule
      tags:
        - On-call
  '/api-public/v1/team/{team}/oncall/user':
    patch:
      description: |
        Replaces a currently on-call user on the team with another.

        This API may be called a maximum of 6 times per minute.
      parameters:
        - $ref: '#/components/parameters/apiId'
        - $ref: '#/components/parameters/apiKey'
        - description: The VictorOps team 'slug'
          in: path
          name: team
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The result of the take request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TakeResult'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          description: Team or user(s) not found
        '500':
          $ref: '#/components/responses/500'
      summary: Create an on-call override (take on-call)
      tags:
        - On-call
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TakeRequest'
        description: The take on-call payload
        required: true
  /api-public/v1/user:
    get:
      description: |
        Get a list of users for your organization.

        This API may be called a maximum of 15 times per minute.
      parameters:
        - $ref: '#/components/parameters/apiId'
        - $ref: '#/components/parameters/apiKey'
      responses:
        '200':
          description: A list of users for your organization
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListUserResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/user-not-found'
        '422':
          description: |
            You have reached your user limit.
        '500':
          $ref: '#/components/responses/500'
      summary: List users
      tags:
        - Users
    post:
      description: |
        Add a user to your organization.

        This API may be called a maximum of 15 times per minute.
      parameters:
        - $ref: '#/components/parameters/apiId'
        - $ref: '#/components/parameters/apiKey'
      responses:
        '200':
          description: Some details about the user that was added
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddUserResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/user-not-found'
        '422':
          description: |
            Username or email is unavailable, or you have reached your user limit.
        '500':
          $ref: '#/components/responses/500'
      summary: Add a user
      tags:
        - Users
      requestBody:
        $ref: '#/components/requestBodies/AddUserPayload'
  '/api-public/v1/user/{user}':
    delete:
      description: |
        Remove a user from your organization.

        This API may be called a maximum of 15 times per minute.
      parameters:
        - $ref: '#/components/parameters/apiId'
        - $ref: '#/components/parameters/apiKey'
        - description: The VictorOps user to be deleted
          in: path
          name: user
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User was deleted
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/user-not-found'
        '422':
          description: |
            There was a problem with the delete such as the replacement user was not found.
        '500':
          $ref: '#/components/responses/500'
      summary: Remove a user
      tags:
        - Users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteUserPayload'
        required: true
    get:
      description: |
        Get the information for the specified user.

        This API may be called a maximum of 15 times per minute.
      parameters:
        - $ref: '#/components/parameters/apiId'
        - $ref: '#/components/parameters/apiKey'
        - description: The VictorOps user to fetch
          in: path
          name: user
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Some details about the user that was added
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddUserResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/user-not-found'
        '422':
          description: |
            Username or email is unavailable, or you have reached your user limit.
        '500':
          $ref: '#/components/responses/500'
      summary: Retrieve information for a user
      tags:
        - Users
    put:
      description: |
        Update the designated user

        This API may be called a maximum of 15 times per minute.
      parameters:
        - $ref: '#/components/parameters/apiId'
        - $ref: '#/components/parameters/apiKey'
        - description: The VictorOps user to be updated
          in: path
          name: user
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Some details about the user that was added
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddUserResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/user-not-found'
        '422':
          description: |
            Username or email is unavailable, or you have reached your user limit.
        '500':
          $ref: '#/components/responses/500'
      summary: Update a user
      tags:
        - Users
      requestBody:
        $ref: '#/components/requestBodies/AddUserPayload'
  '/api-public/v1/user/{user}/contact-methods':
    get:
      description: |
        Get the contact methods for a user

        This API may be called a maximum of 15 times per minute.
      parameters:
        - $ref: '#/components/parameters/apiId'
        - $ref: '#/components/parameters/apiKey'
        - description: The VictorOps user ID
          in: path
          name: user
          required: true
          schema:
            type: string
      responses:
        '200':
          description: All available contact methods for the user
          content:
            application/json:
              schema:
                properties:
                  devices:
                    items:
                      $ref: '#/components/schemas/ContactDevice'
                    type: array
                  emails:
                    items:
                      $ref: '#/components/schemas/UserContact'
                    type: array
                  phones:
                    items:
                      $ref: '#/components/schemas/UserContact'
                    type: array
                type: object
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/user-not-found'
        '500':
          $ref: '#/components/responses/500'
      summary: Get a list of all contact methods for a user
      tags:
        - User Contact Methods
  '/api-public/v1/user/{user}/contact-methods/devices':
    get:
      description: |
        Get the contact methods for a user

        This API may be called a maximum of 15 times per minute.
      parameters:
        - $ref: '#/components/parameters/apiId'
        - $ref: '#/components/parameters/apiKey'
        - description: The VictorOps user ID
          in: path
          name: user
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The list of contact devices for the user
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ContactDevice'
                type: array
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/user-not-found'
        '500':
          $ref: '#/components/responses/500'
      summary: Get a list of all contact devices for a user
      tags:
        - User Contact Methods
  '/api-public/v1/user/{user}/contact-methods/devices/{contactId}':
    delete:
      description: |
        Delete a contact device for a user

        This API may be called a maximum of 15 times per minute.
      parameters:
        - $ref: '#/components/parameters/apiId'
        - $ref: '#/components/parameters/apiKey'
        - description: The VictorOps user ID
          in: path
          name: user
          required: true
          schema:
            type: string
        - description: The unique contact identifier
          in: path
          name: contactId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Deleted contact device for the user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactDevice'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/user-not-found'
        '500':
          $ref: '#/components/responses/500'
      summary: Delete a contact device for a user
      tags:
        - User Contact Methods
    get:
      description: |
        Get the indicated contact device for a user

        This API may be called a maximum of 15 times per minute.
      parameters:
        - $ref: '#/components/parameters/apiId'
        - $ref: '#/components/parameters/apiKey'
        - description: The VictorOps user ID
          in: path
          name: user
          required: true
          schema:
            type: string
        - description: The unique contact identifier
          in: path
          name: contactId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The list of contact devices for the user
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ContactDevice'
                type: array
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/user-not-found'
        '500':
          $ref: '#/components/responses/500'
      summary: Get the indicated contact device for a user
      tags:
        - User Contact Methods
    put:
      description: |
        Update a contact device for a user

        This API may be called a maximum of 15 times per minute.
      parameters:
        - $ref: '#/components/parameters/apiId'
        - $ref: '#/components/parameters/apiKey'
        - description: The VictorOps user ID
          in: path
          name: user
          required: true
          schema:
            type: string
        - description: The unique contact identifier
          in: path
          name: contactId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The list of contact devices for the user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactDevice'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/user-not-found'
        '500':
          $ref: '#/components/responses/500'
      summary: Update a contact device for a user
      tags:
        - User Contact Methods
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContactDeviceAdd'
        description: The contact device
        required: true
  '/api-public/v1/user/{user}/contact-methods/emails':
    get:
      description: |
        Get the contact emails for a user

        This API may be called a maximum of 15 times per minute.
      parameters:
        - $ref: '#/components/parameters/apiId'
        - $ref: '#/components/parameters/apiKey'
        - description: The VictorOps user ID
          in: path
          name: user
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The list of contact emails for the user
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UserContact'
                type: array
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/user-not-found'
        '500':
          $ref: '#/components/responses/500'
      summary: Get a list of all contact emails for a user
      tags:
        - User Contact Methods
    post:
      description: |
        Create a contact email for a user

        This API may be called a maximum of 15 times per minute.
      parameters:
        - $ref: '#/components/parameters/apiId'
        - $ref: '#/components/parameters/apiKey'
        - description: The VictorOps user ID
          in: path
          name: user
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The list of contact emails for the user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserContact'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/user-not-found'
        '500':
          $ref: '#/components/responses/500'
      summary: Create a contact emails for a user
      tags:
        - User Contact Methods
      requestBody:
        $ref: '#/components/requestBodies/ContactEmailAdd'
  '/api-public/v1/user/{user}/contact-methods/emails/{contactId}':
    delete:
      description: |
        Delete the indicated contact email for the user

        This API may be called a maximum of 15 times per minute.
      parameters:
        - $ref: '#/components/parameters/apiId'
        - $ref: '#/components/parameters/apiKey'
        - description: The VictorOps user ID
          in: path
          name: user
          required: true
          schema:
            type: string
        - description: The unique contact identifier
          in: path
          name: contactId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Deleted contact email for the user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserContact'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/user-not-found'
        '500':
          $ref: '#/components/responses/500'
      summary: Delete a contact email for a user
      tags:
        - User Contact Methods
    get:
      description: |
        Get the indicated contact email for a user

        This API may be called a maximum of 15 times per minute.
      parameters:
        - $ref: '#/components/parameters/apiId'
        - $ref: '#/components/parameters/apiKey'
        - description: The VictorOps user ID
          in: path
          name: user
          required: true
          schema:
            type: string
        - description: The unique contact identifier
          in: path
          name: contactId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The indicated contact email for the user
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UserContact'
                type: array
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/user-not-found'
        '500':
          $ref: '#/components/responses/500'
      summary: Get the indicate contact email for a user
      tags:
        - User Contact Methods
    put:
      description: |
        Update the indicated contact email for a user

        This API may be called a maximum of 15 times per minute.
      parameters:
        - $ref: '#/components/parameters/apiId'
        - $ref: '#/components/parameters/apiKey'
        - description: The VictorOps user ID
          in: path
          name: user
          required: true
          schema:
            type: string
        - description: The unique contact identifier
          in: path
          name: contactId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The updated contact email for the user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserContact'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/user-not-found'
        '500':
          $ref: '#/components/responses/500'
      summary: Update a contact email for a user
      tags:
        - User Contact Methods
      requestBody:
        $ref: '#/components/requestBodies/ContactEmailAdd'
  '/api-public/v1/user/{user}/contact-methods/phones':
    get:
      description: |
        Get the contact phones for a user

        This API may be called a maximum of 15 times per minute.
      parameters:
        - $ref: '#/components/parameters/apiId'
        - $ref: '#/components/parameters/apiKey'
        - description: The VictorOps user ID
          in: path
          name: user
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The list of contact phones for the user
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UserContact'
                type: array
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/user-not-found'
        '500':
          $ref: '#/components/responses/500'
      summary: Get a list of all contact phones for a user
      tags:
        - User Contact Methods
    post:
      description: |
        Create a contact phone for a user

        This API may be called a maximum of 15 times per minute.
      parameters:
        - $ref: '#/components/parameters/apiId'
        - $ref: '#/components/parameters/apiKey'
        - description: The VictorOps user ID
          in: path
          name: user
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The list of contact phones for the user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserContact'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/user-not-found'
        '500':
          $ref: '#/components/responses/500'
      summary: Create a contact phones for a user
      tags:
        - User Contact Methods
      requestBody:
        $ref: '#/components/requestBodies/ContactPhoneAdd'
  '/api-public/v1/user/{user}/contact-methods/phones/{contactId}':
    delete:
      description: |
        Delete the indicated contact phone for the user

        This API may be called a maximum of 15 times per minute.
      parameters:
        - $ref: '#/components/parameters/apiId'
        - $ref: '#/components/parameters/apiKey'
        - description: The VictorOps user ID
          in: path
          name: user
          required: true
          schema:
            type: string
        - description: The unique contact identifier
          in: path
          name: contactId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Deleted contact phone for the user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserContact'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/user-not-found'
        '500':
          $ref: '#/components/responses/500'
      summary: Delete a contact phone for a user
      tags:
        - User Contact Methods
    get:
      description: |
        Get the indicated contact phone for a user

        This API may be called a maximum of 15 times per minute.
      parameters:
        - $ref: '#/components/parameters/apiId'
        - $ref: '#/components/parameters/apiKey'
        - description: The VictorOps user ID
          in: path
          name: user
          required: true
          schema:
            type: string
        - description: The unique contact identifier
          in: path
          name: contactId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The indicated contact phone for the user
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UserContact'
                type: array
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/user-not-found'
        '500':
          $ref: '#/components/responses/500'
      summary: Get the indicate contact phone for a user
      tags:
        - User Contact Methods
    put:
      description: |
        Update the indicated contact phone for a user

        This API may be called a maximum of 15 times per minute.
      parameters:
        - $ref: '#/components/parameters/apiId'
        - $ref: '#/components/parameters/apiKey'
        - description: The VictorOps user ID
          in: path
          name: user
          required: true
          schema:
            type: string
        - description: The unique contact identifier
          in: path
          name: contactId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The updated contact phone for the user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserContact'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/user-not-found'
        '500':
          $ref: '#/components/responses/500'
      summary: Update a contact phone for a user
      tags:
        - User Contact Methods
      requestBody:
        $ref: '#/components/requestBodies/ContactPhoneAdd'
  '/api-public/v1/user/{user}/oncall/schedule':
    get:
      description: |
        Get the on-call schedule for a user for all teams, including on-call overrides.

        This API may be called a maximum of 15 times per minute.
      parameters:
        - $ref: '#/components/parameters/apiId'
        - $ref: '#/components/parameters/apiKey'
        - description: The VictorOps user ID
          in: path
          name: user
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/daysFwd'
        - $ref: '#/components/parameters/daysSkip'
        - $ref: '#/components/parameters/step'
      responses:
        '200':
          description: The on-call schedule for the user
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/OnCallAndOverrides'
                type: array
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/user-not-found'
        '500':
          $ref: '#/components/responses/500'
      summary: Get a user's on-call schedule
      tags:
        - On-call
  '/api-public/v1/user/{user}/policies':
    get:
      description: |
        Get paging policies for a user

        This API may be called a maximum of 15 times per minute.
      parameters:
        - $ref: '#/components/parameters/apiId'
        - $ref: '#/components/parameters/apiKey'
        - description: The VictorOps user ID
          in: path
          name: user
          required: true
          schema:
            type: string
      responses:
        '200':
          description: All configured paging policies for a user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policies'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/user-not-found'
        '500':
          $ref: '#/components/responses/500'
      summary: Get a list of paging policies for a user
      tags:
        - User Paging Policies
  /api-reporting/v1/incidents:
    get:
      description: |
        Retrieve incident history for your company, searching over date ranges and with filtering options.  This is historical
        data, and may be up to 15 minutes behind real-time incident data.  By default, only resolved incidents will be returned.

        This API may be called a maximum of once a minute.

        Incident requests are paginated with a offset and limit query string parameters.
          The query for incidents is run and offset records are skipped, after which limit records will be returned.

        The default offset is 0 and the default limit is 20. The maximum value allowed for limit is 100.

        On return, the total number of records available for that query will be returned in the payload as 'total'.
      parameters:
        - $ref: '#/components/parameters/apiId'
        - $ref: '#/components/parameters/apiKey'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - description: The entity ID involved  This is the unique identifier for the entity causing the incident.
          in: query
          name: entityId
          required: false
          schema:
            type: string
        - description: |
            The incident number as shown in VictorOps Multiple values and ranges are allowed: 4,5,20:50
          in: query
          name: incidentNumber
          required: false
          schema:
            type: string
        - description: Return incidents started after this timestamp Specify the timestamp in ISO8601 format
          in: query
          name: startedAfter
          required: false
          schema:
            type: string
        - description: Find incidents started before this timestamp  Specify the timestamp in ISO8601 format
          in: query
          name: startedBefore
          required: false
          schema:
            type: string
        - description: The host involved in the incident Multiple values can be separated with commas.
          in: query
          name: host
          required: false
          schema:
            type: string
        - description: The service involved in the incident (if any) Multiple values can be separated with commas.
          in: query
          name: service
          required: false
          schema:
            type: string
        - description: 'The current phase of the incident "resolved", "triggered" or "acknowledged". Multiple values can be separated with commas.'
          in: query
          name: currentPhase
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The list of incidents matching the request filters
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/IncidentList'
                type: array
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      summary: Get/search incident history
      tags:
        - Reporting
  '/api-reporting/v1/team/{team}/oncall/log':
    get:
      description: |
        Returns a log of user shift changes for the specified team. This is historical
        data, and may be up to 15 minutes behind real-time log data.

        This API may be called a maximum of 6 times per minute.
      parameters:
        - $ref: '#/components/parameters/apiId'
        - $ref: '#/components/parameters/apiKey'
        - description: The VictorOps team 'slug'
          in: path
          name: team
          required: true
          schema:
            type: string
        - description: Return shift changes occurring after this timestamp. The default is the start of the day at midnight. Specify the timestamp in ISO8601 format
          in: query
          name: start
          required: false
          schema:
            type: string
            format: date-time
        - description: 'Return shift changes occurring before this timestamp. The default is the end of the day at 11:59:59. Specify the timestamp in ISO8601 format'
          in: query
          name: end
          required: false
          schema:
            type: string
            format: date-time
        - description: 'The VictorOps user ID. Return shift changes occurring during the interval specified for this user. Without this parameter, all relevant users (with respect to the specified interval) are returned'
          in: query
          name: userName
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The result of the take request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OnCallLog'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          description: Team or user(s) not found
        '500':
          $ref: '#/components/responses/500'
      summary: A list of shift changes for a team
      tags:
        - Reporting
  /api-reporting/v2/incidents:
    get:
      description: |
        Retrieve incident history for your company, searching over date ranges and with filtering options.

        This API may be called a maximum of once a minute.

        Incident requests are paginated with a offset and limit query string parameters.
          The query for incidents is run and offset records are skipped, after which limit records will be returned.

        The default offset is 0 and the default limit is 20. The maximum value allowed for limit is 100.

        On return, the total number of records available for that query will be returned in the payload as 'total'.
      parameters:
        - $ref: '#/components/parameters/apiId'
        - $ref: '#/components/parameters/apiKey'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - description: The entity ID involved  This is the unique identifier for the entity causing the incident.
          in: query
          name: entityId
          required: false
          schema:
            type: string
        - description: |
            The incident number as shown in VictorOps Multiple values and ranges are allowed: 4,5,20:50
          in: query
          name: incidentNumber
          required: false
          schema:
            type: string
        - description: Return incidents started after this timestamp Specify the timestamp in ISO8601 format
          in: query
          name: startedAfter
          required: false
          schema:
            type: string
        - description: Find incidents started before this timestamp  Specify the timestamp in ISO8601 format
          in: query
          name: startedBefore
          required: false
          schema:
            type: string
        - description: The host involved in the incident Multiple values can be separated with commas.
          in: query
          name: host
          required: false
          schema:
            type: string
        - description: The service involved in the incident (if any) Multiple values can be separated with commas.
          in: query
          name: service
          required: false
          schema:
            type: string
        - description: 'The current phase of the incident "resolved", "triggered" or "acknowledged". Multiple values can be separated with commas.'
          in: query
          name: currentPhase
          required: false
          schema:
            type: string
        - description: The original routing of the incident
          in: query
          name: routingKey
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The list of incidents matching the request filters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActiveIncidentList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      summary: Get/search incident history
      tags:
        - Reporting
components:
  schemas:
    AckOrResolveByUserRequest:
      properties:
        message:
          type: string
        userName:
          type: string
      required:
        - userName
      type: object
    AckOrResolveRequest:
      properties:
        incidentNames:
          items:
            type: string
          type: array
        message:
          type: string
        userName:
          type: string
      required:
        - userName
        - incidentNames
      type: object
    AckOrResolveResponse:
      description: The results of ack/resolve for each incident
      properties:
        results:
          items:
            $ref: '#/components/schemas/AckOrResolveResult'
          type: array
      type: object
    AckOrResolveResult:
      description: The results of ack/resolve for a individual incident
      properties:
        cmdAccepted:
          type: boolean
        entityId:
          type: string
        incidentNumber:
          type: string
        message:
          type: string
      type: object
    AckUser:
      description: A JSON object with first/last name and email of the user that acknowledged the incident.
      properties:
        email:
          type: string
        first:
          type: string
        last:
          type: string
      type: object
    ActiveIncidentInfo:
      description: Incidents contain the following fields (all should be considered optional)
      properties:
        alertCount:
          description: The number of alerts received for this incident
          type: number
        currentPhase:
          description: 'The current phase of the incident "resolved", "triggered" or "acknowledged".'
          type: string
        entityId:
          description: The unique identification of the entity being monitored that caused the incident
          type: string
        host:
          description: The host on which the incident occurred
          type: string
        incidentNumber:
          description: The VictorOps incident number
          type: string
        lastAlertId:
          description: The unique id of the last alert for the incident
          type: string
        lastAlertTime:
          description: The time of the last alert received for the incident
          type: string
        pagedTeams:
          description: The teams that were paged for the incident
          items:
            type: string
          type: array
        pagedUsers:
          description: The users that were paged for the incident.
          items:
            type: string
          type: array
        service:
          description: The service name causing the incident (if any)
          type: string
        startTime:
          description: The time the incident started
          type: string
        transitions:
          description: Transitions of the incident state over time
          items:
            $ref: '#/components/schemas/IncidentTransition'
          type: array
      type: object
    ActiveIncidentList:
      description: The list of incidents in various states
      properties:
        incidents:
          description: The incident data
          items:
            $ref: '#/components/schemas/ActiveIncidentInfo'
          type: array
      type: object
    AddTeamMemberPayload:
      description: The user information
      properties:
        username:
          type: string
      required:
        - username
      type: object
    AddTeamPayload:
      description: The team information
      properties:
        name:
          type: string
      required:
        - name
      type: object
    AddTeamResponse:
      description: Some info about the team
      properties:
        _membersUrl:
          type: string
        _selfUrl:
          type: string
        isDefaultTeam:
          type: boolean
        memberCount:
          type: number
        name:
          type: string
        slug:
          type: string
        version:
          type: number
      type: object
    AddUserPayload:
      description: The user information
      properties:
        admin:
          type: boolean
        email:
          format: email
          type: string
        expirationHours:
          default: 24
          description: The validity duration for the invitatation/set password link sent to the added user.
          type: number
        firstName:
          type: string
        lastName:
          type: string
        username:
          type: string
      required:
        - firstName
        - lastName
        - username
        - email
      type: object
    AddUserResponse:
      $ref: '#/components/schemas/V1User'
    AlertBatchResponse:
      description: A collection of requested alerts
      properties:
        alerts:
          items:
            $ref: '#/components/schemas/GetAlertResponse'
          type: array
        requestId:
          type: string
        requestSize:
          type: integer
        responseSize:
          type: integer
      type: object
    AlertId:
      type: string
    AlertRequest:
      properties:
        alertId:
          type: string
      required:
        - alertId
      type: object
    ContactDevice:
      properties:
        _selfUrl:
          type: string
        deviceType:
          type: string
        extId:
          type: string
        label:
          type: string
      type: object
    ContactDeviceAdd:
      description: The contact device
      properties:
        chat_escalation_sound:
          type: string
        device_label:
          type: string
        escalation_notification_sound:
          type: string
        resolved_notification_sound:
          type: string
      type: object
    ContactEmailAdd:
      description: The contact email
      properties:
        email:
          format: email
          type: string
        label:
          type: string
        rank:
          type: integer
      required:
        - label
        - email
      type: object
    ContactPhoneAdd:
      description: The contact phone
      properties:
        label:
          type: string
        phone:
          type: string
        rank:
          type: integer
      required:
        - label
        - phone
      type: object
    CreateBatchAlertRequestPayload:
      description: A collection of IDs (uuid) for the alerts to be returned
      properties:
        alertIds:
          items:
            $ref: '#/components/schemas/AlertId'
          type: array
      type: object
    CreateIncidentRequest:
      properties:
        details:
          type: string
        summary:
          type: string
        targets:
          items:
            $ref: '#/components/schemas/IncidentTarget'
          type: array
        userName:
          type: string
      required:
        - summary
        - details
        - userName
        - targets
      type: object
    CreatedIncident:
      properties:
        error:
          description: An error message
          type: string
        incidentNumber:
          description: The VictorOps incident number
          type: string
      type: object
    DeleteUserPayload:
      description: The information about what to do with the deleted user
      properties:
        replacement:
          description: The user to take the place of the deleted user in escalations
          type: string
      required:
        - replacement
      type: object
    GetAlertResponse:
      description: Alert details. All fields should be considered optional.
      properties:
        ackAuthor:
          description: The user that acknowledged the incident.
          type: string
        ackMsg:
          description: A user entered comment for the acknowledgment.
          type: string
        entityDisplayName:
          description: Used within VictorOps to display a human-readable name for the entity.
          type: string
        entityId:
          description: |
            Identifies the entity (host, service, etc.) this alert was about.
          type: string
        messageType:
          description: |
            The type of alert; INFO, WARNING, ACKNOWLEDGEMENT, CRITICAL, RECOVERY
          type: string
        monitoringTool:
          description: 'The name of the monitoring system software (eg. nagios, icinga, sensu, etc.)'
          type: string
        raw:
          description: |
            The full, raw alert details JSON string (i.e. parse the string into a JSON object)
          type: string
        stateMessage:
          description: Any additional status information from the alert item.
          type: string
        stateStartTime:
          description: The time this entity entered its current state (seconds since epoch).
          type: number
        timestamp:
          description: Timestamp of the alert in seconds since epoch.
          type: number
      type: object
    IncidentInfo:
      description: Incidents contain the following fields (all should be considered optional)
      properties:
        ackTime:
          description: The time of the last acknowledgment of the incident
          type: string
        ackUser:
          $ref: '#/components/schemas/AckUser'
        ackUserId:
          description: The VictorOps user id of the user that acknowledged the incident
          type: string
        alertCount:
          description: The number of alerts received for this incident
          type: number
        currentPhase:
          description: 'The current phase of the incident "resolved", "triggered" or "acknowledged".'
          type: string
        endTime:
          description: The time the incident ended
          type: string
        entityDispName:
          description: The display name of the entity causing the incident
          type: string
        entityId:
          description: The unique identification of the entity being monitored that caused the incident
          type: string
        entityType:
          description: The type of entity causing the incident (host/service)
          type: string
        host:
          description: The host on which the incident occurred
          type: string
        incidentNumber:
          description: The VictorOps incident number
          type: string
        lastAlertID:
          description: The unique id of the last alert for the incident
          type: string
        lastAlertTime:
          description: The time of the last alert received for the incident
          type: string
        service:
          description: The service name causing the incident (if any)
          type: string
        startTime:
          description: The time the incident started
          type: string
        teams:
          description: The teams that were paged for the incident (comma separated).
          type: string
      type: object
    IncidentList:
      description: The results of an incident history request
      properties:
        incidents:
          description: An array of incident objects matching the search
          items:
            $ref: '#/components/schemas/IncidentInfo'
          type: array
        limit:
          description: The limit value passed in the request
          type: number
        offset:
          description: The offset passed in the request
          type: number
        total:
          description: The total number of incidents available for this search
          type: number
      type: object
    IncidentTarget:
      properties:
        slug:
          description: User name or escalation policy slug
          type: string
        type:
          description: Type of target
          enum:
            - User
            - EscalationPolicy
          type: string
      required:
        - type
        - slug
      type: object
    IncidentTransition:
      description: A transition of incident state
      properties:
        alertId:
          description: The unique alert ID that caused the transition
          type: string
        alertUrl:
          description: A URL to retrieve the details of the alert that caused the transition
          type: string
        at:
          description: The time of the transition
          type: string
        by:
          description: The user that caused the transition (if any)
          type: string
        manually:
          description: If the incident transition was caused by a person
          type: boolean
        message:
          description: The message entered by that user (if any)
          type: string
        name:
          description: The transition name
          type: string
      type: object
    ListRoutingKeysResponse:
      description: Info about routing keys in the org
      properties:
        _selfUrl:
          type: string
        routingKeys:
          items:
            $ref: '#/components/schemas/RoutingKeyInfo'
          type: array
      type: object
    ListTeamMembersResponse:
      description: A list of members for the team
      properties:
        _selfUrl:
          type: string
        _teamUrl:
          type: string
        members:
          items:
            $ref: '#/components/schemas/TeamMember'
          type: array
      type: object
    ListTeamResponse:
      description: Some info about teams in the org
      items:
        properties:
          _membersUrl:
            type: string
          _selfUrl:
            type: string
          isDefaultTeam:
            type: boolean
          memberCount:
            type: number
          name:
            type: string
          slug:
            type: string
          version:
            type: number
        type: object
      type: array
    ListUserResponse:
      description: Some info about the user
      properties:
        _selfUrl:
          type: string
        users:
          items:
            $ref: '#/components/schemas/V1User'
          type: array
      type: object
    OnCallAndOverrides:
      properties:
        overrides:
          items:
            $ref: '#/components/schemas/TeamScheduleOverlayResource'
          type: array
        schedule:
          items:
            $ref: '#/components/schemas/TeamScheduleResource'
          type: array
        team:
          type: string
      type: object
    OnCallInterval:
      properties:
        duration:
          properties:
            hours:
              type: number
            minutes:
              type: number
          type: object
        'off':
          type: string
        'on':
          type: string
      type: object
    OnCallLog:
      properties:
        end:
          format: date-time
          type: string
        start:
          format: date-time
          type: string
        teamSlug:
          type: string
        userLogs:
          items:
            $ref: '#/components/schemas/UserLog'
          type: array
      type: object
    PagingPolicy:
      description: Paging policy fields
      properties:
        contactType:
          type: string
        extId:
          type: string
        order:
          type: integer
        timeout:
          type: integer
      type: object
    Policies:
      description: Paging policies accociated which this user
      properties:
        policies:
          items:
            $ref: '#/components/schemas/PagingPolicy'
          type: array
        userId:
          type: integer
        username:
          type: string
      type: object
    RelLink:
      properties:
        href:
          type: string
        rel:
          type: string
      type: object
    RemoveTeamMemberPayload:
      description: The user information
      properties:
        replacement:
          type: string
      required:
        - replacement
      type: object
    RoutingKeyInfo:
      description: Routing keys contain the following fields
      properties:
        isDefault:
          type: boolean
        routingKey:
          type: string
        targets:
          items:
            $ref: '#/components/schemas/RoutingKeyTarget'
          type: array
      type: object
    RoutingKeyTarget:
      description: Routing key target
      properties:
        _teamUrl:
          type: string
        policyName:
          type: string
        policySlug:
          type: string
      type: object
    TakeRequest:
      properties:
        fromUser:
          type: string
        toUser:
          type: string
      required:
        - fromUser
        - toUser
      type: object
    TakeResult:
      properties:
        result:
          type: string
      type: object
    TeamMember:
      description: Some info about the user
      properties:
        firstName:
          type: string
        lastName:
          type: string
        username:
          type: string
        verified:
          description: Whether or not this user has set their password (will always be false)
          type: string
        version:
          type: number
      type: object
    TeamScheduleOverlayResource:
      properties:
        end:
          description: The time the override is scheduled to end
          type: number
        orig:
          description: The user scheduled on call (if any)
          type: string
        over:
          description: The user overriding the scheduled on call user (if any)
          type: string
        start:
          description: The time the override is scheduled to start
          type: number
      type: object
    TeamScheduleResource:
      properties:
        oncall:
          description: The user scheduled on call (if any)
          type: string
        overrideoncall:
          description: The user overriding the scheduled on call user (if any)
          type: string
        policyType:
          type: string
        rolls:
          items:
            $ref: '#/components/schemas/TeamScheduleRollResource'
          type: array
        rotationName:
          type: string
        shiftName:
          type: string
        shiftRoll:
          type: number
      required:
        - policyType
        - rolls
      type: object
    TeamScheduleRollResource:
      properties:
        change:
          description: The time the period is scheduled to start
          type: number
        isRoll:
          type: boolean
        oncall:
          description: The user scheduled on call (if any)
          type: string
        until:
          description: The time the period is scheduled to end
          type: number
      required:
        - change
        - until
        - isRoll
      type: object
    UserContact:
      properties:
        _selfUrl:
          type: string
        deviceType:
          type: string
        extId:
          type: string
        label:
          type: string
      type: object
    UserLog:
      properties:
        adjustedTotal:
          properties:
            hours:
              type: number
            minutes:
              type: number
          type: object
        log:
          items:
            $ref: '#/components/schemas/OnCallInterval'
          type: array
        total:
          properties:
            hours:
              type: number
            minutes:
              type: number
          type: object
        userId:
          type: string
      type: object
    V1User:
      description: Some info about the user
      properties:
        _selfUrl:
          type: string
        createdAt:
          type: string
        email:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        passwordLastUpdated:
          type: string
        username:
          type: string
        verified:
          description: Whether or not this user has set their password (will always be false)
          type: boolean
      type: object
  responses:
    '400':
      description: Problem with the request arguments.  The response payload may include an error message.
    '401':
      description: Authentication parameters missing
    '403':
      description: Authentication failed or rate-limit reached
    '404':
      description: Path not found
    '500':
      description: Internal Server Error
    team-not-found:
      description: Team not found
    user-not-found:
      description: User not found
  parameters:
    apiId:
      description: Your API ID
      in: header
      name: X-VO-Api-Id
      required: true
      schema:
        type: string
    apiKey:
      description: Your API Key
      in: header
      name: X-VO-Api-Key
      required: true
      schema:
        type: string
    daysFwd:
      description: Days to include in returned schedule (30 max)
      in: query
      name: daysForward
      required: false
      schema:
        type: number
        minimum: 0
        maximum: 30
        default: 14
    daysSkip:
      description: Days to skip before computing schedule to return (90 max)
      in: query
      name: daysSkip
      required: false
      schema:
        type: number
        minimum: 0
        maximum: 90
        default: 0
    limit:
      description: The maximum number of matching incidents to return (100 max)
      in: query
      name: limit
      required: false
      schema:
        type: number
        maximum: 100
        default: 20
    offset:
      description: The offset within the set of matching incidents
      in: query
      name: offset
      required: false
      schema:
        type: number
        default: 0
    step:
      description: Step of escalation policy (3 max)
      in: query
      name: step
      required: false
      schema:
        type: number
        minimum: 0
        maximum: 3
        default: 0
  requestBodies:
    AckOrResolveRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AckOrResolveRequest'
      description: Ack/Resolve payload
      required: true
    AckOrResolveByUserRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AckOrResolveByUserRequest'
      description: Ack/Resolve payload
      required: true
    AddTeamPayload:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AddTeamPayload'
      description: The team information
      required: true
    AddUserPayload:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AddUserPayload'
      required: true
    ContactEmailAdd:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ContactEmailAdd'
      description: The contact email
      required: true
    ContactPhoneAdd:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ContactPhoneAdd'
      description: The contact phone
      required: true
