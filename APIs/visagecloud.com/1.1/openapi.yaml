openapi: 3.0.0
servers:
  - url: 'https://visagecloud.com/'
info:
  contact:
    email: office@visagecloud.com
    name: VisageCloud
    url: 'https://visagecloud.com'
  description: 'Face search, recognition & classification API. Just make a call to our REST API each time your app needs to access face recognition and classification capabilities.'
  license:
    name: As per Developer Terms of Use
    url: 'https://visagecloud.com/developer-terms-of-use'
  termsOfService: 'https://visagecloud.com/terms-of-use'
  title: VisageCloud
  version: '1.1'
  x-apisguru-categories:
    - search
  x-logo:
    url: 'https://visagecloud.com/visage-cloud-logo.png'
  x-origin:
    - format: swagger
      url: 'https://visagecloud.com/v2/api-docs'
      version: '2.0'
  x-providerName: visagecloud.com
security:
  - accessKey: []
tags:
  - description: Manages Streams
    name: Stream
  - description: Performs image-recognition related operations
    name: Analysis
  - description: Manages collections
    name: Collection
  - description: Manages profiles associated with collections
    name: Profile
paths:
  /rest/v1.1/analysis/detection:
    post:
      operationId: performAnalysisUsingPOST
      parameters:
        - description: The secretKey or readOnlyKey provided by VisageCloud
          in: query
          name: secretKey
          required: true
          schema:
            type: string
        - description: Boolean value indicating whether you want the original picture to be stored for later retrieval
          in: query
          name: storePicture
          required: false
          schema:
            type: boolean
            default: true
        - description: 'The URL of the picture, assuming it is served by a third party server. Server should be accesible from the Internet or through another netwoek by VisageCloud infrastructure'
          in: query
          name: pictureURL
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestResponse'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      summary: Perform detection on a given picture or picture URL
      tags:
        - Analysis
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                picture:
                  description: 'The multipart/form-data version of the image, in case a direct upload is used. At least one of picture or pictureURL must be present'
                  type: string
  /rest/v1.1/analysis/listLatest:
    get:
      operationId: retriveLatestUsingGET
      parameters:
        - description: The secretKey or readOnlyKey provided by VisageCloud
          in: query
          name: secretKey
          required: true
          schema:
            type: string
        - description: How many records to retrieve at a time
          in: query
          name: count
          required: false
          schema:
            type: integer
            format: int32
            default: 100
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      summary: Retrieve the last *count* operations per current account
      tags:
        - Analysis
  /rest/v1.1/analysis/recognition:
    post:
      operationId: performRecognitionUsingPOST
      parameters:
        - description: The secretKey or readOnlyKey provided by VisageCloud
          in: query
          name: secretKey
          required: true
          schema:
            type: string
        - description: Boolean value indicating whether you want the original picture to be stored for later retrieval
          in: query
          name: storePicture
          required: false
          schema:
            type: boolean
            default: true
        - description: Uniquely identified collection that can store multiple profiles
          in: query
          name: collectionId
          required: true
          schema:
            type: string
        - description: Labels associated with the given picture or picture URL
          in: query
          name: labels
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: Filters that will be applied on the recognition operation
          in: query
          name: attributeFilters
          required: false
          explode: true
          schema:
            type: array
            items:
              enum:
                - GENDER_FILTER
                - AGE_GROUP_FILTER
              type: string
            enum:
              - GENDER_FILTER
              - AGE_GROUP_FILTER
        - description: The URL of the picture
          in: query
          name: pictureURL
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestResponse'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      summary: Perform labeled recognition on a given picture or picture URL
      tags:
        - Analysis
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                picture:
                  description: The picture itself
                  type: string
  /rest/v1.1/analysis/retrieve:
    get:
      operationId: retrieveAnalysisUsingGET
      parameters:
        - description: The secretKey or readOnlyKey provided by VisageCloud
          in: query
          name: secretKey
          required: true
          schema:
            type: string
        - description: The ID of the analysis for which the data will be retrieved
          in: query
          name: analysisId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      summary: Retrieve a complete analysis object including both detection and recognition information
      tags:
        - Analysis
  /rest/v1.1/collection/all:
    get:
      operationId: getAllCollectionsUsingGET
      parameters:
        - description: The secretKey or readOnlyKey provided by VisageCloud
          in: query
          name: secretKey
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      summary: Retrieve all collections
      tags:
        - Collection
  /rest/v1.1/collection/collection:
    delete:
      operationId: removeFaceFromProfileUsingDELETE
      parameters:
        - description: The secretKey or readOnlyKey provided by VisageCloud
          in: query
          name: secretKey
          required: true
          schema:
            type: string
        - description: The id of the collection that will be removed
          in: query
          name: collectionId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestResponse'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      summary: Delete existing collection
      tags:
        - Collection
    get:
      operationId: getProfilesFromCollectionUsingGET
      parameters:
        - description: The secretKey or readOnlyKey provided by VisageCloud
          in: query
          name: secretKey
          required: true
          schema:
            type: string
        - description: The id of the collection for which the data will be retrieved
          in: query
          name: collectionId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      summary: Retrieve existing collection content
      tags:
        - Collection
    post:
      operationId: addCollectionUsingPOST
      parameters:
        - description: The secretKey or readOnlyKey provided by VisageCloud
          in: query
          name: secretKey
          required: true
          schema:
            type: string
        - description: The name of the collection that will be created
          in: query
          name: collectionName
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestResponse'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      summary: Create new empty collection with given name
      tags:
        - Collection
  /rest/v1.1/profile/enrollmentStatus:
    get:
      operationId: getProfileEnrollmentStatusUsingGET
      parameters:
        - description: The secretKey or readOnlyKey provided by VisageCloud
          in: query
          name: secretKey
          required: true
          schema:
            type: string
        - description: The profile that contains the faces
          in: query
          name: profileId
          required: true
          schema:
            type: string
        - description: The collection that contains the profile
          in: query
          name: collectionId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      summary: 'Gets the enrollment status of a profile: information on whether it is suitable for authentication.'
      tags:
        - Profile
  /rest/v1.1/profile/map:
    delete:
      operationId: removeFaceFromProfileUsingDELETE_1
      parameters:
        - description: The secretKey or readOnlyKey provided by VisageCloud
          in: query
          name: secretKey
          required: true
          schema:
            type: string
        - description: The face that will be removed from a profile
          in: query
          name: faceHash
          required: true
          schema:
            type: string
        - description: The profile that contains the face
          in: query
          name: profileId
          required: true
          schema:
            type: string
        - description: The collection that contains the profile
          in: query
          name: collectionId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResponse'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      summary: 'Removes (unmaps) a face, identified by faceHash, from a profile, identified by profileId'
      tags:
        - Profile
    get:
      operationId: getFacesFromProfileUsingGET
      parameters:
        - description: The secretKey or readOnlyKey provided by VisageCloud
          in: query
          name: secretKey
          required: true
          schema:
            type: string
        - description: The profile that contains the faces
          in: query
          name: profileId
          required: true
          schema:
            type: string
        - description: The collection that contains the profile
          in: query
          name: collectionId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      summary: Gets all the faceHashes associated to a profile
      tags:
        - Profile
    post:
      operationId: mapFaceToProfileUsingPOST
      parameters:
        - description: The secretKey or readOnlyKey provided by VisageCloud
          in: query
          name: secretKey
          required: true
          schema:
            type: string
        - description: The face that will be added to a profile
          in: query
          name: faceHash
          required: true
          schema:
            type: string
        - description: The profile that will store the face
          in: query
          name: profileId
          required: true
          schema:
            type: string
        - description: The collection that contains the profile
          in: query
          name: collectionId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestResponse'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      summary: 'Adds (maps) a face, identified by faceHash, to a profile, identified by profileId'
      tags:
        - Profile
  /rest/v1.1/profile/profile:
    post:
      operationId: addProfileUsingPOST
      parameters:
        - description: The secretKey or readOnlyKey provided by VisageCloud
          in: query
          name: secretKey
          required: true
          schema:
            type: string
        - description: Uniquely identified collection that can store multiple profiles
          in: query
          name: collectionId
          required: true
          schema:
            type: string
        - description: External reference to additional information you don’t want to share with VisageCloud
          in: query
          name: externalId
          required: false
          schema:
            type: string
        - description: Human-readable label for the profile
          in: query
          name: screenName
          required: false
          schema:
            type: string
        - description: Allows you to do finer filtering in face recognition
          in: query
          name: labels
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestResponse'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      summary: Creates a new profile with no faces associated to it (empty profile)
      tags:
        - Profile
  /rest/v1.1/stream/frames:
    get:
      operationId: getLastNFramesUsingGET
      parameters:
        - description: The secretKey or readOnlyKey provided by VisageCloud
          in: query
          name: secretKey
          required: true
          schema:
            type: string
        - description: The id of the stream for which the frames will be retrieved
          in: query
          name: streamId
          required: true
          schema:
            type: string
        - description: How many frames to retrieve at a time
          in: query
          name: count
          required: false
          schema:
            type: integer
            format: int32
            default: 10
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      summary: Get last processed N frames from stream
      tags:
        - Stream
  /rest/v1.1/stream/start:
    patch:
      operationId: startStreamUsingPATCH
      parameters:
        - description: The secretKey or readOnlyKey provided by VisageCloud
          in: query
          name: secretKey
          required: true
          schema:
            type: string
        - description: The id of the stream that will be started
          in: query
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestResponse'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      summary: Start existing stream
      tags:
        - Stream
  /rest/v1.1/stream/stop:
    patch:
      operationId: stopStreamUsingPATCH
      parameters:
        - description: The secretKey or readOnlyKey provided by VisageCloud
          in: query
          name: secretKey
          required: true
          schema:
            type: string
        - description: The id of the stream that will be stopped
          in: query
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestResponse'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      summary: Stop existing stream
      tags:
        - Stream
  /rest/v1.1/stream/stream:
    delete:
      operationId: removeStreamUsingDELETE
      parameters:
        - description: The secretKey or readOnlyKey provided by VisageCloud
          in: query
          name: secretKey
          required: true
          schema:
            type: string
        - description: The id of the stream that will be removed
          in: query
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestResponse'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      summary: Delete existing stream
      tags:
        - Stream
    post:
      operationId: addStreamUsingPOST
      parameters:
        - description: The secretKey or readOnlyKey provided by VisageCloud
          in: query
          name: secretKey
          required: true
          schema:
            type: string
        - description: The name of the stream that will be created
          in: query
          name: name
          required: true
          schema:
            type: string
        - description: The url of the stream
          in: query
          name: url
          required: true
          schema:
            type: string
        - description: Streaming method
          in: query
          name: method
          required: false
          schema:
            type: string
            enum:
              - WEBRTC_PULL
              - WEBRTC_PUSH
              - SNAPSHOT_PULL
            default: WEBRTC_PULL
        - description: Username
          in: query
          name: username
          required: true
          schema:
            type: string
        - description: Password
          in: query
          name: password
          required: true
          schema:
            type: string
        - description: Boolean value indicating whether you want the original picture to be stored for later retrieval
          in: query
          name: storeOriginalFrames
          required: false
          schema:
            type: boolean
            default: false
        - description: Boolean value indicating whether the stream is currently active or not
          in: query
          name: isActive
          required: false
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestResponse'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      summary: Create new stream with given name
      tags:
        - Stream
components:
  schemas:
    RestResponse:
      properties:
        message:
          type: string
        payload:
          type: object
        status:
          type: string
      type: object
  securitySchemes:
    accessKey:
      description: The accessKey provided by VisageCloud
      in: query
      name: accessKey
      type: apiKey
